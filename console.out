ansible-playbook 2.10.2
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/dist-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
No config file found; using defaults
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Parsed /etc/ansible/hosts inventory source with ini plugin

PLAYBOOK: site.yaml ************************************************************
16 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843864.956699-10897-76058818211121 `" && echo ansible-tmp-1604843864.956699-10897-76058818211121="` echo /root/.ansible/tmp/ansible-tmp-1604843864.956699-10897-76058818211121 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpg8h9c8b9 TO /root/.ansible/tmp/ansible-tmp-1604843864.956699-10897-76058818211121/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843864.956699-10897-76058818211121/ /root/.ansible/tmp/ansible-tmp-1604843864.956699-10897-76058818211121/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843864.956699-10897-76058818211121/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843864.956699-10897-76058818211121/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:10

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843865.8941138-10949-224309566974422 `" && echo ansible-tmp-1604843865.8941138-10949-224309566974422="` echo /root/.ansible/tmp/ansible-tmp-1604843865.8941138-10949-224309566974422 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbm34aih7 TO /root/.ansible/tmp/ansible-tmp-1604843865.8941138-10949-224309566974422/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843865.8941138-10949-224309566974422/ /root/.ansible/tmp/ansible-tmp-1604843865.8941138-10949-224309566974422/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843865.8941138-10949-224309566974422/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843865.8941138-10949-224309566974422/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.epz276wh",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843866.219646-10975-252927329262829 `" && echo ansible-tmp-1604843866.219646-10975-252927329262829="` echo /root/.ansible/tmp/ansible-tmp-1604843866.219646-10975-252927329262829 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8b3pxuh2 TO /root/.ansible/tmp/ansible-tmp-1604843866.219646-10975-252927329262829/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843866.219646-10975-252927329262829/ /root/.ansible/tmp/ansible-tmp-1604843866.219646-10975-252927329262829/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843866.219646-10975-252927329262829/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843866.219646-10975-252927329262829/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843866.7147691-11011-239067968957459 `" && echo ansible-tmp-1604843866.7147691-11011-239067968957459="` echo /root/.ansible/tmp/ansible-tmp-1604843866.7147691-11011-239067968957459 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpy962w5q7 TO /root/.ansible/tmp/ansible-tmp-1604843866.7147691-11011-239067968957459/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843866.7147691-11011-239067968957459/ /root/.ansible/tmp/ansible-tmp-1604843866.7147691-11011-239067968957459/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843866.7147691-11011-239067968957459/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843866.7147691-11011-239067968957459/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.048658",
    "end": "2020-11-08 13:57:47.041981",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:46.993323",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843867.0902205-11042-91215581523361 `" && echo ansible-tmp-1604843867.0902205-11042-91215581523361="` echo /root/.ansible/tmp/ansible-tmp-1604843867.0902205-11042-91215581523361 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0ibmv5iq TO /root/.ansible/tmp/ansible-tmp-1604843867.0902205-11042-91215581523361/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843867.0902205-11042-91215581523361/ /root/.ansible/tmp/ansible-tmp-1604843867.0902205-11042-91215581523361/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843867.0902205-11042-91215581523361/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843867.0902205-11042-91215581523361/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.1o14o12u",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843867.2737508-11068-119991309927771 `" && echo ansible-tmp-1604843867.2737508-11068-119991309927771="` echo /root/.ansible/tmp/ansible-tmp-1604843867.2737508-11068-119991309927771 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbyjscc0_ TO /root/.ansible/tmp/ansible-tmp-1604843867.2737508-11068-119991309927771/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843867.2737508-11068-119991309927771/ /root/.ansible/tmp/ansible-tmp-1604843867.2737508-11068-119991309927771/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843867.2737508-11068-119991309927771/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843867.2737508-11068-119991309927771/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843867.6181934-11104-170452801548231 `" && echo ansible-tmp-1604843867.6181934-11104-170452801548231="` echo /root/.ansible/tmp/ansible-tmp-1604843867.6181934-11104-170452801548231 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8l4p9m7f TO /root/.ansible/tmp/ansible-tmp-1604843867.6181934-11104-170452801548231/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843867.6181934-11104-170452801548231/ /root/.ansible/tmp/ansible-tmp-1604843867.6181934-11104-170452801548231/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843867.6181934-11104-170452801548231/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843867.6181934-11104-170452801548231/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.048224",
    "end": "2020-11-08 13:57:47.803534",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:47.755310",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [include_role : setup/helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:20

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843867.9352844-11137-272134392836855 `" && echo ansible-tmp-1604843867.9352844-11137-272134392836855="` echo /root/.ansible/tmp/ansible-tmp-1604843867.9352844-11137-272134392836855 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5flsm32u TO /root/.ansible/tmp/ansible-tmp-1604843867.9352844-11137-272134392836855/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843867.9352844-11137-272134392836855/ /root/.ansible/tmp/ansible-tmp-1604843867.9352844-11137-272134392836855/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843867.9352844-11137-272134392836855/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843867.9352844-11137-272134392836855/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.fi5d3cp1",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843868.113873-11163-16335551258404 `" && echo ansible-tmp-1604843868.113873-11163-16335551258404="` echo /root/.ansible/tmp/ansible-tmp-1604843868.113873-11163-16335551258404 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwwxep_74 TO /root/.ansible/tmp/ansible-tmp-1604843868.113873-11163-16335551258404/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843868.113873-11163-16335551258404/ /root/.ansible/tmp/ansible-tmp-1604843868.113873-11163-16335551258404/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843868.113873-11163-16335551258404/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843868.113873-11163-16335551258404/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843868.4535491-11199-91757419031277 `" && echo ansible-tmp-1604843868.4535491-11199-91757419031277="` echo /root/.ansible/tmp/ansible-tmp-1604843868.4535491-11199-91757419031277 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp63cn9d7r TO /root/.ansible/tmp/ansible-tmp-1604843868.4535491-11199-91757419031277/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843868.4535491-11199-91757419031277/ /root/.ansible/tmp/ansible-tmp-1604843868.4535491-11199-91757419031277/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843868.4535491-11199-91757419031277/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843868.4535491-11199-91757419031277/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.056406",
    "end": "2020-11-08 13:57:48.640804",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:48.584398",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843868.6893184-11230-181892397592821 `" && echo ansible-tmp-1604843868.6893184-11230-181892397592821="` echo /root/.ansible/tmp/ansible-tmp-1604843868.6893184-11230-181892397592821 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpym0osbgc TO /root/.ansible/tmp/ansible-tmp-1604843868.6893184-11230-181892397592821/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843868.6893184-11230-181892397592821/ /root/.ansible/tmp/ansible-tmp-1604843868.6893184-11230-181892397592821/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843868.6893184-11230-181892397592821/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843868.6893184-11230-181892397592821/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.uzw5zuhh",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843868.8705187-11257-23356297787967 `" && echo ansible-tmp-1604843868.8705187-11257-23356297787967="` echo /root/.ansible/tmp/ansible-tmp-1604843868.8705187-11257-23356297787967 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjgxuyfwh TO /root/.ansible/tmp/ansible-tmp-1604843868.8705187-11257-23356297787967/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843868.8705187-11257-23356297787967/ /root/.ansible/tmp/ansible-tmp-1604843868.8705187-11257-23356297787967/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843868.8705187-11257-23356297787967/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843868.8705187-11257-23356297787967/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843869.2103298-11293-21741194513195 `" && echo ansible-tmp-1604843869.2103298-11293-21741194513195="` echo /root/.ansible/tmp/ansible-tmp-1604843869.2103298-11293-21741194513195 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpxzxg1r40 TO /root/.ansible/tmp/ansible-tmp-1604843869.2103298-11293-21741194513195/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843869.2103298-11293-21741194513195/ /root/.ansible/tmp/ansible-tmp-1604843869.2103298-11293-21741194513195/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843869.2103298-11293-21741194513195/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843869.2103298-11293-21741194513195/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.052387",
    "end": "2020-11-08 13:57:49.395896",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:49.343509",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [include_role : setup/vault] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:30

TASK [setup/vault : register temporary directory] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843869.4985492-11326-92707859606343 `" && echo ansible-tmp-1604843869.4985492-11326-92707859606343="` echo /root/.ansible/tmp/ansible-tmp-1604843869.4985492-11326-92707859606343 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpi3s175rv TO /root/.ansible/tmp/ansible-tmp-1604843869.4985492-11326-92707859606343/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843869.4985492-11326-92707859606343/ /root/.ansible/tmp/ansible-tmp-1604843869.4985492-11326-92707859606343/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843869.4985492-11326-92707859606343/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843869.4985492-11326-92707859606343/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.s4wid_to",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843869.6802926-11352-145181302860819 `" && echo ansible-tmp-1604843869.6802926-11352-145181302860819="` echo /root/.ansible/tmp/ansible-tmp-1604843869.6802926-11352-145181302860819 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcw77c5yy TO /root/.ansible/tmp/ansible-tmp-1604843869.6802926-11352-145181302860819/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843869.6802926-11352-145181302860819/ /root/.ansible/tmp/ansible-tmp-1604843869.6802926-11352-145181302860819/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843869.6802926-11352-145181302860819/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843869.6802926-11352-145181302860819/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1603618466.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 270632,
        "charset": "binary",
        "checksum": "b1cacaa735c4406d1f47a6937e9329a38a842ede",
        "ctime": 1604239660.105088,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126520,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618466.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 138561023,
        "uid": 0,
        "version": "2790310722",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:34
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843870.1360445-11386-108989027419884 `" && echo ansible-tmp-1604843870.1360445-11386-108989027419884="` echo /root/.ansible/tmp/ansible-tmp-1604843870.1360445-11386-108989027419884 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpusqa7j7i TO /root/.ansible/tmp/ansible-tmp-1604843870.1360445-11386-108989027419884/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843870.1360445-11386-108989027419884/ /root/.ansible/tmp/ansible-tmp-1604843870.1360445-11386-108989027419884/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843870.1360445-11386-108989027419884/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843870.1360445-11386-108989027419884/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.030481",
    "end": "2020-11-08 13:57:50.297531",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:50.267050",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)",
    "stdout_lines": [
        "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)"
    ]
}

TASK [include_role : setup/aws-cli] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:63
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843870.5679905-11427-229553389348596 `" && echo ansible-tmp-1604843870.5679905-11427-229553389348596="` echo /root/.ansible/tmp/ansible-tmp-1604843870.5679905-11427-229553389348596 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjl6ogxhj TO /root/.ansible/tmp/ansible-tmp-1604843870.5679905-11427-229553389348596/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843870.5679905-11427-229553389348596/ /root/.ansible/tmp/ansible-tmp-1604843870.5679905-11427-229553389348596/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843870.5679905-11427-229553389348596/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843870.5679905-11427-229553389348596/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843871.5963209-11467-20809859431974 `" && echo ansible-tmp-1604843871.5963209-11467-20809859431974="` echo /root/.ansible/tmp/ansible-tmp-1604843871.5963209-11467-20809859431974 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprihd0487 TO /root/.ansible/tmp/ansible-tmp-1604843871.5963209-11467-20809859431974/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843871.5963209-11467-20809859431974/ /root/.ansible/tmp/ansible-tmp-1604843871.5963209-11467-20809859431974/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843871.5963209-11467-20809859431974/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843871.5963209-11467-20809859431974/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843872.264533-11495-13427189989441 `" && echo ansible-tmp-1604843872.264533-11495-13427189989441="` echo /root/.ansible/tmp/ansible-tmp-1604843872.264533-11495-13427189989441 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpxvnnr7vm TO /root/.ansible/tmp/ansible-tmp-1604843872.264533-11495-13427189989441/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843872.264533-11495-13427189989441/ /root/.ansible/tmp/ansible-tmp-1604843872.264533-11495-13427189989441/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843872.264533-11495-13427189989441/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843872.264533-11495-13427189989441/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843873.0595229-11535-133416259163565 `" && echo ansible-tmp-1604843873.0595229-11535-133416259163565="` echo /root/.ansible/tmp/ansible-tmp-1604843873.0595229-11535-133416259163565 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphmo7317v TO /root/.ansible/tmp/ansible-tmp-1604843873.0595229-11535-133416259163565/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843873.0595229-11535-133416259163565/ /root/.ansible/tmp/ansible-tmp-1604843873.0595229-11535-133416259163565/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843873.0595229-11535-133416259163565/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843873.0595229-11535-133416259163565/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843874.1570914-11590-134028439479259 `" && echo ansible-tmp-1604843874.1570914-11590-134028439479259="` echo /root/.ansible/tmp/ansible-tmp-1604843874.1570914-11590-134028439479259 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp2nz_6myr TO /root/.ansible/tmp/ansible-tmp-1604843874.1570914-11590-134028439479259/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843874.1570914-11590-134028439479259/ /root/.ansible/tmp/ansible-tmp-1604843874.1570914-11590-134028439479259/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843874.1570914-11590-134028439479259/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843874.1570914-11590-134028439479259/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.0k7en3li",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843874.3350255-11616-223394984461729 `" && echo ansible-tmp-1604843874.3350255-11616-223394984461729="` echo /root/.ansible/tmp/ansible-tmp-1604843874.3350255-11616-223394984461729 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprl808r8g TO /root/.ansible/tmp/ansible-tmp-1604843874.3350255-11616-223394984461729/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843874.3350255-11616-223394984461729/ /root/.ansible/tmp/ansible-tmp-1604843874.3350255-11616-223394984461729/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843874.3350255-11616-223394984461729/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843874.3350255-11616-223394984461729/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843874.6965835-11652-231572421882351 `" && echo ansible-tmp-1604843874.6965835-11652-231572421882351="` echo /root/.ansible/tmp/ansible-tmp-1604843874.6965835-11652-231572421882351 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmplx13ik9x TO /root/.ansible/tmp/ansible-tmp-1604843874.6965835-11652-231572421882351/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843874.6965835-11652-231572421882351/ /root/.ansible/tmp/ansible-tmp-1604843874.6965835-11652-231572421882351/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843874.6965835-11652-231572421882351/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843874.6965835-11652-231572421882351/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051182",
    "end": "2020-11-08 13:57:54.878250",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:54.827068",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843874.9311206-11683-71021128708924 `" && echo ansible-tmp-1604843874.9311206-11683-71021128708924="` echo /root/.ansible/tmp/ansible-tmp-1604843874.9311206-11683-71021128708924 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpto2eb4b_ TO /root/.ansible/tmp/ansible-tmp-1604843874.9311206-11683-71021128708924/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843874.9311206-11683-71021128708924/ /root/.ansible/tmp/ansible-tmp-1604843874.9311206-11683-71021128708924/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843874.9311206-11683-71021128708924/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843874.9311206-11683-71021128708924/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.mdzybpi7",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843875.1123247-11709-274497859617307 `" && echo ansible-tmp-1604843875.1123247-11709-274497859617307="` echo /root/.ansible/tmp/ansible-tmp-1604843875.1123247-11709-274497859617307 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpecxjes_r TO /root/.ansible/tmp/ansible-tmp-1604843875.1123247-11709-274497859617307/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843875.1123247-11709-274497859617307/ /root/.ansible/tmp/ansible-tmp-1604843875.1123247-11709-274497859617307/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843875.1123247-11709-274497859617307/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843875.1123247-11709-274497859617307/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843875.4904108-11745-144574864273959 `" && echo ansible-tmp-1604843875.4904108-11745-144574864273959="` echo /root/.ansible/tmp/ansible-tmp-1604843875.4904108-11745-144574864273959 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpx9elbqcc TO /root/.ansible/tmp/ansible-tmp-1604843875.4904108-11745-144574864273959/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843875.4904108-11745-144574864273959/ /root/.ansible/tmp/ansible-tmp-1604843875.4904108-11745-144574864273959/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843875.4904108-11745-144574864273959/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843875.4904108-11745-144574864273959/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.054631",
    "end": "2020-11-08 13:57:55.685671",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:55.631040",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843875.745936-11776-153284273643545 `" && echo ansible-tmp-1604843875.745936-11776-153284273643545="` echo /root/.ansible/tmp/ansible-tmp-1604843875.745936-11776-153284273643545 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpd4dxfmss TO /root/.ansible/tmp/ansible-tmp-1604843875.745936-11776-153284273643545/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843875.745936-11776-153284273643545/ /root/.ansible/tmp/ansible-tmp-1604843875.745936-11776-153284273643545/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843875.745936-11776-153284273643545/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843875.745936-11776-153284273643545/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843876.5678906-11816-118329567987146 `" && echo ansible-tmp-1604843876.5678906-11816-118329567987146="` echo /root/.ansible/tmp/ansible-tmp-1604843876.5678906-11816-118329567987146 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpls4dud9n TO /root/.ansible/tmp/ansible-tmp-1604843876.5678906-11816-118329567987146/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843876.5678906-11816-118329567987146/ /root/.ansible/tmp/ansible-tmp-1604843876.5678906-11816-118329567987146/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843876.5678906-11816-118329567987146/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843876.5678906-11816-118329567987146/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843877.1990113-11844-232763494544729 `" && echo ansible-tmp-1604843877.1990113-11844-232763494544729="` echo /root/.ansible/tmp/ansible-tmp-1604843877.1990113-11844-232763494544729 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpuexbjn2n TO /root/.ansible/tmp/ansible-tmp-1604843877.1990113-11844-232763494544729/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843877.1990113-11844-232763494544729/ /root/.ansible/tmp/ansible-tmp-1604843877.1990113-11844-232763494544729/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843877.1990113-11844-232763494544729/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843877.1990113-11844-232763494544729/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843877.831888-11872-185702752879737 `" && echo ansible-tmp-1604843877.831888-11872-185702752879737="` echo /root/.ansible/tmp/ansible-tmp-1604843877.831888-11872-185702752879737 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpg7xl1mj_ TO /root/.ansible/tmp/ansible-tmp-1604843877.831888-11872-185702752879737/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843877.831888-11872-185702752879737/ /root/.ansible/tmp/ansible-tmp-1604843877.831888-11872-185702752879737/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843877.831888-11872-185702752879737/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843877.831888-11872-185702752879737/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
    "delta": "0:00:00.361427",
    "end": "2020-11-08 13:57:58.324335",
    "invocation": {
        "module_args": {
            "_raw_params": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:57.962908",
    "stderr": "# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843878.3807316-11901-71003472666479 `" && echo ansible-tmp-1604843878.3807316-11901-71003472666479="` echo /root/.ansible/tmp/ansible-tmp-1604843878.3807316-11901-71003472666479 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnbia2qbm TO /root/.ansible/tmp/ansible-tmp-1604843878.3807316-11901-71003472666479/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843878.3807316-11901-71003472666479/ /root/.ansible/tmp/ansible-tmp-1604843878.3807316-11901-71003472666479/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843878.3807316-11901-71003472666479/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843878.3807316-11901-71003472666479/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
    "delta": "0:00:00.312205",
    "end": "2020-11-08 13:57:58.824557",
    "invocation": {
        "module_args": {
            "_raw_params": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:58.512352",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "$HELM_HOME has been configured at /root/.helm.\nNot installing Tiller due to 'client-only' flag having been set\n\"fluxcd\" has been added to your repositories",
    "stdout_lines": [
        "$HELM_HOME has been configured at /root/.helm.",
        "Not installing Tiller due to 'client-only' flag having been set",
        "\"fluxcd\" has been added to your repositories"
    ]
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843878.894016-11938-135008140369234 `" && echo ansible-tmp-1604843878.894016-11938-135008140369234="` echo /root/.ansible/tmp/ansible-tmp-1604843878.894016-11938-135008140369234 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpp1paplq8 TO /root/.ansible/tmp/ansible-tmp-1604843878.894016-11938-135008140369234/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843878.894016-11938-135008140369234/ /root/.ansible/tmp/ansible-tmp-1604843878.894016-11938-135008140369234/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843878.894016-11938-135008140369234/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843878.894016-11938-135008140369234/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
    "delta": "0:00:01.630146",
    "end": "2020-11-08 13:58:00.654221",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:57:59.024075",
    "stderr": "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists",
    "stderr_lines": [
        "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists"
    ],
    "stdout": "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged\nRelease \"flux-dev\" does not exist. Installing it now.\nNAME:   flux-dev\nLAST DEPLOYED: Sun Nov  8 13:58:00 2020\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME                  DATA  AGE\nflux-dev-kube-config  1     0s\nflux-dev-ssh-config   1     0s\n\n==> v1/Deployment\nNAME                    READY  UP-TO-DATE  AVAILABLE  AGE\nflux-dev                0/1    1           0          0s\nflux-dev-helm-operator  0/1    1           0          0s\nflux-dev-memcached      0/1    1           0          0s\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS             RESTARTS  AGE\nflux-dev-794c97d9cc-6f5pr                0/1    ContainerCreating  0         0s\nflux-dev-helm-operator-745dc7fb99-gm7jp  0/1    ContainerCreating  0         0s\nflux-dev-memcached-5f689bfdb9-6dgph      0/1    ContainerCreating  0         0s\n\n==> v1/Service\nNAME                TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE\nflux-dev            ClusterIP  10.0.172.56   <none>       3030/TCP   0s\nflux-dev-memcached  ClusterIP  10.0.218.109  <none>       11211/TCP  0s\n\n==> v1/ServiceAccount\nNAME      SECRETS  AGE\nflux-dev  1        0s\n\n==> v1beta1/ClusterRole\nNAME      AGE\nflux-dev  0s\n\n==> v1beta1/ClusterRoleBinding\nNAME      AGE\nflux-dev  0s\n\n\nNOTES:\nGet the Git deploy key by either (a) running\n\n  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n\nor by (b) installing fluxctl through\nhttps://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl\nand running:\n\n  fluxctl identity --k8s-fwd-ns default",
    "stdout_lines": [
        "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged",
        "Release \"flux-dev\" does not exist. Installing it now.",
        "NAME:   flux-dev",
        "LAST DEPLOYED: Sun Nov  8 13:58:00 2020",
        "NAMESPACE: default",
        "STATUS: DEPLOYED",
        "",
        "RESOURCES:",
        "==> v1/ConfigMap",
        "NAME                  DATA  AGE",
        "flux-dev-kube-config  1     0s",
        "flux-dev-ssh-config   1     0s",
        "",
        "==> v1/Deployment",
        "NAME                    READY  UP-TO-DATE  AVAILABLE  AGE",
        "flux-dev                0/1    1           0          0s",
        "flux-dev-helm-operator  0/1    1           0          0s",
        "flux-dev-memcached      0/1    1           0          0s",
        "",
        "==> v1/Pod(related)",
        "NAME                                     READY  STATUS             RESTARTS  AGE",
        "flux-dev-794c97d9cc-6f5pr                0/1    ContainerCreating  0         0s",
        "flux-dev-helm-operator-745dc7fb99-gm7jp  0/1    ContainerCreating  0         0s",
        "flux-dev-memcached-5f689bfdb9-6dgph      0/1    ContainerCreating  0         0s",
        "",
        "==> v1/Service",
        "NAME                TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE",
        "flux-dev            ClusterIP  10.0.172.56   <none>       3030/TCP   0s",
        "flux-dev-memcached  ClusterIP  10.0.218.109  <none>       11211/TCP  0s",
        "",
        "==> v1/ServiceAccount",
        "NAME      SECRETS  AGE",
        "flux-dev  1        0s",
        "",
        "==> v1beta1/ClusterRole",
        "NAME      AGE",
        "flux-dev  0s",
        "",
        "==> v1beta1/ClusterRoleBinding",
        "NAME      AGE",
        "flux-dev  0s",
        "",
        "",
        "NOTES:",
        "Get the Git deploy key by either (a) running",
        "",
        "  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2",
        "",
        "or by (b) installing fluxctl through",
        "https://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl",
        "and running:",
        "",
        "  fluxctl identity --k8s-fwd-ns default"
    ]
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843880.853702-11986-183330623467752 `" && echo ansible-tmp-1604843880.853702-11986-183330623467752="` echo /root/.ansible/tmp/ansible-tmp-1604843880.853702-11986-183330623467752 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfwu8k9qe TO /root/.ansible/tmp/ansible-tmp-1604843880.853702-11986-183330623467752/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843880.853702-11986-183330623467752/ /root/.ansible/tmp/ansible-tmp-1604843880.853702-11986-183330623467752/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843880.853702-11986-183330623467752/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843880.853702-11986-183330623467752/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod flux in default (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843911.5341291-11986-253018409490578 `" && echo ansible-tmp-1604843911.5341291-11986-253018409490578="` echo /root/.ansible/tmp/ansible-tmp-1604843911.5341291-11986-253018409490578 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprvzrfmqj TO /root/.ansible/tmp/ansible-tmp-1604843911.5341291-11986-253018409490578/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843911.5341291-11986-253018409490578/ /root/.ansible/tmp/ansible-tmp-1604843911.5341291-11986-253018409490578/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843911.5341291-11986-253018409490578/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843911.5341291-11986-253018409490578/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T13:58:00Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-6f5pr",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "d20293e5-7eb3-46c5-a893-ba93bb046cea"
                    }
                ],
                "resourceVersion": "2917500",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-6f5pr",
                "uid": "4a044ce5-6e2d-43ec-a1bc-d22e47c743cd"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-kwx4p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-kwx4p",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-kwx4p"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:58:00Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:58:08Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:58:08Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:58:00Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://ee7e48fd96880a724af33fe33620f292ba514a5c57f29af109d2b7cd64dd5eb8",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T13:58:01Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.16",
                "podIPs": [
                    {
                        "ip": "10.1.0.16"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-08T13:58:00Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843912.5709789-12056-73677875082188 `" && echo ansible-tmp-1604843912.5709789-12056-73677875082188="` echo /root/.ansible/tmp/ansible-tmp-1604843912.5709789-12056-73677875082188 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp6tgy2fn5 TO /root/.ansible/tmp/ansible-tmp-1604843912.5709789-12056-73677875082188/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843912.5709789-12056-73677875082188/ /root/.ansible/tmp/ansible-tmp-1604843912.5709789-12056-73677875082188/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843912.5709789-12056-73677875082188/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843912.5709789-12056-73677875082188/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.223059",
    "end": "2020-11-08 13:58:32.997823",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:58:32.774764",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843913.9747155-12116-114815595177103 `" && echo ansible-tmp-1604843913.9747155-12116-114815595177103="` echo /root/.ansible/tmp/ansible-tmp-1604843913.9747155-12116-114815595177103 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp4ln2cbte TO /root/.ansible/tmp/ansible-tmp-1604843913.9747155-12116-114815595177103/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843913.9747155-12116-114815595177103/ /root/.ansible/tmp/ansible-tmp-1604843913.9747155-12116-114815595177103/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843913.9747155-12116-114815595177103/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843913.9747155-12116-114815595177103/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.5_yaxn2p",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843914.2793915-12142-242003844467084 `" && echo ansible-tmp-1604843914.2793915-12142-242003844467084="` echo /root/.ansible/tmp/ansible-tmp-1604843914.2793915-12142-242003844467084 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnicwswan TO /root/.ansible/tmp/ansible-tmp-1604843914.2793915-12142-242003844467084/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843914.2793915-12142-242003844467084/ /root/.ansible/tmp/ansible-tmp-1604843914.2793915-12142-242003844467084/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843914.2793915-12142-242003844467084/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843914.2793915-12142-242003844467084/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843914.8501647-12178-26158460837214 `" && echo ansible-tmp-1604843914.8501647-12178-26158460837214="` echo /root/.ansible/tmp/ansible-tmp-1604843914.8501647-12178-26158460837214 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdggsyeiz TO /root/.ansible/tmp/ansible-tmp-1604843914.8501647-12178-26158460837214/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843914.8501647-12178-26158460837214/ /root/.ansible/tmp/ansible-tmp-1604843914.8501647-12178-26158460837214/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843914.8501647-12178-26158460837214/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843914.8501647-12178-26158460837214/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.082304",
    "end": "2020-11-08 13:58:35.081565",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:58:34.999261",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843915.2058766-12209-147358717093617 `" && echo ansible-tmp-1604843915.2058766-12209-147358717093617="` echo /root/.ansible/tmp/ansible-tmp-1604843915.2058766-12209-147358717093617 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp77jome6g TO /root/.ansible/tmp/ansible-tmp-1604843915.2058766-12209-147358717093617/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843915.2058766-12209-147358717093617/ /root/.ansible/tmp/ansible-tmp-1604843915.2058766-12209-147358717093617/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843915.2058766-12209-147358717093617/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843915.2058766-12209-147358717093617/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ewgoybjw",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843915.406744-12235-93480583346893 `" && echo ansible-tmp-1604843915.406744-12235-93480583346893="` echo /root/.ansible/tmp/ansible-tmp-1604843915.406744-12235-93480583346893 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphwtpmvld TO /root/.ansible/tmp/ansible-tmp-1604843915.406744-12235-93480583346893/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843915.406744-12235-93480583346893/ /root/.ansible/tmp/ansible-tmp-1604843915.406744-12235-93480583346893/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843915.406744-12235-93480583346893/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843915.406744-12235-93480583346893/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843915.791247-12271-86611039954559 `" && echo ansible-tmp-1604843915.791247-12271-86611039954559="` echo /root/.ansible/tmp/ansible-tmp-1604843915.791247-12271-86611039954559 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmptpl5eztp TO /root/.ansible/tmp/ansible-tmp-1604843915.791247-12271-86611039954559/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843915.791247-12271-86611039954559/ /root/.ansible/tmp/ansible-tmp-1604843915.791247-12271-86611039954559/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843915.791247-12271-86611039954559/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843915.791247-12271-86611039954559/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.055363",
    "end": "2020-11-08 13:58:35.978892",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:58:35.923529",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843916.0478492-12302-192318159720532 `" && echo ansible-tmp-1604843916.0478492-12302-192318159720532="` echo /root/.ansible/tmp/ansible-tmp-1604843916.0478492-12302-192318159720532 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp4u5_fl1y TO /root/.ansible/tmp/ansible-tmp-1604843916.0478492-12302-192318159720532/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843916.0478492-12302-192318159720532/ /root/.ansible/tmp/ansible-tmp-1604843916.0478492-12302-192318159720532/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843916.0478492-12302-192318159720532/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843916.0478492-12302-192318159720532/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843916.938707-12342-191013667202015 `" && echo ansible-tmp-1604843916.938707-12342-191013667202015="` echo /root/.ansible/tmp/ansible-tmp-1604843916.938707-12342-191013667202015 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwa4nujk3 TO /root/.ansible/tmp/ansible-tmp-1604843916.938707-12342-191013667202015/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843916.938707-12342-191013667202015/ /root/.ansible/tmp/ansible-tmp-1604843916.938707-12342-191013667202015/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843916.938707-12342-191013667202015/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843916.938707-12342-191013667202015/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843917.581968-12370-76785840381969 `" && echo ansible-tmp-1604843917.581968-12370-76785840381969="` echo /root/.ansible/tmp/ansible-tmp-1604843917.581968-12370-76785840381969 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjofdjqpj TO /root/.ansible/tmp/ansible-tmp-1604843917.581968-12370-76785840381969/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843917.581968-12370-76785840381969/ /root/.ansible/tmp/ansible-tmp-1604843917.581968-12370-76785840381969/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843917.581968-12370-76785840381969/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843917.581968-12370-76785840381969/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T13:58:00Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-6f5pr",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "d20293e5-7eb3-46c5-a893-ba93bb046cea"
                    }
                ],
                "resourceVersion": "2917500",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-6f5pr",
                "uid": "4a044ce5-6e2d-43ec-a1bc-d22e47c743cd"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-kwx4p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-kwx4p",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-kwx4p"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:58:00Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:58:08Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:58:08Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:58:00Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://ee7e48fd96880a724af33fe33620f292ba514a5c57f29af109d2b7cd64dd5eb8",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T13:58:01Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.16",
                "podIPs": [
                    {
                        "ip": "10.1.0.16"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-08T13:58:00Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843918.3269217-12406-68286495982183 `" && echo ansible-tmp-1604843918.3269217-12406-68286495982183="` echo /root/.ansible/tmp/ansible-tmp-1604843918.3269217-12406-68286495982183 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_r9t1ncs TO /root/.ansible/tmp/ansible-tmp-1604843918.3269217-12406-68286495982183/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843918.3269217-12406-68286495982183/ /root/.ansible/tmp/ansible-tmp-1604843918.3269217-12406-68286495982183/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843918.3269217-12406-68286495982183/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843918.3269217-12406-68286495982183/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.187335",
    "end": "2020-11-08 13:58:38.647043",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:58:38.459708",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:22
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:31
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843919.3274972-12472-176516591939589 `" && echo ansible-tmp-1604843919.3274972-12472-176516591939589="` echo /root/.ansible/tmp/ansible-tmp-1604843919.3274972-12472-176516591939589 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpybkjin71 TO /root/.ansible/tmp/ansible-tmp-1604843919.3274972-12472-176516591939589/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843919.3274972-12472-176516591939589/ /root/.ansible/tmp/ansible-tmp-1604843919.3274972-12472-176516591939589/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843919.3274972-12472-176516591939589/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843919.3274972-12472-176516591939589/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.kzxii4n_",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843919.5148938-12498-162280027593741 `" && echo ansible-tmp-1604843919.5148938-12498-162280027593741="` echo /root/.ansible/tmp/ansible-tmp-1604843919.5148938-12498-162280027593741 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprl5k6xok TO /root/.ansible/tmp/ansible-tmp-1604843919.5148938-12498-162280027593741/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843919.5148938-12498-162280027593741/ /root/.ansible/tmp/ansible-tmp-1604843919.5148938-12498-162280027593741/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843919.5148938-12498-162280027593741/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843919.5148938-12498-162280027593741/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843919.8918097-12534-255365290703383 `" && echo ansible-tmp-1604843919.8918097-12534-255365290703383="` echo /root/.ansible/tmp/ansible-tmp-1604843919.8918097-12534-255365290703383 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7n86367q TO /root/.ansible/tmp/ansible-tmp-1604843919.8918097-12534-255365290703383/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843919.8918097-12534-255365290703383/ /root/.ansible/tmp/ansible-tmp-1604843919.8918097-12534-255365290703383/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843919.8918097-12534-255365290703383/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843919.8918097-12534-255365290703383/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.054469",
    "end": "2020-11-08 13:58:40.077857",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:58:40.023388",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843920.1399364-12565-154626777444114 `" && echo ansible-tmp-1604843920.1399364-12565-154626777444114="` echo /root/.ansible/tmp/ansible-tmp-1604843920.1399364-12565-154626777444114 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpj6s3uv74 TO /root/.ansible/tmp/ansible-tmp-1604843920.1399364-12565-154626777444114/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843920.1399364-12565-154626777444114/ /root/.ansible/tmp/ansible-tmp-1604843920.1399364-12565-154626777444114/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843920.1399364-12565-154626777444114/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843920.1399364-12565-154626777444114/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843921.0228264-12605-219079624739455 `" && echo ansible-tmp-1604843921.0228264-12605-219079624739455="` echo /root/.ansible/tmp/ansible-tmp-1604843921.0228264-12605-219079624739455 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbistm43r TO /root/.ansible/tmp/ansible-tmp-1604843921.0228264-12605-219079624739455/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843921.0228264-12605-219079624739455/ /root/.ansible/tmp/ansible-tmp-1604843921.0228264-12605-219079624739455/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843921.0228264-12605-219079624739455/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843921.0228264-12605-219079624739455/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843921.670686-12633-149943556507562 `" && echo ansible-tmp-1604843921.670686-12633-149943556507562="` echo /root/.ansible/tmp/ansible-tmp-1604843921.670686-12633-149943556507562 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphg7fi1r4 TO /root/.ansible/tmp/ansible-tmp-1604843921.670686-12633-149943556507562/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843921.670686-12633-149943556507562/ /root/.ansible/tmp/ansible-tmp-1604843921.670686-12633-149943556507562/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843921.670686-12633-149943556507562/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843921.670686-12633-149943556507562/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843922.5295706-12673-195591882394738 `" && echo ansible-tmp-1604843922.5295706-12673-195591882394738="` echo /root/.ansible/tmp/ansible-tmp-1604843922.5295706-12673-195591882394738 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5c4y24pc TO /root/.ansible/tmp/ansible-tmp-1604843922.5295706-12673-195591882394738/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843922.5295706-12673-195591882394738/ /root/.ansible/tmp/ansible-tmp-1604843922.5295706-12673-195591882394738/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843922.5295706-12673-195591882394738/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843922.5295706-12673-195591882394738/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843923.4899595-12725-119955143011891 `" && echo ansible-tmp-1604843923.4899595-12725-119955143011891="` echo /root/.ansible/tmp/ansible-tmp-1604843923.4899595-12725-119955143011891 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_4jmz0l7 TO /root/.ansible/tmp/ansible-tmp-1604843923.4899595-12725-119955143011891/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843923.4899595-12725-119955143011891/ /root/.ansible/tmp/ansible-tmp-1604843923.4899595-12725-119955143011891/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843923.4899595-12725-119955143011891/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843923.4899595-12725-119955143011891/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.tjle6jey",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843923.675663-12751-176170300837112 `" && echo ansible-tmp-1604843923.675663-12751-176170300837112="` echo /root/.ansible/tmp/ansible-tmp-1604843923.675663-12751-176170300837112 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbs5htm_j TO /root/.ansible/tmp/ansible-tmp-1604843923.675663-12751-176170300837112/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843923.675663-12751-176170300837112/ /root/.ansible/tmp/ansible-tmp-1604843923.675663-12751-176170300837112/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843923.675663-12751-176170300837112/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843923.675663-12751-176170300837112/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843924.0419028-12787-47348714650958 `" && echo ansible-tmp-1604843924.0419028-12787-47348714650958="` echo /root/.ansible/tmp/ansible-tmp-1604843924.0419028-12787-47348714650958 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppe2ixvtr TO /root/.ansible/tmp/ansible-tmp-1604843924.0419028-12787-47348714650958/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843924.0419028-12787-47348714650958/ /root/.ansible/tmp/ansible-tmp-1604843924.0419028-12787-47348714650958/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843924.0419028-12787-47348714650958/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843924.0419028-12787-47348714650958/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.056609",
    "end": "2020-11-08 13:58:44.233570",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:58:44.176961",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843924.2994301-12818-27228252723562 `" && echo ansible-tmp-1604843924.2994301-12818-27228252723562="` echo /root/.ansible/tmp/ansible-tmp-1604843924.2994301-12818-27228252723562 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzwzpjdd4 TO /root/.ansible/tmp/ansible-tmp-1604843924.2994301-12818-27228252723562/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843924.2994301-12818-27228252723562/ /root/.ansible/tmp/ansible-tmp-1604843924.2994301-12818-27228252723562/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843924.2994301-12818-27228252723562/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843924.2994301-12818-27228252723562/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843925.1323633-12858-168513900762592 `" && echo ansible-tmp-1604843925.1323633-12858-168513900762592="` echo /root/.ansible/tmp/ansible-tmp-1604843925.1323633-12858-168513900762592 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpk0lba1zb TO /root/.ansible/tmp/ansible-tmp-1604843925.1323633-12858-168513900762592/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843925.1323633-12858-168513900762592/ /root/.ansible/tmp/ansible-tmp-1604843925.1323633-12858-168513900762592/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843925.1323633-12858-168513900762592/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843925.1323633-12858-168513900762592/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843925.7662342-12886-205214622888280 `" && echo ansible-tmp-1604843925.7662342-12886-205214622888280="` echo /root/.ansible/tmp/ansible-tmp-1604843925.7662342-12886-205214622888280 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp193sokve TO /root/.ansible/tmp/ansible-tmp-1604843925.7662342-12886-205214622888280/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843925.7662342-12886-205214622888280/ /root/.ansible/tmp/ansible-tmp-1604843925.7662342-12886-205214622888280/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843925.7662342-12886-205214622888280/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843925.7662342-12886-205214622888280/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843926.5948358-12926-152746226496995 `" && echo ansible-tmp-1604843926.5948358-12926-152746226496995="` echo /root/.ansible/tmp/ansible-tmp-1604843926.5948358-12926-152746226496995 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcphc02yb TO /root/.ansible/tmp/ansible-tmp-1604843926.5948358-12926-152746226496995/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843926.5948358-12926-152746226496995/ /root/.ansible/tmp/ansible-tmp-1604843926.5948358-12926-152746226496995/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843926.5948358-12926-152746226496995/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843926.5948358-12926-152746226496995/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843927.3118553-12955-180633338617982 `" && echo ansible-tmp-1604843927.3118553-12955-180633338617982="` echo /root/.ansible/tmp/ansible-tmp-1604843927.3118553-12955-180633338617982 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmptd8ypqhr TO /root/.ansible/tmp/ansible-tmp-1604843927.3118553-12955-180633338617982/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843927.3118553-12955-180633338617982/ /root/.ansible/tmp/ansible-tmp-1604843927.3118553-12955-180633338617982/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843927.3118553-12955-180633338617982/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843927.3118553-12955-180633338617982/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [include_role : create/namespace_vaultauth] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:22

TASK [Checking if the namespace walmart-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843927.8742454-12985-210487906916434 `" && echo ansible-tmp-1604843927.8742454-12985-210487906916434="` echo /root/.ansible/tmp/ansible-tmp-1604843927.8742454-12985-210487906916434 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp4fyf1je_ TO /root/.ansible/tmp/ansible-tmp-1604843927.8742454-12985-210487906916434/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843927.8742454-12985-210487906916434/ /root/.ansible/tmp/ansible-tmp-1604843927.8742454-12985-210487906916434/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843927.8742454-12985-210487906916434/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843927.8742454-12985-210487906916434/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843928.68674-13023-193952681407105 `" && echo ansible-tmp-1604843928.68674-13023-193952681407105="` echo /root/.ansible/tmp/ansible-tmp-1604843928.68674-13023-193952681407105 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpello9el5 TO /root/.ansible/tmp/ansible-tmp-1604843928.68674-13023-193952681407105/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843928.68674-13023-193952681407105/ /root/.ansible/tmp/ansible-tmp-1604843928.68674-13023-193952681407105/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843928.68674-13023-193952681407105/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843928.68674-13023-193952681407105/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336 `" && echo ansible-tmp-1604843928.8970788-13049-165152981568336="` echo /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5ww25idt TO /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/ /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp__48c48w/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/ /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjpr00pro TO /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/ /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4d93c9ae989d8757fd969fecf14722d7",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604843928.8970788-13049-165152981568336/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843929.5791578-13091-19931772432004 `" && echo ansible-tmp-1604843929.5791578-13091-19931772432004="` echo /root/.ansible/tmp/ansible-tmp-1604843929.5791578-13091-19931772432004 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3de6h4sq TO /root/.ansible/tmp/ansible-tmp-1604843929.5791578-13091-19931772432004/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843929.5791578-13091-19931772432004/ /root/.ansible/tmp/ansible-tmp-1604843929.5791578-13091-19931772432004/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843929.5791578-13091-19931772432004/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843929.5791578-13091-19931772432004/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for orderer] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346 `" && echo ansible-tmp-1604843929.7856052-13117-185694065985346="` echo /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpvuqn5520 TO /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/ /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpig3cd14s/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/ /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8jl7i_b2 TO /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/ /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b1e902eb27343ada17df0d459fa5440c",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604843929.7856052-13117-185694065985346/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843930.1906762-13159-241780752418538 `" && echo ansible-tmp-1604843930.1906762-13159-241780752418538="` echo /root/.ansible/tmp/ansible-tmp-1604843930.1906762-13159-241780752418538 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpk9cei03c TO /root/.ansible/tmp/ansible-tmp-1604843930.1906762-13159-241780752418538/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843930.1906762-13159-241780752418538/ /root/.ansible/tmp/ansible-tmp-1604843930.1906762-13159-241780752418538/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843930.1906762-13159-241780752418538/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843930.1906762-13159-241780752418538/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660 `" && echo ansible-tmp-1604843930.4043424-13185-110079857855660="` echo /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpiwjjj2ij TO /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/ /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp85v4srsc/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/ /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3_io7rny TO /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/ /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "707b3f479630c38f6e663c6c7306b4d0",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604843930.4043424-13185-110079857855660/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843930.808824-13227-144777504679574 `" && echo ansible-tmp-1604843930.808824-13227-144777504679574="` echo /root/.ansible/tmp/ansible-tmp-1604843930.808824-13227-144777504679574 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp4ag8i1kx TO /root/.ansible/tmp/ansible-tmp-1604843930.808824-13227-144777504679574/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843930.808824-13227-144777504679574/ /root/.ansible/tmp/ansible-tmp-1604843930.808824-13227-144777504679574/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843930.808824-13227-144777504679574/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843930.808824-13227-144777504679574/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for orderer] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398 `" && echo ansible-tmp-1604843931.0166597-13253-274373446648398="` echo /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpo5bp5dlq TO /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/ /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjj9_vngl/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/ /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpv57doqlh TO /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/ /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "48ca9ca3bda6a4d4373d83682874e266",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604843931.0166597-13253-274373446648398/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843931.4239864-13295-210831023494088 `" && echo ansible-tmp-1604843931.4239864-13295-210831023494088="` echo /root/.ansible/tmp/ansible-tmp-1604843931.4239864-13295-210831023494088 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpb_2sam4f TO /root/.ansible/tmp/ansible-tmp-1604843931.4239864-13295-210831023494088/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843931.4239864-13295-210831023494088/ /root/.ansible/tmp/ansible-tmp-1604843931.4239864-13295-210831023494088/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843931.4239864-13295-210831023494088/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843931.4239864-13295-210831023494088/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843931.6612263-13321-37519148887836 `" && echo ansible-tmp-1604843931.6612263-13321-37519148887836="` echo /root/.ansible/tmp/ansible-tmp-1604843931.6612263-13321-37519148887836 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppvf1_drq TO /root/.ansible/tmp/ansible-tmp-1604843931.6612263-13321-37519148887836/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843931.6612263-13321-37519148887836/ /root/.ansible/tmp/ansible-tmp-1604843931.6612263-13321-37519148887836/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843931.6612263-13321-37519148887836/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843931.6612263-13321-37519148887836/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.188163",
    "end": "2020-11-08 13:58:59.979987",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:58:51.791824",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   10846fc2..65eeead1  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   10846fc2..65eeead1  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 65eeead1] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 11231 insertions(+), 38823 deletions(-)\n rewrite console.out (82%)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 65eeead1] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+), 38823 deletions(-)",
        " rewrite console.out (82%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 65eeead1] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+), 38823 deletions(-)",
        " rewrite console.out (82%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   10846fc2..65eeead1  HEAD -> gorilla"
    ]
}

TASK [Checking for the walmart-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding walmart-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843940.223048-13373-220676451613064 `" && echo ansible-tmp-1604843940.223048-13373-220676451613064="` echo /root/.ansible/tmp/ansible-tmp-1604843940.223048-13373-220676451613064 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbw5x4e7g TO /root/.ansible/tmp/ansible-tmp-1604843940.223048-13373-220676451613064/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843940.223048-13373-220676451613064/ /root/.ansible/tmp/ansible-tmp-1604843940.223048-13373-220676451613064/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843940.223048-13373-220676451613064/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843940.223048-13373-220676451613064/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "2ac106c4abd83ffb52d3a8e3b910c95c18efa038",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"2ac106c4abd83ffb52d3a8e3b910c95c18efa038\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78\"},\"name\":\"walmart-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}]}\n"
                },
                "creationTimestamp": "2020-11-06T07:10:22Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78"
                },
                "name": "walmart-net-role-tokenreview-binding",
                "resourceVersion": "2396289",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/walmart-net-role-tokenreview-binding",
                "uid": "27e7b4f4-321f-4fde-8504-e817937d7507"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "walmart-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in walmart-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843941.1426492-13413-191947223610847 `" && echo ansible-tmp-1604843941.1426492-13413-191947223610847="` echo /root/.ansible/tmp/ansible-tmp-1604843941.1426492-13413-191947223610847 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbc4fa00g TO /root/.ansible/tmp/ansible-tmp-1604843941.1426492-13413-191947223610847/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843941.1426492-13413-191947223610847/ /root/.ansible/tmp/ansible-tmp-1604843941.1426492-13413-191947223610847/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843941.1426492-13413-191947223610847/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843941.1426492-13413-191947223610847/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604843976.808966-13413-273598259394717 `" && echo ansible-tmp-1604843976.808966-13413-273598259394717="` echo /root/.ansible/tmp/ansible-tmp-1604843976.808966-13413-273598259394717 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp4ufnlsfu TO /root/.ansible/tmp/ansible-tmp-1604843976.808966-13413-273598259394717/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604843976.808966-13413-273598259394717/ /root/.ansible/tmp/ansible-tmp-1604843976.808966-13413-273598259394717/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604843976.808966-13413-273598259394717/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604843976.808966-13413-273598259394717/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844012.4871035-13413-216305210157749 `" && echo ansible-tmp-1604844012.4871035-13413-216305210157749="` echo /root/.ansible/tmp/ansible-tmp-1604844012.4871035-13413-216305210157749 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpewftn83u TO /root/.ansible/tmp/ansible-tmp-1604844012.4871035-13413-216305210157749/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844012.4871035-13413-216305210157749/ /root/.ansible/tmp/ansible-tmp-1604844012.4871035-13413-216305210157749/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844012.4871035-13413-216305210157749/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844012.4871035-13413-216305210157749/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844048.142738-13413-22361322866672 `" && echo ansible-tmp-1604844048.142738-13413-22361322866672="` echo /root/.ansible/tmp/ansible-tmp-1604844048.142738-13413-22361322866672 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpymhe8oq4 TO /root/.ansible/tmp/ansible-tmp-1604844048.142738-13413-22361322866672/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844048.142738-13413-22361322866672/ /root/.ansible/tmp/ansible-tmp-1604844048.142738-13413-22361322866672/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844048.142738-13413-22361322866672/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844048.142738-13413-22361322866672/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "586eac56c69c15efee4d4ceb86bb2999c96a56c2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"586eac56c69c15efee4d4ceb86bb2999c96a56c2\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA\"},\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T14:00:21Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA"
                },
                "name": "vault-reviewer",
                "namespace": "walmart-net",
                "resourceVersion": "2917849",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-reviewer",
                "uid": "54cb3212-3c18-464d-9559-ff79398705d0"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-96cgv"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in walmart-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844048.9996567-13527-42319816831268 `" && echo ansible-tmp-1604844048.9996567-13527-42319816831268="` echo /root/.ansible/tmp/ansible-tmp-1604844048.9996567-13527-42319816831268 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprj3jkzxo TO /root/.ansible/tmp/ansible-tmp-1604844048.9996567-13527-42319816831268/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844048.9996567-13527-42319816831268/ /root/.ansible/tmp/ansible-tmp-1604844048.9996567-13527-42319816831268/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844048.9996567-13527-42319816831268/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844048.9996567-13527-42319816831268/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b527239518c6f14365e0009e83a7965e765a8dc3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b527239518c6f14365e0009e83a7965e765a8dc3\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0\"},\"name\":\"vault-auth\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T14:00:21Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0"
                },
                "name": "vault-auth",
                "namespace": "walmart-net",
                "resourceVersion": "2917847",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-auth",
                "uid": "8debcd33-1cce-4d82-b188-04fe51a47602"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-njscr"
                }
            ]
        }
    ]
}

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844049.690629-13557-134570430135902 `" && echo ansible-tmp-1604844049.690629-13557-134570430135902="` echo /root/.ansible/tmp/ansible-tmp-1604844049.690629-13557-134570430135902 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpts495jaf TO /root/.ansible/tmp/ansible-tmp-1604844049.690629-13557-134570430135902/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844049.690629-13557-134570430135902/ /root/.ansible/tmp/ansible-tmp-1604844049.690629-13557-134570430135902/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844049.690629-13557-134570430135902/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844049.690629-13557-134570430135902/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844050.5883484-13595-138993580179301 `" && echo ansible-tmp-1604844050.5883484-13595-138993580179301="` echo /root/.ansible/tmp/ansible-tmp-1604844050.5883484-13595-138993580179301 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqozwq3v5 TO /root/.ansible/tmp/ansible-tmp-1604844050.5883484-13595-138993580179301/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844050.5883484-13595-138993580179301/ /root/.ansible/tmp/ansible-tmp-1604844050.5883484-13595-138993580179301/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844050.5883484-13595-138993580179301/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844050.5883484-13595-138993580179301/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417 `" && echo ansible-tmp-1604844050.8016105-13621-63586870680417="` echo /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5suuyo7m TO /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/ /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7vqt3v1z/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/ /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp03wuhup1 TO /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/ /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "87aff577d25e325fac79903302d07758",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844050.8016105-13621-63586870680417/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844051.2081702-13663-159002522857064 `" && echo ansible-tmp-1604844051.2081702-13663-159002522857064="` echo /root/.ansible/tmp/ansible-tmp-1604844051.2081702-13663-159002522857064 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpt_51dlk_ TO /root/.ansible/tmp/ansible-tmp-1604844051.2081702-13663-159002522857064/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844051.2081702-13663-159002522857064/ /root/.ansible/tmp/ansible-tmp-1604844051.2081702-13663-159002522857064/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844051.2081702-13663-159002522857064/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844051.2081702-13663-159002522857064/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for peer] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339 `" && echo ansible-tmp-1604844051.4352462-13689-63083346933339="` echo /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfy0x_atu TO /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/ /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppq2km2h9/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/ /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8i3kyl6s TO /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/ /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "9749a00045b3fd05c025cc29e7eabfb1",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844051.4352462-13689-63083346933339/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844051.8407025-13731-36489878275675 `" && echo ansible-tmp-1604844051.8407025-13731-36489878275675="` echo /root/.ansible/tmp/ansible-tmp-1604844051.8407025-13731-36489878275675 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpt7omd_yx TO /root/.ansible/tmp/ansible-tmp-1604844051.8407025-13731-36489878275675/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844051.8407025-13731-36489878275675/ /root/.ansible/tmp/ansible-tmp-1604844051.8407025-13731-36489878275675/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844051.8407025-13731-36489878275675/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844051.8407025-13731-36489878275675/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981 `" && echo ansible-tmp-1604844052.086045-13757-23828503568981="` echo /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpu5jpc2me TO /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/ /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqd62a2q5/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/ /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpe015fs9o TO /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/ /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d39874ba996a2494812a782b78453e995845be6b",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "d39874ba996a2494812a782b78453e995845be6b",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "603f99cf710abd04581efdc563a6074a",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844052.086045-13757-23828503568981/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844052.496235-13799-132837799124365 `" && echo ansible-tmp-1604844052.496235-13799-132837799124365="` echo /root/.ansible/tmp/ansible-tmp-1604844052.496235-13799-132837799124365 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpicm528rx TO /root/.ansible/tmp/ansible-tmp-1604844052.496235-13799-132837799124365/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844052.496235-13799-132837799124365/ /root/.ansible/tmp/ansible-tmp-1604844052.496235-13799-132837799124365/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844052.496235-13799-132837799124365/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844052.496235-13799-132837799124365/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849 `" && echo ansible-tmp-1604844052.712212-13825-20904535863849="` echo /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp07_d2kxh TO /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/ /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8a7iqjnb/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/ /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwxkqvx1f TO /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/ /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdea783ba12108f490d72ae42abb8b05",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844052.712212-13825-20904535863849/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844053.1197288-13867-74706457930026 `" && echo ansible-tmp-1604844053.1197288-13867-74706457930026="` echo /root/.ansible/tmp/ansible-tmp-1604844053.1197288-13867-74706457930026 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc8p_j5k3 TO /root/.ansible/tmp/ansible-tmp-1604844053.1197288-13867-74706457930026/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844053.1197288-13867-74706457930026/ /root/.ansible/tmp/ansible-tmp-1604844053.1197288-13867-74706457930026/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844053.1197288-13867-74706457930026/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844053.1197288-13867-74706457930026/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844053.3311222-13893-59144989609249 `" && echo ansible-tmp-1604844053.3311222-13893-59144989609249="` echo /root/.ansible/tmp/ansible-tmp-1604844053.3311222-13893-59144989609249 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpz5vgyzkn TO /root/.ansible/tmp/ansible-tmp-1604844053.3311222-13893-59144989609249/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844053.3311222-13893-59144989609249/ /root/.ansible/tmp/ansible-tmp-1604844053.3311222-13893-59144989609249/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844053.3311222-13893-59144989609249/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844053.3311222-13893-59144989609249/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.078035",
    "end": "2020-11-08 14:00:56.543478",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:00:53.465443",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   65eeead1..177bd0a6  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   65eeead1..177bd0a6  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 177bd0a6] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 1162 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 177bd0a6] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 177bd0a6] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   65eeead1..177bd0a6  HEAD -> gorilla"
    ]
}

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding carrier-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844056.8251455-13945-251944117326786 `" && echo ansible-tmp-1604844056.8251455-13945-251944117326786="` echo /root/.ansible/tmp/ansible-tmp-1604844056.8251455-13945-251944117326786 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpw_rb_09k TO /root/.ansible/tmp/ansible-tmp-1604844056.8251455-13945-251944117326786/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844056.8251455-13945-251944117326786/ /root/.ansible/tmp/ansible-tmp-1604844056.8251455-13945-251944117326786/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844056.8251455-13945-251944117326786/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844056.8251455-13945-251944117326786/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "ebf39e3d696d21f8f7b231cc1556e148d9bc32ca",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"ebf39e3d696d21f8f7b231cc1556e148d9bc32ca\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E\"},\"name\":\"carrier-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T09:21:48Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E"
                },
                "name": "carrier-net-role-tokenreview-binding",
                "resourceVersion": "2396603",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/carrier-net-role-tokenreview-binding",
                "uid": "595b15f6-118b-4cc4-8d71-d2e003a9ffc1"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "carrier-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844057.724074-13985-107192216045413 `" && echo ansible-tmp-1604844057.724074-13985-107192216045413="` echo /root/.ansible/tmp/ansible-tmp-1604844057.724074-13985-107192216045413 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpncqtmc2k TO /root/.ansible/tmp/ansible-tmp-1604844057.724074-13985-107192216045413/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844057.724074-13985-107192216045413/ /root/.ansible/tmp/ansible-tmp-1604844057.724074-13985-107192216045413/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844057.724074-13985-107192216045413/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844057.724074-13985-107192216045413/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844093.309224-13985-193555466276560 `" && echo ansible-tmp-1604844093.309224-13985-193555466276560="` echo /root/.ansible/tmp/ansible-tmp-1604844093.309224-13985-193555466276560 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnenulla_ TO /root/.ansible/tmp/ansible-tmp-1604844093.309224-13985-193555466276560/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844093.309224-13985-193555466276560/ /root/.ansible/tmp/ansible-tmp-1604844093.309224-13985-193555466276560/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844093.309224-13985-193555466276560/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844093.309224-13985-193555466276560/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844128.9398882-13985-73141670104037 `" && echo ansible-tmp-1604844128.9398882-13985-73141670104037="` echo /root/.ansible/tmp/ansible-tmp-1604844128.9398882-13985-73141670104037 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmper81jkmk TO /root/.ansible/tmp/ansible-tmp-1604844128.9398882-13985-73141670104037/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844128.9398882-13985-73141670104037/ /root/.ansible/tmp/ansible-tmp-1604844128.9398882-13985-73141670104037/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844128.9398882-13985-73141670104037/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844128.9398882-13985-73141670104037/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844164.5544178-13985-186300972835685 `" && echo ansible-tmp-1604844164.5544178-13985-186300972835685="` echo /root/.ansible/tmp/ansible-tmp-1604844164.5544178-13985-186300972835685 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpgeeuxbqs TO /root/.ansible/tmp/ansible-tmp-1604844164.5544178-13985-186300972835685/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844164.5544178-13985-186300972835685/ /root/.ansible/tmp/ansible-tmp-1604844164.5544178-13985-186300972835685/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844164.5544178-13985-186300972835685/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844164.5544178-13985-186300972835685/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T14:02:25Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM"
                },
                "name": "vault-reviewer",
                "namespace": "carrier-net",
                "resourceVersion": "2918172",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-reviewer",
                "uid": "5feefbd1-e577-49d7-9832-a3d0474936e7"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-c2mrh"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844165.4027646-14099-145792424019528 `" && echo ansible-tmp-1604844165.4027646-14099-145792424019528="` echo /root/.ansible/tmp/ansible-tmp-1604844165.4027646-14099-145792424019528 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpr2ceun16 TO /root/.ansible/tmp/ansible-tmp-1604844165.4027646-14099-145792424019528/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844165.4027646-14099-145792424019528/ /root/.ansible/tmp/ansible-tmp-1604844165.4027646-14099-145792424019528/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844165.4027646-14099-145792424019528/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844165.4027646-14099-145792424019528/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T14:02:25Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4"
                },
                "name": "vault-auth",
                "namespace": "carrier-net",
                "resourceVersion": "2918170",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-auth",
                "uid": "e843263b-75e9-4fe4-af90-cbdb9af1373e"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-745wn"
                }
            ]
        }
    ]
}

TASK [include_role : setup/vault_kubernetes] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:32

TASK [Waiting for the namespace walmart-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844166.2622526-14133-182731308730768 `" && echo ansible-tmp-1604844166.2622526-14133-182731308730768="` echo /root/.ansible/tmp/ansible-tmp-1604844166.2622526-14133-182731308730768 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpgguz2mw1 TO /root/.ansible/tmp/ansible-tmp-1604844166.2622526-14133-182731308730768/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844166.2622526-14133-182731308730768/ /root/.ansible/tmp/ansible-tmp-1604844166.2622526-14133-182731308730768/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844166.2622526-14133-182731308730768/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844166.2622526-14133-182731308730768/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "42333c092f583cd8c9e567f7c9309cf9b1a19a7a",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"42333c092f583cd8c9e567f7c9309cf9b1a19a7a\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0\"},\"name\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T14:00:21Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0"
                },
                "name": "walmart-net",
                "resourceVersion": "2917840",
                "selfLink": "/api/v1/namespaces/walmart-net",
                "uid": "c4437eb1-6e16-43fb-980c-ff1638402f53"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844167.011641-14167-150089300696254 `" && echo ansible-tmp-1604844167.011641-14167-150089300696254="` echo /root/.ansible/tmp/ansible-tmp-1604844167.011641-14167-150089300696254 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpsic_q9od TO /root/.ansible/tmp/ansible-tmp-1604844167.011641-14167-150089300696254/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844167.011641-14167-150089300696254/ /root/.ansible/tmp/ansible-tmp-1604844167.011641-14167-150089300696254/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844167.011641-14167-150089300696254/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844167.011641-14167-150089300696254/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844167.203884-14193-224697971674698 `" && echo ansible-tmp-1604844167.203884-14193-224697971674698="` echo /root/.ansible/tmp/ansible-tmp-1604844167.203884-14193-224697971674698 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzdfgyg_4 TO /root/.ansible/tmp/ansible-tmp-1604844167.203884-14193-224697971674698/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844167.203884-14193-224697971674698/ /root/.ansible/tmp/ansible-tmp-1604844167.203884-14193-224697971674698/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844167.203884-14193-224697971674698/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844167.203884-14193-224697971674698/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844167.61204-14231-217318135433095 `" && echo ansible-tmp-1604844167.61204-14231-217318135433095="` echo /root/.ansible/tmp/ansible-tmp-1604844167.61204-14231-217318135433095 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdtn9x1jk TO /root/.ansible/tmp/ansible-tmp-1604844167.61204-14231-217318135433095/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844167.61204-14231-217318135433095/ /root/.ansible/tmp/ansible-tmp-1604844167.61204-14231-217318135433095/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844167.61204-14231-217318135433095/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844167.61204-14231-217318135433095/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.087229",
    "end": "2020-11-08 14:02:47.830602",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:47.743373",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"",
    "stdout_lines": [
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.087229",
            "end": "2020-11-08 14:02:47.830602",
            "failed": false,
            "rc": 0,
            "start": "2020-11-08 14:02:47.743373",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"",
            "stdout_lines": [
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"walmart-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844168.0557039-14277-94077612175157 `" && echo ansible-tmp-1604844168.0557039-14277-94077612175157="` echo /root/.ansible/tmp/ansible-tmp-1604844168.0557039-14277-94077612175157 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7_wue63g TO /root/.ansible/tmp/ansible-tmp-1604844168.0557039-14277-94077612175157/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844168.0557039-14277-94077612175157/ /root/.ansible/tmp/ansible-tmp-1604844168.0557039-14277-94077612175157/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844168.0557039-14277-94077612175157/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844168.0557039-14277-94077612175157/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
    "delta": "0:00:00.052851",
    "end": "2020-11-08 14:02:48.239834",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:48.186983",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: walmart-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: walmart-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844168.306543-14312-7503794698 `" && echo ansible-tmp-1604844168.306543-14312-7503794698="` echo /root/.ansible/tmp/ansible-tmp-1604844168.306543-14312-7503794698 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3li0sxon TO /root/.ansible/tmp/ansible-tmp-1604844168.306543-14312-7503794698/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844168.306543-14312-7503794698/ /root/.ansible/tmp/ansible-tmp-1604844168.306543-14312-7503794698/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844168.306543-14312-7503794698/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844168.306543-14312-7503794698/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.226774",
    "end": "2020-11-08 14:02:48.665142",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:48.438368",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844168.73797-14353-241436443336101 `" && echo ansible-tmp-1604844168.73797-14353-241436443336101="` echo /root/.ansible/tmp/ansible-tmp-1604844168.73797-14353-241436443336101 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpgxh3s8ca TO /root/.ansible/tmp/ansible-tmp-1604844168.73797-14353-241436443336101/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844168.73797-14353-241436443336101/ /root/.ansible/tmp/ansible-tmp-1604844168.73797-14353-241436443336101/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844168.73797-14353-241436443336101/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844168.73797-14353-241436443336101/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.318927",
    "end": "2020-11-08 14:02:49.187098",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:48.868171",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844169.4084308-14414-221549690652659 `" && echo ansible-tmp-1604844169.4084308-14414-221549690652659="` echo /root/.ansible/tmp/ansible-tmp-1604844169.4084308-14414-221549690652659 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp2hctgig9 TO /root/.ansible/tmp/ansible-tmp-1604844169.4084308-14414-221549690652659/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844169.4084308-14414-221549690652659/ /root/.ansible/tmp/ansible-tmp-1604844169.4084308-14414-221549690652659/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844169.4084308-14414-221549690652659/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844169.4084308-14414-221549690652659/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
    "delta": "0:00:00.045431",
    "end": "2020-11-08 14:02:49.591755",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:02:49.546324",
    "stderr": "No policy named: vault-crypto-orderer-walmart-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-orderer-walmart-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917 `" && echo ansible-tmp-1604844169.6846747-14451-49980021200917="` echo /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp240ymjl1 TO /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/ /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp2stqtvco/orderer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/ /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp2j3x6j5v TO /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/ /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
    "dest": "./build/vault-crypto-walmart-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
            "content": null,
            "dest": "./build/vault-crypto-walmart-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8e853417c42460b613805d59c18a9b53",
    "mode": "0644",
    "owner": "root",
    "size": 297,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844169.6846747-14451-49980021200917/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844170.080428-14493-187047021265708 `" && echo ansible-tmp-1604844170.080428-14493-187047021265708="` echo /root/.ansible/tmp/ansible-tmp-1604844170.080428-14493-187047021265708 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3gac7r2q TO /root/.ansible/tmp/ansible-tmp-1604844170.080428-14493-187047021265708/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844170.080428-14493-187047021265708/ /root/.ansible/tmp/ansible-tmp-1604844170.080428-14493-187047021265708/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844170.080428-14493-187047021265708/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844170.080428-14493-187047021265708/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
    "delta": "0:00:00.044911",
    "end": "2020-11-08 14:02:50.258330",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:50.213419",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844170.3671117-14529-95008012341414 `" && echo ansible-tmp-1604844170.3671117-14529-95008012341414="` echo /root/.ansible/tmp/ansible-tmp-1604844170.3671117-14529-95008012341414 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp44t82r43 TO /root/.ansible/tmp/ansible-tmp-1604844170.3671117-14529-95008012341414/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844170.3671117-14529-95008012341414/ /root/.ansible/tmp/ansible-tmp-1604844170.3671117-14529-95008012341414/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844170.3671117-14529-95008012341414/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844170.3671117-14529-95008012341414/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.051750",
    "end": "2020-11-08 14:02:50.550313",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:50.498563",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844170.86529-14575-73542844041087 `" && echo ansible-tmp-1604844170.86529-14575-73542844041087="` echo /root/.ansible/tmp/ansible-tmp-1604844170.86529-14575-73542844041087 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpt87_vwgd TO /root/.ansible/tmp/ansible-tmp-1604844170.86529-14575-73542844041087/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844170.86529-14575-73542844041087/ /root/.ansible/tmp/ansible-tmp-1604844170.86529-14575-73542844041087/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844170.86529-14575-73542844041087/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844170.86529-14575-73542844041087/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844171.4945426-14603-112142430674349 `" && echo ansible-tmp-1604844171.4945426-14603-112142430674349="` echo /root/.ansible/tmp/ansible-tmp-1604844171.4945426-14603-112142430674349 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5kl5revq TO /root/.ansible/tmp/ansible-tmp-1604844171.4945426-14603-112142430674349/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844171.4945426-14603-112142430674349/ /root/.ansible/tmp/ansible-tmp-1604844171.4945426-14603-112142430674349/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844171.4945426-14603-112142430674349/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844171.4945426-14603-112142430674349/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.113417",
    "end": "2020-11-08 14:02:51.741687",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:51.628270",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844171.9068995-14639-77162951017998 `" && echo ansible-tmp-1604844171.9068995-14639-77162951017998="` echo /root/.ansible/tmp/ansible-tmp-1604844171.9068995-14639-77162951017998 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmptk0j356j TO /root/.ansible/tmp/ansible-tmp-1604844171.9068995-14639-77162951017998/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844171.9068995-14639-77162951017998/ /root/.ansible/tmp/ansible-tmp-1604844171.9068995-14639-77162951017998/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844171.9068995-14639-77162951017998/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844171.9068995-14639-77162951017998/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI\"},\"name\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T14:02:25Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI"
                },
                "name": "carrier-net",
                "resourceVersion": "2918163",
                "selfLink": "/api/v1/namespaces/carrier-net",
                "uid": "b71c676c-b091-4e5c-b866-af576f830636"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844172.657984-14673-272037799605287 `" && echo ansible-tmp-1604844172.657984-14673-272037799605287="` echo /root/.ansible/tmp/ansible-tmp-1604844172.657984-14673-272037799605287 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5tymg7yc TO /root/.ansible/tmp/ansible-tmp-1604844172.657984-14673-272037799605287/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844172.657984-14673-272037799605287/ /root/.ansible/tmp/ansible-tmp-1604844172.657984-14673-272037799605287/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844172.657984-14673-272037799605287/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844172.657984-14673-272037799605287/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "atime": 1604844167.3372772,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844169.969317,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3391,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844169.969317,
        "nlink": 2,
        "path": "./build",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "625831245",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844173.083155-14715-126717928874665 `" && echo ansible-tmp-1604844173.083155-14715-126717928874665="` echo /root/.ansible/tmp/ansible-tmp-1604844173.083155-14715-126717928874665 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp6rx4yynb TO /root/.ansible/tmp/ansible-tmp-1604844173.083155-14715-126717928874665/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844173.083155-14715-126717928874665/ /root/.ansible/tmp/ansible-tmp-1604844173.083155-14715-126717928874665/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844173.083155-14715-126717928874665/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844173.083155-14715-126717928874665/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.056192",
    "end": "2020-11-08 14:02:53.275496",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:53.219304",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"\n\"walmart-net-auth/\"",
    "stdout_lines": [
        "\"token/\"",
        "\"walmart-net-auth/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.056192",
            "end": "2020-11-08 14:02:53.275496",
            "failed": false,
            "rc": 0,
            "start": "2020-11-08 14:02:53.219304",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"\n\"walmart-net-auth/\"",
            "stdout_lines": [
                "\"token/\"",
                "\"walmart-net-auth/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"carrier-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item="walmart-net-auth/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"walmart-net-auth/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844173.5294454-14762-257322560652610 `" && echo ansible-tmp-1604844173.5294454-14762-257322560652610="` echo /root/.ansible/tmp/ansible-tmp-1604844173.5294454-14762-257322560652610 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpth5k_911 TO /root/.ansible/tmp/ansible-tmp-1604844173.5294454-14762-257322560652610/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844173.5294454-14762-257322560652610/ /root/.ansible/tmp/ansible-tmp-1604844173.5294454-14762-257322560652610/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844173.5294454-14762-257322560652610/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844173.5294454-14762-257322560652610/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
    "delta": "0:00:00.047163",
    "end": "2020-11-08 14:02:53.712504",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:53.665341",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: carrier-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: carrier-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844173.7787569-14797-100016905675047 `" && echo ansible-tmp-1604844173.7787569-14797-100016905675047="` echo /root/.ansible/tmp/ansible-tmp-1604844173.7787569-14797-100016905675047 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpggrumrvs TO /root/.ansible/tmp/ansible-tmp-1604844173.7787569-14797-100016905675047/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844173.7787569-14797-100016905675047/ /root/.ansible/tmp/ansible-tmp-1604844173.7787569-14797-100016905675047/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844173.7787569-14797-100016905675047/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844173.7787569-14797-100016905675047/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.218808",
    "end": "2020-11-08 14:02:54.131374",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:53.912566",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844174.2057264-14838-100877381214424 `" && echo ansible-tmp-1604844174.2057264-14838-100877381214424="` echo /root/.ansible/tmp/ansible-tmp-1604844174.2057264-14838-100877381214424 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpsbebs3t0 TO /root/.ansible/tmp/ansible-tmp-1604844174.2057264-14838-100877381214424/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844174.2057264-14838-100877381214424/ /root/.ansible/tmp/ansible-tmp-1604844174.2057264-14838-100877381214424/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844174.2057264-14838-100877381214424/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844174.2057264-14838-100877381214424/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.333638",
    "end": "2020-11-08 14:02:54.670327",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:54.336689",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844174.8874795-14900-74922001089912 `" && echo ansible-tmp-1604844174.8874795-14900-74922001089912="` echo /root/.ansible/tmp/ansible-tmp-1604844174.8874795-14900-74922001089912 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpvoesas2i TO /root/.ansible/tmp/ansible-tmp-1604844174.8874795-14900-74922001089912/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844174.8874795-14900-74922001089912/ /root/.ansible/tmp/ansible-tmp-1604844174.8874795-14900-74922001089912/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844174.8874795-14900-74922001089912/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844174.8874795-14900-74922001089912/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-peer-carrier-net-ro\n",
    "delta": "0:00:00.045332",
    "end": "2020-11-08 14:02:55.064782",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-peer-carrier-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:02:55.019450",
    "stderr": "No policy named: vault-crypto-peer-carrier-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-peer-carrier-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201 `" && echo ansible-tmp-1604844175.191911-14939-269329774227201="` echo /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp1zqau1y2 TO /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/ /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0dttio0p/peer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/ /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpu036o5h3 TO /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/ /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
    "dest": "./build/vault-crypto-carrier-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "peer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
            "content": null,
            "dest": "./build/vault-crypto-carrier-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a9752761bec6323a75d51e7a8cef75ea",
    "mode": "0644",
    "owner": "root",
    "size": 433,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844175.191911-14939-269329774227201/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844175.5843952-14979-267852483975561 `" && echo ansible-tmp-1604844175.5843952-14979-267852483975561="` echo /root/.ansible/tmp/ansible-tmp-1604844175.5843952-14979-267852483975561 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpf1zoqp87 TO /root/.ansible/tmp/ansible-tmp-1604844175.5843952-14979-267852483975561/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844175.5843952-14979-267852483975561/ /root/.ansible/tmp/ansible-tmp-1604844175.5843952-14979-267852483975561/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844175.5843952-14979-267852483975561/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844175.5843952-14979-267852483975561/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
    "delta": "0:00:00.047496",
    "end": "2020-11-08 14:02:55.763633",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:55.716137",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844175.833301-15015-200715672969407 `" && echo ansible-tmp-1604844175.833301-15015-200715672969407="` echo /root/.ansible/tmp/ansible-tmp-1604844175.833301-15015-200715672969407 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpild05yd3 TO /root/.ansible/tmp/ansible-tmp-1604844175.833301-15015-200715672969407/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844175.833301-15015-200715672969407/ /root/.ansible/tmp/ansible-tmp-1604844175.833301-15015-200715672969407/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844175.833301-15015-200715672969407/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844175.833301-15015-200715672969407/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.045489",
    "end": "2020-11-08 14:02:56.010104",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:55.964615",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844176.2999613-15061-98228884359119 `" && echo ansible-tmp-1604844176.2999613-15061-98228884359119="` echo /root/.ansible/tmp/ansible-tmp-1604844176.2999613-15061-98228884359119 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpuovrs9jb TO /root/.ansible/tmp/ansible-tmp-1604844176.2999613-15061-98228884359119/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844176.2999613-15061-98228884359119/ /root/.ansible/tmp/ansible-tmp-1604844176.2999613-15061-98228884359119/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844176.2999613-15061-98228884359119/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844176.2999613-15061-98228884359119/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844176.9524288-15089-97367522288351 `" && echo ansible-tmp-1604844176.9524288-15089-97367522288351="` echo /root/.ansible/tmp/ansible-tmp-1604844176.9524288-15089-97367522288351 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3g2ec95w TO /root/.ansible/tmp/ansible-tmp-1604844176.9524288-15089-97367522288351/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844176.9524288-15089-97367522288351/ /root/.ansible/tmp/ansible-tmp-1604844176.9524288-15089-97367522288351/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844176.9524288-15089-97367522288351/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844176.9524288-15089-97367522288351/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.107519",
    "end": "2020-11-08 14:02:57.191304",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:02:57.083785",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [include_role : create/storageclass] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:43

TASK [Checking if the storage class walmartsc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass walmartsc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844177.487568-15126-31133192188465 `" && echo ansible-tmp-1604844177.487568-15126-31133192188465="` echo /root/.ansible/tmp/ansible-tmp-1604844177.487568-15126-31133192188465 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp078zz1vi TO /root/.ansible/tmp/ansible-tmp-1604844177.487568-15126-31133192188465/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844177.487568-15126-31133192188465/ /root/.ansible/tmp/ansible-tmp-1604844177.487568-15126-31133192188465/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844177.487568-15126-31133192188465/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844177.487568-15126-31133192188465/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmartsc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-11-06T08:18:49Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                },
                "name": "walmartsc",
                "resourceVersion": "2406961",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-11-06T08:18:49Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                        },
                        "name": "walmartsc",
                        "resourceVersion": "2406961",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                        "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of walmartsc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the storage class carriersc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844178.469237-15174-63280464755098 `" && echo ansible-tmp-1604844178.469237-15174-63280464755098="` echo /root/.ansible/tmp/ansible-tmp-1604844178.469237-15174-63280464755098 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc2gw51q2 TO /root/.ansible/tmp/ansible-tmp-1604844178.469237-15174-63280464755098/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844178.469237-15174-63280464755098/ /root/.ansible/tmp/ansible-tmp-1604844178.469237-15174-63280464755098/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844178.469237-15174-63280464755098/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844178.469237-15174-63280464755098/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carriersc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:44:35Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                },
                "name": "carriersc",
                "resourceVersion": "378759",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:44:35Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                        },
                        "name": "carriersc",
                        "resourceVersion": "378759",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                        "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/ca-server] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844179.969121-15222-231016290535220 `" && echo ansible-tmp-1604844179.969121-15222-231016290535220="` echo /root/.ansible/tmp/ansible-tmp-1604844179.969121-15222-231016290535220 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbajw82cb TO /root/.ansible/tmp/ansible-tmp-1604844179.969121-15222-231016290535220/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844179.969121-15222-231016290535220/ /root/.ansible/tmp/ansible-tmp-1604844179.969121-15222-231016290535220/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844179.969121-15222-231016290535220/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844179.969121-15222-231016290535220/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
    "delta": "0:00:00.121526",
    "end": "2020-11-08 14:03:00.223354",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:03:00.101828",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/ordererOrganizations/walmart-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844180.342513-15259-159690683774166 `" && echo ansible-tmp-1604844180.342513-15259-159690683774166="` echo /root/.ansible/tmp/ansible-tmp-1604844180.342513-15259-159690683774166 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5w4buzw0 TO /root/.ansible/tmp/ansible-tmp-1604844180.342513-15259-159690683774166/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844180.342513-15259-159690683774166/ /root/.ansible/tmp/ansible-tmp-1604844180.342513-15259-159690683774166/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844180.342513-15259-159690683774166/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844180.342513-15259-159690683774166/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844180.5372076-15285-50241178009623 `" && echo ansible-tmp-1604844180.5372076-15285-50241178009623="` echo /root/.ansible/tmp/ansible-tmp-1604844180.5372076-15285-50241178009623 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_2kbth4a TO /root/.ansible/tmp/ansible-tmp-1604844180.5372076-15285-50241178009623/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844180.5372076-15285-50241178009623/ /root/.ansible/tmp/ansible-tmp-1604844180.5372076-15285-50241178009623/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844180.5372076-15285-50241178009623/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844180.5372076-15285-50241178009623/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844180.8498306-15319-162013980784634 `" && echo ansible-tmp-1604844180.8498306-15319-162013980784634="` echo /root/.ansible/tmp/ansible-tmp-1604844180.8498306-15319-162013980784634 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppna0v525 TO /root/.ansible/tmp/ansible-tmp-1604844180.8498306-15319-162013980784634/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844180.8498306-15319-162013980784634/ /root/.ansible/tmp/ansible-tmp-1604844180.8498306-15319-162013980784634/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844180.8498306-15319-162013980784634/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844180.8498306-15319-162013980784634/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844181.0416865-15345-193102315494108 `" && echo ansible-tmp-1604844181.0416865-15345-193102315494108="` echo /root/.ansible/tmp/ansible-tmp-1604844181.0416865-15345-193102315494108 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8no8s3a1 TO /root/.ansible/tmp/ansible-tmp-1604844181.0416865-15345-193102315494108/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844181.0416865-15345-193102315494108/ /root/.ansible/tmp/ansible-tmp-1604844181.0416865-15345-193102315494108/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844181.0416865-15345-193102315494108/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844181.0416865-15345-193102315494108/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net\"\n",
    "delta": "0:00:00.008675",
    "end": "2020-11-08 14:03:01.183642",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:01.174967",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844181.2543635-15374-238192435735160 `" && echo ansible-tmp-1604844181.2543635-15374-238192435735160="` echo /root/.ansible/tmp/ansible-tmp-1604844181.2543635-15374-238192435735160 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpi42o97_c TO /root/.ansible/tmp/ansible-tmp-1604844181.2543635-15374-238192435735160/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844181.2543635-15374-238192435735160/ /root/.ansible/tmp/ansible-tmp-1604844181.2543635-15374-238192435735160/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844181.2543635-15374-238192435735160/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844181.2543635-15374-238192435735160/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
    "delta": "0:00:00.049698",
    "end": "2020-11-08 14:03:01.449869",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:01.400171",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844181.560058-15411-257947773918396 `" && echo ansible-tmp-1604844181.560058-15411-257947773918396="` echo /root/.ansible/tmp/ansible-tmp-1604844181.560058-15411-257947773918396 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7hgjtlbm TO /root/.ansible/tmp/ansible-tmp-1604844181.560058-15411-257947773918396/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844181.560058-15411-257947773918396/ /root/.ansible/tmp/ansible-tmp-1604844181.560058-15411-257947773918396/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844181.560058-15411-257947773918396/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844181.560058-15411-257947773918396/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
    "delta": "0:00:00.049489",
    "end": "2020-11-08 14:03:01.743164",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:03:01.693675",
    "stderr": "No value found at secret/credentials/walmart-net/ca/walmart",
    "stderr_lines": [
        "No value found at secret/credentials/walmart-net/ca/walmart"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844181.8221755-15445-274646160231426 `" && echo ansible-tmp-1604844181.8221755-15445-274646160231426="` echo /root/.ansible/tmp/ansible-tmp-1604844181.8221755-15445-274646160231426 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjdbn0rw8 TO /root/.ansible/tmp/ansible-tmp-1604844181.8221755-15445-274646160231426/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844181.8221755-15445-274646160231426/ /root/.ansible/tmp/ansible-tmp-1604844181.8221755-15445-274646160231426/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844181.8221755-15445-274646160231426/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844181.8221755-15445-274646160231426/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
    "delta": "0:00:00.045200",
    "end": "2020-11-08 14:03:02.012740",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:01.967540",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/walmart-net/ca/walmart",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/walmart-net/ca/walmart"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844182.0801542-15480-26620480753388 `" && echo ansible-tmp-1604844182.0801542-15480-26620480753388="` echo /root/.ansible/tmp/ansible-tmp-1604844182.0801542-15480-26620480753388 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp06xleyne TO /root/.ansible/tmp/ansible-tmp-1604844182.0801542-15480-26620480753388/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844182.0801542-15480-26620480753388/ /root/.ansible/tmp/ansible-tmp-1604844182.0801542-15480-26620480753388/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844182.0801542-15480-26620480753388/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844182.0801542-15480-26620480753388/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844182.7086444-15508-122799336924497 `" && echo ansible-tmp-1604844182.7086444-15508-122799336924497="` echo /root/.ansible/tmp/ansible-tmp-1604844182.7086444-15508-122799336924497 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpmsg52cdl TO /root/.ansible/tmp/ansible-tmp-1604844182.7086444-15508-122799336924497/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844182.7086444-15508-122799336924497/ /root/.ansible/tmp/ansible-tmp-1604844182.7086444-15508-122799336924497/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844182.7086444-15508-122799336924497/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844182.7086444-15508-122799336924497/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
    "delta": "0:00:00.153704",
    "end": "2020-11-08 14:03:02.994338",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:02.840634",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-walmart-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-walmart-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844183.1449006-15544-260117459139379 `" && echo ansible-tmp-1604844183.1449006-15544-260117459139379="` echo /root/.ansible/tmp/ansible-tmp-1604844183.1449006-15544-260117459139379 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzg0nc02_ TO /root/.ansible/tmp/ansible-tmp-1604844183.1449006-15544-260117459139379/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844183.1449006-15544-260117459139379/ /root/.ansible/tmp/ansible-tmp-1604844183.1449006-15544-260117459139379/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844183.1449006-15544-260117459139379/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844183.1449006-15544-260117459139379/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844183.3535018-15570-116529807574831 `" && echo ansible-tmp-1604844183.3535018-15570-116529807574831="` echo /root/.ansible/tmp/ansible-tmp-1604844183.3535018-15570-116529807574831 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjgt58gpy TO /root/.ansible/tmp/ansible-tmp-1604844183.3535018-15570-116529807574831/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844183.3535018-15570-116529807574831/ /root/.ansible/tmp/ansible-tmp-1604844183.3535018-15570-116529807574831/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844183.3535018-15570-116529807574831/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844183.3535018-15570-116529807574831/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491 `" && echo ansible-tmp-1604844183.5640285-15597-9867733992491="` echo /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnfpaxtqf TO /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/ /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmptjkyder2/ca-orderer.tpl TO /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/ /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7gze_xet TO /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/ /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-orderer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "98a580d5a06a395442faeb695bf50cc0",
    "mode": "0644",
    "owner": "root",
    "size": 1272,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844183.5640285-15597-9867733992491/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844184.0091755-15639-172253568025496 `" && echo ansible-tmp-1604844184.0091755-15639-172253568025496="` echo /root/.ansible/tmp/ansible-tmp-1604844184.0091755-15639-172253568025496 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdha3x2ut TO /root/.ansible/tmp/ansible-tmp-1604844184.0091755-15639-172253568025496/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844184.0091755-15639-172253568025496/ /root/.ansible/tmp/ansible-tmp-1604844184.0091755-15639-172253568025496/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844184.0091755-15639-172253568025496/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844184.0091755-15639-172253568025496/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604844183.8695276,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
        "ctime": 1604844183.8695276,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3482,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844183.7335255,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1272,
        "uid": 0,
        "version": "2150104109",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844184.276766-15669-155360736970589 `" && echo ansible-tmp-1604844184.276766-15669-155360736970589="` echo /root/.ansible/tmp/ansible-tmp-1604844184.276766-15669-155360736970589 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwbvfc3bj TO /root/.ansible/tmp/ansible-tmp-1604844184.276766-15669-155360736970589/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844184.276766-15669-155360736970589/ /root/.ansible/tmp/ansible-tmp-1604844184.276766-15669-155360736970589/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844184.276766-15669-155360736970589/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844184.276766-15669-155360736970589/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844184.4688714-15695-92267807295872 `" && echo ansible-tmp-1604844184.4688714-15695-92267807295872="` echo /root/.ansible/tmp/ansible-tmp-1604844184.4688714-15695-92267807295872 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpm7vpjw5c TO /root/.ansible/tmp/ansible-tmp-1604844184.4688714-15695-92267807295872/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844184.4688714-15695-92267807295872/ /root/.ansible/tmp/ansible-tmp-1604844184.4688714-15695-92267807295872/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844184.4688714-15695-92267807295872/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844184.4688714-15695-92267807295872/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/test",
            "state": "directory"
        },
        "before": {
            "path": "./build/test",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/test",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/test",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "walmart-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "orderer"
                },
                "server": {
                    "admin": "walmart-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/walmart-net/ca/walmart?user",
                    "secretcert": "secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem",
                    "secretkey": "secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026 `" && echo ansible-tmp-1604844184.845375-15729-51844536357026="` echo /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpesymeo7c TO /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/ /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpokaixx14 TO /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/ /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppxj8ax5j TO /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/ /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
    "dest": "./build/test/walmart-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpokaixx14",
            "attributes": null,
            "backup": false,
            "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
            "content": null,
            "dest": "./build/test/walmart-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d6c44224a3b7e1ecf5d32e6ff6e2bb00",
    "mode": "0644",
    "owner": "root",
    "size": 843,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844184.845375-15729-51844536357026/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844185.2015965-15769-10232719489668 `" && echo ansible-tmp-1604844185.2015965-15769-10232719489668="` echo /root/.ansible/tmp/ansible-tmp-1604844185.2015965-15769-10232719489668 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp043wqu73 TO /root/.ansible/tmp/ansible-tmp-1604844185.2015965-15769-10232719489668/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844185.2015965-15769-10232719489668/ /root/.ansible/tmp/ansible-tmp-1604844185.2015965-15769-10232719489668/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844185.2015965-15769-10232719489668/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844185.2015965-15769-10232719489668/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.061951",
    "end": "2020-11-08 14:03:05.401214",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:05.339263",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844185.5612817-15805-176580511511484 `" && echo ansible-tmp-1604844185.5612817-15805-176580511511484="` echo /root/.ansible/tmp/ansible-tmp-1604844185.5612817-15805-176580511511484 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpm_purjd1 TO /root/.ansible/tmp/ansible-tmp-1604844185.5612817-15805-176580511511484/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844185.5612817-15805-176580511511484/ /root/.ansible/tmp/ansible-tmp-1604844185.5612817-15805-176580511511484/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844185.5612817-15805-176580511511484/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844185.5612817-15805-176580511511484/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844185.7884626-15831-192978705621092 `" && echo ansible-tmp-1604844185.7884626-15831-192978705621092="` echo /root/.ansible/tmp/ansible-tmp-1604844185.7884626-15831-192978705621092 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp66tx0_2l TO /root/.ansible/tmp/ansible-tmp-1604844185.7884626-15831-192978705621092/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844185.7884626-15831-192978705621092/ /root/.ansible/tmp/ansible-tmp-1604844185.7884626-15831-192978705621092/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844185.7884626-15831-192978705621092/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844185.7884626-15831-192978705621092/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.120659",
    "end": "2020-11-08 14:03:09.060679",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:05.940020",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   177bd0a6..b245fb6b  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   177bd0a6..b245fb6b  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla b245fb6b] [ci skip] Pushing CA server files\n 2 files changed, 3447 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla b245fb6b] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla b245fb6b] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   177bd0a6..b245fb6b  HEAD -> gorilla"
    ]
}

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844189.2029445-15879-195584102440394 `" && echo ansible-tmp-1604844189.2029445-15879-195584102440394="` echo /root/.ansible/tmp/ansible-tmp-1604844189.2029445-15879-195584102440394 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphubgvfel TO /root/.ansible/tmp/ansible-tmp-1604844189.2029445-15879-195584102440394/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844189.2029445-15879-195584102440394/ /root/.ansible/tmp/ansible-tmp-1604844189.2029445-15879-195584102440394/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844189.2029445-15879-195584102440394/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844189.2029445-15879-195584102440394/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
    "delta": "0:00:00.055084",
    "end": "2020-11-08 14:03:09.390648",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:03:09.335564",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/peerOrganizations/carrier-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844189.5101068-15915-252547478839753 `" && echo ansible-tmp-1604844189.5101068-15915-252547478839753="` echo /root/.ansible/tmp/ansible-tmp-1604844189.5101068-15915-252547478839753 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwsvuiyyv TO /root/.ansible/tmp/ansible-tmp-1604844189.5101068-15915-252547478839753/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844189.5101068-15915-252547478839753/ /root/.ansible/tmp/ansible-tmp-1604844189.5101068-15915-252547478839753/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844189.5101068-15915-252547478839753/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844189.5101068-15915-252547478839753/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844189.7040675-15941-37131966845671 `" && echo ansible-tmp-1604844189.7040675-15941-37131966845671="` echo /root/.ansible/tmp/ansible-tmp-1604844189.7040675-15941-37131966845671 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcb878233 TO /root/.ansible/tmp/ansible-tmp-1604844189.7040675-15941-37131966845671/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844189.7040675-15941-37131966845671/ /root/.ansible/tmp/ansible-tmp-1604844189.7040675-15941-37131966845671/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844189.7040675-15941-37131966845671/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844189.7040675-15941-37131966845671/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844190.0209181-15975-103367969897503 `" && echo ansible-tmp-1604844190.0209181-15975-103367969897503="` echo /root/.ansible/tmp/ansible-tmp-1604844190.0209181-15975-103367969897503 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmptxa1xwh5 TO /root/.ansible/tmp/ansible-tmp-1604844190.0209181-15975-103367969897503/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844190.0209181-15975-103367969897503/ /root/.ansible/tmp/ansible-tmp-1604844190.0209181-15975-103367969897503/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844190.0209181-15975-103367969897503/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844190.0209181-15975-103367969897503/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844190.2138302-16001-56806742018707 `" && echo ansible-tmp-1604844190.2138302-16001-56806742018707="` echo /root/.ansible/tmp/ansible-tmp-1604844190.2138302-16001-56806742018707 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp21aa4cn0 TO /root/.ansible/tmp/ansible-tmp-1604844190.2138302-16001-56806742018707/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844190.2138302-16001-56806742018707/ /root/.ansible/tmp/ansible-tmp-1604844190.2138302-16001-56806742018707/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844190.2138302-16001-56806742018707/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844190.2138302-16001-56806742018707/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net\"\n",
    "delta": "0:00:00.008678",
    "end": "2020-11-08 14:03:10.353092",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:10.344414",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844190.422294-16030-9998269988964 `" && echo ansible-tmp-1604844190.422294-16030-9998269988964="` echo /root/.ansible/tmp/ansible-tmp-1604844190.422294-16030-9998269988964 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpak7zwg93 TO /root/.ansible/tmp/ansible-tmp-1604844190.422294-16030-9998269988964/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844190.422294-16030-9998269988964/ /root/.ansible/tmp/ansible-tmp-1604844190.422294-16030-9998269988964/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844190.422294-16030-9998269988964/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844190.422294-16030-9998269988964/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
    "delta": "0:00:00.084574",
    "end": "2020-11-08 14:03:10.637792",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:10.553218",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844190.7073781-16068-162348789287542 `" && echo ansible-tmp-1604844190.7073781-16068-162348789287542="` echo /root/.ansible/tmp/ansible-tmp-1604844190.7073781-16068-162348789287542 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpgkhmkcr9 TO /root/.ansible/tmp/ansible-tmp-1604844190.7073781-16068-162348789287542/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844190.7073781-16068-162348789287542/ /root/.ansible/tmp/ansible-tmp-1604844190.7073781-16068-162348789287542/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844190.7073781-16068-162348789287542/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844190.7073781-16068-162348789287542/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
    "delta": "0:00:00.053664",
    "end": "2020-11-08 14:03:10.891944",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:03:10.838280",
    "stderr": "No value found at secret/credentials/carrier-net/ca/carrier",
    "stderr_lines": [
        "No value found at secret/credentials/carrier-net/ca/carrier"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844190.95976-16103-153689890142987 `" && echo ansible-tmp-1604844190.95976-16103-153689890142987="` echo /root/.ansible/tmp/ansible-tmp-1604844190.95976-16103-153689890142987 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzz4x067j TO /root/.ansible/tmp/ansible-tmp-1604844190.95976-16103-153689890142987/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844190.95976-16103-153689890142987/ /root/.ansible/tmp/ansible-tmp-1604844190.95976-16103-153689890142987/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844190.95976-16103-153689890142987/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844190.95976-16103-153689890142987/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
    "delta": "0:00:00.053024",
    "end": "2020-11-08 14:03:11.143583",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:11.090559",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/ca/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/ca/carrier"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844191.2168329-16140-100426554782053 `" && echo ansible-tmp-1604844191.2168329-16140-100426554782053="` echo /root/.ansible/tmp/ansible-tmp-1604844191.2168329-16140-100426554782053 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpor1vkyci TO /root/.ansible/tmp/ansible-tmp-1604844191.2168329-16140-100426554782053/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844191.2168329-16140-100426554782053/ /root/.ansible/tmp/ansible-tmp-1604844191.2168329-16140-100426554782053/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844191.2168329-16140-100426554782053/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844191.2168329-16140-100426554782053/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844191.8430703-16169-56918096461287 `" && echo ansible-tmp-1604844191.8430703-16169-56918096461287="` echo /root/.ansible/tmp/ansible-tmp-1604844191.8430703-16169-56918096461287 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpvsjrkry8 TO /root/.ansible/tmp/ansible-tmp-1604844191.8430703-16169-56918096461287/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844191.8430703-16169-56918096461287/ /root/.ansible/tmp/ansible-tmp-1604844191.8430703-16169-56918096461287/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844191.8430703-16169-56918096461287/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844191.8430703-16169-56918096461287/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
    "delta": "0:00:00.150161",
    "end": "2020-11-08 14:03:12.125367",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:11.975206",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-carrier-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844192.2892125-16206-206440846670364 `" && echo ansible-tmp-1604844192.2892125-16206-206440846670364="` echo /root/.ansible/tmp/ansible-tmp-1604844192.2892125-16206-206440846670364 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdynk7303 TO /root/.ansible/tmp/ansible-tmp-1604844192.2892125-16206-206440846670364/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844192.2892125-16206-206440846670364/ /root/.ansible/tmp/ansible-tmp-1604844192.2892125-16206-206440846670364/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844192.2892125-16206-206440846670364/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844192.2892125-16206-206440846670364/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844192.5451417-16232-167932877748243 `" && echo ansible-tmp-1604844192.5451417-16232-167932877748243="` echo /root/.ansible/tmp/ansible-tmp-1604844192.5451417-16232-167932877748243 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8000mpwk TO /root/.ansible/tmp/ansible-tmp-1604844192.5451417-16232-167932877748243/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844192.5451417-16232-167932877748243/ /root/.ansible/tmp/ansible-tmp-1604844192.5451417-16232-167932877748243/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844192.5451417-16232-167932877748243/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844192.5451417-16232-167932877748243/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841 `" && echo ansible-tmp-1604844192.7544498-16258-244649701713841="` echo /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3x74i8p1 TO /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/ /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphqhfi1gc/ca-peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/ /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzu4slwsj TO /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/ /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "7d8e039d61ac8a6ff961573116ce20ca",
    "mode": "0644",
    "owner": "root",
    "size": 1262,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844192.7544498-16258-244649701713841/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844193.1765704-16300-66790179990745 `" && echo ansible-tmp-1604844193.1765704-16300-66790179990745="` echo /root/.ansible/tmp/ansible-tmp-1604844193.1765704-16300-66790179990745 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmplqr2ca0r TO /root/.ansible/tmp/ansible-tmp-1604844193.1765704-16300-66790179990745/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844193.1765704-16300-66790179990745/ /root/.ansible/tmp/ansible-tmp-1604844193.1765704-16300-66790179990745/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844193.1765704-16300-66790179990745/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844193.1765704-16300-66790179990745/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604844193.0616667,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
        "ctime": 1604844193.0616667,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3497,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844192.9256647,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1262,
        "uid": 0,
        "version": "3804379542",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844193.4293923-16330-15717536541188 `" && echo ansible-tmp-1604844193.4293923-16330-15717536541188="` echo /root/.ansible/tmp/ansible-tmp-1604844193.4293923-16330-15717536541188 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpac8dmx5q TO /root/.ansible/tmp/ansible-tmp-1604844193.4293923-16330-15717536541188/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844193.4293923-16330-15717536541188/ /root/.ansible/tmp/ansible-tmp-1604844193.4293923-16330-15717536541188/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844193.4293923-16330-15717536541188/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844193.4293923-16330-15717536541188/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844185.1255465,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844185.1255465,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "carrier-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "peer"
                },
                "server": {
                    "admin": "carrier-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/carrier-net/ca/carrier?user",
                    "secretcert": "secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem",
                    "secretkey": "secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792 `" && echo ansible-tmp-1604844193.807981-16368-198199324769792="` echo /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc65rmd91 TO /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/ /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5wj6g8pc TO /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/ /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpe1ls4jsa TO /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/ /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
    "dest": "./build/test/carrier-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp5wj6g8pc",
            "attributes": null,
            "backup": false,
            "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
            "content": null,
            "dest": "./build/test/carrier-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea14e4e12c26cbb2cb9ee3a173335ca1",
    "mode": "0644",
    "owner": "root",
    "size": 834,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844193.807981-16368-198199324769792/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844194.1541317-16408-24110041717411 `" && echo ansible-tmp-1604844194.1541317-16408-24110041717411="` echo /root/.ansible/tmp/ansible-tmp-1604844194.1541317-16408-24110041717411 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpi6h3nu43 TO /root/.ansible/tmp/ansible-tmp-1604844194.1541317-16408-24110041717411/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844194.1541317-16408-24110041717411/ /root/.ansible/tmp/ansible-tmp-1604844194.1541317-16408-24110041717411/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844194.1541317-16408-24110041717411/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844194.1541317-16408-24110041717411/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.058597",
    "end": "2020-11-08 14:03:14.344157",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:14.285560",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844194.4611256-16442-80849752111017 `" && echo ansible-tmp-1604844194.4611256-16442-80849752111017="` echo /root/.ansible/tmp/ansible-tmp-1604844194.4611256-16442-80849752111017 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpxoy6hbbg TO /root/.ansible/tmp/ansible-tmp-1604844194.4611256-16442-80849752111017/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844194.4611256-16442-80849752111017/ /root/.ansible/tmp/ansible-tmp-1604844194.4611256-16442-80849752111017/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844194.4611256-16442-80849752111017/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844194.4611256-16442-80849752111017/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844194.669317-16468-123798378126320 `" && echo ansible-tmp-1604844194.669317-16468-123798378126320="` echo /root/.ansible/tmp/ansible-tmp-1604844194.669317-16468-123798378126320 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp9evt1afa TO /root/.ansible/tmp/ansible-tmp-1604844194.669317-16468-123798378126320/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844194.669317-16468-123798378126320/ /root/.ansible/tmp/ansible-tmp-1604844194.669317-16468-123798378126320/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844194.669317-16468-123798378126320/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844194.669317-16468-123798378126320/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.099972",
    "end": "2020-11-08 14:03:17.905529",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:03:14.805557",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   b245fb6b..118636a2  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   b245fb6b..118636a2  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 118636a2] [ci skip] Pushing CA server files\n 2 files changed, 1142 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 118636a2] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 118636a2] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   b245fb6b..118636a2  HEAD -> gorilla"
    ]
}

TASK [include_role : create/ca-tools] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:70

TASK [waiting for the CA server to be created in walmart-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844198.3682513-16524-213567550743606 `" && echo ansible-tmp-1604844198.3682513-16524-213567550743606="` echo /root/.ansible/tmp/ansible-tmp-1604844198.3682513-16524-213567550743606 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp88d4_lhs TO /root/.ansible/tmp/ansible-tmp-1604844198.3682513-16524-213567550743606/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844198.3682513-16524-213567550743606/ /root/.ansible/tmp/ansible-tmp-1604844198.3682513-16524-213567550743606/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844198.3682513-16524-213567550743606/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844198.3682513-16524-213567550743606/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844228.9859104-16524-167134277249330 `" && echo ansible-tmp-1604844228.9859104-16524-167134277249330="` echo /root/.ansible/tmp/ansible-tmp-1604844228.9859104-16524-167134277249330 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp9afb4ldd TO /root/.ansible/tmp/ansible-tmp-1604844228.9859104-16524-167134277249330/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844228.9859104-16524-167134277249330/ /root/.ansible/tmp/ansible-tmp-1604844228.9859104-16524-167134277249330/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844228.9859104-16524-167134277249330/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844228.9859104-16524-167134277249330/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844259.70529-16524-181261379709446 `" && echo ansible-tmp-1604844259.70529-16524-181261379709446="` echo /root/.ansible/tmp/ansible-tmp-1604844259.70529-16524-181261379709446 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpeniv3dl3 TO /root/.ansible/tmp/ansible-tmp-1604844259.70529-16524-181261379709446/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844259.70529-16524-181261379709446/ /root/.ansible/tmp/ansible-tmp-1604844259.70529-16524-181261379709446/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844259.70529-16524-181261379709446/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844259.70529-16524-181261379709446/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844290.356285-16524-84702372595341 `" && echo ansible-tmp-1604844290.356285-16524-84702372595341="` echo /root/.ansible/tmp/ansible-tmp-1604844290.356285-16524-84702372595341 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjjnrxbw5 TO /root/.ansible/tmp/ansible-tmp-1604844290.356285-16524-84702372595341/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844290.356285-16524-84702372595341/ /root/.ansible/tmp/ansible-tmp-1604844290.356285-16524-84702372595341/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844290.356285-16524-84702372595341/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844290.356285-16524-84702372595341/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (17 retries left).Result was: {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844320.9743323-16524-201295300666509 `" && echo ansible-tmp-1604844320.9743323-16524-201295300666509="` echo /root/.ansible/tmp/ansible-tmp-1604844320.9743323-16524-201295300666509 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpagk9mi1t TO /root/.ansible/tmp/ansible-tmp-1604844320.9743323-16524-201295300666509/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844320.9743323-16524-201295300666509/ /root/.ansible/tmp/ansible-tmp-1604844320.9743323-16524-201295300666509/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844320.9743323-16524-201295300666509/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844320.9743323-16524-201295300666509/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 5,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T14:04:33Z",
                "generateName": "ca-876984656-",
                "labels": {
                    "app.kubernetes.io/instance": "walmart-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "876984656"
                },
                "name": "ca-876984656-dmgtz",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-876984656",
                        "uid": "00408844-3acd-47d9-8869-bda999d013d3"
                    }
                ],
                "resourceVersion": "2918723",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-876984656-dmgtz",
                "uid": "07c0db5b-f00a-4f3b-a358-b1f5fe82c096"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b walmart-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.walmart-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/walmart-net/ca/walmart?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-njscr",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-njscr"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:05:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:05:16Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:05:16Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:04:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c4c29ee5f0cf7a536eaa2adb9f385e18c8cfcbd344d916e92c7720a238a40f8c",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:05:15Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://a626d60ff8aeda31fbea479360976c0cf1ca868262cb2dcef0b9b92569f16059",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://a626d60ff8aeda31fbea479360976c0cf1ca868262cb2dcef0b9b92569f16059",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:05:14Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:05:11Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.13",
                "podIPs": [
                    {
                        "ip": "10.1.0.13"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:04:48Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844321.6810625-16658-253757778778637 `" && echo ansible-tmp-1604844321.6810625-16658-253757778778637="` echo /root/.ansible/tmp/ansible-tmp-1604844321.6810625-16658-253757778778637 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcdravu86 TO /root/.ansible/tmp/ansible-tmp-1604844321.6810625-16658-253757778778637/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844321.6810625-16658-253757778778637/ /root/.ansible/tmp/ansible-tmp-1604844321.6810625-16658-253757778778637/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844321.6810625-16658-253757778778637/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844321.6810625-16658-253757778778637/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844321.8849008-16684-123297633088761 `" && echo ansible-tmp-1604844321.8849008-16684-123297633088761="` echo /root/.ansible/tmp/ansible-tmp-1604844321.8849008-16684-123297633088761 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp09tgao3x TO /root/.ansible/tmp/ansible-tmp-1604844321.8849008-16684-123297633088761/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844321.8849008-16684-123297633088761/ /root/.ansible/tmp/ansible-tmp-1604844321.8849008-16684-123297633088761/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844321.8849008-16684-123297633088761/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844321.8849008-16684-123297633088761/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293 `" && echo ansible-tmp-1604844322.092561-16710-1376341565293="` echo /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_olc9vtj TO /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/ /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcz4j0t4u/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/ /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3hqzi6ac TO /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/ /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "22eb57fc62c4c46e12211ccc6f0ae59e",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844322.092561-16710-1376341565293/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844322.5038762-16752-54489258722261 `" && echo ansible-tmp-1604844322.5038762-16752-54489258722261="` echo /root/.ansible/tmp/ansible-tmp-1604844322.5038762-16752-54489258722261 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzow6q5ph TO /root/.ansible/tmp/ansible-tmp-1604844322.5038762-16752-54489258722261/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844322.5038762-16752-54489258722261/ /root/.ansible/tmp/ansible-tmp-1604844322.5038762-16752-54489258722261/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844322.5038762-16752-54489258722261/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844322.5038762-16752-54489258722261/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604844322.3836262,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
        "ctime": 1604844322.3836262,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844322.251624,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "3069025580",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844322.7535503-16782-41222254014219 `" && echo ansible-tmp-1604844322.7535503-16782-41222254014219="` echo /root/.ansible/tmp/ansible-tmp-1604844322.7535503-16782-41222254014219 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0aybnvqu TO /root/.ansible/tmp/ansible-tmp-1604844322.7535503-16782-41222254014219/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844322.7535503-16782-41222254014219/ /root/.ansible/tmp/ansible-tmp-1604844322.7535503-16782-41222254014219/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844322.7535503-16782-41222254014219/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844322.7535503-16782-41222254014219/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844194.0816822,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844194.0816822,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca-tools",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "walmart-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418 `" && echo ansible-tmp-1604844323.1790817-16820-280625749871418="` echo /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwcy3adpw TO /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/ /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpz3hy0xcm TO /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/ /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp6er5gjkc TO /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/ /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
    "dest": "./build/test/walmart-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpz3hy0xcm",
            "attributes": null,
            "backup": false,
            "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
            "content": null,
            "dest": "./build/test/walmart-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "590790aef7bb9a4128b32a0352fb27f4",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844323.1790817-16820-280625749871418/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844323.5701475-16860-178752787670043 `" && echo ansible-tmp-1604844323.5701475-16860-178752787670043="` echo /root/.ansible/tmp/ansible-tmp-1604844323.5701475-16860-178752787670043 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8w46hjai TO /root/.ansible/tmp/ansible-tmp-1604844323.5701475-16860-178752787670043/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844323.5701475-16860-178752787670043/ /root/.ansible/tmp/ansible-tmp-1604844323.5701475-16860-178752787670043/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844323.5701475-16860-178752787670043/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844323.5701475-16860-178752787670043/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.065298",
    "end": "2020-11-08 14:05:23.766909",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:05:23.701611",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844323.9461305-16895-262576106542785 `" && echo ansible-tmp-1604844323.9461305-16895-262576106542785="` echo /root/.ansible/tmp/ansible-tmp-1604844323.9461305-16895-262576106542785 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbfy8ut00 TO /root/.ansible/tmp/ansible-tmp-1604844323.9461305-16895-262576106542785/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844323.9461305-16895-262576106542785/ /root/.ansible/tmp/ansible-tmp-1604844323.9461305-16895-262576106542785/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844323.9461305-16895-262576106542785/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844323.9461305-16895-262576106542785/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844324.1549625-16921-54000392142205 `" && echo ansible-tmp-1604844324.1549625-16921-54000392142205="` echo /root/.ansible/tmp/ansible-tmp-1604844324.1549625-16921-54000392142205 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnnxprrha TO /root/.ansible/tmp/ansible-tmp-1604844324.1549625-16921-54000392142205/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844324.1549625-16921-54000392142205/ /root/.ansible/tmp/ansible-tmp-1604844324.1549625-16921-54000392142205/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844324.1549625-16921-54000392142205/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844324.1549625-16921-54000392142205/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.021308",
    "end": "2020-11-08 14:05:27.308376",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:05:24.287068",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   118636a2..e1eb92de  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   118636a2..e1eb92de  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla e1eb92de] [ci skip] Pushing CA-tools files\n 2 files changed, 1193 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla e1eb92de] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla e1eb92de] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   118636a2..e1eb92de  HEAD -> gorilla"
    ]
}

TASK [waiting for the CA server to be created in carrier-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844327.5916417-16975-1405761493734 `" && echo ansible-tmp-1604844327.5916417-16975-1405761493734="` echo /root/.ansible/tmp/ansible-tmp-1604844327.5916417-16975-1405761493734 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp12yb6hpt TO /root/.ansible/tmp/ansible-tmp-1604844327.5916417-16975-1405761493734/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844327.5916417-16975-1405761493734/ /root/.ansible/tmp/ansible-tmp-1604844327.5916417-16975-1405761493734/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844327.5916417-16975-1405761493734/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844327.5916417-16975-1405761493734/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T14:04:32Z",
                "generateName": "ca-645c757f7d-",
                "labels": {
                    "app.kubernetes.io/instance": "carrier-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "645c757f7d"
                },
                "name": "ca-645c757f7d-lxpw2",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-645c757f7d",
                        "uid": "8e66e0f4-9f89-4ad1-bbc7-525832e472a2"
                    }
                ],
                "resourceVersion": "2918659",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-645c757f7d-lxpw2",
                "uid": "829334f5-2664-4605-90d7-eadb09804697"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b carrier-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.carrier-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/carrier-net/ca/carrier?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-745wn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-745wn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:04:56Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:04:57Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:04:57Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:04:34Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://1881be12a0ebc44b2f13c010d87651b13c258e3e6ae903f94e89733b92eb2002",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:04:57Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://0c05f3569eb4878b5a521480384687d4c14f5b2248be6b6bde0f6b770ce3b44e",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://0c05f3569eb4878b5a521480384687d4c14f5b2248be6b6bde0f6b770ce3b44e",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:04:56Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:04:55Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.54",
                "podIPs": [
                    {
                        "ip": "10.1.0.54"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:04:34Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844328.2789745-17005-261193540246141 `" && echo ansible-tmp-1604844328.2789745-17005-261193540246141="` echo /root/.ansible/tmp/ansible-tmp-1604844328.2789745-17005-261193540246141 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpe2_tdm__ TO /root/.ansible/tmp/ansible-tmp-1604844328.2789745-17005-261193540246141/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844328.2789745-17005-261193540246141/ /root/.ansible/tmp/ansible-tmp-1604844328.2789745-17005-261193540246141/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844328.2789745-17005-261193540246141/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844328.2789745-17005-261193540246141/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844328.4850059-17031-86811503895812 `" && echo ansible-tmp-1604844328.4850059-17031-86811503895812="` echo /root/.ansible/tmp/ansible-tmp-1604844328.4850059-17031-86811503895812 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpyilsux3b TO /root/.ansible/tmp/ansible-tmp-1604844328.4850059-17031-86811503895812/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844328.4850059-17031-86811503895812/ /root/.ansible/tmp/ansible-tmp-1604844328.4850059-17031-86811503895812/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844328.4850059-17031-86811503895812/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844328.4850059-17031-86811503895812/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230 `" && echo ansible-tmp-1604844328.689898-17057-54742474596230="` echo /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqstawa8u TO /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/ /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp1q825mi7/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/ /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpo0h9nc1c TO /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/ /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "31ce48ae00d8d8ffe510b3550432011b",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844328.689898-17057-54742474596230/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844329.094709-17099-136032087958089 `" && echo ansible-tmp-1604844329.094709-17099-136032087958089="` echo /root/.ansible/tmp/ansible-tmp-1604844329.094709-17099-136032087958089 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpytfp_d2j TO /root/.ansible/tmp/ansible-tmp-1604844329.094709-17099-136032087958089/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844329.094709-17099-136032087958089/ /root/.ansible/tmp/ansible-tmp-1604844329.094709-17099-136032087958089/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844329.094709-17099-136032087958089/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844329.094709-17099-136032087958089/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604844328.979726,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
        "ctime": 1604844328.979726,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3508,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844328.8477242,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "2443039365",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844329.3534963-17129-42542214323741 `" && echo ansible-tmp-1604844329.3534963-17129-42542214323741="` echo /root/.ansible/tmp/ansible-tmp-1604844329.3534963-17129-42542214323741 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpr1wq_t8e TO /root/.ansible/tmp/ansible-tmp-1604844329.3534963-17129-42542214323741/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844329.3534963-17129-42542214323741/ /root/.ansible/tmp/ansible-tmp-1604844329.3534963-17129-42542214323741/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844329.3534963-17129-42542214323741/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844329.3534963-17129-42542214323741/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844323.4476423,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844323.4476423,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca-tools",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "carrier-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688 `" && echo ansible-tmp-1604844329.7399883-17167-109528420861688="` echo /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpmn2p0tqg TO /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/ /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprwso5yv3 TO /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/ /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_0db4vtx TO /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/ /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
    "dest": "./build/test/carrier-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmprwso5yv3",
            "attributes": null,
            "backup": false,
            "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
            "content": null,
            "dest": "./build/test/carrier-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "1e84a94c7e9daff778218b24a27091ea",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844329.7399883-17167-109528420861688/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844330.090826-17207-181458390560170 `" && echo ansible-tmp-1604844330.090826-17207-181458390560170="` echo /root/.ansible/tmp/ansible-tmp-1604844330.090826-17207-181458390560170 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpkyj4j1ut TO /root/.ansible/tmp/ansible-tmp-1604844330.090826-17207-181458390560170/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844330.090826-17207-181458390560170/ /root/.ansible/tmp/ansible-tmp-1604844330.090826-17207-181458390560170/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844330.090826-17207-181458390560170/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844330.090826-17207-181458390560170/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.058270",
    "end": "2020-11-08 14:05:30.280767",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:05:30.222497",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844330.3949237-17241-47919504730425 `" && echo ansible-tmp-1604844330.3949237-17241-47919504730425="` echo /root/.ansible/tmp/ansible-tmp-1604844330.3949237-17241-47919504730425 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwyqj0xhl TO /root/.ansible/tmp/ansible-tmp-1604844330.3949237-17241-47919504730425/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844330.3949237-17241-47919504730425/ /root/.ansible/tmp/ansible-tmp-1604844330.3949237-17241-47919504730425/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844330.3949237-17241-47919504730425/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844330.3949237-17241-47919504730425/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844330.6030219-17267-220422833317166 `" && echo ansible-tmp-1604844330.6030219-17267-220422833317166="` echo /root/.ansible/tmp/ansible-tmp-1604844330.6030219-17267-220422833317166 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpon1ol__z TO /root/.ansible/tmp/ansible-tmp-1604844330.6030219-17267-220422833317166/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844330.6030219-17267-220422833317166/ /root/.ansible/tmp/ansible-tmp-1604844330.6030219-17267-220422833317166/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844330.6030219-17267-220422833317166/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844330.6030219-17267-220422833317166/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.233816",
    "end": "2020-11-08 14:05:38.969787",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:05:30.735971",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   e1eb92de..f14cf3d6  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   e1eb92de..f14cf3d6  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla f14cf3d6] [ci skip] Pushing CA-tools files\n 2 files changed, 1011 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla f14cf3d6] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla f14cf3d6] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   e1eb92de..f14cf3d6  HEAD -> gorilla"
    ]
}

TASK [include_role : create/crypto_script] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:85

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844339.2844322-17317-122240757344382 `" && echo ansible-tmp-1604844339.2844322-17317-122240757344382="` echo /root/.ansible/tmp/ansible-tmp-1604844339.2844322-17317-122240757344382 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpz0dmhqpv TO /root/.ansible/tmp/ansible-tmp-1604844339.2844322-17317-122240757344382/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844339.2844322-17317-122240757344382/ /root/.ansible/tmp/ansible-tmp-1604844339.2844322-17317-122240757344382/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844339.2844322-17317-122240757344382/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844339.2844322-17317-122240757344382/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773 `" && echo ansible-tmp-1604844339.4906452-17343-5354251057773="` echo /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphq07acmc TO /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/ /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfei5yyqt/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/ /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_97l0bcu TO /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/ /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "480d289ef6662bbab578be328654f6561843b88a",
    "dest": "./build/generate-crypto-walmart-orderer1.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "480d289ef6662bbab578be328654f6561843b88a",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer1.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "44f5848d8eb1f30ca687b6194b06faa5",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer1",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844339.4906452-17343-5354251057773/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473 `" && echo ansible-tmp-1604844339.8251662-17343-71821358417473="` echo /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpu581mgyt TO /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/ /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3pn2uowt/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/ /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpi5uug5c0 TO /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/ /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "878c1a8c631020f3e5356765f191403e5fcd824d",
    "dest": "./build/generate-crypto-walmart-orderer2.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "878c1a8c631020f3e5356765f191403e5fcd824d",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer2.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a0bf25fd9770ac7e0da9684c08a133da",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer2",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844339.8251662-17343-71821358417473/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813 `" && echo ansible-tmp-1604844340.1606448-17343-143392405091813="` echo /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpen4u7bxh TO /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/ /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp092_61qh/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/ /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0643eda4 TO /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/ /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "e01c7b0f6bd46487011f462aa2ab5c1f51bd1fb2",
    "dest": "./build/generate-crypto-walmart-orderer3.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "e01c7b0f6bd46487011f462aa2ab5c1f51bd1fb2",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer3.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2594a73061c3bc6598466f5435e1492c",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer3",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844340.1606448-17343-143392405091813/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742 `" && echo ansible-tmp-1604844340.519838-17459-51466834491742="` echo /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwzl41gi5 TO /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/ /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcx_7fsax/orderer_organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/ /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3ch5jngg TO /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/ /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "64df30f5e30a0b5059f87dfe7e3e175f3f37f0a1",
    "dest": "./build/generate-crypto-walmart.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "64df30f5e30a0b5059f87dfe7e3e175f3f37f0a1",
            "content": null,
            "dest": "./build/generate-crypto-walmart.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ed7b38ef30a5d84380fe1096ab91459f",
    "mode": "0644",
    "owner": "root",
    "size": 2912,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844340.519838-17459-51466834491742/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844340.9098055-17501-267778782231902 `" && echo ansible-tmp-1604844340.9098055-17501-267778782231902="` echo /root/.ansible/tmp/ansible-tmp-1604844340.9098055-17501-267778782231902 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpa_gp7w_u TO /root/.ansible/tmp/ansible-tmp-1604844340.9098055-17501-267778782231902/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844340.9098055-17501-267778782231902/ /root/.ansible/tmp/ansible-tmp-1604844340.9098055-17501-267778782231902/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844340.9098055-17501-267778782231902/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844340.9098055-17501-267778782231902/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479 `" && echo ansible-tmp-1604844341.181411-17531-18178120361479="` echo /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp20_wrq_k TO /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/ /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcdtsr_xf/organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/ /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpufh9pw3a TO /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/ /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5109fe90d95203be6fadcbd9de63f190acd90501",
    "dest": "./build/generate-crypto-carrier.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5109fe90d95203be6fadcbd9de63f190acd90501",
            "content": null,
            "dest": "./build/generate-crypto-carrier.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "7b24ab286c62fed10f94563975940c67",
    "mode": "0644",
    "owner": "root",
    "size": 5170,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844341.181411-17531-18178120361479/source",
    "state": "file",
    "uid": 0
}

TASK [pause] *******************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:94
Pausing for 360 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[pause]
Sleeping... so that the client certificates are valid:
ok: [localhost] => {
    "changed": false,
    "delta": 360,
    "echo": true,
    "rc": 0,
    "start": "2020-11-08 14:05:41.540221",
    "stderr": "",
    "stdout": "Paused for 6.0 minutes",
    "stop": "2020-11-08 14:11:41.540504",
    "user_input": ""
}

TASK [include_role : create/crypto/orderer] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:99
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844701.7199678-17575-11759792323555 `" && echo ansible-tmp-1604844701.7199678-17575-11759792323555="` echo /root/.ansible/tmp/ansible-tmp-1604844701.7199678-17575-11759792323555 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqfgle3c9 TO /root/.ansible/tmp/ansible-tmp-1604844701.7199678-17575-11759792323555/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844701.7199678-17575-11759792323555/ /root/.ansible/tmp/ansible-tmp-1604844701.7199678-17575-11759792323555/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844701.7199678-17575-11759792323555/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844701.7199678-17575-11759792323555/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.093459",
    "end": "2020-11-08 14:11:41.945513",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:11:41.852054",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Call orderercheck.yaml for orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:16
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml for localhost

TASK [Waiting for CA-tool in walmart-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:2
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844702.246591-17617-107793514502570 `" && echo ansible-tmp-1604844702.246591-17617-107793514502570="` echo /root/.ansible/tmp/ansible-tmp-1604844702.246591-17617-107793514502570 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqqszaeku TO /root/.ansible/tmp/ansible-tmp-1604844702.246591-17617-107793514502570/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844702.246591-17617-107793514502570/ /root/.ansible/tmp/ansible-tmp-1604844702.246591-17617-107793514502570/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844702.246591-17617-107793514502570/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844702.246591-17617-107793514502570/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T14:06:32Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-dghwg",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "048f7597-9521-4562-8fc3-c9b4caa7e485"
                    }
                ],
                "resourceVersion": "2919128",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-tools-69d7885f86-dghwg",
                "uid": "dadc71f1-0aea-446e-a4b2-6b8b4394102e"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-wjv2z",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-wjv2z",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-wjv2z"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:06:34Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:07:10Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:07:10Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:06:34Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e97e5b174e484d9ad330a96fc9a18b934c647ed1510dc72618b0a39937620560",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:07:09Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.79",
                "podIPs": [
                    {
                        "ip": "10.1.0.79"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:06:34Z"
            }
        }
    ]
}

TASK [include_role : {{ playbook_dir }}/../../shared/configuration/roles/check/setup] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:15
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844702.9713202-17647-250690975902989 `" && echo ansible-tmp-1604844702.9713202-17647-250690975902989="` echo /root/.ansible/tmp/ansible-tmp-1604844702.9713202-17647-250690975902989 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpmcvaw9_o TO /root/.ansible/tmp/ansible-tmp-1604844702.9713202-17647-250690975902989/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844702.9713202-17647-250690975902989/ /root/.ansible/tmp/ansible-tmp-1604844702.9713202-17647-250690975902989/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844702.9713202-17647-250690975902989/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844702.9713202-17647-250690975902989/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "atime": 1604844180.673479,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844181.1814868,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3475,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844181.1814868,
        "nlink": 2,
        "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4185885012",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if ca certs already created] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844703.3059354-17683-228422552545537 `" && echo ansible-tmp-1604844703.3059354-17683-228422552545537="` echo /root/.ansible/tmp/ansible-tmp-1604844703.3059354-17683-228422552545537 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpz63j_689 TO /root/.ansible/tmp/ansible-tmp-1604844703.3059354-17683-228422552545537/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844703.3059354-17683-228422552545537/ /root/.ansible/tmp/ansible-tmp-1604844703.3059354-17683-228422552545537/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844703.3059354-17683-228422552545537/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844703.3059354-17683-228422552545537/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.060154",
    "end": "2020-11-08 14:11:43.497603",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:43.437449",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Check if ca key already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844703.5618207-17720-247442351094002 `" && echo ansible-tmp-1604844703.5618207-17720-247442351094002="` echo /root/.ansible/tmp/ansible-tmp-1604844703.5618207-17720-247442351094002 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp9st4h51m TO /root/.ansible/tmp/ansible-tmp-1604844703.5618207-17720-247442351094002/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844703.5618207-17720-247442351094002/ /root/.ansible/tmp/ansible-tmp-1604844703.5618207-17720-247442351094002/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844703.5618207-17720-247442351094002/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844703.5618207-17720-247442351094002/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.056087",
    "end": "2020-11-08 14:11:43.751172",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:43.695085",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call common.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:19
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml for localhost

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844703.870126-17758-9908254483530 `" && echo ansible-tmp-1604844703.870126-17758-9908254483530="` echo /root/.ansible/tmp/ansible-tmp-1604844703.870126-17758-9908254483530 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpa0rkw805 TO /root/.ansible/tmp/ansible-tmp-1604844703.870126-17758-9908254483530/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844703.870126-17758-9908254483530/ /root/.ansible/tmp/ansible-tmp-1604844703.870126-17758-9908254483530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844703.870126-17758-9908254483530/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844703.870126-17758-9908254483530/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:02.216305",
    "end": "2020-11-08 14:11:46.219530",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:44.003225",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Changing the permissions for generate-crypto script] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844706.2889552-17803-204594732061892 `" && echo ansible-tmp-1604844706.2889552-17803-204594732061892="` echo /root/.ansible/tmp/ansible-tmp-1604844706.2889552-17803-204594732061892 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphlmoyp78 TO /root/.ansible/tmp/ansible-tmp-1604844706.2889552-17803-204594732061892/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844706.2889552-17803-204594732061892/ /root/.ansible/tmp/ansible-tmp-1604844706.2889552-17803-204594732061892/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844706.2889552-17803-204594732061892/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844706.2889552-17803-204594732061892/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart.sh"
        }
    },
    "files": "generate-crypto-walmart.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart.sh",
    "size": 2912,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844706.5008516-17829-144764793543548 `" && echo ansible-tmp-1604844706.5008516-17829-144764793543548="` echo /root/.ansible/tmp/ansible-tmp-1604844706.5008516-17829-144764793543548 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpvezd4kok TO /root/.ansible/tmp/ansible-tmp-1604844706.5008516-17829-144764793543548/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844706.5008516-17829-144764793543548/ /root/.ansible/tmp/ansible-tmp-1604844706.5008516-17829-144764793543548/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844706.5008516-17829-144764793543548/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844706.5008516-17829-144764793543548/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:02.498604",
    "end": "2020-11-08 14:11:49.130866",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:46.632262",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844709.2016401-17874-128958267871835 `" && echo ansible-tmp-1604844709.2016401-17874-128958267871835="` echo /root/.ansible/tmp/ansible-tmp-1604844709.2016401-17874-128958267871835 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnf9gxalo TO /root/.ansible/tmp/ansible-tmp-1604844709.2016401-17874-128958267871835/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844709.2016401-17874-128958267871835/ /root/.ansible/tmp/ansible-tmp-1604844709.2016401-17874-128958267871835/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844709.2016401-17874-128958267871835/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844709.2016401-17874-128958267871835/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
    "delta": "0:00:01.402713",
    "end": "2020-11-08 14:11:50.737220",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:49.334507",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:11:50 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 14:11:50 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203807e0}\n2020/11/08 14:11:50 [DEBUG] Entered runEnroll\n2020/11/08 14:11:50 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203807e0}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380840 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420275b10 DummyKeystore:<nil>}\n2020/11/08 14:11:50 [INFO] TLS Enabled\n2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:50 [DEBUG] Client Cert File: \n2020/11/08 14:11:50 [DEBUG] Client Key File: \n2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:50 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:11:50 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:11:50 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:11:50 [INFO] encoded CSR\n2020/11/08 14:11:50 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEYTxJFrNpLwOQh/OeNx/3EV63N8ZY\\nySjHN+GNPAC2YNlYpxegEQwcQXGuwW205G/NsTiGJXplceDmM2zxJJhuNqA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1k\\nZ2h3ZzAKBggqhkjOPQQDAgNHADBEAiAak1t+8W0bn0woXkRLT1mjc0ecl2YXCcJ1\\nt4PIbRD20gIgAuP7WkEy8a+O2S8r9Ob8DbW/aHI5zZeuQVptLZ+MJLo=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:11:50 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:11:50 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTVENDQWUrZ0F3SUJBZ0lVZTFjT0JOV3hWTkxTZ2d0WjRXSlhnNVNKYTNZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OZDJGc2JXRnlkQzFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCR0U4U1JhemFTOERrSWZ6bmpjZjl4RmV0emZHV01rb3h6ZmhqVHdBdG1EWldLY1gKb0JFTUhFRnhyc0Z0dE9SdnpiRTRoaVY2WlhIZzVqTnM4U1NZYmphamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRGc0aVZSWjFLMjNLc1RkTWIvdzVQeU1uOEtoCk1COEdBMVVkSXdRWU1CYUFGT2FZbXJlR1ZJMzFaWUlDUFpocmZ5ZzhzUzJrTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0Wkdkb2QyY3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSlJQOVFQeApGRDNUNVl5UlI3bXVVRklxWi8zRjE4MnZPMUE4WlpWdGovVStBaUJtSFlCcDNUWDhvUExKUThuaXJ4bDRIZnZEClN6YWFYc1BQOVZNRjE5OHFidz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/08 14:11:50 [DEBUG] newEnrollmentResponse walmart-admin\n2020/11/08 14:11:50 [INFO] Stored client certificate at /root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 14:11:50 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-walmart/msp/cacerts/ca-walmart-net-7054.pem\n+ fabric-ca-client getcacert -d -u https://ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp\n2020/11/08 14:11:50 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:11:50 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/08 14:11:50 [DEBUG] Entered runGetCACert\n2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016b9b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420063fc0 DummyKeystore:<nil>}\n2020/11/08 14:11:50 [INFO] TLS Enabled\n2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:50 [DEBUG] Client Cert File: \n2020/11/08 14:11:50 [DEBUG] Client Key File: \n2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:50 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/cainfo\n{}\n2020/11/08 14:11:50 [DEBUG] Received response\nstatusCode=200 (200 OK)\n2020/11/08 14:11:50 [DEBUG] Response body result: map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5]\n2020/11/08 14:11:50 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 14:11:50 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 14:11:50 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 14:11:50 [DEBUG] Checking for enrollment\n2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c26f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203999e0 DummyKeystore:<nil>}\n2020/11/08 14:11:50 [INFO] TLS Enabled\n2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:50 [DEBUG] Client Cert File: \n2020/11/08 14:11:50 [DEBUG] Client Key File: \n2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}\n2020/11/08 14:11:50 [DEBUG] Entered runRegister\n2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c26f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203999e0 DummyKeystore:<nil>}\n2020/11/08 14:11:50 [INFO] TLS Enabled\n2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:50 [DEBUG] Client Cert File: \n2020/11/08 14:11:50 [DEBUG] Client Key File: \n2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:50 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 14:11:50 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:11:50 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 14:11:50 [DEBUG] Register { Name:Admin@walmart-net Type:client Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true} {abac.init true true} {hf.Registrar.Roles client false} {hf.Registrar.Attributes * false}] CAName:  }\n2020/11/08 14:11:50 [DEBUG] Adding token-based authorization header\n2020/11/08 14:11:50 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"Admin@walmart-net\",\"type\":\"client\",\"secret\":\"Admin@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true},{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true},{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"}]}\n2020/11/08 14:11:50 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:11:50 [DEBUG] Response body result: map[secret:Admin@walmart-net-pw]\n2020/11/08 14:11:50 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:11:50 [DEBUG] Home directory: /root/ca-tools/walmart/admin\n2020/11/08 14:11:50 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml\n2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202306c0}\n2020/11/08 14:11:50 [DEBUG] Entered runEnroll\n2020/11/08 14:11:50 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202306c0}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420230720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420237e10 DummyKeystore:<nil>}\n2020/11/08 14:11:50 [INFO] TLS Enabled\n2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:50 [DEBUG] Client Cert File: \n2020/11/08 14:11:50 [DEBUG] Client Key File: \n2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:50 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:11:50 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:11:50 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:11:50 [INFO] encoded CSR\n2020/11/08 14:11:50 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDPYZ7Yt0Tyz4cwBdokad/7U\\n6mXqekYx4PF9PKWoO6kZzp/ClvJP4AdyuvKIVtP3bnErPxK87SjSx+K9b5jDHeOg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgfOR9K9q1pV64ZiQb5RNsd7ti9t/r\\nOScLjARiRuBP8a0CIDrlnB4DMYknVvivyCXVn35w2FD5Rs9wE2yQJdXO8oD3\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:11:50 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:11:50 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMxekNDQW42Z0F3SUJBZ0lVZVB2TDhSK2o2eWp3OEJVWU8wQSsxQksyMEZ3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFRejJHZTJMZEU4cytITUFYYUpHbmYrMU9wbDZucEdNZUR4ZlR5bHFEdXAKR2M2ZndwYnlUK0FIY3JyeWlGYlQ5MjV4S3o4U3ZPMG8wc2ZpdlcrWXd4M2pvNElCRVRDQ0FRMHdEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZDanpZMmk5emVKTGU1Wnc2V0xyCjE4dnBId1hHTUI4R0ExVWRJd1FZTUJhQUZPYVltcmVHVkkzMVpZSUNQWmhyZnlnOHNTMmtNQ1FHQTFVZEVRUWQKTUJ1Q0dXTmhMWFJ2YjJ4ekxUWTVaRGM0T0RWbU9EWXRaR2RvZDJjd2dZWUdDQ29EQkFVR0J3Z0JCSHA3SW1GMApkSEp6SWpwN0ltRmlZV011YVc1cGRDSTZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1VpTENKb1ppNUJabVpwCmJHbGhkR2x2YmlJNklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFIZGhiRzFoY25RdGJtVjAKSWl3aWFHWXVWSGx3WlNJNkltTnNhV1Z1ZENKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQlovVUp3VkVpeApZMmkveXhQajFYZkRkVGQzMkdieHpKY1JUVnJnRnJ1T0pnSWdVYmp4STZVOFd6NEw2K2JFR0lsMGZBQ0NaTEVGCmdmQ2ZXVjV0UE1VaGFQOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]]\n2020/11/08 14:11:50 [DEBUG] newEnrollmentResponse Admin@walmart-net\n2020/11/08 14:11:50 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/msp/signcerts/cert.pem\n2020/11/08 14:11:50 [INFO] Stored root CA certificate at /root/ca-tools/walmart/admin/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts\n+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem\n+ mkdir /root/ca-tools/walmart/admin/msp/admincerts\n+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:11:50 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:11:50 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202887b0}\n2020/11/08 14:11:50 [DEBUG] Entered runEnroll\n2020/11/08 14:11:50 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202887b0}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420288810 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420291930 DummyKeystore:<nil>}\n2020/11/08 14:11:50 [INFO] TLS Enabled\n2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:50 [DEBUG] Client Cert File: \n2020/11/08 14:11:50 [DEBUG] Client Key File: \n2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:50 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:11:50 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:11:50 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:11:50 [INFO] encoded CSR\n2020/11/08 14:11:50 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAmd9NKUtXu4kmKIeZq0NxzR\\nQ7VLoDzZp6kweu+c2nPn04PMilELz1EO++1iQ4Z3Oap6qoiCvrWbKgEfikRZR++g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgCK+zXEmanLxJ72U4S1v8HMR7kBBo\\nXENOfTbzV7K5P14CIH+SoBme9krfSE20tq2w03kUV7W3HI/f8hEpm3G8pdax\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:11:50 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:11:50 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5ekNDQXAyZ0F3SUJBZ0lVUkNtVkJRZjE3YkF0M2lXT3lySDN0Sk5jUzBJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFRSm5mVFNsTFY3dUpKaWlIbWF0RGNjMFVPMVM2QTgyYWVwTUhydm5OcHoKNTlPRHpJcFJDODlSRHZ2dFlrT0dkem1xZXFxSWdyNjFteW9CSDRwRVdVZnZvNElCTURDQ0FTd3dEZ1lEVlIwUApBUUgvQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CCkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRclI0QkJpaitlL0NsNzhRRUFGUnVDYlBrNVBEQWZCZ05WSFNNRUdEQVcKZ0JUbW1KcTNobFNOOVdXQ0FqMllhMzhvUExFdHBEQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRMwpPRGcxWmpnMkxXUm5hSGRuTUlHR0JnZ3FBd1FGQmdjSUFRUjZleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpCk9pSjBjblZsSWl3aVlXUnRhVzRpT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1ppNUYKYm5KdmJHeHRaVzUwU1VRaU9pSkJaRzFwYmtCM1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbApiblFpZlgwd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFLaGpBN01iemIrVmc1SFd6TDhTRnloREJWWC9vc2ZlCnJDaGlYaHNDTW5iL0FpQWtZb1cxSjNVNVdZZDRZZ1kzc0FGZDBIeUhQR0F5R3BPcmxVajFONkZ4MWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:11:50 [DEBUG] newEnrollmentResponse Admin@walmart-net\n2020/11/08 14:11:50 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/tls/signcerts/cert.pem\n2020/11/08 14:11:50 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls\n+ cp /root/ca-tools/walmart/admin/tls/keystore/05f20e9cdb46e8df495c1e09b2ed7964e49b36f04c54bd27f1fc5f2edc1c71a1_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key\n+ cp /root/ca-tools/walmart/admin/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:11:50 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:11:50 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203807e0}",
        "2020/11/08 14:11:50 [DEBUG] Entered runEnroll",
        "2020/11/08 14:11:50 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203807e0}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380840 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420275b10 DummyKeystore:<nil>}",
        "2020/11/08 14:11:50 [INFO] TLS Enabled",
        "2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:50 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:50 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:50 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:11:50 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:11:50 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:11:50 [INFO] encoded CSR",
        "2020/11/08 14:11:50 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEYTxJFrNpLwOQh/OeNx/3EV63N8ZY\\nySjHN+GNPAC2YNlYpxegEQwcQXGuwW205G/NsTiGJXplceDmM2zxJJhuNqA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1k\\nZ2h3ZzAKBggqhkjOPQQDAgNHADBEAiAak1t+8W0bn0woXkRLT1mjc0ecl2YXCcJ1\\nt4PIbRD20gIgAuP7WkEy8a+O2S8r9Ob8DbW/aHI5zZeuQVptLZ+MJLo=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:11:50 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:11:50 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTVENDQWUrZ0F3SUJBZ0lVZTFjT0JOV3hWTkxTZ2d0WjRXSlhnNVNKYTNZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OZDJGc2JXRnlkQzFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCR0U4U1JhemFTOERrSWZ6bmpjZjl4RmV0emZHV01rb3h6ZmhqVHdBdG1EWldLY1gKb0JFTUhFRnhyc0Z0dE9SdnpiRTRoaVY2WlhIZzVqTnM4U1NZYmphamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRGc0aVZSWjFLMjNLc1RkTWIvdzVQeU1uOEtoCk1COEdBMVVkSXdRWU1CYUFGT2FZbXJlR1ZJMzFaWUlDUFpocmZ5ZzhzUzJrTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0Wkdkb2QyY3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSlJQOVFQeApGRDNUNVl5UlI3bXVVRklxWi8zRjE4MnZPMUE4WlpWdGovVStBaUJtSFlCcDNUWDhvUExKUThuaXJ4bDRIZnZEClN6YWFYc1BQOVZNRjE5OHFidz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/08 14:11:50 [DEBUG] newEnrollmentResponse walmart-admin",
        "2020/11/08 14:11:50 [INFO] Stored client certificate at /root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 14:11:50 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-walmart/msp/cacerts/ca-walmart-net-7054.pem",
        "+ fabric-ca-client getcacert -d -u https://ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp",
        "2020/11/08 14:11:50 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:11:50 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/08 14:11:50 [DEBUG] Entered runGetCACert",
        "2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016b9b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420063fc0 DummyKeystore:<nil>}",
        "2020/11/08 14:11:50 [INFO] TLS Enabled",
        "2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:50 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:50 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:50 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/cainfo",
        "{}",
        "2020/11/08 14:11:50 [DEBUG] Received response",
        "statusCode=200 (200 OK)",
        "2020/11/08 14:11:50 [DEBUG] Response body result: map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5]",
        "2020/11/08 14:11:50 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:11:50 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:11:50 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 14:11:50 [DEBUG] Checking for enrollment",
        "2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c26f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203999e0 DummyKeystore:<nil>}",
        "2020/11/08 14:11:50 [INFO] TLS Enabled",
        "2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:50 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:50 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}",
        "2020/11/08 14:11:50 [DEBUG] Entered runRegister",
        "2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2690}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c26f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203999e0 DummyKeystore:<nil>}",
        "2020/11/08 14:11:50 [INFO] TLS Enabled",
        "2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:50 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:50 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:50 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 14:11:50 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:11:50 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 14:11:50 [DEBUG] Register { Name:Admin@walmart-net Type:client Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true} {abac.init true true} {hf.Registrar.Roles client false} {hf.Registrar.Attributes * false}] CAName:  }",
        "2020/11/08 14:11:50 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:11:50 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"Admin@walmart-net\",\"type\":\"client\",\"secret\":\"Admin@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true},{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true},{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"}]}",
        "2020/11/08 14:11:50 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:11:50 [DEBUG] Response body result: map[secret:Admin@walmart-net-pw]",
        "2020/11/08 14:11:50 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:11:50 [DEBUG] Home directory: /root/ca-tools/walmart/admin",
        "2020/11/08 14:11:50 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml",
        "2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202306c0}",
        "2020/11/08 14:11:50 [DEBUG] Entered runEnroll",
        "2020/11/08 14:11:50 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202306c0}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420230720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420237e10 DummyKeystore:<nil>}",
        "2020/11/08 14:11:50 [INFO] TLS Enabled",
        "2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:50 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:50 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:50 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:11:50 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:11:50 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:11:50 [INFO] encoded CSR",
        "2020/11/08 14:11:50 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDPYZ7Yt0Tyz4cwBdokad/7U\\n6mXqekYx4PF9PKWoO6kZzp/ClvJP4AdyuvKIVtP3bnErPxK87SjSx+K9b5jDHeOg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgfOR9K9q1pV64ZiQb5RNsd7ti9t/r\\nOScLjARiRuBP8a0CIDrlnB4DMYknVvivyCXVn35w2FD5Rs9wE2yQJdXO8oD3\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:11:50 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:11:50 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMxekNDQW42Z0F3SUJBZ0lVZVB2TDhSK2o2eWp3OEJVWU8wQSsxQksyMEZ3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFRejJHZTJMZEU4cytITUFYYUpHbmYrMU9wbDZucEdNZUR4ZlR5bHFEdXAKR2M2ZndwYnlUK0FIY3JyeWlGYlQ5MjV4S3o4U3ZPMG8wc2ZpdlcrWXd4M2pvNElCRVRDQ0FRMHdEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZDanpZMmk5emVKTGU1Wnc2V0xyCjE4dnBId1hHTUI4R0ExVWRJd1FZTUJhQUZPYVltcmVHVkkzMVpZSUNQWmhyZnlnOHNTMmtNQ1FHQTFVZEVRUWQKTUJ1Q0dXTmhMWFJ2YjJ4ekxUWTVaRGM0T0RWbU9EWXRaR2RvZDJjd2dZWUdDQ29EQkFVR0J3Z0JCSHA3SW1GMApkSEp6SWpwN0ltRmlZV011YVc1cGRDSTZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1VpTENKb1ppNUJabVpwCmJHbGhkR2x2YmlJNklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFIZGhiRzFoY25RdGJtVjAKSWl3aWFHWXVWSGx3WlNJNkltTnNhV1Z1ZENKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQlovVUp3VkVpeApZMmkveXhQajFYZkRkVGQzMkdieHpKY1JUVnJnRnJ1T0pnSWdVYmp4STZVOFd6NEw2K2JFR0lsMGZBQ0NaTEVGCmdmQ2ZXVjV0UE1VaGFQOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]]",
        "2020/11/08 14:11:50 [DEBUG] newEnrollmentResponse Admin@walmart-net",
        "2020/11/08 14:11:50 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/msp/signcerts/cert.pem",
        "2020/11/08 14:11:50 [INFO] Stored root CA certificate at /root/ca-tools/walmart/admin/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts",
        "+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem",
        "+ mkdir /root/ca-tools/walmart/admin/msp/admincerts",
        "+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:11:50 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:11:50 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/08 14:11:50 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202887b0}",
        "2020/11/08 14:11:50 [DEBUG] Entered runEnroll",
        "2020/11/08 14:11:50 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:11:50 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4202887b0}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420288810 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:50 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420291930 DummyKeystore:<nil>}",
        "2020/11/08 14:11:50 [INFO] TLS Enabled",
        "2020/11/08 14:11:50 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:50 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:50 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:50 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:50 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:11:50 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:11:50 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:11:50 [INFO] encoded CSR",
        "2020/11/08 14:11:50 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAmd9NKUtXu4kmKIeZq0NxzR\\nQ7VLoDzZp6kweu+c2nPn04PMilELz1EO++1iQ4Z3Oap6qoiCvrWbKgEfikRZR++g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgCK+zXEmanLxJ72U4S1v8HMR7kBBo\\nXENOfTbzV7K5P14CIH+SoBme9krfSE20tq2w03kUV7W3HI/f8hEpm3G8pdax\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:11:50 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:11:50 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5ekNDQXAyZ0F3SUJBZ0lVUkNtVkJRZjE3YkF0M2lXT3lySDN0Sk5jUzBJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFRSm5mVFNsTFY3dUpKaWlIbWF0RGNjMFVPMVM2QTgyYWVwTUhydm5OcHoKNTlPRHpJcFJDODlSRHZ2dFlrT0dkem1xZXFxSWdyNjFteW9CSDRwRVdVZnZvNElCTURDQ0FTd3dEZ1lEVlIwUApBUUgvQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CCkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRclI0QkJpaitlL0NsNzhRRUFGUnVDYlBrNVBEQWZCZ05WSFNNRUdEQVcKZ0JUbW1KcTNobFNOOVdXQ0FqMllhMzhvUExFdHBEQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRMwpPRGcxWmpnMkxXUm5hSGRuTUlHR0JnZ3FBd1FGQmdjSUFRUjZleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpCk9pSjBjblZsSWl3aVlXUnRhVzRpT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1ppNUYKYm5KdmJHeHRaVzUwU1VRaU9pSkJaRzFwYmtCM1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbApiblFpZlgwd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFLaGpBN01iemIrVmc1SFd6TDhTRnloREJWWC9vc2ZlCnJDaGlYaHNDTW5iL0FpQWtZb1cxSjNVNVdZZDRZZ1kzc0FGZDBIeUhQR0F5R3BPcmxVajFONkZ4MWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:11:50 [DEBUG] newEnrollmentResponse Admin@walmart-net",
        "2020/11/08 14:11:50 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/tls/signcerts/cert.pem",
        "2020/11/08 14:11:50 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/admin/tls/keystore/05f20e9cdb46e8df495c1e09b2ed7964e49b36f04c54bd27f1fc5f2edc1c71a1_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key",
        "+ cp /root/ca-tools/walmart/admin/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt",
        "+ cd /"
    ],
    "stdout": "Password: Admin@walmart-net-pw",
    "stdout_lines": [
        "Password: Admin@walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:48
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844710.812585-17914-98285184858341 `" && echo ansible-tmp-1604844710.812585-17914-98285184858341="` echo /root/.ansible/tmp/ansible-tmp-1604844710.812585-17914-98285184858341 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp9jg7dmm9 TO /root/.ansible/tmp/ansible-tmp-1604844710.812585-17914-98285184858341/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844710.812585-17914-98285184858341/ /root/.ansible/tmp/ansible-tmp-1604844710.812585-17914-98285184858341/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844710.812585-17914-98285184858341/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844710.812585-17914-98285184858341/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.758021",
    "end": "2020-11-08 14:11:51.703905",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:50.945884",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call orderer.yaml for each orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844711.89994-17957-278143658159558 `" && echo ansible-tmp-1604844711.89994-17957-278143658159558="` echo /root/.ansible/tmp/ansible-tmp-1604844711.89994-17957-278143658159558 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5f1ubh1g TO /root/.ansible/tmp/ansible-tmp-1604844711.89994-17957-278143658159558/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844711.89994-17957-278143658159558/ /root/.ansible/tmp/ansible-tmp-1604844711.89994-17957-278143658159558/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844711.89994-17957-278143658159558/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844711.89994-17957-278143658159558/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
    "delta": "0:00:00.101368",
    "end": "2020-11-08 14:11:52.135173",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:11:52.033805",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844712.2369797-17994-231623813201710 `" && echo ansible-tmp-1604844712.2369797-17994-231623813201710="` echo /root/.ansible/tmp/ansible-tmp-1604844712.2369797-17994-231623813201710 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpmxhzwczp TO /root/.ansible/tmp/ansible-tmp-1604844712.2369797-17994-231623813201710/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844712.2369797-17994-231623813201710/ /root/.ansible/tmp/ansible-tmp-1604844712.2369797-17994-231623813201710/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844712.2369797-17994-231623813201710/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844712.2369797-17994-231623813201710/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
    "delta": "0:00:00.086710",
    "end": "2020-11-08 14:11:52.456548",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:11:52.369838",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844712.594955-18032-103429577627109 `" && echo ansible-tmp-1604844712.594955-18032-103429577627109="` echo /root/.ansible/tmp/ansible-tmp-1604844712.594955-18032-103429577627109 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7a44bomi TO /root/.ansible/tmp/ansible-tmp-1604844712.594955-18032-103429577627109/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844712.594955-18032-103429577627109/ /root/.ansible/tmp/ansible-tmp-1604844712.594955-18032-103429577627109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844712.594955-18032-103429577627109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844712.594955-18032-103429577627109/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.267380",
    "end": "2020-11-08 14:11:53.994570",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:52.727190",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844714.0671215-18077-31188658232347 `" && echo ansible-tmp-1604844714.0671215-18077-31188658232347="` echo /root/.ansible/tmp/ansible-tmp-1604844714.0671215-18077-31188658232347 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc__bbq8a TO /root/.ansible/tmp/ansible-tmp-1604844714.0671215-18077-31188658232347/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844714.0671215-18077-31188658232347/ /root/.ansible/tmp/ansible-tmp-1604844714.0671215-18077-31188658232347/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844714.0671215-18077-31188658232347/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844714.0671215-18077-31188658232347/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844714.277232-18105-156945407560427 `" && echo ansible-tmp-1604844714.277232-18105-156945407560427="` echo /root/.ansible/tmp/ansible-tmp-1604844714.277232-18105-156945407560427 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpaun7x3qp TO /root/.ansible/tmp/ansible-tmp-1604844714.277232-18105-156945407560427/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844714.277232-18105-156945407560427/ /root/.ansible/tmp/ansible-tmp-1604844714.277232-18105-156945407560427/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844714.277232-18105-156945407560427/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844714.277232-18105-156945407560427/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer1.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer1.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer1.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer1.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844714.45259-18105-262045331440008 `" && echo ansible-tmp-1604844714.45259-18105-262045331440008="` echo /root/.ansible/tmp/ansible-tmp-1604844714.45259-18105-262045331440008 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpx4u4m7nf TO /root/.ansible/tmp/ansible-tmp-1604844714.45259-18105-262045331440008/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844714.45259-18105-262045331440008/ /root/.ansible/tmp/ansible-tmp-1604844714.45259-18105-262045331440008/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844714.45259-18105-262045331440008/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844714.45259-18105-262045331440008/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844714.6570096-18155-148648219039356 `" && echo ansible-tmp-1604844714.6570096-18155-148648219039356="` echo /root/.ansible/tmp/ansible-tmp-1604844714.6570096-18155-148648219039356 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfl3f7r8e TO /root/.ansible/tmp/ansible-tmp-1604844714.6570096-18155-148648219039356/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844714.6570096-18155-148648219039356/ /root/.ansible/tmp/ansible-tmp-1604844714.6570096-18155-148648219039356/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844714.6570096-18155-148648219039356/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844714.6570096-18155-148648219039356/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.708823",
    "end": "2020-11-08 14:11:58.496659",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:54.787836",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844718.566671-18206-228476074087181 `" && echo ansible-tmp-1604844718.566671-18206-228476074087181="` echo /root/.ansible/tmp/ansible-tmp-1604844718.566671-18206-228476074087181 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpkwhch_c0 TO /root/.ansible/tmp/ansible-tmp-1604844718.566671-18206-228476074087181/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844718.566671-18206-228476074087181/ /root/.ansible/tmp/ansible-tmp-1604844718.566671-18206-228476074087181/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844718.566671-18206-228476074087181/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844718.566671-18206-228476074087181/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.269694",
    "end": "2020-11-08 14:12:00.968260",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:11:58.698566",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer1.walmart-net\n+ CSR_HOSTS=orderer1.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 14:11:59 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 14:11:59 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 14:11:59 [DEBUG] Checking for enrollment\n2020/11/08 14:11:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba600}\n2020/11/08 14:11:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c3730 DummyKeystore:<nil>}\n2020/11/08 14:11:59 [INFO] TLS Enabled\n2020/11/08 14:11:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:59 [DEBUG] Client Cert File: \n2020/11/08 14:11:59 [DEBUG] Client Key File: \n2020/11/08 14:11:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:59 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba600}\n2020/11/08 14:11:59 [DEBUG] Entered runRegister\n2020/11/08 14:11:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba600}\n2020/11/08 14:11:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c3730 DummyKeystore:<nil>}\n2020/11/08 14:11:59 [INFO] TLS Enabled\n2020/11/08 14:11:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:59 [DEBUG] Client Cert File: \n2020/11/08 14:11:59 [DEBUG] Client Key File: \n2020/11/08 14:11:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:59 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 14:11:59 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:11:59 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 14:11:59 [DEBUG] Register { Name:orderer1.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 14:11:59 [DEBUG] Adding token-based authorization header\n2020/11/08 14:11:59 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer1.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer1.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/08 14:11:59 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:11:59 [DEBUG] Response body result: map[secret:orderer1.walmart-net-pw]\n2020/11/08 14:11:59 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:11:59 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:11:59 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201886c0}\n2020/11/08 14:11:59 [DEBUG] Entered runEnroll\n2020/11/08 14:11:59 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 14:11:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201886c0}\n2020/11/08 14:11:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420188720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bfc70 DummyKeystore:<nil>}\n2020/11/08 14:11:59 [INFO] TLS Enabled\n2020/11/08 14:11:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:59 [DEBUG] Client Cert File: \n2020/11/08 14:11:59 [DEBUG] Client Key File: \n2020/11/08 14:11:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:59 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:11:59 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:11:59 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:11:59 [INFO] encoded CSR\n2020/11/08 14:11:59 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdTCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATVDhD8rmAxUmqgYCBY\\nC2zVJDOb7ilz2NBJJ8+a0At/8Tk25kqpHz+f5Di3fSPX7/VfMCAr4+Y6c8wj/EIF\\n4dwYoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNHADBEAiBqP8oRY94nocWf794E0F2QCCyl2n5RpTbI\\nETYKNgX8WAIgezepTQKV9osYABxVL1mwfSy8OlGn4IviaSlY2N4jDGM=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:11:59 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:11:59 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQXFTZ0F3SUJBZ0lVSjJYb2tkeFBjdVdUWGZvMWRLTDhzWTVhOUc4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTFRNFEvSzVnTVZKcW9HQWdXQXRzMVNRem0rNHBjOWpRU1NmUG10QUwKZi9FNU51WktxUjgvbitRNHQzMGoxKy8xWHpBZ0srUG1PblBNSS94Q0JlSGNHS09DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVArQnlweW1ld1dPckpQdktrSVdvVzZURHloRXdId1lEVlIwakJCZ3cKRm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDSFpHTEdLemxBaFBYMVRpVGNqWGkyCnl4VDNyZHQ1K29IdEs1eXdQeG8xV0FJZ2JFOHhsZ2lsbTRtQlRMMDZRU1hqWXVOWTFzdEsxYk5Nd2FRMWF0OXEKQ1lBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:11:59 [DEBUG] newEnrollmentResponse orderer1.walmart-net\n2020/11/08 14:11:59 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/08 14:11:59 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/ce030b6d299c7b759f1f834893752d099a780c7de4894ed639e00d4e8866ed86_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:11:59 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:11:59 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201a4120}\n2020/11/08 14:11:59 [DEBUG] Entered runEnroll\n2020/11/08 14:11:59 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:11:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201a4120}\n2020/11/08 14:11:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201a4180 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:11:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a18a0 DummyKeystore:<nil>}\n2020/11/08 14:11:59 [INFO] TLS Enabled\n2020/11/08 14:11:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:11:59 [DEBUG] Client Cert File: \n2020/11/08 14:11:59 [DEBUG] Client Key File: \n2020/11/08 14:11:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:11:59 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:11:59 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:11:59 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:11:59 [INFO] encoded CSR\n2020/11/08 14:11:59 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNOBEPQjH4pHrxyO4P/e\\nP3140q7fX8WrWjUr1WAFmn4qNd8BqNnHKUuraMr5HqYIdv86DOQjRdT/k2prrZU4\\nEgmgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhAPcxuMaSHO+LF6EZfqlEDc9S\\n+lRfr0Pzw4lUF5UvocMHAiAAk+FlClDFxRFkD/Cbu4qGaKW3n8A+oZh3LWEiHyDk\\nNA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:11:59 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:11:59 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0RENDQWx1Z0F3SUJBZ0lVWmRMVG1IMklLV25US1JKTmpEdUh0Nk43UmxVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTA0RVE5Q01maWtldkhJN2cvOTQvZlhqU3J0OWZ4YXRhTlN2VllBV2EKZmlvMTN3R28yY2NwUzZ0b3l2a2VwZ2gyL3pvTTVDTkYxUCtUYW11dGxUZ1NDYU9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVTEyRXVJNml0b296ekcxV3F4OEFDCm9ya2RkZDB3SHdZRFZSMGpCQmd3Rm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMWtaMmgzWnpCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXhMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKUndBd1JBSWdWZFQ3Q0l3bXNRUS9HVkFIZVNQcVZvcDJXKytxTDhBODFMQysvMWpRS2Y4Q0lBdVJzSzVBYm05dQpyd0lZaFVTcGtmMFJKdzRkZzdiS2dXS2hqNlNvdnNpWQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/08 14:11:59 [DEBUG] newEnrollmentResponse orderer1.walmart-net\n2020/11/08 14:11:59 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem\n2020/11/08 14:11:59 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer1s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer1 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer1 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:00 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:00 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 14:12:00 [DEBUG] Checking for enrollment\n2020/11/08 14:12:00 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fcb0}\n2020/11/08 14:12:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fd10 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a8660 DummyKeystore:<nil>}\n2020/11/08 14:12:00 [INFO] TLS Enabled\n2020/11/08 14:12:00 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:00 [DEBUG] Client Cert File: \n2020/11/08 14:12:00 [DEBUG] Client Key File: \n2020/11/08 14:12:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:00 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fcb0}\n2020/11/08 14:12:00 [DEBUG] Entered runRegister\n2020/11/08 14:12:00 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fcb0}\n2020/11/08 14:12:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fd10 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a8660 DummyKeystore:<nil>}\n2020/11/08 14:12:00 [INFO] TLS Enabled\n2020/11/08 14:12:00 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:00 [DEBUG] Client Cert File: \n2020/11/08 14:12:00 [DEBUG] Client Key File: \n2020/11/08 14:12:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:00 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 14:12:00 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:00 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 14:12:00 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/08 14:12:00 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:00 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/08 14:12:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:00 [DEBUG] Response body result: map[secret:User1@walmart-net-pw]\n2020/11/08 14:12:00 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/08 14:12:00 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/08 14:12:00 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml\n2020/11/08 14:12:00 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7e0}\n2020/11/08 14:12:00 [DEBUG] Entered runEnroll\n2020/11/08 14:12:00 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:00 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7e0}\n2020/11/08 14:12:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e840 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a42c0 DummyKeystore:<nil>}\n2020/11/08 14:12:00 [INFO] TLS Enabled\n2020/11/08 14:12:00 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:00 [DEBUG] Client Cert File: \n2020/11/08 14:12:00 [DEBUG] Client Key File: \n2020/11/08 14:12:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:00 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:00 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:00 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:00 [INFO] encoded CSR\n2020/11/08 14:12:00 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNN5A9+RbsG7lzmF6RYZC2tD\\ni1UnghvDI/ZMaeFQEF2Q1D5USSG91pXkj3ghHsZ/S2tLCec6ivc6789LlcxHgl2g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhALmffeRC8ltfsZvCq2PnbemLin7+\\nrlRT34kh9fVMdJwdAiBFj6ic4VBDC/KoRY0/4bFGLB24WmN+jdXbGL0IGZuhJw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyekNDQWxXZ0F3SUJBZ0lVYndERHJpT2hoWlp0SW1xMzhqOXpUWHcwZ2ZNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMDNrRDM1RnV3YnVYT1lYcEZoa0xhME9MVlNlQ0c4TWo5a3hwNFZBUVhaRFUKUGxSSkliM1dsZVNQZUNFZXhuOUxhMHNKNXpxSzl6cnZ6MHVWekVlQ1hhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVU0VCajd1Y25WVTd4cXJheW5uM2ZPblhtCkoxOHdId1lEVlIwakJCZ3dGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWgKQUlQK3NrVW9UM0tFYmRGU0JZb2FZbEhYSitPQU1LeVpISkIvZm51RXlOZWZBaUFMS1R2Smthc0xMQjYvV293bApRbC9DczBrRmdZVFFsdGdHcnJ3TjNWa1U1QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH]]\n2020/11/08 14:12:00 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 14:12:00 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/08 14:12:00 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/08 14:12:00 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:00 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c600}\n2020/11/08 14:12:00 [DEBUG] Entered runEnroll\n2020/11/08 14:12:00 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:00 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c600}\n2020/11/08 14:12:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b93a0 DummyKeystore:<nil>}\n2020/11/08 14:12:00 [INFO] TLS Enabled\n2020/11/08 14:12:00 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:00 [DEBUG] Client Cert File: \n2020/11/08 14:12:00 [DEBUG] Client Key File: \n2020/11/08 14:12:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:00 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:00 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:00 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:00 [INFO] encoded CSR\n2020/11/08 14:12:00 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBJ6NxslqHqBF41UyG+1cHLJyV7uhhFdQKTHDPdrAttRWu2LCrEhUuD5UQgas5aqP\\n+ScUcJuHREAbD4ApqUzmTOegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhAKl6\\njlM4VnaF8HoiWmkoNx28c7+6mlz1bZB/2p6iJhbHAiAx4fsO0uO2sDJdmfsh33zZ\\nOYt+vA2C9k79vBQ+Pgg48A==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6ekNDQW5hZ0F3SUJBZ0lVRjVnUmVsTjdVSXZpckg0cEN1UzRKME1kWkVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbm8zR3lXb2VvRVhqVlRJYjdWd2NzbkpYdTZHRVYxQXBNY005MnNDMjFGYTcKWXNLc1NGUzRQbFJDQnF6bHFvLzVKeFJ3bTRkRVFCc1BnQ21wVE9aTTU2T0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVeHNiMHR4c09MUldUcVpDbVlKVzQveWRWbHprd0h3WURWUjBqQkJnd0ZvQVUKNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdFS3dFMmRib2IwSnUvOVZwU1ZQUQpydXI2Y0wyVmd3Ty80SHFIeUZ2K3hHVUNJQjVydDgrb3U4NkJXV1lreHUzWWlGQ2xXeS9paGZDQ25wczUyK1RhCm5tdjMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:00 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 14:12:00 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/08 14:12:00 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/e83d691786fc3d49f7337ee7b20a298330c204ced379967d056721a1d3a54f2e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer1.walmart-net",
        "+ CSR_HOSTS=orderer1.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:11:59 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:11:59 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 14:11:59 [DEBUG] Checking for enrollment",
        "2020/11/08 14:11:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba600}",
        "2020/11/08 14:11:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c3730 DummyKeystore:<nil>}",
        "2020/11/08 14:11:59 [INFO] TLS Enabled",
        "2020/11/08 14:11:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:59 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:59 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:59 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba600}",
        "2020/11/08 14:11:59 [DEBUG] Entered runRegister",
        "2020/11/08 14:11:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba600}",
        "2020/11/08 14:11:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c3730 DummyKeystore:<nil>}",
        "2020/11/08 14:11:59 [INFO] TLS Enabled",
        "2020/11/08 14:11:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:59 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:59 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:59 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 14:11:59 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:11:59 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 14:11:59 [DEBUG] Register { Name:orderer1.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 14:11:59 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:11:59 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer1.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer1.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 14:11:59 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:11:59 [DEBUG] Response body result: map[secret:orderer1.walmart-net-pw]",
        "2020/11/08 14:11:59 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:11:59 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:11:59 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201886c0}",
        "2020/11/08 14:11:59 [DEBUG] Entered runEnroll",
        "2020/11/08 14:11:59 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:11:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201886c0}",
        "2020/11/08 14:11:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420188720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bfc70 DummyKeystore:<nil>}",
        "2020/11/08 14:11:59 [INFO] TLS Enabled",
        "2020/11/08 14:11:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:59 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:59 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:59 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:11:59 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:11:59 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:11:59 [INFO] encoded CSR",
        "2020/11/08 14:11:59 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdTCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATVDhD8rmAxUmqgYCBY\\nC2zVJDOb7ilz2NBJJ8+a0At/8Tk25kqpHz+f5Di3fSPX7/VfMCAr4+Y6c8wj/EIF\\n4dwYoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNHADBEAiBqP8oRY94nocWf794E0F2QCCyl2n5RpTbI\\nETYKNgX8WAIgezepTQKV9osYABxVL1mwfSy8OlGn4IviaSlY2N4jDGM=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:11:59 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:11:59 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQXFTZ0F3SUJBZ0lVSjJYb2tkeFBjdVdUWGZvMWRLTDhzWTVhOUc4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTFRNFEvSzVnTVZKcW9HQWdXQXRzMVNRem0rNHBjOWpRU1NmUG10QUwKZi9FNU51WktxUjgvbitRNHQzMGoxKy8xWHpBZ0srUG1PblBNSS94Q0JlSGNHS09DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVArQnlweW1ld1dPckpQdktrSVdvVzZURHloRXdId1lEVlIwakJCZ3cKRm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDSFpHTEdLemxBaFBYMVRpVGNqWGkyCnl4VDNyZHQ1K29IdEs1eXdQeG8xV0FJZ2JFOHhsZ2lsbTRtQlRMMDZRU1hqWXVOWTFzdEsxYk5Nd2FRMWF0OXEKQ1lBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:11:59 [DEBUG] newEnrollmentResponse orderer1.walmart-net",
        "2020/11/08 14:11:59 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/08 14:11:59 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/ce030b6d299c7b759f1f834893752d099a780c7de4894ed639e00d4e8866ed86_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:11:59 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:11:59 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201a4120}",
        "2020/11/08 14:11:59 [DEBUG] Entered runEnroll",
        "2020/11/08 14:11:59 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:11:59 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201a4120}",
        "2020/11/08 14:11:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201a4180 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:11:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a18a0 DummyKeystore:<nil>}",
        "2020/11/08 14:11:59 [INFO] TLS Enabled",
        "2020/11/08 14:11:59 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:11:59 [DEBUG] Client Cert File: ",
        "2020/11/08 14:11:59 [DEBUG] Client Key File: ",
        "2020/11/08 14:11:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:11:59 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:11:59 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:11:59 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:11:59 [INFO] encoded CSR",
        "2020/11/08 14:11:59 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNOBEPQjH4pHrxyO4P/e\\nP3140q7fX8WrWjUr1WAFmn4qNd8BqNnHKUuraMr5HqYIdv86DOQjRdT/k2prrZU4\\nEgmgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhAPcxuMaSHO+LF6EZfqlEDc9S\\n+lRfr0Pzw4lUF5UvocMHAiAAk+FlClDFxRFkD/Cbu4qGaKW3n8A+oZh3LWEiHyDk\\nNA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:11:59 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:11:59 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0RENDQWx1Z0F3SUJBZ0lVWmRMVG1IMklLV25US1JKTmpEdUh0Nk43UmxVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTA0RVE5Q01maWtldkhJN2cvOTQvZlhqU3J0OWZ4YXRhTlN2VllBV2EKZmlvMTN3R28yY2NwUzZ0b3l2a2VwZ2gyL3pvTTVDTkYxUCtUYW11dGxUZ1NDYU9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVTEyRXVJNml0b296ekcxV3F4OEFDCm9ya2RkZDB3SHdZRFZSMGpCQmd3Rm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMWtaMmgzWnpCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXhMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKUndBd1JBSWdWZFQ3Q0l3bXNRUS9HVkFIZVNQcVZvcDJXKytxTDhBODFMQysvMWpRS2Y4Q0lBdVJzSzVBYm05dQpyd0lZaFVTcGtmMFJKdzRkZzdiS2dXS2hqNlNvdnNpWQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/08 14:11:59 [DEBUG] newEnrollmentResponse orderer1.walmart-net",
        "2020/11/08 14:11:59 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem",
        "2020/11/08 14:11:59 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer1s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer1 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer1 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:00 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:00 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:00 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:00 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fcb0}",
        "2020/11/08 14:12:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fd10 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a8660 DummyKeystore:<nil>}",
        "2020/11/08 14:12:00 [INFO] TLS Enabled",
        "2020/11/08 14:12:00 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:00 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:00 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:00 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fcb0}",
        "2020/11/08 14:12:00 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:00 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fcb0}",
        "2020/11/08 14:12:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fd10 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a8660 DummyKeystore:<nil>}",
        "2020/11/08 14:12:00 [INFO] TLS Enabled",
        "2020/11/08 14:12:00 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:00 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:00 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:00 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 14:12:00 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:00 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 14:12:00 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/08 14:12:00 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:00 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/08 14:12:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:00 [DEBUG] Response body result: map[secret:User1@walmart-net-pw]",
        "2020/11/08 14:12:00 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/08 14:12:00 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/08 14:12:00 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:00 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7e0}",
        "2020/11/08 14:12:00 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:00 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:00 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7e0}",
        "2020/11/08 14:12:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e840 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a42c0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:00 [INFO] TLS Enabled",
        "2020/11/08 14:12:00 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:00 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:00 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:00 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:00 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:00 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:00 [INFO] encoded CSR",
        "2020/11/08 14:12:00 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNN5A9+RbsG7lzmF6RYZC2tD\\ni1UnghvDI/ZMaeFQEF2Q1D5USSG91pXkj3ghHsZ/S2tLCec6ivc6789LlcxHgl2g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhALmffeRC8ltfsZvCq2PnbemLin7+\\nrlRT34kh9fVMdJwdAiBFj6ic4VBDC/KoRY0/4bFGLB24WmN+jdXbGL0IGZuhJw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyekNDQWxXZ0F3SUJBZ0lVYndERHJpT2hoWlp0SW1xMzhqOXpUWHcwZ2ZNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMDNrRDM1RnV3YnVYT1lYcEZoa0xhME9MVlNlQ0c4TWo5a3hwNFZBUVhaRFUKUGxSSkliM1dsZVNQZUNFZXhuOUxhMHNKNXpxSzl6cnZ6MHVWekVlQ1hhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVU0VCajd1Y25WVTd4cXJheW5uM2ZPblhtCkoxOHdId1lEVlIwakJCZ3dGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWgKQUlQK3NrVW9UM0tFYmRGU0JZb2FZbEhYSitPQU1LeVpISkIvZm51RXlOZWZBaUFMS1R2Smthc0xMQjYvV293bApRbC9DczBrRmdZVFFsdGdHcnJ3TjNWa1U1QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH]]",
        "2020/11/08 14:12:00 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 14:12:00 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/08 14:12:00 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/08 14:12:00 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:00 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c600}",
        "2020/11/08 14:12:00 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:00 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:00 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c600}",
        "2020/11/08 14:12:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b93a0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:00 [INFO] TLS Enabled",
        "2020/11/08 14:12:00 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:00 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:00 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:00 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:00 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:00 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:00 [INFO] encoded CSR",
        "2020/11/08 14:12:00 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBJ6NxslqHqBF41UyG+1cHLJyV7uhhFdQKTHDPdrAttRWu2LCrEhUuD5UQgas5aqP\\n+ScUcJuHREAbD4ApqUzmTOegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhAKl6\\njlM4VnaF8HoiWmkoNx28c7+6mlz1bZB/2p6iJhbHAiAx4fsO0uO2sDJdmfsh33zZ\\nOYt+vA2C9k79vBQ+Pgg48A==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6ekNDQW5hZ0F3SUJBZ0lVRjVnUmVsTjdVSXZpckg0cEN1UzRKME1kWkVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbm8zR3lXb2VvRVhqVlRJYjdWd2NzbkpYdTZHRVYxQXBNY005MnNDMjFGYTcKWXNLc1NGUzRQbFJDQnF6bHFvLzVKeFJ3bTRkRVFCc1BnQ21wVE9aTTU2T0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVeHNiMHR4c09MUldUcVpDbVlKVzQveWRWbHprd0h3WURWUjBqQkJnd0ZvQVUKNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdFS3dFMmRib2IwSnUvOVZwU1ZQUQpydXI2Y0wyVmd3Ty80SHFIeUZ2K3hHVUNJQjVydDgrb3U4NkJXV1lreHUzWWlGQ2xXeS9paGZDQ25wczUyK1RhCm5tdjMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:00 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 14:12:00 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/08 14:12:00 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/e83d691786fc3d49f7337ee7b20a298330c204ced379967d056721a1d3a54f2e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer1.walmart-net-pw\nPassword: User1@walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer1.walmart-net-pw",
        "Password: User1@walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844721.0453575-18251-52008255603665 `" && echo ansible-tmp-1604844721.0453575-18251-52008255603665="` echo /root/.ansible/tmp/ansible-tmp-1604844721.0453575-18251-52008255603665 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp6t77ev_j TO /root/.ansible/tmp/ansible-tmp-1604844721.0453575-18251-52008255603665/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844721.0453575-18251-52008255603665/ /root/.ansible/tmp/ansible-tmp-1604844721.0453575-18251-52008255603665/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844721.0453575-18251-52008255603665/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844721.0453575-18251-52008255603665/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.577584",
    "end": "2020-11-08 14:12:01.754947",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:01.177363",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844721.8284514-18291-146227780324782 `" && echo ansible-tmp-1604844721.8284514-18291-146227780324782="` echo /root/.ansible/tmp/ansible-tmp-1604844721.8284514-18291-146227780324782 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprj_hsrq3 TO /root/.ansible/tmp/ansible-tmp-1604844721.8284514-18291-146227780324782/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844721.8284514-18291-146227780324782/ /root/.ansible/tmp/ansible-tmp-1604844721.8284514-18291-146227780324782/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844721.8284514-18291-146227780324782/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844721.8284514-18291-146227780324782/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.088675",
    "end": "2020-11-08 14:12:02.049498",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:01.960823",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844722.118105-18343-133628214699288 `" && echo ansible-tmp-1604844722.118105-18343-133628214699288="` echo /root/.ansible/tmp/ansible-tmp-1604844722.118105-18343-133628214699288 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpd_24u5t8 TO /root/.ansible/tmp/ansible-tmp-1604844722.118105-18343-133628214699288/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844722.118105-18343-133628214699288/ /root/.ansible/tmp/ansible-tmp-1604844722.118105-18343-133628214699288/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844722.118105-18343-133628214699288/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844722.118105-18343-133628214699288/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer1-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5RENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9EUTVXaGNOTWpNd09EQXpNRGd5Ck9EUTVXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TVM1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFkCmFncTQ3ZjdueVp6eHZRVnM5UjRoV0VQeHVpZk1HZEttRVFveW52NVUrWDNlRndLYytQSkZPekJKNnlQMVBlRXIKbENGWHR2ZmxTYzYzb1dXOHpqMGhvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVVJqNWFNMDRUd3dCSk43SG9oWjhpbmpQcDdWNHdDZ1lJS29aSXpqMEVBd0lEClJ3QXdSQUlnUVVtNmRUNG41VlErT0I3TXMxckFtNVV6ZzNwS1hzNmlicnBJbUVTWkU2OENJQWw2d3I4enUrMFEKT011VTBTREZVMjhKamZjSnFQb1hBLzc3ZFlTRHhHNWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjhEQ0NBWmFnQXdJQkFnSVVNemhzd2VRL1l4R1RBbHFkUDFpdmtNWXg4NzB3Q2dZSUtvWkl6ajBFQXdJdwpWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEVlFRRERBcGpZUzUzWVd4dFlYSjBNQjRYRFRJd01URXcKTmpBNE1Ua3hObG9YRFRJek1EZ3lOekE0TVRreE5sb3dWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTQpCa3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEClZRUUREQXBqWVM1M1lXeHRZWEowTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFeG9JdDhlWisKOVhHQ0M3VzdMbEdVK2lVUTV2bmFxem1PczF0Snc2anZMYm40ZDlLTk56NHVuclg1LzViM3E0WWtMeEpZT3poTQpYYzd3N3JwbXFLV0VzcU5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBYVl3CkhRWURWUjBPQkJZRUZKNGlUblB4dk1wbVNLSXFkN2ZmaG5tQzhNOEFNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUMKSVFEZ3dQZlFZTVBDYjJiaXdma09UNVZkVnVFUkh2SWdidGxrdHpWVkZCTjl0Z0lnTmw0T3AyVEdIT1kwcXRoRAp2dENDMUNvMGhEbHZKTGVyYUxwYlYxdGtHVGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVjRXFDbXgycWJFcnQyZmd0ODZhR2ZGWVdZcGx2Z2pQK00yREpqL2pwdnlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSFdvS3VPMys1OG1jOGIwRmJQVWVJVmhEOGJvbnpCblNwaEVLTXA3K1ZQbDkzaGNDblBqeQpSVHN3U2VzajlUM2hLNVFoVjdiMzVVbk90NkZsdk00OUlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:28:49Z",
                "name": "orderer1-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408734",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer1-walmart-net-ambassador-certs",
                "uid": "a5a7499f-2fa9-4ba5-9662-97fa6bef6281"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844722.7862105-18371-259975165336247 `" && echo ansible-tmp-1604844722.7862105-18371-259975165336247="` echo /root/.ansible/tmp/ansible-tmp-1604844722.7862105-18371-259975165336247 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpv1wb6hd7 TO /root/.ansible/tmp/ansible-tmp-1604844722.7862105-18371-259975165336247/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844722.7862105-18371-259975165336247/ /root/.ansible/tmp/ansible-tmp-1604844722.7862105-18371-259975165336247/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844722.7862105-18371-259975165336247/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844722.7862105-18371-259975165336247/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
    "delta": "0:00:00.114161",
    "end": "2020-11-08 14:12:03.065390",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:02.951229",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844723.310189-18412-158220030985499 `" && echo ansible-tmp-1604844723.310189-18412-158220030985499="` echo /root/.ansible/tmp/ansible-tmp-1604844723.310189-18412-158220030985499 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3dddzhhs TO /root/.ansible/tmp/ansible-tmp-1604844723.310189-18412-158220030985499/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844723.310189-18412-158220030985499/ /root/.ansible/tmp/ansible-tmp-1604844723.310189-18412-158220030985499/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844723.310189-18412-158220030985499/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844723.310189-18412-158220030985499/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
    "delta": "0:00:00.047665",
    "end": "2020-11-08 14:12:03.492147",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:03.444482",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844723.566366-18450-209891539116861 `" && echo ansible-tmp-1604844723.566366-18450-209891539116861="` echo /root/.ansible/tmp/ansible-tmp-1604844723.566366-18450-209891539116861 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpxb40lmg3 TO /root/.ansible/tmp/ansible-tmp-1604844723.566366-18450-209891539116861/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844723.566366-18450-209891539116861/ /root/.ansible/tmp/ansible-tmp-1604844723.566366-18450-209891539116861/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844723.566366-18450-209891539116861/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844723.566366-18450-209891539116861/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
    "delta": "0:00:00.053951",
    "end": "2020-11-08 14:12:03.755219",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:03.701268",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844723.8575144-18486-246598567250699 `" && echo ansible-tmp-1604844723.8575144-18486-246598567250699="` echo /root/.ansible/tmp/ansible-tmp-1604844723.8575144-18486-246598567250699 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphfmeu6pf TO /root/.ansible/tmp/ansible-tmp-1604844723.8575144-18486-246598567250699/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844723.8575144-18486-246598567250699/ /root/.ansible/tmp/ansible-tmp-1604844723.8575144-18486-246598567250699/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844723.8575144-18486-246598567250699/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844723.8575144-18486-246598567250699/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
    "delta": "0:00:00.052479",
    "end": "2020-11-08 14:12:04.046214",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:03.993735",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844724.254185-18525-192764723049899 `" && echo ansible-tmp-1604844724.254185-18525-192764723049899="` echo /root/.ansible/tmp/ansible-tmp-1604844724.254185-18525-192764723049899 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp9nar4gnu TO /root/.ansible/tmp/ansible-tmp-1604844724.254185-18525-192764723049899/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844724.254185-18525-192764723049899/ /root/.ansible/tmp/ansible-tmp-1604844724.254185-18525-192764723049899/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844724.254185-18525-192764723049899/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844724.254185-18525-192764723049899/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.482724",
    "end": "2020-11-08 14:12:05.874813",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:04.392089",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844725.9422507-18570-28781290910894 `" && echo ansible-tmp-1604844725.9422507-18570-28781290910894="` echo /root/.ansible/tmp/ansible-tmp-1604844725.9422507-18570-28781290910894 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp70loyzsf TO /root/.ansible/tmp/ansible-tmp-1604844725.9422507-18570-28781290910894/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844725.9422507-18570-28781290910894/ /root/.ansible/tmp/ansible-tmp-1604844725.9422507-18570-28781290910894/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844725.9422507-18570-28781290910894/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844725.9422507-18570-28781290910894/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844726.2718017-18596-222288179574969 `" && echo ansible-tmp-1604844726.2718017-18596-222288179574969="` echo /root/.ansible/tmp/ansible-tmp-1604844726.2718017-18596-222288179574969 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzh8qs_ha TO /root/.ansible/tmp/ansible-tmp-1604844726.2718017-18596-222288179574969/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844726.2718017-18596-222288179574969/ /root/.ansible/tmp/ansible-tmp-1604844726.2718017-18596-222288179574969/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844726.2718017-18596-222288179574969/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844726.2718017-18596-222288179574969/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer2.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer2.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer2.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer2.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844726.5138817-18596-170773161742814 `" && echo ansible-tmp-1604844726.5138817-18596-170773161742814="` echo /root/.ansible/tmp/ansible-tmp-1604844726.5138817-18596-170773161742814 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5iwkka7f TO /root/.ansible/tmp/ansible-tmp-1604844726.5138817-18596-170773161742814/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844726.5138817-18596-170773161742814/ /root/.ansible/tmp/ansible-tmp-1604844726.5138817-18596-170773161742814/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844726.5138817-18596-170773161742814/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844726.5138817-18596-170773161742814/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844726.7887108-18646-207616824858230 `" && echo ansible-tmp-1604844726.7887108-18646-207616824858230="` echo /root/.ansible/tmp/ansible-tmp-1604844726.7887108-18646-207616824858230 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpxv7946r5 TO /root/.ansible/tmp/ansible-tmp-1604844726.7887108-18646-207616824858230/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844726.7887108-18646-207616824858230/ /root/.ansible/tmp/ansible-tmp-1604844726.7887108-18646-207616824858230/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844726.7887108-18646-207616824858230/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844726.7887108-18646-207616824858230/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.746374",
    "end": "2020-11-08 14:12:10.668867",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:06.922493",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844730.7386937-18697-49293589964334 `" && echo ansible-tmp-1604844730.7386937-18697-49293589964334="` echo /root/.ansible/tmp/ansible-tmp-1604844730.7386937-18697-49293589964334 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphcwcd2hp TO /root/.ansible/tmp/ansible-tmp-1604844730.7386937-18697-49293589964334/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844730.7386937-18697-49293589964334/ /root/.ansible/tmp/ansible-tmp-1604844730.7386937-18697-49293589964334/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844730.7386937-18697-49293589964334/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844730.7386937-18697-49293589964334/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.230151",
    "end": "2020-11-08 14:12:13.102752",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:10.872601",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer2.walmart-net\n+ CSR_HOSTS=orderer2.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:11 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:11 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 14:12:11 [DEBUG] Checking for enrollment\n2020/11/08 14:12:11 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}\n2020/11/08 14:12:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fe90 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019ccc0 DummyKeystore:<nil>}\n2020/11/08 14:12:11 [INFO] TLS Enabled\n2020/11/08 14:12:11 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:11 [DEBUG] Client Cert File: \n2020/11/08 14:12:11 [DEBUG] Client Key File: \n2020/11/08 14:12:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:11 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}\n2020/11/08 14:12:11 [DEBUG] Entered runRegister\n2020/11/08 14:12:11 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}\n2020/11/08 14:12:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fe90 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019ccc0 DummyKeystore:<nil>}\n2020/11/08 14:12:11 [INFO] TLS Enabled\n2020/11/08 14:12:11 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:11 [DEBUG] Client Cert File: \n2020/11/08 14:12:11 [DEBUG] Client Key File: \n2020/11/08 14:12:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:11 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 14:12:11 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:11 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 14:12:11 [DEBUG] Register { Name:orderer2.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 14:12:11 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:11 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer2.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer2.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/08 14:12:11 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:11 [DEBUG] Response body result: map[secret:orderer2.walmart-net-pw]\n2020/11/08 14:12:11 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:11 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:11 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}\n2020/11/08 14:12:11 [DEBUG] Entered runEnroll\n2020/11/08 14:12:11 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:11 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}\n2020/11/08 14:12:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039e6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb3b0 DummyKeystore:<nil>}\n2020/11/08 14:12:11 [INFO] TLS Enabled\n2020/11/08 14:12:11 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:11 [DEBUG] Client Cert File: \n2020/11/08 14:12:11 [DEBUG] Client Key File: \n2020/11/08 14:12:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:11 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:11 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:11 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:11 [INFO] encoded CSR\n2020/11/08 14:12:11 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATwydjbessTnjOuzvjR\\n8EgGAXYLs3rMh5HAIKDyRlG/5a2CvWUDYpAsxCmz2ThF1wScbMrhmITQzG5Dbx2w\\nPe6uoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEA/HexV1/Ci5C6OBVnbarWTodwNeIevaDw\\nR53b1OdVx7gCIEFz+JRL+aJ59KSaOjpxZGNu2pKkjBE61/fbmD/G47EE\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:11 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:11 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVQlFvWXhkWE9CL08yOUVKajVjTFVKODRuOURZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThNblkyM3JMRTU0enJzNzQwZkJJQmdGMkM3TjZ6SWVSd0NDZzhrWlIKditXdGdyMWxBMktRTE1RcHM5azRSZGNFbkd6SzRaaUUwTXh1UTI4ZHNEM3VycU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVSsyVkV3dnRYejF4ekpYTUlqeElqSWxnK3NwOHdId1lEVlIwakJCZ3cKRm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUFHeDlndUFGdytPQlV5TFRYR1doUThlCmVSQmQvVjM3ckVKOGZpZVlic1k3QWlCTDhvL0d1Nzh6K2hhNlpWQit4N09UOUxCMUFmUWZBb08zU0llOHZzb1IKV2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:11 [DEBUG] newEnrollmentResponse orderer2.walmart-net\n2020/11/08 14:12:11 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/08 14:12:11 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/2445e401a1bb80d4745bcc9c85122c4b87ec36d3c9ba1471ff3cf0f1ec45a04a_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:11 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:11 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42014fec0}\n2020/11/08 14:12:11 [DEBUG] Entered runEnroll\n2020/11/08 14:12:11 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:11 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42014fec0}\n2020/11/08 14:12:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42014ff20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039fd90 DummyKeystore:<nil>}\n2020/11/08 14:12:11 [INFO] TLS Enabled\n2020/11/08 14:12:11 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:11 [DEBUG] Client Cert File: \n2020/11/08 14:12:11 [DEBUG] Client Key File: \n2020/11/08 14:12:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:11 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:11 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:11 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:11 [INFO] encoded CSR\n2020/11/08 14:12:11 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLvwFswnLR7IJQgL8c93\\nH8+zWxZuPiN5UHHTjQcbmIUTTiX7L+miigJ6Z5JEqDzAcddV5Mt7dZPooB0l/NeN\\nUvegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhAIVLFWil/tZuro6f8VeRBq1P\\nUaz1OjXA6LSaJaqozT0YAiAbSogEKemLrr8XhJs6aGFKD0uPn90G5jxK0G36ts6U\\nlw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:12 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:12 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0RENDQWx1Z0F3SUJBZ0lVSS8yN3pxM2x2WDJmOGlTUjJYamh6dU41b2Rzd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRXUvQVd6Q2N0SHNnbENBdnh6M2NmejdOYkZtNCtJM2xRY2RPTkJ4dVkKaFJOT0pmc3Y2YUtLQW5wbmtrU29QTUJ4MTFYa3kzdDFrK2lnSFNYODE0MVM5Nk9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWtEMW50UmpvUDJaaUlTVTVQQWZJCkl1ZGJQdU13SHdZRFZSMGpCQmd3Rm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMWtaMmgzWnpCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXlMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKUndBd1JBSWdQWWx0REkzSUxLRElMZGI2LyswTkJSWkVOY1BnclN5T05EMmFqZUVTcXJ3Q0lFcFJlbXZ3MU5sRAo0dkhQbnkxSml6aWNIMXpUZi9jZ2JjcTBsTEpIeG44SwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:12 [DEBUG] newEnrollmentResponse orderer2.walmart-net\n2020/11/08 14:12:12 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem\n2020/11/08 14:12:12 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer2s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer2 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer2 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 14:12:12 [DEBUG] Checking for enrollment\n2020/11/08 14:12:12 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392570}\n2020/11/08 14:12:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203925d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ccf0 DummyKeystore:<nil>}\n2020/11/08 14:12:12 [INFO] TLS Enabled\n2020/11/08 14:12:12 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:12 [DEBUG] Client Cert File: \n2020/11/08 14:12:12 [DEBUG] Client Key File: \n2020/11/08 14:12:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:12 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392570}\n2020/11/08 14:12:12 [DEBUG] Entered runRegister\n2020/11/08 14:12:12 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392570}\n2020/11/08 14:12:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203925d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ccf0 DummyKeystore:<nil>}\n2020/11/08 14:12:12 [INFO] TLS Enabled\n2020/11/08 14:12:12 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:12 [DEBUG] Client Cert File: \n2020/11/08 14:12:12 [DEBUG] Client Key File: \n2020/11/08 14:12:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:12 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 14:12:12 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:12 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 14:12:12 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/08 14:12:12 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:12 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/08 14:12:12 [DEBUG] Received response\nstatusCode=500 (500 Internal Server Error)\nError: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered\n\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/08 14:12:12 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/08 14:12:12 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a720}\n2020/11/08 14:12:12 [DEBUG] Entered runEnroll\n2020/11/08 14:12:12 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:12 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a720}\n2020/11/08 14:12:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a1a40 DummyKeystore:<nil>}\n2020/11/08 14:12:12 [INFO] TLS Enabled\n2020/11/08 14:12:12 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:12 [DEBUG] Client Cert File: \n2020/11/08 14:12:12 [DEBUG] Client Key File: \n2020/11/08 14:12:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:12 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:12 [INFO] encoded CSR\n2020/11/08 14:12:12 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMtE0SL6AMo3KW6VMwh/Cd6Y\\nNE8s48TIF6jnHOhuDuckKJO1WG/af6w/X+SDR7j+7+x+/fkjtRr053rsPrKVJQWg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgNxLUGaXv1arQCTS0po9VEluNqsUQ\\ncz+c5S7J35pVyNECIHO4C1oGBDvn0FgpByoys7ew0HAOFGUcCqtZEp6TuDkg\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:12 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:12 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVYlM2enFvQ1JrYUVuNjRrZyswRVJzaG5hRzI4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFeTBUUkl2b0F5amNwYnBVekNIOEozcGcwVHl6anhNZ1hxT2NjNkc0TzV5UW8KazdWWWI5cC9yRDlmNUlOSHVQN3Y3SDc5K1NPMUd2VG5ldXcrc3BVbEJhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVaWZCZmhGbFlmcXZjdFpTUXdBaTBjZVd3Clc3Y3dId1lEVlIwakJCZ3dGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKQTZUSnlCYlpraGtxcjlFV0hoTTVmclFVajdnbDczWTJwWnBHK3FVWE1zY0NJQXl2dEFVNUtNVVdaTVh2OEhnZwpZaEhRczRBaUdHcVYzcktyL3MwemhDN0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/08 14:12:12 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 14:12:12 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/08 14:12:12 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/08 14:12:12 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:12 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037e660}\n2020/11/08 14:12:12 [DEBUG] Entered runEnroll\n2020/11/08 14:12:12 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:12 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037e660}\n2020/11/08 14:12:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037e6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42040dfb0 DummyKeystore:<nil>}\n2020/11/08 14:12:12 [INFO] TLS Enabled\n2020/11/08 14:12:12 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:12 [DEBUG] Client Cert File: \n2020/11/08 14:12:12 [DEBUG] Client Key File: \n2020/11/08 14:12:12 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:12 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:12 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:12 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:12 [INFO] encoded CSR\n2020/11/08 14:12:12 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBGuMF7d78uA9q1/X+Y5bvn2otwgicc3MYjCwdpMZMTmDcjOqDTQTMN6e1D5B3pW9\\nYFsjApzvg5LSESWIAS5j7o6gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgEYHD\\nbwQ7izeYgI7w/HPFdbW8cjkMYoLxROmdPjdIg2UCIB69stp2cupYcB8PT1PuU2nA\\noXLzpdzviK96PyagrC1O\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:13 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:13 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVQ0gzbTFHMWR3RVA5aS9yMTVIRnh6Y3FIZ3Y0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFYTR3WHQzdnk0RDJyWDlmNWpsdStmYWkzQ0NKeHpjeGlNTEIya3hreE9ZTnkKTTZvTk5CTXczcDdVUGtIZWxiMWdXeU1Dbk8rRGt0SVJKWWdCTG1QdWpxT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVQXh0K3RBd2JoOE1mMVZRNzMvWW14Y1htU2xBd0h3WURWUjBqQkJnd0ZvQVUKNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTkxRcVhaTnVURGswMEZWWVM1ZwpuNndudWdLcVZTWXg0SUJKQWJLbU1RY3hBaUFFaXkrM3FiVUJWV3Rpc2pmVmxCbDhYNkdONDdQSTBSdVpvdkxUCnJEalArZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]\n2020/11/08 14:12:13 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 14:12:13 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/08 14:12:13 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/86ddc58e51e2c5135afbab2752908ac2503e7bb68d11dd57546e50cd1e24a41d_sk /root/ca-tools/walmart/client1/tls/keystore/e83d691786fc3d49f7337ee7b20a298330c204ced379967d056721a1d3a54f2e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer2.walmart-net",
        "+ CSR_HOSTS=orderer2.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:11 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:11 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:11 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:11 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}",
        "2020/11/08 14:12:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fe90 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019ccc0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:11 [INFO] TLS Enabled",
        "2020/11/08 14:12:11 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:11 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:11 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:11 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}",
        "2020/11/08 14:12:11 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:11 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}",
        "2020/11/08 14:12:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fe90 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019ccc0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:11 [INFO] TLS Enabled",
        "2020/11/08 14:12:11 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:11 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:11 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:11 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 14:12:11 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:11 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 14:12:11 [DEBUG] Register { Name:orderer2.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 14:12:11 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:11 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer2.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer2.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 14:12:11 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:11 [DEBUG] Response body result: map[secret:orderer2.walmart-net-pw]",
        "2020/11/08 14:12:11 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:11 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:11 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}",
        "2020/11/08 14:12:11 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:11 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:11 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}",
        "2020/11/08 14:12:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039e6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb3b0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:11 [INFO] TLS Enabled",
        "2020/11/08 14:12:11 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:11 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:11 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:11 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:11 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:11 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:11 [INFO] encoded CSR",
        "2020/11/08 14:12:11 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATwydjbessTnjOuzvjR\\n8EgGAXYLs3rMh5HAIKDyRlG/5a2CvWUDYpAsxCmz2ThF1wScbMrhmITQzG5Dbx2w\\nPe6uoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEA/HexV1/Ci5C6OBVnbarWTodwNeIevaDw\\nR53b1OdVx7gCIEFz+JRL+aJ59KSaOjpxZGNu2pKkjBE61/fbmD/G47EE\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:11 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:11 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVQlFvWXhkWE9CL08yOUVKajVjTFVKODRuOURZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThNblkyM3JMRTU0enJzNzQwZkJJQmdGMkM3TjZ6SWVSd0NDZzhrWlIKditXdGdyMWxBMktRTE1RcHM5azRSZGNFbkd6SzRaaUUwTXh1UTI4ZHNEM3VycU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVSsyVkV3dnRYejF4ekpYTUlqeElqSWxnK3NwOHdId1lEVlIwakJCZ3cKRm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUFHeDlndUFGdytPQlV5TFRYR1doUThlCmVSQmQvVjM3ckVKOGZpZVlic1k3QWlCTDhvL0d1Nzh6K2hhNlpWQit4N09UOUxCMUFmUWZBb08zU0llOHZzb1IKV2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:11 [DEBUG] newEnrollmentResponse orderer2.walmart-net",
        "2020/11/08 14:12:11 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/08 14:12:11 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/2445e401a1bb80d4745bcc9c85122c4b87ec36d3c9ba1471ff3cf0f1ec45a04a_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:11 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:11 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42014fec0}",
        "2020/11/08 14:12:11 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:11 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:11 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42014fec0}",
        "2020/11/08 14:12:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42014ff20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039fd90 DummyKeystore:<nil>}",
        "2020/11/08 14:12:11 [INFO] TLS Enabled",
        "2020/11/08 14:12:11 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:11 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:11 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:11 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:11 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:11 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:11 [INFO] encoded CSR",
        "2020/11/08 14:12:11 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLvwFswnLR7IJQgL8c93\\nH8+zWxZuPiN5UHHTjQcbmIUTTiX7L+miigJ6Z5JEqDzAcddV5Mt7dZPooB0l/NeN\\nUvegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhAIVLFWil/tZuro6f8VeRBq1P\\nUaz1OjXA6LSaJaqozT0YAiAbSogEKemLrr8XhJs6aGFKD0uPn90G5jxK0G36ts6U\\nlw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:12 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:12 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0RENDQWx1Z0F3SUJBZ0lVSS8yN3pxM2x2WDJmOGlTUjJYamh6dU41b2Rzd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRXUvQVd6Q2N0SHNnbENBdnh6M2NmejdOYkZtNCtJM2xRY2RPTkJ4dVkKaFJOT0pmc3Y2YUtLQW5wbmtrU29QTUJ4MTFYa3kzdDFrK2lnSFNYODE0MVM5Nk9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWtEMW50UmpvUDJaaUlTVTVQQWZJCkl1ZGJQdU13SHdZRFZSMGpCQmd3Rm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMWtaMmgzWnpCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXlMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKUndBd1JBSWdQWWx0REkzSUxLRElMZGI2LyswTkJSWkVOY1BnclN5T05EMmFqZUVTcXJ3Q0lFcFJlbXZ3MU5sRAo0dkhQbnkxSml6aWNIMXpUZi9jZ2JjcTBsTEpIeG44SwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:12 [DEBUG] newEnrollmentResponse orderer2.walmart-net",
        "2020/11/08 14:12:12 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem",
        "2020/11/08 14:12:12 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer2s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer2 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer2 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:12 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:12 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:12 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:12 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392570}",
        "2020/11/08 14:12:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203925d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ccf0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:12 [INFO] TLS Enabled",
        "2020/11/08 14:12:12 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:12 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:12 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:12 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392570}",
        "2020/11/08 14:12:12 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:12 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392570}",
        "2020/11/08 14:12:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203925d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ccf0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:12 [INFO] TLS Enabled",
        "2020/11/08 14:12:12 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:12 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:12 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:12 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 14:12:12 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:12 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 14:12:12 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/08 14:12:12 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:12 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/08 14:12:12 [DEBUG] Received response",
        "statusCode=500 (500 Internal Server Error)",
        "Error: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered",
        "",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/08 14:12:12 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/08 14:12:12 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a720}",
        "2020/11/08 14:12:12 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:12 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:12 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a720}",
        "2020/11/08 14:12:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a1a40 DummyKeystore:<nil>}",
        "2020/11/08 14:12:12 [INFO] TLS Enabled",
        "2020/11/08 14:12:12 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:12 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:12 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:12 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:12 [INFO] encoded CSR",
        "2020/11/08 14:12:12 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMtE0SL6AMo3KW6VMwh/Cd6Y\\nNE8s48TIF6jnHOhuDuckKJO1WG/af6w/X+SDR7j+7+x+/fkjtRr053rsPrKVJQWg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgNxLUGaXv1arQCTS0po9VEluNqsUQ\\ncz+c5S7J35pVyNECIHO4C1oGBDvn0FgpByoys7ew0HAOFGUcCqtZEp6TuDkg\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:12 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:12 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVYlM2enFvQ1JrYUVuNjRrZyswRVJzaG5hRzI4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFeTBUUkl2b0F5amNwYnBVekNIOEozcGcwVHl6anhNZ1hxT2NjNkc0TzV5UW8KazdWWWI5cC9yRDlmNUlOSHVQN3Y3SDc5K1NPMUd2VG5ldXcrc3BVbEJhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVaWZCZmhGbFlmcXZjdFpTUXdBaTBjZVd3Clc3Y3dId1lEVlIwakJCZ3dGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKQTZUSnlCYlpraGtxcjlFV0hoTTVmclFVajdnbDczWTJwWnBHK3FVWE1zY0NJQXl2dEFVNUtNVVdaTVh2OEhnZwpZaEhRczRBaUdHcVYzcktyL3MwemhDN0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/08 14:12:12 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 14:12:12 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/08 14:12:12 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/08 14:12:12 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:12 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037e660}",
        "2020/11/08 14:12:12 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:12 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:12 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037e660}",
        "2020/11/08 14:12:12 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037e6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:12 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42040dfb0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:12 [INFO] TLS Enabled",
        "2020/11/08 14:12:12 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:12 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:12 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:12 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:12 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:12 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:12 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:12 [INFO] encoded CSR",
        "2020/11/08 14:12:12 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBGuMF7d78uA9q1/X+Y5bvn2otwgicc3MYjCwdpMZMTmDcjOqDTQTMN6e1D5B3pW9\\nYFsjApzvg5LSESWIAS5j7o6gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgEYHD\\nbwQ7izeYgI7w/HPFdbW8cjkMYoLxROmdPjdIg2UCIB69stp2cupYcB8PT1PuU2nA\\noXLzpdzviK96PyagrC1O\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:13 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:13 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVQ0gzbTFHMWR3RVA5aS9yMTVIRnh6Y3FIZ3Y0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFYTR3WHQzdnk0RDJyWDlmNWpsdStmYWkzQ0NKeHpjeGlNTEIya3hreE9ZTnkKTTZvTk5CTXczcDdVUGtIZWxiMWdXeU1Dbk8rRGt0SVJKWWdCTG1QdWpxT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVQXh0K3RBd2JoOE1mMVZRNzMvWW14Y1htU2xBd0h3WURWUjBqQkJnd0ZvQVUKNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTkxRcVhaTnVURGswMEZWWVM1ZwpuNndudWdLcVZTWXg0SUJKQWJLbU1RY3hBaUFFaXkrM3FiVUJWV3Rpc2pmVmxCbDhYNkdONDdQSTBSdVpvdkxUCnJEalArZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]",
        "2020/11/08 14:12:13 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 14:12:13 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/08 14:12:13 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/86ddc58e51e2c5135afbab2752908ac2503e7bb68d11dd57546e50cd1e24a41d_sk /root/ca-tools/walmart/client1/tls/keystore/e83d691786fc3d49f7337ee7b20a298330c204ced379967d056721a1d3a54f2e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer2.walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer2.walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844733.1896272-18742-50335496869522 `" && echo ansible-tmp-1604844733.1896272-18742-50335496869522="` echo /root/.ansible/tmp/ansible-tmp-1604844733.1896272-18742-50335496869522 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpf_xoj523 TO /root/.ansible/tmp/ansible-tmp-1604844733.1896272-18742-50335496869522/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844733.1896272-18742-50335496869522/ /root/.ansible/tmp/ansible-tmp-1604844733.1896272-18742-50335496869522/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844733.1896272-18742-50335496869522/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844733.1896272-18742-50335496869522/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.750114",
    "end": "2020-11-08 14:12:14.071998",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:13.321884",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844734.1447642-18782-193491413597882 `" && echo ansible-tmp-1604844734.1447642-18782-193491413597882="` echo /root/.ansible/tmp/ansible-tmp-1604844734.1447642-18782-193491413597882 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppm9fk1x4 TO /root/.ansible/tmp/ansible-tmp-1604844734.1447642-18782-193491413597882/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844734.1447642-18782-193491413597882/ /root/.ansible/tmp/ansible-tmp-1604844734.1447642-18782-193491413597882/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844734.1447642-18782-193491413597882/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844734.1447642-18782-193491413597882/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.140121",
    "end": "2020-11-08 14:12:14.426042",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:14.285921",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844734.4967234-18836-186306818079716 `" && echo ansible-tmp-1604844734.4967234-18836-186306818079716="` echo /root/.ansible/tmp/ansible-tmp-1604844734.4967234-18836-186306818079716 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp85q8ogl6 TO /root/.ansible/tmp/ansible-tmp-1604844734.4967234-18836-186306818079716/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844734.4967234-18836-186306818079716/ /root/.ansible/tmp/ansible-tmp-1604844734.4967234-18836-186306818079716/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844734.4967234-18836-186306818079716/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844734.4967234-18836-186306818079716/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer2-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5VENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9UQXdXaGNOTWpNd09EQXpNRGd5Ck9UQXdXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TWk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRQCkVnSmR2S1BGc0RoNno2MitGKzB4Nk8wa3JlNXJmTE5Kb0ppSVNBamprU0dCQ2N6MWhOR1FuWHZvbU5iMnJacC8KcCtzMDBIWXI3bllHQmhDVHNsTXFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVU40a1J1cDBMNXlVNVNab1dMbVc3NkFpK0d4OHdDZ1lJS29aSXpqMEVBd0lEClNBQXdSUUloQUlQR1FpRWFEWkJJYnhxT0pBdWVNMTNqNkpENktlY1A0dXVSWEczTm1YVU9BaUI5WU5RR1pZOWQKSWp3bWZVdENrR3drNytCalNsSmVBWTlzalBWM2ZuZmJwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUY5SERaSWExVE5TZkY3bmVRYVdFTzkyOVNnMVBKUXl4YTUvVmJXTzV0ZGNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFenhJQ1hieWp4YkE0ZXMrdHZoZnRNZWp0SkszdWEzeXpTYUNZaUVnSTQ1RWhnUW5NOVlUUgprSjE3NkpqVzlxMmFmNmZyTk5CMksrNTJCZ1lRazdKVEtnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:00Z",
                "name": "orderer2-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408765",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer2-walmart-net-ambassador-certs",
                "uid": "3a84af21-a525-4755-8465-cda893746ea9"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844735.1202295-18864-259861708651873 `" && echo ansible-tmp-1604844735.1202295-18864-259861708651873="` echo /root/.ansible/tmp/ansible-tmp-1604844735.1202295-18864-259861708651873 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp84slxgsv TO /root/.ansible/tmp/ansible-tmp-1604844735.1202295-18864-259861708651873/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844735.1202295-18864-259861708651873/ /root/.ansible/tmp/ansible-tmp-1604844735.1202295-18864-259861708651873/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844735.1202295-18864-259861708651873/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844735.1202295-18864-259861708651873/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
    "delta": "0:00:00.090932",
    "end": "2020-11-08 14:12:15.347832",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:15.256900",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844735.5242643-18904-68162839746362 `" && echo ansible-tmp-1604844735.5242643-18904-68162839746362="` echo /root/.ansible/tmp/ansible-tmp-1604844735.5242643-18904-68162839746362 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc1plkna5 TO /root/.ansible/tmp/ansible-tmp-1604844735.5242643-18904-68162839746362/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844735.5242643-18904-68162839746362/ /root/.ansible/tmp/ansible-tmp-1604844735.5242643-18904-68162839746362/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844735.5242643-18904-68162839746362/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844735.5242643-18904-68162839746362/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
    "delta": "0:00:00.047027",
    "end": "2020-11-08 14:12:15.704229",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:15.657202",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844735.7713497-18942-102284956222396 `" && echo ansible-tmp-1604844735.7713497-18942-102284956222396="` echo /root/.ansible/tmp/ansible-tmp-1604844735.7713497-18942-102284956222396 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp2n1blq16 TO /root/.ansible/tmp/ansible-tmp-1604844735.7713497-18942-102284956222396/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844735.7713497-18942-102284956222396/ /root/.ansible/tmp/ansible-tmp-1604844735.7713497-18942-102284956222396/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844735.7713497-18942-102284956222396/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844735.7713497-18942-102284956222396/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
    "delta": "0:00:00.059073",
    "end": "2020-11-08 14:12:15.962048",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:15.902975",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844736.0583725-18979-66827518248967 `" && echo ansible-tmp-1604844736.0583725-18979-66827518248967="` echo /root/.ansible/tmp/ansible-tmp-1604844736.0583725-18979-66827518248967 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp9ivzmk3s TO /root/.ansible/tmp/ansible-tmp-1604844736.0583725-18979-66827518248967/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844736.0583725-18979-66827518248967/ /root/.ansible/tmp/ansible-tmp-1604844736.0583725-18979-66827518248967/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844736.0583725-18979-66827518248967/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844736.0583725-18979-66827518248967/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
    "delta": "0:00:00.052580",
    "end": "2020-11-08 14:12:16.244634",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:16.192054",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844736.3840182-19018-250959128496173 `" && echo ansible-tmp-1604844736.3840182-19018-250959128496173="` echo /root/.ansible/tmp/ansible-tmp-1604844736.3840182-19018-250959128496173 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpv2_em073 TO /root/.ansible/tmp/ansible-tmp-1604844736.3840182-19018-250959128496173/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844736.3840182-19018-250959128496173/ /root/.ansible/tmp/ansible-tmp-1604844736.3840182-19018-250959128496173/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844736.3840182-19018-250959128496173/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844736.3840182-19018-250959128496173/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.464195",
    "end": "2020-11-08 14:12:17.980191",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:16.515996",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844738.0482745-19063-242958831431403 `" && echo ansible-tmp-1604844738.0482745-19063-242958831431403="` echo /root/.ansible/tmp/ansible-tmp-1604844738.0482745-19063-242958831431403 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpre4p2nfx TO /root/.ansible/tmp/ansible-tmp-1604844738.0482745-19063-242958831431403/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844738.0482745-19063-242958831431403/ /root/.ansible/tmp/ansible-tmp-1604844738.0482745-19063-242958831431403/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844738.0482745-19063-242958831431403/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844738.0482745-19063-242958831431403/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844738.2642262-19089-32413465170978 `" && echo ansible-tmp-1604844738.2642262-19089-32413465170978="` echo /root/.ansible/tmp/ansible-tmp-1604844738.2642262-19089-32413465170978 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqik0rrsp TO /root/.ansible/tmp/ansible-tmp-1604844738.2642262-19089-32413465170978/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844738.2642262-19089-32413465170978/ /root/.ansible/tmp/ansible-tmp-1604844738.2642262-19089-32413465170978/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844738.2642262-19089-32413465170978/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844738.2642262-19089-32413465170978/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer3.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer3.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer3.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer3.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844738.4405737-19089-49283480137127 `" && echo ansible-tmp-1604844738.4405737-19089-49283480137127="` echo /root/.ansible/tmp/ansible-tmp-1604844738.4405737-19089-49283480137127 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0dp_otds TO /root/.ansible/tmp/ansible-tmp-1604844738.4405737-19089-49283480137127/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844738.4405737-19089-49283480137127/ /root/.ansible/tmp/ansible-tmp-1604844738.4405737-19089-49283480137127/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844738.4405737-19089-49283480137127/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844738.4405737-19089-49283480137127/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844738.6444836-19139-232995305119270 `" && echo ansible-tmp-1604844738.6444836-19139-232995305119270="` echo /root/.ansible/tmp/ansible-tmp-1604844738.6444836-19139-232995305119270 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp1mr3wh2e TO /root/.ansible/tmp/ansible-tmp-1604844738.6444836-19139-232995305119270/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844738.6444836-19139-232995305119270/ /root/.ansible/tmp/ansible-tmp-1604844738.6444836-19139-232995305119270/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844738.6444836-19139-232995305119270/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844738.6444836-19139-232995305119270/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.648924",
    "end": "2020-11-08 14:12:22.424652",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:18.775728",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844742.4962528-19191-171810588837302 `" && echo ansible-tmp-1604844742.4962528-19191-171810588837302="` echo /root/.ansible/tmp/ansible-tmp-1604844742.4962528-19191-171810588837302 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcsd_waw6 TO /root/.ansible/tmp/ansible-tmp-1604844742.4962528-19191-171810588837302/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844742.4962528-19191-171810588837302/ /root/.ansible/tmp/ansible-tmp-1604844742.4962528-19191-171810588837302/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844742.4962528-19191-171810588837302/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844742.4962528-19191-171810588837302/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.237518",
    "end": "2020-11-08 14:12:24.866307",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:22.628789",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer3.walmart-net\n+ CSR_HOSTS=orderer3.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:23 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:23 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 14:12:23 [DEBUG] Checking for enrollment\n2020/11/08 14:12:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}\n2020/11/08 14:12:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203957a0 DummyKeystore:<nil>}\n2020/11/08 14:12:23 [INFO] TLS Enabled\n2020/11/08 14:12:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:23 [DEBUG] Client Cert File: \n2020/11/08 14:12:23 [DEBUG] Client Key File: \n2020/11/08 14:12:23 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:23 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}\n2020/11/08 14:12:23 [DEBUG] Entered runRegister\n2020/11/08 14:12:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}\n2020/11/08 14:12:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203957a0 DummyKeystore:<nil>}\n2020/11/08 14:12:23 [INFO] TLS Enabled\n2020/11/08 14:12:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:23 [DEBUG] Client Cert File: \n2020/11/08 14:12:23 [DEBUG] Client Key File: \n2020/11/08 14:12:23 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:23 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 14:12:23 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:23 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 14:12:23 [DEBUG] Register { Name:orderer3.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 14:12:23 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:23 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer3.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer3.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/08 14:12:23 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:23 [DEBUG] Response body result: map[secret:orderer3.walmart-net-pw]\n2020/11/08 14:12:23 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:23 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:23 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203945d0}\n2020/11/08 14:12:23 [DEBUG] Entered runEnroll\n2020/11/08 14:12:23 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203945d0}\n2020/11/08 14:12:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420394630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b0d0 DummyKeystore:<nil>}\n2020/11/08 14:12:23 [INFO] TLS Enabled\n2020/11/08 14:12:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:23 [DEBUG] Client Cert File: \n2020/11/08 14:12:23 [DEBUG] Client Key File: \n2020/11/08 14:12:23 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:23 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:23 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:23 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:23 [INFO] encoded CSR\n2020/11/08 14:12:23 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdTCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATsYExKcSBRkBV+EvTe\\nO3n1jHHO7Y3kRT/dkonEF2J6JlgktgRD3B3kguURS/nDhCr5kijAjXt3E9MZDVJo\\n/brRoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNHADBEAiAQwWIxAtm4ESTUryszbkpqI6edb9M7N+S0\\nk7rSKh9aqAIgBTmL9bJOHZPuR8kZ9jGpsu5N+n17yMCgLG2hsCW7hFM=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:23 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:23 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVYW0ydVNxREROcDBiMENYS2pvRnlvN0RZQWtFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTdHQk1TbkVnVVpBVmZoTDAzanQ1OVl4eHp1Mk41RVUvM1pLSnhCZGkKZWlaWUpMWUVROXdkNUlMbEVVdjV3NFFxK1pJb3dJMTdkeFBUR1ExU2FQMjYwYU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWxrTCt3MUJqRjhOTW12VHhNaGc2MG1GU2xyZ3dId1lEVlIwakJCZ3cKRm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUJSSytKci9xUXF4eUx2dG5MWHVZaXE4ClN1K1VjdWxOQWhuYkdDOHdPbUlYQWlCR2FsT0VKYUtmMy9WMHUxTHdaY0g1RGNNQ3NSMGF4WHJJRjFnTSt3Q0wKWXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/08 14:12:23 [DEBUG] newEnrollmentResponse orderer3.walmart-net\n2020/11/08 14:12:23 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/08 14:12:23 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/9f23913f130163be9bad1012e289cb89dd86c0868ba07f243e8c467d10033dd1_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:23 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:23 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}\n2020/11/08 14:12:23 [DEBUG] Entered runEnroll\n2020/11/08 14:12:23 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}\n2020/11/08 14:12:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fef0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a58c0 DummyKeystore:<nil>}\n2020/11/08 14:12:23 [INFO] TLS Enabled\n2020/11/08 14:12:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:23 [DEBUG] Client Cert File: \n2020/11/08 14:12:23 [DEBUG] Client Key File: \n2020/11/08 14:12:23 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:23 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:23 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:23 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:23 [INFO] encoded CSR\n2020/11/08 14:12:23 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHHvCrIOvjaYEnnKFWMt\\nmKH+1GTYWq+6f245V7ctoh3/rf0IrEjUdhIRus9DfYRTI7wmEjGQohEUER7bv1bi\\nyFOgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhAJxuhHVbXUhB4/iCfBValUnf\\n/L1Z/o6ZGcaNpeq6CraYAiAu5ofAFmAL9fIpwcSfwZTtMoXR7lwOELYRvRWt/7fG\\nOg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:23 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:23 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVSjUxcjNIZUxMaktaVzMyRFZaUk5hZHUvWTdVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWNlOEtzZzYrTnBnU2Vjb1ZZeTJZb2Y3VVpOaGFyN3AvYmpsWHR5MmkKSGYrdC9RaXNTTlIyRWhHNnowTjloRk1qdkNZU01aQ2lFUlFSSHR1L1Z1TElVNk9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUlzNFZrMkVrRUxnNGM5Q2FsWnVPCkhWNjBTbXN3SHdZRFZSMGpCQmd3Rm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMWtaMmgzWnpCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXpMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBUHltQ2RDdHpoLzZTc2RaeGZZSnZwZEpqMit3ZHhsdUFla21BN2JSMytMSkFpQVpvQUsyNktkdwpjK2FURHkyM1dmc1dPRndsSWorVUpHeHFETGgzL2l6MnpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]\n2020/11/08 14:12:23 [DEBUG] newEnrollmentResponse orderer3.walmart-net\n2020/11/08 14:12:23 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem\n2020/11/08 14:12:23 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer3s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer3 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer3 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:24 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 14:12:24 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 14:12:24 [DEBUG] Checking for enrollment\n2020/11/08 14:12:24 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420322570}\n2020/11/08 14:12:24 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203225d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:24 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420246f00 DummyKeystore:<nil>}\n2020/11/08 14:12:24 [INFO] TLS Enabled\n2020/11/08 14:12:24 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:24 [DEBUG] Client Cert File: \n2020/11/08 14:12:24 [DEBUG] Client Key File: \n2020/11/08 14:12:24 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:24 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420322570}\n2020/11/08 14:12:24 [DEBUG] Entered runRegister\n2020/11/08 14:12:24 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420322570}\n2020/11/08 14:12:24 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203225d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:24 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420246f00 DummyKeystore:<nil>}\n2020/11/08 14:12:24 [INFO] TLS Enabled\n2020/11/08 14:12:24 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:24 [DEBUG] Client Cert File: \n2020/11/08 14:12:24 [DEBUG] Client Key File: \n2020/11/08 14:12:24 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:24 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 14:12:24 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:24 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 14:12:24 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/08 14:12:24 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:24 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/08 14:12:24 [DEBUG] Received response\nstatusCode=500 (500 Internal Server Error)\nError: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered\n\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/08 14:12:24 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/08 14:12:24 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a660}\n2020/11/08 14:12:24 [DEBUG] Entered runEnroll\n2020/11/08 14:12:24 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:24 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a660}\n2020/11/08 14:12:24 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:24 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42009fbc0 DummyKeystore:<nil>}\n2020/11/08 14:12:24 [INFO] TLS Enabled\n2020/11/08 14:12:24 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:24 [DEBUG] Client Cert File: \n2020/11/08 14:12:24 [DEBUG] Client Key File: \n2020/11/08 14:12:24 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:24 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:24 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:24 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:24 [INFO] encoded CSR\n2020/11/08 14:12:24 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJa9fMjbc9ORFIVqBYF3DgTH\\nnodXsyfUwJEw+d0mjEqSki9EKN7AJCZirVwfsk87otQDDJgPK/RwLAUscvQee32g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgDXRNxpd0uObKCzbIeVFqcH2wuwmd\\n0k8mwRlEvNvN9XACIBZjeOf2PyxFsIxU1U0wCrQptlMzxSz92VRpb5fl2ILY\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:24 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:24 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVUUR5bEFFeXN2My8zYmZGQnlaRlhrUHNncFQ0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbHIxOHlOdHowNUVVaFdvRmdYY09CTWVlaDFleko5VEFrVEQ1M1NhTVNwS1MKTDBRbzNzQWtKbUt0WEIreVR6dWkxQU1NbUE4cjlIQXNCU3h5OUI1N2ZhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVcGdCRDYrczNBMS9tMVpSUnhRRmpFT3JECjVFMHdId1lEVlIwakJCZ3dGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKTGRsc3pUS2xSa0JmOHpsdUxxKzBURlF0SjB6M0NYVFRwcXpYU05VTUNRRUNJRC9tOGxvMW9YeDgwdVBpWjhydQp3eGtxYlRzWmF3alFKRmxBZGJRNFRlWE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]]\n2020/11/08 14:12:24 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 14:12:24 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/08 14:12:24 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/08 14:12:24 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:24 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062630}\n2020/11/08 14:12:24 [DEBUG] Entered runEnroll\n2020/11/08 14:12:24 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:24 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062630}\n2020/11/08 14:12:24 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420062690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:24 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420251700 DummyKeystore:<nil>}\n2020/11/08 14:12:24 [INFO] TLS Enabled\n2020/11/08 14:12:24 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 14:12:24 [DEBUG] Client Cert File: \n2020/11/08 14:12:24 [DEBUG] Client Key File: \n2020/11/08 14:12:24 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:24 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:24 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:24 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:24 [INFO] encoded CSR\n2020/11/08 14:12:24 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBHPLVAaWz7VvfdrdPIq7wvGk1NXBkXgcU19oL8bQ+CBiL6dWZPkIpVyusNpuErc8\\nQCFd634TLDCwLStNGD57vzygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhANyT\\ng+3p9CRoCQ9jyH5RgVD4wg4cKF38a532u28Qh1DDAiASvTUmRPxFoDYAAXlMjMen\\nrcBRJCDZXWlGTSKhf8FboQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:24 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:24 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVR1ppVlRyN3FEQUdVWWFHMzJ2bXp4d2U0MnFjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFYzh0VUJwYlB0Vzk5MnQwOGlydkM4YVRVMWNHUmVCeFRYMmd2eHRENElHSXYKcDFaaytRaWxYSzZ3Mm00U3R6eEFJVjNyZmhNc01MQXRLMDBZUG51L1BLT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVZXR0eHZiWU80elliaWNkYXNxby9DLzJVZXpvd0h3WURWUjBqQkJnd0ZvQVUKNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTlRJWHVwSnUzM3F6S2N2bGZpdQpYbUgxOE53WlBTbmZNbVFzbWxEb1ZzMG5BaUFCTklhQ1lUYzJUNVRvcjh0Skg0akRXMllWMU5iVi9FU0tFVW00ClJJL2hGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]\n2020/11/08 14:12:24 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 14:12:24 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/08 14:12:24 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/7746bffca7b3011aa8a43b147d9a8176217ee7ecd1634efc87abd83286fba6fd_sk /root/ca-tools/walmart/client1/tls/keystore/86ddc58e51e2c5135afbab2752908ac2503e7bb68d11dd57546e50cd1e24a41d_sk /root/ca-tools/walmart/client1/tls/keystore/e83d691786fc3d49f7337ee7b20a298330c204ced379967d056721a1d3a54f2e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer3.walmart-net",
        "+ CSR_HOSTS=orderer3.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:23 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:23 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:23 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}",
        "2020/11/08 14:12:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203957a0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:23 [INFO] TLS Enabled",
        "2020/11/08 14:12:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:23 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:23 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:23 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:23 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}",
        "2020/11/08 14:12:23 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0630}",
        "2020/11/08 14:12:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203957a0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:23 [INFO] TLS Enabled",
        "2020/11/08 14:12:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:23 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:23 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:23 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:23 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 14:12:23 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:23 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 14:12:23 [DEBUG] Register { Name:orderer3.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 14:12:23 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:23 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer3.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer3.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 14:12:23 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:23 [DEBUG] Response body result: map[secret:orderer3.walmart-net-pw]",
        "2020/11/08 14:12:23 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:23 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:23 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203945d0}",
        "2020/11/08 14:12:23 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:23 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203945d0}",
        "2020/11/08 14:12:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420394630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b0d0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:23 [INFO] TLS Enabled",
        "2020/11/08 14:12:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:23 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:23 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:23 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:23 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:23 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:23 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:23 [INFO] encoded CSR",
        "2020/11/08 14:12:23 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdTCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATsYExKcSBRkBV+EvTe\\nO3n1jHHO7Y3kRT/dkonEF2J6JlgktgRD3B3kguURS/nDhCr5kijAjXt3E9MZDVJo\\n/brRoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNHADBEAiAQwWIxAtm4ESTUryszbkpqI6edb9M7N+S0\\nk7rSKh9aqAIgBTmL9bJOHZPuR8kZ9jGpsu5N+n17yMCgLG2hsCW7hFM=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:23 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:23 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVYW0ydVNxREROcDBiMENYS2pvRnlvN0RZQWtFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTdHQk1TbkVnVVpBVmZoTDAzanQ1OVl4eHp1Mk41RVUvM1pLSnhCZGkKZWlaWUpMWUVROXdkNUlMbEVVdjV3NFFxK1pJb3dJMTdkeFBUR1ExU2FQMjYwYU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWxrTCt3MUJqRjhOTW12VHhNaGc2MG1GU2xyZ3dId1lEVlIwakJCZ3cKRm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUJSSytKci9xUXF4eUx2dG5MWHVZaXE4ClN1K1VjdWxOQWhuYkdDOHdPbUlYQWlCR2FsT0VKYUtmMy9WMHUxTHdaY0g1RGNNQ3NSMGF4WHJJRjFnTSt3Q0wKWXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/08 14:12:23 [DEBUG] newEnrollmentResponse orderer3.walmart-net",
        "2020/11/08 14:12:23 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/08 14:12:23 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/9f23913f130163be9bad1012e289cb89dd86c0868ba07f243e8c467d10033dd1_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:23 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:23 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}",
        "2020/11/08 14:12:23 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:23 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}",
        "2020/11/08 14:12:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fef0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a58c0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:23 [INFO] TLS Enabled",
        "2020/11/08 14:12:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:23 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:23 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:23 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:23 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:23 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:23 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:23 [INFO] encoded CSR",
        "2020/11/08 14:12:23 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHHvCrIOvjaYEnnKFWMt\\nmKH+1GTYWq+6f245V7ctoh3/rf0IrEjUdhIRus9DfYRTI7wmEjGQohEUER7bv1bi\\nyFOgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhAJxuhHVbXUhB4/iCfBValUnf\\n/L1Z/o6ZGcaNpeq6CraYAiAu5ofAFmAL9fIpwcSfwZTtMoXR7lwOELYRvRWt/7fG\\nOg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:23 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:23 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVSjUxcjNIZUxMaktaVzMyRFZaUk5hZHUvWTdVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWNlOEtzZzYrTnBnU2Vjb1ZZeTJZb2Y3VVpOaGFyN3AvYmpsWHR5MmkKSGYrdC9RaXNTTlIyRWhHNnowTjloRk1qdkNZU01aQ2lFUlFSSHR1L1Z1TElVNk9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUlzNFZrMkVrRUxnNGM5Q2FsWnVPCkhWNjBTbXN3SHdZRFZSMGpCQmd3Rm9BVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMWtaMmgzWnpCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXpMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBUHltQ2RDdHpoLzZTc2RaeGZZSnZwZEpqMit3ZHhsdUFla21BN2JSMytMSkFpQVpvQUsyNktkdwpjK2FURHkyM1dmc1dPRndsSWorVUpHeHFETGgzL2l6MnpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]",
        "2020/11/08 14:12:23 [DEBUG] newEnrollmentResponse orderer3.walmart-net",
        "2020/11/08 14:12:23 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem",
        "2020/11/08 14:12:23 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer3s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer3 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer3 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:24 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 14:12:24 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:24 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:24 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420322570}",
        "2020/11/08 14:12:24 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203225d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:24 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420246f00 DummyKeystore:<nil>}",
        "2020/11/08 14:12:24 [INFO] TLS Enabled",
        "2020/11/08 14:12:24 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:24 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:24 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:24 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:24 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420322570}",
        "2020/11/08 14:12:24 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:24 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420322570}",
        "2020/11/08 14:12:24 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203225d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:24 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420246f00 DummyKeystore:<nil>}",
        "2020/11/08 14:12:24 [INFO] TLS Enabled",
        "2020/11/08 14:12:24 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:24 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:24 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:24 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:24 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 14:12:24 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:24 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 14:12:24 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/08 14:12:24 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:24 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/08 14:12:24 [DEBUG] Received response",
        "statusCode=500 (500 Internal Server Error)",
        "Error: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered",
        "",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/08 14:12:24 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/08 14:12:24 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a660}",
        "2020/11/08 14:12:24 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:24 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:24 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42016a660}",
        "2020/11/08 14:12:24 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016a6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:24 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42009fbc0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:24 [INFO] TLS Enabled",
        "2020/11/08 14:12:24 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:24 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:24 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:24 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:24 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:24 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:24 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:24 [INFO] encoded CSR",
        "2020/11/08 14:12:24 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJa9fMjbc9ORFIVqBYF3DgTH\\nnodXsyfUwJEw+d0mjEqSki9EKN7AJCZirVwfsk87otQDDJgPK/RwLAUscvQee32g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtZGdod2cwCgYIKoZIzj0EAwIDRwAwRAIgDXRNxpd0uObKCzbIeVFqcH2wuwmd\\n0k8mwRlEvNvN9XACIBZjeOf2PyxFsIxU1U0wCrQptlMzxSz92VRpb5fl2ILY\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:24 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:24 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVUUR5bEFFeXN2My8zYmZGQnlaRlhrUHNncFQ0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbHIxOHlOdHowNUVVaFdvRmdYY09CTWVlaDFleko5VEFrVEQ1M1NhTVNwS1MKTDBRbzNzQWtKbUt0WEIreVR6dWkxQU1NbUE4cjlIQXNCU3h5OUI1N2ZhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVcGdCRDYrczNBMS9tMVpSUnhRRmpFT3JECjVFMHdId1lEVlIwakJCZ3dGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKTGRsc3pUS2xSa0JmOHpsdUxxKzBURlF0SjB6M0NYVFRwcXpYU05VTUNRRUNJRC9tOGxvMW9YeDgwdVBpWjhydQp3eGtxYlRzWmF3alFKRmxBZGJRNFRlWE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]]",
        "2020/11/08 14:12:24 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 14:12:24 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/08 14:12:24 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/08 14:12:24 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:24 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062630}",
        "2020/11/08 14:12:24 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:24 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:24 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-dghwg] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062630}",
        "2020/11/08 14:12:24 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420062690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:24 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420251700 DummyKeystore:<nil>}",
        "2020/11/08 14:12:24 [INFO] TLS Enabled",
        "2020/11/08 14:12:24 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 14:12:24 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:24 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:24 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:24 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-dghwg] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:24 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:24 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:24 [INFO] encoded CSR",
        "2020/11/08 14:12:24 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-dghwg\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBHPLVAaWz7VvfdrdPIq7wvGk1NXBkXgcU19oL8bQ+CBiL6dWZPkIpVyusNpuErc8\\nQCFd634TLDCwLStNGD57vzygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtZGdod2cwCgYIKoZIzj0EAwIDSAAwRQIhANyT\\ng+3p9CRoCQ9jyH5RgVD4wg4cKF38a532u28Qh1DDAiASvTUmRPxFoDYAAXlMjMen\\nrcBRJCDZXWlGTSKhf8FboQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:24 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:24 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVR1ppVlRyN3FEQUdVWWFHMzJ2bXp4d2U0MnFjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFYzh0VUJwYlB0Vzk5MnQwOGlydkM4YVRVMWNHUmVCeFRYMmd2eHRENElHSXYKcDFaaytRaWxYSzZ3Mm00U3R6eEFJVjNyZmhNc01MQXRLMDBZUG51L1BLT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVZXR0eHZiWU80elliaWNkYXNxby9DLzJVZXpvd0h3WURWUjBqQkJnd0ZvQVUKNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0Tmkxa1oyaDNaekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTlRJWHVwSnUzM3F6S2N2bGZpdQpYbUgxOE53WlBTbmZNbVFzbWxEb1ZzMG5BaUFCTklhQ1lUYzJUNVRvcjh0Skg0akRXMllWMU5iVi9FU0tFVW00ClJJL2hGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVRFBKdy8yV2JVbUtvRDYwRC9tSC9GZnh4UDZRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1ERmFGdzB5TXpBNE1qa3hOREF6TURGYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVEwSFZaU3B1c1BDVDV0S1l2UXZORENvVVpYWEdKQjZ6Zi83ME1iV1RKVW40NUFGZlp0dCtnT2QwSzJFa0IKcDdNeWlDYnVNbndlSGlWcGNwOEtYNnlWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFJT2NycEpqR3IyNzZHTFErQzhodmhRT3A0S3J2WTlaOTR4SXFHNEFZK3lMQWlFQW16U3IKMEpaeVhhL2dJMXNWMlFjMEpTWjMvUk5EVmp2d0IyWFJtRExWVUk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK+cbwuKKvcs7aOF3C5KOvlmFQcQqMh5P+Wz6ZDL4F38EiANYqWYlB+Tvo9FyWptpG/lM+No3h47pMICjTICAcRszRpECiCte+nED4y0DwbUswF9WcnxLszZ1/svRwgGbiOp+ncXoxIgGFSP0XLs076zR7F4DuDSJkKmUJPPlgCqczLeaOIhXNIiRAoggc70ngTeTQTDHfHy+DB1sdstYSFVz5XvJDal1mNV9sgSIHQjb4zs1/tPH9jf1/K+lV5CqKQSw8T86JDcQfS1MvdDIkQKINgO/OHP2FaScaPDGkopocuoYePWrgc4hSsQnozwlL4vEiCkPvB7kZIrochsI2xPWiPOYm9n6zp3vtuREDu94ru1RSJECiDHczLE6C/QLlwGfSVEQ9S4yqdcD7rk6PWevnnGd/RnihIgXMNROXOL09BjkhTTN6+fivTxag2uexdi7rx7w9I7AXoiRAogjoq/XCBFSx91tMjiM5oBTzrxIDB7WPD4RsEU+y6JYpISIEo6S223rYnjZbF44HV04gA7Qbv07+Fdq5Tr2PwY1JqdKogBCiCn5lVugft8IUBZWMwxeM5NQG4/eIQL4woPSrrjE+y4TRIgQK4qVdowB+PJ1I/awNrz8sAqV0dPrLeLVLhYiH7IrM8aIB8Y7UL7iE3Vgq2d5SmSR0ntm6I0FMNTKvHodCj30tVvIiB8Hwdj1gIyVBNl+D0tSGHUCcs8pyBMh7GGgKcjJ0sJrjJECiCb32TjVJkg99juxDGAkkmxQBuczZ7p5NBJmilArNetEBIgJoWkv5RmDmzhaKOxFrIwAtmQd41WKEaRE621Odz+9wo6RAoguSiI/Vsm7U+eTZVo33qZxaxQBnc0wNjVYzjDOza630cSIIz1RDszAQa7zahw7vQRwZr5W8ruCHJPjkWUjLXo7kKZQiBThHjvrKXjFhS1xoj4PDhk2nbQ5GKgln01oshfulRKzUogEMywGAbWdWUK9JNrL76cRBNVhjoE5hdoQcayoTXwXMdSIK+QLRngJxNOvcIuzZEeC0D1oQ6iVBEuXb71r6tHgpXH IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVNVmI0eG84OUx2VWRqcmM3SVVLeUo1THZTYkh3UFhLMwpPQjNHc2cvYnl1NzJPTlFRL3RDT0Ywa2dxYk9FNXdjemliSmkyUHkzRkV0MkYvU2dKSEswZGxEUFRvNStvVmxRCitSdDJLWkNUYWVoTzhudTdoWWJFWXRZZmZKVVZRWUFtCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]",
        "2020/11/08 14:12:24 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 14:12:24 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/08 14:12:24 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/7746bffca7b3011aa8a43b147d9a8176217ee7ecd1634efc87abd83286fba6fd_sk /root/ca-tools/walmart/client1/tls/keystore/86ddc58e51e2c5135afbab2752908ac2503e7bb68d11dd57546e50cd1e24a41d_sk /root/ca-tools/walmart/client1/tls/keystore/e83d691786fc3d49f7337ee7b20a298330c204ced379967d056721a1d3a54f2e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer3.walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer3.walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844744.94411-19236-29911766205177 `" && echo ansible-tmp-1604844744.94411-19236-29911766205177="` echo /root/.ansible/tmp/ansible-tmp-1604844744.94411-19236-29911766205177 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpni0hmctx TO /root/.ansible/tmp/ansible-tmp-1604844744.94411-19236-29911766205177/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844744.94411-19236-29911766205177/ /root/.ansible/tmp/ansible-tmp-1604844744.94411-19236-29911766205177/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844744.94411-19236-29911766205177/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844744.94411-19236-29911766205177/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.763169",
    "end": "2020-11-08 14:12:25.839893",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:25.076724",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844745.9141579-19276-161120227071806 `" && echo ansible-tmp-1604844745.9141579-19276-161120227071806="` echo /root/.ansible/tmp/ansible-tmp-1604844745.9141579-19276-161120227071806 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdanpvpcb TO /root/.ansible/tmp/ansible-tmp-1604844745.9141579-19276-161120227071806/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844745.9141579-19276-161120227071806/ /root/.ansible/tmp/ansible-tmp-1604844745.9141579-19276-161120227071806/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844745.9141579-19276-161120227071806/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844745.9141579-19276-161120227071806/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.097189",
    "end": "2020-11-08 14:12:26.142587",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:26.045398",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844746.2104084-19328-123056661710808 `" && echo ansible-tmp-1604844746.2104084-19328-123056661710808="` echo /root/.ansible/tmp/ansible-tmp-1604844746.2104084-19328-123056661710808 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp4xowq6om TO /root/.ansible/tmp/ansible-tmp-1604844746.2104084-19328-123056661710808/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844746.2104084-19328-123056661710808/ /root/.ansible/tmp/ansible-tmp-1604844746.2104084-19328-123056661710808/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844746.2104084-19328-123056661710808/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844746.2104084-19328-123056661710808/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer3-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5akNDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9URXhXaGNOTWpNd09EQXpNRGd5Ck9URXhXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TXk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFCCnlFK21McFhYUE9CZ2NFK3lKelRJZ3M2SGdGOHdwVWhIZDZveExYSjBIaC85NC9VWCtzTVY5TlpqclAvVktQL0MKVWdodytHMzRSL0hUbmFqalVnZ21vMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVXFINFJwbFZ3aENqNHE3cXROSmVPN1Z5SWRtb3dDZ1lJS29aSXpqMEVBd0lEClNRQXdSZ0loQU51TVYveDBvZ3lKekd3bXFhMDZIZWswY0NZckxvaytCUkRtaDZ3OGFDZEFBaUVBcGJ3Qi90QjcKQ2pBcDZ6emZPRmU3c25CUFE5WUl1ZmZiTnhzRTJrQ3Rzenc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUMzSks3ZzJKRVhxaGZLR3YyL2hheWlJRi9ndDNSazVBL0IySzNNdGNHOFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQWNoUHBpNlYxenpnWUhCUHNpYzB5SUxPaDRCZk1LVklSM2VxTVMxeWRCNGYvZVAxRi9yRApGZlRXWTZ6LzFTai93bElJY1BodCtFZngwNTJvNDFJSUpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:11Z",
                "name": "orderer3-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408791",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer3-walmart-net-ambassador-certs",
                "uid": "9c28f8f6-56fe-49c2-9cf9-f892bc7312b3"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844746.8416724-19356-104777853432415 `" && echo ansible-tmp-1604844746.8416724-19356-104777853432415="` echo /root/.ansible/tmp/ansible-tmp-1604844746.8416724-19356-104777853432415 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnso4yhc7 TO /root/.ansible/tmp/ansible-tmp-1604844746.8416724-19356-104777853432415/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844746.8416724-19356-104777853432415/ /root/.ansible/tmp/ansible-tmp-1604844746.8416724-19356-104777853432415/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844746.8416724-19356-104777853432415/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844746.8416724-19356-104777853432415/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
    "delta": "0:00:00.088459",
    "end": "2020-11-08 14:12:27.061640",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:26.973181",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844747.2204518-19396-37592186799131 `" && echo ansible-tmp-1604844747.2204518-19396-37592186799131="` echo /root/.ansible/tmp/ansible-tmp-1604844747.2204518-19396-37592186799131 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpgn8nwn2i TO /root/.ansible/tmp/ansible-tmp-1604844747.2204518-19396-37592186799131/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844747.2204518-19396-37592186799131/ /root/.ansible/tmp/ansible-tmp-1604844747.2204518-19396-37592186799131/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844747.2204518-19396-37592186799131/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844747.2204518-19396-37592186799131/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
    "delta": "0:00:00.048850",
    "end": "2020-11-08 14:12:27.403359",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:27.354509",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ]
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:31
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844747.4699473-19433-205683008172185 `" && echo ansible-tmp-1604844747.4699473-19433-205683008172185="` echo /root/.ansible/tmp/ansible-tmp-1604844747.4699473-19433-205683008172185 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpmxze4zqn TO /root/.ansible/tmp/ansible-tmp-1604844747.4699473-19433-205683008172185/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844747.4699473-19433-205683008172185/ /root/.ansible/tmp/ansible-tmp-1604844747.4699473-19433-205683008172185/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844747.4699473-19433-205683008172185/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844747.4699473-19433-205683008172185/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.052706",
    "end": "2020-11-08 14:12:27.665354",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:27.612648",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Copy organization level certificates for orgs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844747.7342017-19467-166354956419475 `" && echo ansible-tmp-1604844747.7342017-19467-166354956419475="` echo /root/.ansible/tmp/ansible-tmp-1604844747.7342017-19467-166354956419475 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpsepxdf4n TO /root/.ansible/tmp/ansible-tmp-1604844747.7342017-19467-166354956419475/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844747.7342017-19467-166354956419475/ /root/.ansible/tmp/ansible-tmp-1604844747.7342017-19467-166354956419475/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844747.7342017-19467-166354956419475/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844747.7342017-19467-166354956419475/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.094707",
    "end": "2020-11-08 14:12:27.960817",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:27.866110",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ]
}

TASK [include_role : create/crypto/peer] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:114
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for CA-tool in carrier-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844748.3747156-19528-269685025741083 `" && echo ansible-tmp-1604844748.3747156-19528-269685025741083="` echo /root/.ansible/tmp/ansible-tmp-1604844748.3747156-19528-269685025741083 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpkhzl4tj8 TO /root/.ansible/tmp/ansible-tmp-1604844748.3747156-19528-269685025741083/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844748.3747156-19528-269685025741083/ /root/.ansible/tmp/ansible-tmp-1604844748.3747156-19528-269685025741083/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844748.3747156-19528-269685025741083/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844748.3747156-19528-269685025741083/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T14:06:33Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-szpgh",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "fbb634da-5efc-4de1-a8e4-b8c6508e5d8e"
                    }
                ],
                "resourceVersion": "2919252",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-tools-69d7885f86-szpgh",
                "uid": "82a09f17-0b58-4e23-8569-829840abb6bc"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-zzckh",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-zzckh",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-zzckh"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:06:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:07:56Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:07:56Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:06:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://6c5a4c8b9440c94c1c8f1f7c23a35e91a69ecee711eb3996b5a18cb85986ed5a",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:07:55Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.77",
                "podIPs": [
                    {
                        "ip": "10.1.0.77"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:06:48Z"
            }
        }
    ]
}

TASK [create/crypto/peer : Ensure ca directory exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:21
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844749.053153-19556-230820241602707 `" && echo ansible-tmp-1604844749.053153-19556-230820241602707="` echo /root/.ansible/tmp/ansible-tmp-1604844749.053153-19556-230820241602707 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8164gggi TO /root/.ansible/tmp/ansible-tmp-1604844749.053153-19556-230820241602707/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844749.053153-19556-230820241602707/ /root/.ansible/tmp/ansible-tmp-1604844749.053153-19556-230820241602707/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844749.053153-19556-230820241602707/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844749.053153-19556-230820241602707/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Check if ca certs already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844749.2563832-19582-210752139209620 `" && echo ansible-tmp-1604844749.2563832-19582-210752139209620="` echo /root/.ansible/tmp/ansible-tmp-1604844749.2563832-19582-210752139209620 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnbx3s1l9 TO /root/.ansible/tmp/ansible-tmp-1604844749.2563832-19582-210752139209620/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844749.2563832-19582-210752139209620/ /root/.ansible/tmp/ansible-tmp-1604844749.2563832-19582-210752139209620/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844749.2563832-19582-210752139209620/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844749.2563832-19582-210752139209620/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.065206",
    "end": "2020-11-08 14:12:29.463124",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:29.397918",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if ca key already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:38
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844749.5314667-19619-29841041935084 `" && echo ansible-tmp-1604844749.5314667-19619-29841041935084="` echo /root/.ansible/tmp/ansible-tmp-1604844749.5314667-19619-29841041935084 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprni76wgr TO /root/.ansible/tmp/ansible-tmp-1604844749.5314667-19619-29841041935084/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844749.5314667-19619-29841041935084/ /root/.ansible/tmp/ansible-tmp-1604844749.5314667-19619-29841041935084/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844749.5314667-19619-29841041935084/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844749.5314667-19619-29841041935084/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.054921",
    "end": "2020-11-08 14:12:29.720628",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:29.665707",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peercheck.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:47
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844749.856206-19657-241795341557728 `" && echo ansible-tmp-1604844749.856206-19657-241795341557728="` echo /root/.ansible/tmp/ansible-tmp-1604844749.856206-19657-241795341557728 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp4j5wm2tf TO /root/.ansible/tmp/ansible-tmp-1604844749.856206-19657-241795341557728/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844749.856206-19657-241795341557728/ /root/.ansible/tmp/ansible-tmp-1604844749.856206-19657-241795341557728/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844749.856206-19657-241795341557728/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844749.856206-19657-241795341557728/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
    "delta": "0:00:00.057084",
    "end": "2020-11-08 14:12:30.045411",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:29.988327",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844750.1439164-19694-77848500683168 `" && echo ansible-tmp-1604844750.1439164-19694-77848500683168="` echo /root/.ansible/tmp/ansible-tmp-1604844750.1439164-19694-77848500683168 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzsfhih50 TO /root/.ansible/tmp/ansible-tmp-1604844750.1439164-19694-77848500683168/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844750.1439164-19694-77848500683168/ /root/.ansible/tmp/ansible-tmp-1604844750.1439164-19694-77848500683168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844750.1439164-19694-77848500683168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844750.1439164-19694-77848500683168/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
    "delta": "0:00:00.049836",
    "end": "2020-11-08 14:12:30.327567",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:30.277731",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Call common.yaml for each peer] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:53
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml for localhost

TASK [create/crypto/peer : Create directory path on CA Tools] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844750.4828374-19733-44321989286372 `" && echo ansible-tmp-1604844750.4828374-19733-44321989286372="` echo /root/.ansible/tmp/ansible-tmp-1604844750.4828374-19733-44321989286372 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpyrnt7xhj TO /root/.ansible/tmp/ansible-tmp-1604844750.4828374-19733-44321989286372/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844750.4828374-19733-44321989286372/ /root/.ansible/tmp/ansible-tmp-1604844750.4828374-19733-44321989286372/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844750.4828374-19733-44321989286372/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844750.4828374-19733-44321989286372/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
    "delta": "0:00:01.433072",
    "end": "2020-11-08 14:12:32.047078",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:30.614006",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844752.119504-19778-55161755144282 `" && echo ansible-tmp-1604844752.119504-19778-55161755144282="` echo /root/.ansible/tmp/ansible-tmp-1604844752.119504-19778-55161755144282 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0zakid6i TO /root/.ansible/tmp/ansible-tmp-1604844752.119504-19778-55161755144282/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844752.119504-19778-55161755144282/ /root/.ansible/tmp/ansible-tmp-1604844752.119504-19778-55161755144282/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844752.119504-19778-55161755144282/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844752.119504-19778-55161755144282/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Changing the permission of msp files] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844752.329656-19804-129828570339637 `" && echo ansible-tmp-1604844752.329656-19804-129828570339637="` echo /root/.ansible/tmp/ansible-tmp-1604844752.329656-19804-129828570339637 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp65u82xq2 TO /root/.ansible/tmp/ansible-tmp-1604844752.329656-19804-129828570339637/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844752.329656-19804-129828570339637/ /root/.ansible/tmp/ansible-tmp-1604844752.329656-19804-129828570339637/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844752.329656-19804-129828570339637/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844752.329656-19804-129828570339637/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-carrier.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-carrier.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-carrier.sh"
        }
    },
    "files": "generate-crypto-carrier.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-carrier.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-carrier.sh",
    "size": 5170,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844752.506213-19804-96475891457447 `" && echo ansible-tmp-1604844752.506213-19804-96475891457447="` echo /root/.ansible/tmp/ansible-tmp-1604844752.506213-19804-96475891457447 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnkv41o5v TO /root/.ansible/tmp/ansible-tmp-1604844752.506213-19804-96475891457447/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844752.506213-19804-96475891457447/ /root/.ansible/tmp/ansible-tmp-1604844752.506213-19804-96475891457447/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844752.506213-19804-96475891457447/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844752.506213-19804-96475891457447/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:43
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844752.7185009-19854-274910557797144 `" && echo ansible-tmp-1604844752.7185009-19854-274910557797144="` echo /root/.ansible/tmp/ansible-tmp-1604844752.7185009-19854-274910557797144 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqlgot52b TO /root/.ansible/tmp/ansible-tmp-1604844752.7185009-19854-274910557797144/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844752.7185009-19854-274910557797144/ /root/.ansible/tmp/ansible-tmp-1604844752.7185009-19854-274910557797144/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844752.7185009-19854-274910557797144/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844752.7185009-19854-274910557797144/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:03.803391",
    "end": "2020-11-08 14:12:36.652829",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:32.849438",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Generate crypto material for organization peers] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844756.7228146-19904-103572768337336 `" && echo ansible-tmp-1604844756.7228146-19904-103572768337336="` echo /root/.ansible/tmp/ansible-tmp-1604844756.7228146-19904-103572768337336 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmplfkldc2b TO /root/.ansible/tmp/ansible-tmp-1604844756.7228146-19904-103572768337336/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844756.7228146-19904-103572768337336/ /root/.ansible/tmp/ansible-tmp-1604844756.7228146-19904-103572768337336/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844756.7228146-19904-103572768337336/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844756.7228146-19904-103572768337336/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:04.215863",
    "end": "2020-11-08 14:12:41.070642",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:36.854779",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=carrier\n+ AFFILIATION=carrier\n+ SUBJECT=C=GB,ST=London,L=London,O=carrier\n+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ CA_ADMIN_USER=carrier-admin\n+ CA_ADMIN_PASS=carrier-adminpw\n+ ORG_ADMIN_USER=Admin@carrier-net\n+ ORG_ADMIN_PASS=Admin@carrier-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ NO_OF_PEERS=2\n+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:37 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:37 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 14:12:37 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420296810}\n2020/11/08 14:12:37 [DEBUG] Entered runEnroll\n2020/11/08 14:12:37 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420296810}\n2020/11/08 14:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420296870 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202ac5e0 DummyKeystore:<nil>}\n2020/11/08 14:12:37 [INFO] TLS Enabled\n2020/11/08 14:12:37 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:37 [DEBUG] Client Cert File: \n2020/11/08 14:12:37 [DEBUG] Client Key File: \n2020/11/08 14:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:37 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:37 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:37 [INFO] encoded CSR\n2020/11/08 14:12:37 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE0dw8\\nafdFifSgsGPGvvr+aq88Om4pUY1qNIoGuNJ1IW4/K6yjkdJusWZNB4MWzTfHeWIi\\nlWq1evpETqkqrLofvqA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1zenBnaDAKBggqhkjOPQQDAgNHADBEAiB8EdAfO3CR\\n/yqQvC5/H/3ulUs9V9ngPddrFeC4gMlVqwIgJUGfLfyLLt3leK3XW6LpS/dAo+Ur\\nMQaQ1IKmygW/1ig=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:37 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:37 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTRENDQWUrZ0F3SUJBZ0lVT3lPdy90WmRIWm1uTWcwYzh6N1p2NFdLbnh3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OWTJGeWNtbGxjaTFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCTkhjUEduM1JZbjBvTEJqeHI3Ni9tcXZQRHB1S1ZHTmFqU0tCcmpTZFNGdVB5dXMKbzVIU2JyRm1UUWVERnMwM3gzbGlJcFZxdFhyNlJFNnBLcXk2SDc2amdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGUHl2UmZmNFVhSzdjUTU5NVBNZk5wYS9RRDdNCk1COEdBMVVkSXdRWU1CYUFGSExUL2xHY1Urc2VGMlc4OW9BU3dFa2pRNlhNTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzNwd1oyZ3dDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIaW1PSHBLeQpJNmZCcHNUemYyN2luZkZIWnlEQ0VFeFgwUGVDbmhSQ1BRQUNJRjRXZDhtTGtyZmVXWDd4UFZDdGtwN042Q0NQCkYrZDA2ZnpFT3FyY2dKQysKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:37 [DEBUG] newEnrollmentResponse carrier-admin\n2020/11/08 14:12:37 [INFO] Stored client certificate at /root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 14:12:37 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-carrier/msp/cacerts/ca-carrier-net-7054.pem\n+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp\n2020/11/08 14:12:37 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:37 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/08 14:12:37 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/08 14:12:37 [DEBUG] Entered runGetCACert\n2020/11/08 14:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/08 14:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b8090 DummyKeystore:<nil>}\n2020/11/08 14:12:37 [INFO] TLS Enabled\n2020/11/08 14:12:37 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:37 [DEBUG] Client Cert File: \n2020/11/08 14:12:37 [DEBUG] Client Key File: \n2020/11/08 14:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:37 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/cainfo\n{}\n2020/11/08 14:12:37 [DEBUG] Received response\nstatusCode=200 (200 OK)\n2020/11/08 14:12:37 [DEBUG] Response body result: map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5 CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]\n2020/11/08 14:12:37 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:37 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 14:12:37 [INFO] TLS Enabled\n2020/11/08 14:12:37 [INFO] TLS Enabled\n+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:37 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:37 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 14:12:37 [DEBUG] Checking for enrollment\n2020/11/08 14:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be570}\n2020/11/08 14:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396ab0 DummyKeystore:<nil>}\n2020/11/08 14:12:37 [INFO] TLS Enabled\n2020/11/08 14:12:37 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:37 [DEBUG] Client Cert File: \n2020/11/08 14:12:37 [DEBUG] Client Key File: \n2020/11/08 14:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:37 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be570}\n2020/11/08 14:12:37 [DEBUG] Entered runRegister\n2020/11/08 14:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be570}\n2020/11/08 14:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396ab0 DummyKeystore:<nil>}\n2020/11/08 14:12:37 [INFO] TLS Enabled\n2020/11/08 14:12:37 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:37 [DEBUG] Client Cert File: \n2020/11/08 14:12:37 [DEBUG] Client Key File: \n2020/11/08 14:12:37 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:37 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 14:12:37 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:37 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/08 14:12:37 [DEBUG] Register { Name:Admin@carrier-net Type:client Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{abac.init true true} {hf.Registrar.Roles client false} {hf.Registrar.Attributes * false} {hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true}] CAName:  }\n2020/11/08 14:12:37 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:37 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"Admin@carrier-net\",\"type\":\"client\",\"secret\":\"Admin@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true},{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"},{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true}]}\n2020/11/08 14:12:38 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:38 [DEBUG] Response body result: map[secret:Admin@carrier-net-pw]\n2020/11/08 14:12:38 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:38 [DEBUG] Home directory: /root/ca-tools/carrier/admin\n2020/11/08 14:12:38 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml\n2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420198720}\n2020/11/08 14:12:38 [DEBUG] Entered runEnroll\n2020/11/08 14:12:38 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420198720}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420198780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019ffb0 DummyKeystore:<nil>}\n2020/11/08 14:12:38 [INFO] TLS Enabled\n2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:38 [DEBUG] Client Cert File: \n2020/11/08 14:12:38 [DEBUG] Client Key File: \n2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:38 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:38 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:38 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:38 [INFO] encoded CSR\n2020/11/08 14:12:38 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS0EGA/+s2CX4Nq/faCoJt2SYaqmvzDmFcaAaX5mxqR6WPafMC3mk5e6MOp4HSL\\n+ztlJ+mv8BbDIN2bnBwqZPjPoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0gAMEUCIQD9\\nbpKFFSvrwS3xonxzc0IaxJupfWylZvfbcSPQXpYSAgIgDT/0+XyAXsa3d7APHNC8\\nKSJx/WJtuLtJJWabJlHpjP8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:38 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:38 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM3ekNDQXBhZ0F3SUJBZ0lVTVhKTWoySkNJc1ZWMEI1Yytnd0pndEk4KzNRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFdEJCZ1Avck5nbCtEYXYzMmdxQ2IKZGttR3Fwcjh3NWhYR2dHbCtac2FrZWxqMm56QXQ1cE9YdWpEcWVCMGkvczdaU2Zwci9BV3d5RGRtNXdjS21UNAp6Nk9DQVJrd2dnRVZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCU2o3dEt2S2ZYUUJIQUZkOHFKVnIxWW90MDhYVEFmQmdOVkhTTUVHREFXZ0JSeTAvNVJuRlBySGhkbHZQYUEKRXNCSkkwT2x6REFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxYTjZjR2RvTUlHTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05IQURCRUFpQXFVWS96OXZ6bTJPb0x1cm52eGFCR0RGQ0NBT0ZiY2UwdGFObDBJLzV4CmxRSWdhZXhzZExueTg5QVRiZjZPbzZOUHYwcDJqUktSM1l3Mi9rbzRBYkNBL3g4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:38 [DEBUG] newEnrollmentResponse Admin@carrier-net\n2020/11/08 14:12:38 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/msp/signcerts/cert.pem\n2020/11/08 14:12:38 [INFO] Stored root CA certificate at /root/ca-tools/carrier/admin/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts\n+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem\n+ mkdir /root/ca-tools/carrier/admin/msp/admincerts\n+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:38 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:38 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e780}\n2020/11/08 14:12:38 [DEBUG] Entered runEnroll\n2020/11/08 14:12:38 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e780}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e7e0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a41b0 DummyKeystore:<nil>}\n2020/11/08 14:12:38 [INFO] TLS Enabled\n2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:38 [DEBUG] Client Cert File: \n2020/11/08 14:12:38 [DEBUG] Client Key File: \n2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:38 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:38 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:38 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:38 [INFO] encoded CSR\n2020/11/08 14:12:38 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQD0Suly6wwmqPyHh68OMVCWYSMGQN1cw8NNo3PajTFhiZIWR8Kql0u+ne+WWIL\\n4LJNSMXgrjnm8rnqd+bH2kYhoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0gAMEUCIQCq\\nRt2g43e0sJXIps1Hw/pnUSE31XYfuzOlER6k73ECdwIgTeeurNCmWQZBdYA6K5bl\\nZ4M7MyhtQWTnhynAS3vibBE=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:38 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:38 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREakNDQXJXZ0F3SUJBZ0lVV2tRNEQ2cUh3SjFjQkR4Sk5abDVjdGtvMi84d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFQTlFcnBjdXNNSnFqOGg0ZXZEakYKUWxtRWpCa0RkWE1QRFRhTnoybzB4WVltU0ZrZkNxcGRMdnAzdmxsaUMrQ3lUVWpGNEs0NTV2SzU2bmZteDlwRwpJYU9DQVRnd2dnRTBNQTRHQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVVEpIQnhEQ3FsMkw1SGU4VndRV3MKMFhpY1dSa3dId1lEVlIwakJCZ3dGb0FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0pBWURWUjBSQkIwdwpHNElaWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemVuQm5hRENCamdZSUtnTUVCUVlIQ0FFRWdZRjdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENKaFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SW1OaGNuSnBaWElpTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKQlpHMXBia0JqWVhKeQphV1Z5TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbGJuUWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnClA0K1JTb0VGV3c1dEJJNEV3NzE3Y3dKUUc4SlhVVDFQMUhkTFJNVXNCQUFDSUFvVTJxelVVbENkQ2J6NzRILzQKTjJ6dnhDLzRScTRaTU9hV0wralhBV0pPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:38 [DEBUG] newEnrollmentResponse Admin@carrier-net\n2020/11/08 14:12:38 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/tls/signcerts/cert.pem\n2020/11/08 14:12:38 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls\n+ cp /root/ca-tools/carrier/admin/tls/keystore/2dd9c2895639fe77a26092d5f3007bcaa78cc4a76a5de22cdf83aa12b590aee3_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key\n+ cp /root/ca-tools/carrier/admin/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt\n+ cp /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt\n+ COUNTER=0\n+ '[' 0 -lt 2 ']'\n+ PEER=peer0.carrier-net\n+ CSR_HOSTS=peer0.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:38 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:38 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 14:12:38 [DEBUG] Checking for enrollment\n2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba630}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203957a0 DummyKeystore:<nil>}\n2020/11/08 14:12:38 [INFO] TLS Enabled\n2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:38 [DEBUG] Client Cert File: \n2020/11/08 14:12:38 [DEBUG] Client Key File: \n2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba630}\n2020/11/08 14:12:38 [DEBUG] Entered runRegister\n2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba630}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203957a0 DummyKeystore:<nil>}\n2020/11/08 14:12:38 [INFO] TLS Enabled\n2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:38 [DEBUG] Client Cert File: \n2020/11/08 14:12:38 [DEBUG] Client Key File: \n2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:38 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 14:12:38 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:38 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/08 14:12:38 [DEBUG] Register { Name:peer0.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 14:12:38 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:38 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"peer0.carrier-net\",\"type\":\"peer\",\"secret\":\"peer0.carrier-net-pw\",\"affiliation\":\"\"}\n2020/11/08 14:12:38 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:38 [DEBUG] Response body result: map[secret:peer0.carrier-net-pw]\n2020/11/08 14:12:38 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:38 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038fe60}\n2020/11/08 14:12:38 [DEBUG] Entered runEnroll\n2020/11/08 14:12:38 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038fe60}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038fec0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a1290 DummyKeystore:<nil>}\n2020/11/08 14:12:38 [INFO] TLS Enabled\n2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:38 [DEBUG] Client Cert File: \n2020/11/08 14:12:38 [DEBUG] Client Key File: \n2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:38 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:38 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:38 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:38 [INFO] encoded CSR\n2020/11/08 14:12:38 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBujCCAWECAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATU0mGD2TKDYxUug5Xg6mgcdIpibaq+LM+5BJB2cR+r8dWmzXJzir+/u+uRkMN0\\nAU6ZQWP4jdD8pt+Q1EfT0ld1oIGUMIGRBgkqhkiG9w0BCQ4xgYMwgYAwfgYDVR0R\\nBHcwdYIRcGVlcjAuY2Fycmllci1uZXSCI3BlZXIwLmNhcnJpZXItbmV0LnN2Yy5j\\nbHVzdGVyLmxvY2FsghFwZWVyMC5jYXJyaWVyLm5ldIIocGVlcjAuY2Fycmllci1u\\nZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNHADBEAiASWOBC\\nR5ROyj6EESlguaVDT6ZqxpZtsT7Uae644Em/fQIgZffYjrVmqDR7TmQGhHafI5Ew\\njT8bcoNH1UiItiQN89Y=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:38 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:38 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQXRDZ0F3SUJBZ0lVR1FGQ3JZNG9yQU5laktuN0FJOWdCRi9vbko0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMU5KaGc5a3lnMk1WTG9PVjRPcG9ISFNLWW0ycXZpelB1UVNRZG5FZnEvSFYKcHMxeWM0cS92N3Zya1pERGRBRk9tVUZqK0kzUS9LYmZrTlJIMDlKWGRhT0NBV1V3Z2dGaE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVRlpqU1J5ZFZqZzJwTUo0elFsY09oMktLbWJrd0h3WURWUjBqQkJnd0ZvQVUKY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d2ZnWURWUjBSQkhjd2RZSVJjR1ZsY2pBdVkyRnljbWxsY2kxdQpaWFNDSTNCbFpYSXdMbU5oY25KcFpYSXRibVYwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2hGd1pXVnlNQzVqCllYSnlhV1Z5TG01bGRJSW9jR1ZsY2pBdVkyRnljbWxsY2kxdVpYUXVjM1Z1WldWc0xuQjJkQzUzYlhSaVlXWXUKYVc1bWJ6QmlCZ2dxQXdRRkJnY0lBUVJXZXlKaGRIUnljeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJcwpJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbkJsWlhJd0xtTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2CkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0ZtcU4vcUpZZjFrYURYSS93Tm8zRExkWE1PRzAKM2dSRGkxcTNHR0dwS013Q0lGNEFUMnIrY1pWUng1aFVXVEFXSkRQc1crZXA0dzE4VVBOdjZSRVdlSlh3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/08 14:12:38 [DEBUG] newEnrollmentResponse peer0.carrier-net\n2020/11/08 14:12:38 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem\n2020/11/08 14:12:38 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/0b82da1c921ea972ed88552cb1206c115dc9a671b34614e43b3cd5b285a9a475_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key\n+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt\n+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:38 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0660}\n2020/11/08 14:12:38 [DEBUG] Entered runEnroll\n2020/11/08 14:12:38 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0660}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a06c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb870 DummyKeystore:<nil>}\n2020/11/08 14:12:38 [INFO] TLS Enabled\n2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:38 [DEBUG] Client Cert File: \n2020/11/08 14:12:38 [DEBUG] Client Key File: \n2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:38 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:38 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:38 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:38 [INFO] encoded CSR\n2020/11/08 14:12:38 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATSPS6UMgx9ALFBa/tnEpsiI3NVwFUBmT4bkME+5iNUybHCoyzh2sANZ6rFpLxI\\nPVFt4wwyi8S/ajmd8TQiDqM9oDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0cAMEQCIDjU\\nuoZL0rFvM++7MU+akBXBCqcriasuofNjsuhyXqyGAiANYDW4xGKLf1mdRfVeJeo2\\nbPEv/kUKT09v/yDvgm9kcg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:39 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:39 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyekNDQWxXZ0F3SUJBZ0lVWTFYb1pOeHphRnExUm1qa1o3eWFRUFJEbmVVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMGowdWxESU1mUUN4UVd2N1p4S2JJaU56VmNCVkFaaytHNURCUHVZalZNbXgKd3FNczRkckFEV2VxeGFTOFNEMVJiZU1NTW92RXYybzVuZkUwSWc2alBhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVQXpJQy91ZEtDMFB6dDRoZ2FCR2Rzay9wCjJYQXdId1lEVlIwakJCZ3dGb0FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemVuQm5hREJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXdMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWgKQUl5RzdqaHlKYnlYZlArRUp6eWVJNE9VUnV0UTRuY0w4MnZLM2FFZTI0T3NBaUJMWGZTaU52bnhhaU8rQlJJNQpmZm4ya0NYWlBjVzJGNWoyb3puSzZuazZkdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y]]\n2020/11/08 14:12:39 [DEBUG] newEnrollmentResponse peer0.carrier-net\n2020/11/08 14:12:39 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem\n2020/11/08 14:12:39 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ let COUNTER=COUNTER+1\n+ '[' 1 -lt 2 ']'\n+ PEER=peer1.carrier-net\n+ CSR_HOSTS=peer1.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:39 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:39 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 14:12:39 [DEBUG] Checking for enrollment\n2020/11/08 14:12:39 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a0570}\n2020/11/08 14:12:39 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200a05d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:39 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a74b0 DummyKeystore:<nil>}\n2020/11/08 14:12:39 [INFO] TLS Enabled\n2020/11/08 14:12:39 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:39 [DEBUG] Client Cert File: \n2020/11/08 14:12:39 [DEBUG] Client Key File: \n2020/11/08 14:12:39 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:39 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a0570}\n2020/11/08 14:12:39 [DEBUG] Entered runRegister\n2020/11/08 14:12:39 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a0570}\n2020/11/08 14:12:39 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200a05d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:39 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a74b0 DummyKeystore:<nil>}\n2020/11/08 14:12:39 [INFO] TLS Enabled\n2020/11/08 14:12:39 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:39 [DEBUG] Client Cert File: \n2020/11/08 14:12:39 [DEBUG] Client Key File: \n2020/11/08 14:12:39 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:39 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 14:12:39 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:39 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/08 14:12:39 [DEBUG] Register { Name:peer1.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 14:12:39 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:39 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"peer1.carrier-net\",\"type\":\"peer\",\"secret\":\"peer1.carrier-net-pw\",\"affiliation\":\"\"}\n2020/11/08 14:12:39 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:39 [DEBUG] Response body result: map[secret:peer1.carrier-net-pw]\n2020/11/08 14:12:39 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:39 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:39 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394630}\n2020/11/08 14:12:39 [DEBUG] Entered runEnroll\n2020/11/08 14:12:39 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:39 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394630}\n2020/11/08 14:12:39 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420394690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:39 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b870 DummyKeystore:<nil>}\n2020/11/08 14:12:39 [INFO] TLS Enabled\n2020/11/08 14:12:39 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:39 [DEBUG] Client Cert File: \n2020/11/08 14:12:39 [DEBUG] Client Key File: \n2020/11/08 14:12:39 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:39 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:39 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:39 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:39 [INFO] encoded CSR\n2020/11/08 14:12:39 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBujCCAWECAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQCGBe0WRkwOTtR14p9d0IsJsL8Bqa02kisHUln0lED83hT5vReN4GYIkTXA0dW\\nI4nbYaOMBqM/PNgCD4FTsPoyoIGUMIGRBgkqhkiG9w0BCQ4xgYMwgYAwfgYDVR0R\\nBHcwdYIRcGVlcjEuY2Fycmllci1uZXSCI3BlZXIxLmNhcnJpZXItbmV0LnN2Yy5j\\nbHVzdGVyLmxvY2FsghFwZWVyMS5jYXJyaWVyLm5ldIIocGVlcjEuY2Fycmllci1u\\nZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNHADBEAiAq85Uq\\nUxDLLYoylE171MqybYaGb5ziJfxcXkHpXx2ZHQIgK0OOqwxYNNmfQ0DtYpmcs4ob\\nBMqNAv7AAGfCj5bA5RA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:39 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:39 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQXRDZ0F3SUJBZ0lVUlo4ck1aNmRnVGhwK0FDRzEzOElYelpWT3Nvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFQWhnWHRGa1pNRGs3VWRlS2ZYZENMQ2JDL0FhbXROcElyQjFKWjlKUkEvTjQKVStiMFhqZUJtQ0pFMXdOSFZpT0oyMkdqakFhalB6ellBZytCVTdENk1xT0NBV1V3Z2dGaE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVUFdMTGRpc21RRXhtcGlMSGhJRkxOenU2T2Znd0h3WURWUjBqQkJnd0ZvQVUKY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d2ZnWURWUjBSQkhjd2RZSVJjR1ZsY2pFdVkyRnljbWxsY2kxdQpaWFNDSTNCbFpYSXhMbU5oY25KcFpYSXRibVYwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2hGd1pXVnlNUzVqCllYSnlhV1Z5TG01bGRJSW9jR1ZsY2pFdVkyRnljbWxsY2kxdVpYUXVjM1Z1WldWc0xuQjJkQzUzYlhSaVlXWXUKYVc1bWJ6QmlCZ2dxQXdRRkJnY0lBUVJXZXlKaGRIUnljeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJcwpJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbkJsWlhJeExtTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2CkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ09mS2phVkRKWDBCZUYzM3dHL0k4SDd0dFFEOVgKTVRjRmRsejAxT3VmTm5RQ0lHZXBHdlp2aVBTVDJHNExGRVRIYm1lQklRUnlnMDU3VmhxamI3djViUE1TCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net]]\n2020/11/08 14:12:39 [DEBUG] newEnrollmentResponse peer1.carrier-net\n2020/11/08 14:12:39 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem\n2020/11/08 14:12:39 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/5f7bb6908b58ee8cb97540ab01008ce7b560c2715dd8651528e6af9aae0d14dd_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key\n+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt\n+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 14:12:39 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:39 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2720}\n2020/11/08 14:12:39 [DEBUG] Entered runEnroll\n2020/11/08 14:12:39 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:39 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2720}\n2020/11/08 14:12:39 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:39 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039e540 DummyKeystore:<nil>}\n2020/11/08 14:12:39 [INFO] TLS Enabled\n2020/11/08 14:12:39 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:39 [DEBUG] Client Cert File: \n2020/11/08 14:12:39 [DEBUG] Client Key File: \n2020/11/08 14:12:39 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:39 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:39 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:39 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:39 [INFO] encoded CSR\n2020/11/08 14:12:39 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS7AIbL1HjU9qs6/uX87k63cjxif4cxU/EwNCGX5g3xW0mZC2U+HUskmN5n8Z5d\\naESNbvnNTTJrL/yZUEGejGVZoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0gAMEUCIQDu\\nEVUaZWsyOBtgjeAv79OI7WIPDh2We+eCkzabiZEmUwIgEMnTG2XMv1jXNSrz0mg3\\nEwumJbCJJjeRAK4ZJomyq7w=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:39 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:39 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVUWp3TFBOQ3E5ajMyTUxoWVl6bFNVV080RGc4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFdXdDR3k5UjQxUGFyT3Y3bC9PNU90M0k4WW4rSE1WUHhNRFFobCtZTjhWdEoKbVF0bFBoMUxKSmplWi9HZVhXaEVqVzc1elUweWF5LzhtVkJCbm94bFdhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVdGxoaTJFNkNEd2E3emROd0NwMGppR01SCkRid3dId1lEVlIwakJCZ3dGb0FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemVuQm5hREJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXhMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKY0VST0xtY0pPYTdQa3BkVGxaa3RxSWswWTByMUl5M2I1bGRhOUdLSTFIWUNJRjNhcjVLWnB3amRBZGFPSzBqWgpuczkrbnh1eEhWTHcvVFZ3WlVtSVhXVVUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:39 [DEBUG] newEnrollmentResponse peer1.carrier-net\n2020/11/08 14:12:39 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem\n2020/11/08 14:12:39 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ let COUNTER=COUNTER+1\n+ '[' 2 -lt 2 ']'\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ORG_NAME=carrier\n+ TYPE_FOLDER=peers\n+ NO_OF_USERS=1\n+ AFFILIATION=carrier\n+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ '[' peer '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@carrier-net\n+ ORG_USERPASS=User1@carrier-net-pw\n+ '[' peer = peer ']'\n+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:40 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 14:12:40 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 14:12:40 [DEBUG] Checking for enrollment\n2020/11/08 14:12:40 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5d0}\n2020/11/08 14:12:40 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:40 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420199220 DummyKeystore:<nil>}\n2020/11/08 14:12:40 [INFO] TLS Enabled\n2020/11/08 14:12:40 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:40 [DEBUG] Client Cert File: \n2020/11/08 14:12:40 [DEBUG] Client Key File: \n2020/11/08 14:12:40 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:40 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5d0}\n2020/11/08 14:12:40 [DEBUG] Entered runRegister\n2020/11/08 14:12:40 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5d0}\n2020/11/08 14:12:40 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:40 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420199220 DummyKeystore:<nil>}\n2020/11/08 14:12:40 [INFO] TLS Enabled\n2020/11/08 14:12:40 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:40 [DEBUG] Client Cert File: \n2020/11/08 14:12:40 [DEBUG] Client Key File: \n2020/11/08 14:12:40 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:40 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 14:12:40 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/08 14:12:40 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/08 14:12:40 [DEBUG] Register { Name:User1@carrier-net Type:user Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/08 14:12:40 [DEBUG] Adding token-based authorization header\n2020/11/08 14:12:40 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"User1@carrier-net\",\"type\":\"user\",\"secret\":\"User1@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/08 14:12:40 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:40 [DEBUG] Response body result: map[secret:User1@carrier-net-pw]\n2020/11/08 14:12:40 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1\n2020/11/08 14:12:40 [DEBUG] Home directory: /root/ca-tools/carrier/client1\n2020/11/08 14:12:40 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml\n2020/11/08 14:12:40 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205fc540}\n2020/11/08 14:12:40 [DEBUG] Entered runEnroll\n2020/11/08 14:12:40 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:40 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205fc540}\n2020/11/08 14:12:40 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205fc5a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:40 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420486420 DummyKeystore:<nil>}\n2020/11/08 14:12:40 [INFO] TLS Enabled\n2020/11/08 14:12:40 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:40 [DEBUG] Client Cert File: \n2020/11/08 14:12:40 [DEBUG] Client Key File: \n2020/11/08 14:12:40 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:40 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:40 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:40 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:40 [INFO] encoded CSR\n2020/11/08 14:12:40 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATuze/z9tfevu1n90O69AWNIMIciSkIGixZZdji/H8lTl9ox4BVy7kSmkCoRwNQ\\ncgjS911s21sZhcJpy+hFOtuLoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0cAMEQCICQO\\nQtKSiyGwfLIWo4n1BVFVxoLIXfvBogUPssgR6c7dAiAeFov7ze2p8Q6gEu7GXeDY\\n3y3XIa9cn9OqPjKNtG21WA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:40 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:40 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN4akNDQW15Z0F3SUJBZ0lVRzRJK29Nd3BsS0RwVjR0TmJsYU93MDVaM0x3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1IY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTzdONy9QMjE5Nis3V2YzUTdyMEJZMGcKd2h5SktRZ2FMRmxsMk9MOGZ5Vk9YMmpIZ0ZYTHVSS2FRS2hIQTFCeUNOTDNYV3piV3htRndtbkw2RVU2MjR1agpnZkl3Z2U4d0RnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSEE5Ck9Kak4vdFNXTDUyRkNQaXcrMkxJTU5idk1COEdBMVVkSXdRWU1CYUFGSExUL2xHY1Urc2VGMlc4OW9BU3dFa2oKUTZYTU1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzNwd1oyZ3dhUVlJS2dNRQpCUVlIQ0FFRVhYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1ClJXNXliMnhzYldWdWRFbEVJam9pVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmwKY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEzSTVmTGZkREhKZGFHa2VndG9NUUJ0V0laZEo1ZWJKaAo2d0ZLVHVIVkwxQUNJQ3NMUmxYOU9vMkE5QXpPL1dQOTNMRGdmUUorZHBQTEFwNkErMFEyR29rbwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:40 [DEBUG] newEnrollmentResponse User1@carrier-net\n2020/11/08 14:12:40 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/msp/signcerts/cert.pem\n2020/11/08 14:12:40 [INFO] Stored root CA certificate at /root/ca-tools/carrier/client1/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /root/ca-tools/carrier/client1/msp/admincerts\n+ cp /root/ca-tools/carrier/client1/msp/signcerts/cert.pem /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n2020/11/08 14:12:40 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 14:12:40 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}\n2020/11/08 14:12:40 [DEBUG] Entered runEnroll\n2020/11/08 14:12:40 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }\n2020/11/08 14:12:40 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}\n2020/11/08 14:12:40 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fe90 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 14:12:40 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42029dc20 DummyKeystore:<nil>}\n2020/11/08 14:12:40 [INFO] TLS Enabled\n2020/11/08 14:12:40 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 14:12:40 [DEBUG] Client Cert File: \n2020/11/08 14:12:40 [DEBUG] Client Key File: \n2020/11/08 14:12:40 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 14:12:40 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 14:12:40 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 14:12:40 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 14:12:40 [INFO] encoded CSR\n2020/11/08 14:12:40 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBM6cT3aJtCDHWxlCo+xK0MTmNsOlL6GMCUQRq5a6Y5Bg47GWDVJdY/xaCl5EdFDJ\\nEy2JMOcc9a/ayKK/EoejqQKgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtc3pwZ2gwCgYIKoZIzj0EAwIDRwAwRAIgKaed\\nUUwL8zIc0ufsQpPKlHOaIbIcq1G5nGEoUw85py4CIEiDBMPgqm8+HVeIi1CmjNgv\\nk1Lj9Uiafqi06iDrThqm\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 14:12:41 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 14:12:41 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQW8yZ0F3SUJBZ0lVWlRzZDNVZ3NPSWRNeFgvc09pNldUNWxEWTFvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTTZjVDNhSnRDREhXeGxDbyt4SzBNVG0KTnNPbEw2R01DVVFScTVhNlk1Qmc0N0dXRFZKZFkveGFDbDVFZEZESkV5MkpNT2NjOWEvYXlLSy9Fb2VqcVFLagpnZ0VTTUlJQkRqQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRXVmTzdySFVkR3c4cHo5ZVI1MXNKYXAKMFdNMk1COEdBMVVkSXdRWU1CYUFGSExUL2xHY1Urc2VGMlc4OW9BU3dFa2pRNlhNTUNRR0ExVWRFUVFkTUJ1QwpHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzNwd1oyZ3dhUVlJS2dNRUJRWUhDQUVFWFhzaVlYUjBjbk1pCk9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmxjaUo5ZlRBS0JnZ3Foa2pPUFFRRApBZ05JQURCRkFpRUFyWkRCQm1UTHVFTzgzaVpwQVQ1cHcwNmhMbUkwNFNyKzNWU01MUnhLNjRRQ0lEV3ZLZDJ5CkJ0YlpNbWhsamJoR21peWd1MWxUR0F2S2xCTTFBYVkwRldOawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 14:12:41 [DEBUG] newEnrollmentResponse User1@carrier-net\n2020/11/08 14:12:41 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/tls/signcerts/cert.pem\n2020/11/08 14:12:41 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls\n+ cp /root/ca-tools/carrier/client1/tls/keystore/97c9472b1c8f07e0b72e06992babcbc513612243242a2361d2a1e42463d114fc_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key\n+ cp /root/ca-tools/carrier/client1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt\n+ cp /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=carrier",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=C=GB,ST=London,L=London,O=carrier",
        "+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ CA_ADMIN_USER=carrier-admin",
        "+ CA_ADMIN_PASS=carrier-adminpw",
        "+ ORG_ADMIN_USER=Admin@carrier-net",
        "+ ORG_ADMIN_PASS=Admin@carrier-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ NO_OF_PEERS=2",
        "+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:37 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:37 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:37 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420296810}",
        "2020/11/08 14:12:37 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:37 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420296810}",
        "2020/11/08 14:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420296870 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202ac5e0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:37 [INFO] TLS Enabled",
        "2020/11/08 14:12:37 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:37 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:37 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:37 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:37 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:37 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:37 [INFO] encoded CSR",
        "2020/11/08 14:12:37 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE0dw8\\nafdFifSgsGPGvvr+aq88Om4pUY1qNIoGuNJ1IW4/K6yjkdJusWZNB4MWzTfHeWIi\\nlWq1evpETqkqrLofvqA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1zenBnaDAKBggqhkjOPQQDAgNHADBEAiB8EdAfO3CR\\n/yqQvC5/H/3ulUs9V9ngPddrFeC4gMlVqwIgJUGfLfyLLt3leK3XW6LpS/dAo+Ur\\nMQaQ1IKmygW/1ig=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:37 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:37 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTRENDQWUrZ0F3SUJBZ0lVT3lPdy90WmRIWm1uTWcwYzh6N1p2NFdLbnh3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OWTJGeWNtbGxjaTFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCTkhjUEduM1JZbjBvTEJqeHI3Ni9tcXZQRHB1S1ZHTmFqU0tCcmpTZFNGdVB5dXMKbzVIU2JyRm1UUWVERnMwM3gzbGlJcFZxdFhyNlJFNnBLcXk2SDc2amdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGUHl2UmZmNFVhSzdjUTU5NVBNZk5wYS9RRDdNCk1COEdBMVVkSXdRWU1CYUFGSExUL2xHY1Urc2VGMlc4OW9BU3dFa2pRNlhNTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzNwd1oyZ3dDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIaW1PSHBLeQpJNmZCcHNUemYyN2luZkZIWnlEQ0VFeFgwUGVDbmhSQ1BRQUNJRjRXZDhtTGtyZmVXWDd4UFZDdGtwN042Q0NQCkYrZDA2ZnpFT3FyY2dKQysKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:37 [DEBUG] newEnrollmentResponse carrier-admin",
        "2020/11/08 14:12:37 [INFO] Stored client certificate at /root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 14:12:37 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-carrier/msp/cacerts/ca-carrier-net-7054.pem",
        "+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp",
        "2020/11/08 14:12:37 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:37 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:37 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/08 14:12:37 [DEBUG] Entered runGetCACert",
        "2020/11/08 14:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/08 14:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b8090 DummyKeystore:<nil>}",
        "2020/11/08 14:12:37 [INFO] TLS Enabled",
        "2020/11/08 14:12:37 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:37 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:37 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:37 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/cainfo",
        "{}",
        "2020/11/08 14:12:37 [DEBUG] Received response",
        "statusCode=200 (200 OK)",
        "2020/11/08 14:12:37 [DEBUG] Response body result: map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5 CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]",
        "2020/11/08 14:12:37 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:37 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:37 [INFO] TLS Enabled",
        "2020/11/08 14:12:37 [INFO] TLS Enabled",
        "+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:37 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:37 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:37 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be570}",
        "2020/11/08 14:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396ab0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:37 [INFO] TLS Enabled",
        "2020/11/08 14:12:37 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:37 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:37 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:37 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be570}",
        "2020/11/08 14:12:37 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:37 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be570}",
        "2020/11/08 14:12:37 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:37 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396ab0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:37 [INFO] TLS Enabled",
        "2020/11/08 14:12:37 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:37 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:37 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:37 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:37 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 14:12:37 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:37 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/08 14:12:37 [DEBUG] Register { Name:Admin@carrier-net Type:client Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{abac.init true true} {hf.Registrar.Roles client false} {hf.Registrar.Attributes * false} {hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true}] CAName:  }",
        "2020/11/08 14:12:37 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:37 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"Admin@carrier-net\",\"type\":\"client\",\"secret\":\"Admin@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true},{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"},{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true}]}",
        "2020/11/08 14:12:38 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:38 [DEBUG] Response body result: map[secret:Admin@carrier-net-pw]",
        "2020/11/08 14:12:38 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:38 [DEBUG] Home directory: /root/ca-tools/carrier/admin",
        "2020/11/08 14:12:38 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420198720}",
        "2020/11/08 14:12:38 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:38 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420198720}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420198780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019ffb0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:38 [INFO] TLS Enabled",
        "2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:38 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:38 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:38 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:38 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:38 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:38 [INFO] encoded CSR",
        "2020/11/08 14:12:38 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS0EGA/+s2CX4Nq/faCoJt2SYaqmvzDmFcaAaX5mxqR6WPafMC3mk5e6MOp4HSL\\n+ztlJ+mv8BbDIN2bnBwqZPjPoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0gAMEUCIQD9\\nbpKFFSvrwS3xonxzc0IaxJupfWylZvfbcSPQXpYSAgIgDT/0+XyAXsa3d7APHNC8\\nKSJx/WJtuLtJJWabJlHpjP8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:38 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:38 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM3ekNDQXBhZ0F3SUJBZ0lVTVhKTWoySkNJc1ZWMEI1Yytnd0pndEk4KzNRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFdEJCZ1Avck5nbCtEYXYzMmdxQ2IKZGttR3Fwcjh3NWhYR2dHbCtac2FrZWxqMm56QXQ1cE9YdWpEcWVCMGkvczdaU2Zwci9BV3d5RGRtNXdjS21UNAp6Nk9DQVJrd2dnRVZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCU2o3dEt2S2ZYUUJIQUZkOHFKVnIxWW90MDhYVEFmQmdOVkhTTUVHREFXZ0JSeTAvNVJuRlBySGhkbHZQYUEKRXNCSkkwT2x6REFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxYTjZjR2RvTUlHTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05IQURCRUFpQXFVWS96OXZ6bTJPb0x1cm52eGFCR0RGQ0NBT0ZiY2UwdGFObDBJLzV4CmxRSWdhZXhzZExueTg5QVRiZjZPbzZOUHYwcDJqUktSM1l3Mi9rbzRBYkNBL3g4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:38 [DEBUG] newEnrollmentResponse Admin@carrier-net",
        "2020/11/08 14:12:38 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/msp/signcerts/cert.pem",
        "2020/11/08 14:12:38 [INFO] Stored root CA certificate at /root/ca-tools/carrier/admin/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts",
        "+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem",
        "+ mkdir /root/ca-tools/carrier/admin/msp/admincerts",
        "+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:38 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:38 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e780}",
        "2020/11/08 14:12:38 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:38 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e780}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e7e0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a41b0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:38 [INFO] TLS Enabled",
        "2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:38 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:38 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:38 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:38 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:38 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:38 [INFO] encoded CSR",
        "2020/11/08 14:12:38 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQD0Suly6wwmqPyHh68OMVCWYSMGQN1cw8NNo3PajTFhiZIWR8Kql0u+ne+WWIL\\n4LJNSMXgrjnm8rnqd+bH2kYhoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0gAMEUCIQCq\\nRt2g43e0sJXIps1Hw/pnUSE31XYfuzOlER6k73ECdwIgTeeurNCmWQZBdYA6K5bl\\nZ4M7MyhtQWTnhynAS3vibBE=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:38 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:38 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREakNDQXJXZ0F3SUJBZ0lVV2tRNEQ2cUh3SjFjQkR4Sk5abDVjdGtvMi84d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFQTlFcnBjdXNNSnFqOGg0ZXZEakYKUWxtRWpCa0RkWE1QRFRhTnoybzB4WVltU0ZrZkNxcGRMdnAzdmxsaUMrQ3lUVWpGNEs0NTV2SzU2bmZteDlwRwpJYU9DQVRnd2dnRTBNQTRHQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVVEpIQnhEQ3FsMkw1SGU4VndRV3MKMFhpY1dSa3dId1lEVlIwakJCZ3dGb0FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0pBWURWUjBSQkIwdwpHNElaWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemVuQm5hRENCamdZSUtnTUVCUVlIQ0FFRWdZRjdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENKaFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SW1OaGNuSnBaWElpTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKQlpHMXBia0JqWVhKeQphV1Z5TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbGJuUWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnClA0K1JTb0VGV3c1dEJJNEV3NzE3Y3dKUUc4SlhVVDFQMUhkTFJNVXNCQUFDSUFvVTJxelVVbENkQ2J6NzRILzQKTjJ6dnhDLzRScTRaTU9hV0wralhBV0pPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:38 [DEBUG] newEnrollmentResponse Admin@carrier-net",
        "2020/11/08 14:12:38 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/tls/signcerts/cert.pem",
        "2020/11/08 14:12:38 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/admin/tls/keystore/2dd9c2895639fe77a26092d5f3007bcaa78cc4a76a5de22cdf83aa12b590aee3_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key",
        "+ cp /root/ca-tools/carrier/admin/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt",
        "+ cp /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt",
        "+ COUNTER=0",
        "+ '[' 0 -lt 2 ']'",
        "+ PEER=peer0.carrier-net",
        "+ CSR_HOSTS=peer0.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:38 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:38 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:38 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba630}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203957a0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:38 [INFO] TLS Enabled",
        "2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:38 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:38 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba630}",
        "2020/11/08 14:12:38 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba630}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203957a0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:38 [INFO] TLS Enabled",
        "2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:38 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:38 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:38 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 14:12:38 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:38 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/08 14:12:38 [DEBUG] Register { Name:peer0.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 14:12:38 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:38 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"peer0.carrier-net\",\"type\":\"peer\",\"secret\":\"peer0.carrier-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 14:12:38 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:38 [DEBUG] Response body result: map[secret:peer0.carrier-net-pw]",
        "2020/11/08 14:12:38 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:38 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038fe60}",
        "2020/11/08 14:12:38 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:38 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038fe60}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038fec0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a1290 DummyKeystore:<nil>}",
        "2020/11/08 14:12:38 [INFO] TLS Enabled",
        "2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:38 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:38 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:38 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:38 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:38 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:38 [INFO] encoded CSR",
        "2020/11/08 14:12:38 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBujCCAWECAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATU0mGD2TKDYxUug5Xg6mgcdIpibaq+LM+5BJB2cR+r8dWmzXJzir+/u+uRkMN0\\nAU6ZQWP4jdD8pt+Q1EfT0ld1oIGUMIGRBgkqhkiG9w0BCQ4xgYMwgYAwfgYDVR0R\\nBHcwdYIRcGVlcjAuY2Fycmllci1uZXSCI3BlZXIwLmNhcnJpZXItbmV0LnN2Yy5j\\nbHVzdGVyLmxvY2FsghFwZWVyMC5jYXJyaWVyLm5ldIIocGVlcjAuY2Fycmllci1u\\nZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNHADBEAiASWOBC\\nR5ROyj6EESlguaVDT6ZqxpZtsT7Uae644Em/fQIgZffYjrVmqDR7TmQGhHafI5Ew\\njT8bcoNH1UiItiQN89Y=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:38 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:38 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQXRDZ0F3SUJBZ0lVR1FGQ3JZNG9yQU5laktuN0FJOWdCRi9vbko0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMU5KaGc5a3lnMk1WTG9PVjRPcG9ISFNLWW0ycXZpelB1UVNRZG5FZnEvSFYKcHMxeWM0cS92N3Zya1pERGRBRk9tVUZqK0kzUS9LYmZrTlJIMDlKWGRhT0NBV1V3Z2dGaE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVRlpqU1J5ZFZqZzJwTUo0elFsY09oMktLbWJrd0h3WURWUjBqQkJnd0ZvQVUKY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d2ZnWURWUjBSQkhjd2RZSVJjR1ZsY2pBdVkyRnljbWxsY2kxdQpaWFNDSTNCbFpYSXdMbU5oY25KcFpYSXRibVYwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2hGd1pXVnlNQzVqCllYSnlhV1Z5TG01bGRJSW9jR1ZsY2pBdVkyRnljbWxsY2kxdVpYUXVjM1Z1WldWc0xuQjJkQzUzYlhSaVlXWXUKYVc1bWJ6QmlCZ2dxQXdRRkJnY0lBUVJXZXlKaGRIUnljeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJcwpJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbkJsWlhJd0xtTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2CkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0ZtcU4vcUpZZjFrYURYSS93Tm8zRExkWE1PRzAKM2dSRGkxcTNHR0dwS013Q0lGNEFUMnIrY1pWUng1aFVXVEFXSkRQc1crZXA0dzE4VVBOdjZSRVdlSlh3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/08 14:12:38 [DEBUG] newEnrollmentResponse peer0.carrier-net",
        "2020/11/08 14:12:38 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem",
        "2020/11/08 14:12:38 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/0b82da1c921ea972ed88552cb1206c115dc9a671b34614e43b3cd5b285a9a475_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:38 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:38 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0660}",
        "2020/11/08 14:12:38 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:38 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:38 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0660}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a06c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:38 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb870 DummyKeystore:<nil>}",
        "2020/11/08 14:12:38 [INFO] TLS Enabled",
        "2020/11/08 14:12:38 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:38 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:38 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:38 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:38 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:38 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:38 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:38 [INFO] encoded CSR",
        "2020/11/08 14:12:38 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATSPS6UMgx9ALFBa/tnEpsiI3NVwFUBmT4bkME+5iNUybHCoyzh2sANZ6rFpLxI\\nPVFt4wwyi8S/ajmd8TQiDqM9oDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0cAMEQCIDjU\\nuoZL0rFvM++7MU+akBXBCqcriasuofNjsuhyXqyGAiANYDW4xGKLf1mdRfVeJeo2\\nbPEv/kUKT09v/yDvgm9kcg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:39 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:39 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyekNDQWxXZ0F3SUJBZ0lVWTFYb1pOeHphRnExUm1qa1o3eWFRUFJEbmVVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMGowdWxESU1mUUN4UVd2N1p4S2JJaU56VmNCVkFaaytHNURCUHVZalZNbXgKd3FNczRkckFEV2VxeGFTOFNEMVJiZU1NTW92RXYybzVuZkUwSWc2alBhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVQXpJQy91ZEtDMFB6dDRoZ2FCR2Rzay9wCjJYQXdId1lEVlIwakJCZ3dGb0FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemVuQm5hREJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXdMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWgKQUl5RzdqaHlKYnlYZlArRUp6eWVJNE9VUnV0UTRuY0w4MnZLM2FFZTI0T3NBaUJMWGZTaU52bnhhaU8rQlJJNQpmZm4ya0NYWlBjVzJGNWoyb3puSzZuazZkdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y]]",
        "2020/11/08 14:12:39 [DEBUG] newEnrollmentResponse peer0.carrier-net",
        "2020/11/08 14:12:39 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem",
        "2020/11/08 14:12:39 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 1 -lt 2 ']'",
        "+ PEER=peer1.carrier-net",
        "+ CSR_HOSTS=peer1.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:39 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:39 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:39 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:39 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a0570}",
        "2020/11/08 14:12:39 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200a05d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:39 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a74b0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:39 [INFO] TLS Enabled",
        "2020/11/08 14:12:39 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:39 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:39 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:39 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:39 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a0570}",
        "2020/11/08 14:12:39 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:39 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a0570}",
        "2020/11/08 14:12:39 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200a05d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:39 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a74b0 DummyKeystore:<nil>}",
        "2020/11/08 14:12:39 [INFO] TLS Enabled",
        "2020/11/08 14:12:39 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:39 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:39 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:39 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:39 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 14:12:39 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:39 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/08 14:12:39 [DEBUG] Register { Name:peer1.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 14:12:39 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:39 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"peer1.carrier-net\",\"type\":\"peer\",\"secret\":\"peer1.carrier-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 14:12:39 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:39 [DEBUG] Response body result: map[secret:peer1.carrier-net-pw]",
        "2020/11/08 14:12:39 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:39 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:39 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394630}",
        "2020/11/08 14:12:39 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:39 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:39 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394630}",
        "2020/11/08 14:12:39 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420394690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:39 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b870 DummyKeystore:<nil>}",
        "2020/11/08 14:12:39 [INFO] TLS Enabled",
        "2020/11/08 14:12:39 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:39 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:39 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:39 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:39 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:39 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:39 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:39 [INFO] encoded CSR",
        "2020/11/08 14:12:39 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBujCCAWECAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQCGBe0WRkwOTtR14p9d0IsJsL8Bqa02kisHUln0lED83hT5vReN4GYIkTXA0dW\\nI4nbYaOMBqM/PNgCD4FTsPoyoIGUMIGRBgkqhkiG9w0BCQ4xgYMwgYAwfgYDVR0R\\nBHcwdYIRcGVlcjEuY2Fycmllci1uZXSCI3BlZXIxLmNhcnJpZXItbmV0LnN2Yy5j\\nbHVzdGVyLmxvY2FsghFwZWVyMS5jYXJyaWVyLm5ldIIocGVlcjEuY2Fycmllci1u\\nZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNHADBEAiAq85Uq\\nUxDLLYoylE171MqybYaGb5ziJfxcXkHpXx2ZHQIgK0OOqwxYNNmfQ0DtYpmcs4ob\\nBMqNAv7AAGfCj5bA5RA=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:39 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:39 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQXRDZ0F3SUJBZ0lVUlo4ck1aNmRnVGhwK0FDRzEzOElYelpWT3Nvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFQWhnWHRGa1pNRGs3VWRlS2ZYZENMQ2JDL0FhbXROcElyQjFKWjlKUkEvTjQKVStiMFhqZUJtQ0pFMXdOSFZpT0oyMkdqakFhalB6ellBZytCVTdENk1xT0NBV1V3Z2dGaE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVUFdMTGRpc21RRXhtcGlMSGhJRkxOenU2T2Znd0h3WURWUjBqQkJnd0ZvQVUKY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d2ZnWURWUjBSQkhjd2RZSVJjR1ZsY2pFdVkyRnljbWxsY2kxdQpaWFNDSTNCbFpYSXhMbU5oY25KcFpYSXRibVYwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2hGd1pXVnlNUzVqCllYSnlhV1Z5TG01bGRJSW9jR1ZsY2pFdVkyRnljbWxsY2kxdVpYUXVjM1Z1WldWc0xuQjJkQzUzYlhSaVlXWXUKYVc1bWJ6QmlCZ2dxQXdRRkJnY0lBUVJXZXlKaGRIUnljeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJcwpJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbkJsWlhJeExtTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2CkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ09mS2phVkRKWDBCZUYzM3dHL0k4SDd0dFFEOVgKTVRjRmRsejAxT3VmTm5RQ0lHZXBHdlp2aVBTVDJHNExGRVRIYm1lQklRUnlnMDU3VmhxamI3djViUE1TCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net]]",
        "2020/11/08 14:12:39 [DEBUG] newEnrollmentResponse peer1.carrier-net",
        "2020/11/08 14:12:39 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem",
        "2020/11/08 14:12:39 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/5f7bb6908b58ee8cb97540ab01008ce7b560c2715dd8651528e6af9aae0d14dd_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 14:12:39 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:39 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2720}",
        "2020/11/08 14:12:39 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:39 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:39 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2720}",
        "2020/11/08 14:12:39 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:39 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039e540 DummyKeystore:<nil>}",
        "2020/11/08 14:12:39 [INFO] TLS Enabled",
        "2020/11/08 14:12:39 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:39 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:39 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:39 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:39 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:39 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:39 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:39 [INFO] encoded CSR",
        "2020/11/08 14:12:39 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS7AIbL1HjU9qs6/uX87k63cjxif4cxU/EwNCGX5g3xW0mZC2U+HUskmN5n8Z5d\\naESNbvnNTTJrL/yZUEGejGVZoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0gAMEUCIQDu\\nEVUaZWsyOBtgjeAv79OI7WIPDh2We+eCkzabiZEmUwIgEMnTG2XMv1jXNSrz0mg3\\nEwumJbCJJjeRAK4ZJomyq7w=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:39 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:39 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVUWp3TFBOQ3E5ajMyTUxoWVl6bFNVV080RGc4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFdXdDR3k5UjQxUGFyT3Y3bC9PNU90M0k4WW4rSE1WUHhNRFFobCtZTjhWdEoKbVF0bFBoMUxKSmplWi9HZVhXaEVqVzc1elUweWF5LzhtVkJCbm94bFdhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVdGxoaTJFNkNEd2E3emROd0NwMGppR01SCkRid3dId1lEVlIwakJCZ3dGb0FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemVuQm5hREJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXhMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKY0VST0xtY0pPYTdQa3BkVGxaa3RxSWswWTByMUl5M2I1bGRhOUdLSTFIWUNJRjNhcjVLWnB3amRBZGFPSzBqWgpuczkrbnh1eEhWTHcvVFZ3WlVtSVhXVVUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:39 [DEBUG] newEnrollmentResponse peer1.carrier-net",
        "2020/11/08 14:12:39 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem",
        "2020/11/08 14:12:39 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 2 -lt 2 ']'",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ORG_NAME=carrier",
        "+ TYPE_FOLDER=peers",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ '[' peer '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@carrier-net",
        "+ ORG_USERPASS=User1@carrier-net-pw",
        "+ '[' peer = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:40 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 14:12:40 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:40 [DEBUG] Checking for enrollment",
        "2020/11/08 14:12:40 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5d0}",
        "2020/11/08 14:12:40 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:40 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420199220 DummyKeystore:<nil>}",
        "2020/11/08 14:12:40 [INFO] TLS Enabled",
        "2020/11/08 14:12:40 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:40 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:40 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:40 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:40 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5d0}",
        "2020/11/08 14:12:40 [DEBUG] Entered runRegister",
        "2020/11/08 14:12:40 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5d0}",
        "2020/11/08 14:12:40 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:40 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420199220 DummyKeystore:<nil>}",
        "2020/11/08 14:12:40 [INFO] TLS Enabled",
        "2020/11/08 14:12:40 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:40 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:40 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:40 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:40 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 14:12:40 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 14:12:40 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/08 14:12:40 [DEBUG] Register { Name:User1@carrier-net Type:user Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/08 14:12:40 [DEBUG] Adding token-based authorization header",
        "2020/11/08 14:12:40 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"User1@carrier-net\",\"type\":\"user\",\"secret\":\"User1@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/08 14:12:40 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:40 [DEBUG] Response body result: map[secret:User1@carrier-net-pw]",
        "2020/11/08 14:12:40 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1",
        "2020/11/08 14:12:40 [DEBUG] Home directory: /root/ca-tools/carrier/client1",
        "2020/11/08 14:12:40 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml",
        "2020/11/08 14:12:40 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205fc540}",
        "2020/11/08 14:12:40 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:40 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:40 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205fc540}",
        "2020/11/08 14:12:40 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205fc5a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:40 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420486420 DummyKeystore:<nil>}",
        "2020/11/08 14:12:40 [INFO] TLS Enabled",
        "2020/11/08 14:12:40 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:40 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:40 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:40 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:40 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:40 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:40 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:40 [INFO] encoded CSR",
        "2020/11/08 14:12:40 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATuze/z9tfevu1n90O69AWNIMIciSkIGixZZdji/H8lTl9ox4BVy7kSmkCoRwNQ\\ncgjS911s21sZhcJpy+hFOtuLoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXN6cGdoMAoGCCqGSM49BAMCA0cAMEQCICQO\\nQtKSiyGwfLIWo4n1BVFVxoLIXfvBogUPssgR6c7dAiAeFov7ze2p8Q6gEu7GXeDY\\n3y3XIa9cn9OqPjKNtG21WA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:40 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:40 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN4akNDQW15Z0F3SUJBZ0lVRzRJK29Nd3BsS0RwVjR0TmJsYU93MDVaM0x3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1IY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTzdONy9QMjE5Nis3V2YzUTdyMEJZMGcKd2h5SktRZ2FMRmxsMk9MOGZ5Vk9YMmpIZ0ZYTHVSS2FRS2hIQTFCeUNOTDNYV3piV3htRndtbkw2RVU2MjR1agpnZkl3Z2U4d0RnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSEE5Ck9Kak4vdFNXTDUyRkNQaXcrMkxJTU5idk1COEdBMVVkSXdRWU1CYUFGSExUL2xHY1Urc2VGMlc4OW9BU3dFa2oKUTZYTU1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzNwd1oyZ3dhUVlJS2dNRQpCUVlIQ0FFRVhYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1ClJXNXliMnhzYldWdWRFbEVJam9pVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmwKY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEzSTVmTGZkREhKZGFHa2VndG9NUUJ0V0laZEo1ZWJKaAo2d0ZLVHVIVkwxQUNJQ3NMUmxYOU9vMkE5QXpPL1dQOTNMRGdmUUorZHBQTEFwNkErMFEyR29rbwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:40 [DEBUG] newEnrollmentResponse User1@carrier-net",
        "2020/11/08 14:12:40 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/msp/signcerts/cert.pem",
        "2020/11/08 14:12:40 [INFO] Stored root CA certificate at /root/ca-tools/carrier/client1/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /root/ca-tools/carrier/client1/msp/admincerts",
        "+ cp /root/ca-tools/carrier/client1/msp/signcerts/cert.pem /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "2020/11/08 14:12:40 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 14:12:40 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}",
        "2020/11/08 14:12:40 [DEBUG] Entered runEnroll",
        "2020/11/08 14:12:40 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  }",
        "2020/11/08 14:12:40 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-szpgh] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe30}",
        "2020/11/08 14:12:40 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fe90 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 14:12:40 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42029dc20 DummyKeystore:<nil>}",
        "2020/11/08 14:12:40 [INFO] TLS Enabled",
        "2020/11/08 14:12:40 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 14:12:40 [DEBUG] Client Cert File: ",
        "2020/11/08 14:12:40 [DEBUG] Client Key File: ",
        "2020/11/08 14:12:40 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 14:12:40 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-szpgh] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 14:12:40 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 14:12:40 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 14:12:40 [INFO] encoded CSR",
        "2020/11/08 14:12:40 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-szpgh\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBM6cT3aJtCDHWxlCo+xK0MTmNsOlL6GMCUQRq5a6Y5Bg47GWDVJdY/xaCl5EdFDJ\\nEy2JMOcc9a/ayKK/EoejqQKgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtc3pwZ2gwCgYIKoZIzj0EAwIDRwAwRAIgKaed\\nUUwL8zIc0ufsQpPKlHOaIbIcq1G5nGEoUw85py4CIEiDBMPgqm8+HVeIi1CmjNgv\\nk1Lj9Uiafqi06iDrThqm\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 14:12:41 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 14:12:41 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQW8yZ0F3SUJBZ0lVWlRzZDNVZ3NPSWRNeFgvc09pNldUNWxEWTFvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBNE1EQmFGdzB5TVRFeE1EZ3hOREV6TURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTTZjVDNhSnRDREhXeGxDbyt4SzBNVG0KTnNPbEw2R01DVVFScTVhNlk1Qmc0N0dXRFZKZFkveGFDbDVFZEZESkV5MkpNT2NjOWEvYXlLSy9Fb2VqcVFLagpnZ0VTTUlJQkRqQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRXVmTzdySFVkR3c4cHo5ZVI1MXNKYXAKMFdNMk1COEdBMVVkSXdRWU1CYUFGSExUL2xHY1Urc2VGMlc4OW9BU3dFa2pRNlhNTUNRR0ExVWRFUVFkTUJ1QwpHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzNwd1oyZ3dhUVlJS2dNRUJRWUhDQUVFWFhzaVlYUjBjbk1pCk9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmxjaUo5ZlRBS0JnZ3Foa2pPUFFRRApBZ05JQURCRkFpRUFyWkRCQm1UTHVFTzgzaVpwQVQ1cHcwNmhMbUkwNFNyKzNWU01MUnhLNjRRQ0lEV3ZLZDJ5CkJ0YlpNbWhsamJoR21peWd1MWxUR0F2S2xCTTFBYVkwRldOawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTUFKc3FJWURqT0YvQ3B6SEdWUWFhMHI0aGVJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TkRBek1UQmFGdzB5TXpBNE1qa3hOREF6TVRCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUlpKa2NLaWdJalRBR20yVHlvRUh4cnhFbEFGNmVSZzVWbFVhUEljTjNaNVI1QzRNcGxvR0FJTEZSZU1IZVcKR3dlRHMyc2xMdTBoSzVMTTVCaHI1QWh6bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVjdFArVVp4VDZ4NFhaYnoyZ0JMQVNTTkRwY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFNUG1tK1c5Q0xwUm1hemhPckdTYjVtTlY1L2lpbDI1K1J6dm85VWhXOFh1QWlCQlJSUTEKVVUwRnI2QTlmTTA0LzZ4OTVTYVFtblhvenpLUCs5WE9PeTUrT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIK4plmyLs2Q4OsGr8TXQPr6aYrCQ/PmPw8Z1OCuW6G0wEiA5aPqvm/5yH2NctPexbM6vQQgKxPQwHfMeGGabu4klMRpECiBXGslKF9ZhcY3Ypgl81Y5yWtTwOAnKo5wXPS3kLqaYSxIg1sMcDDSUU1SODgXqdjoP0wcK3hzp4F6f6E2W5EjWo/4iRAogbeWrzLLAiSq+4xFkSvwVK126sK9Zc0rzLak6gd4qgVESIE4DhhkjvOHW2Rd0w2w8pKqQspzSO9FGKVxteb1bBqTuIkQKIOlf9BCpxu1t/wGuVdrcqLJHp7EmOun4H48q5xpWdm9mEiCaLt0L/LaEy4/dC6QBMuMZpwkftsj8fx0b94xEmp+xciJECiCNz3OTpz9U7skSb4lg0KBoY3eb5fwZW957M3XDRpfTcRIgpbQWhtHKkRjx85bPmxaS6TQf/3qg+Y794N0SWi63jygiRAogVNfvm76u2lL7F4iRqmNYhLtLWoUoGXddJAeHiIDKSr8SIASll2Mp7a1nS3enR95pSqNRh7Ot1KL/fyq62BZnwwl+KogBCiCDFuWGUhUNAMNFkq4RuYAAQm+tv2ZNZRbWhTwcyJNBsxIgaxt4zfTmUp96IjVz36o57P2joq7o9IG9M8+Nfn8UlsAaIFYoGEar1QTuuES4W6is9Hy8p6n3lvXL+ikqxvEaGBkxIiDId/O+0nXRafA5qTNk6SEXsvdv4Okp6qWe1bwka8BWWDJECiAKdX1fxIs3l1SsTEGSvbeZqtblenuXQFZnWSbGbOZFZBIgMv7VnLlvmOH0eOYgpU9zCSyrxAyZgHG1qoQVRzkrOUs6RAogUlTafpXk1ga5GTFeYOy71xCgdWC7P0DWN6Nxfy8q5GUSIPYaz1K4MRjb1WoLqAZQMtc02tfMHYO71eI4u7G+cxX7QiCX03hhrlqDIZwn7gu2jpX7U7V+l9A8OzzyvLxdesYTa0ogN/oPI4XazBret4QGv5DSQSYPV6JrD1hxJYe6ujS8U9BSIG/6GBW4jprqedxm96jNfT4qMHgHxigI8dKaiAAJ1E8Y IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVDejY1b0xNdjRVRlRmTVNRNEhLajRsNFBKM2x0dVhIago5c0s5YmYxSER3YmRXaC80aE9sbDNTbitodW51WUZXZjMzeTcrVG5ZUUpLOGxvbTVVdFJtRjZzenVYNXM3TjNyCkhqVWlYQktrN2p1WFllN3NRekxzWGZTTk9PNXVVUlZnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 14:12:41 [DEBUG] newEnrollmentResponse User1@carrier-net",
        "2020/11/08 14:12:41 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/tls/signcerts/cert.pem",
        "2020/11/08 14:12:41 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/client1/tls/keystore/97c9472b1c8f07e0b72e06992babcbc513612243242a2361d2a1e42463d114fc_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key",
        "+ cp /root/ca-tools/carrier/client1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt",
        "+ cp /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Successfully added affiliation: carrier\nPassword: Admin@carrier-net-pw\nRegistering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.suneel.pvt.wmtbaf.info\nPassword: peer0.carrier-net-pw\nRegistering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.suneel.pvt.wmtbaf.info\nPassword: peer1.carrier-net-pw\nPassword: User1@carrier-net-pw",
    "stdout_lines": [
        "Successfully added affiliation: carrier",
        "Password: Admin@carrier-net-pw",
        "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.suneel.pvt.wmtbaf.info",
        "Password: peer0.carrier-net-pw",
        "Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.suneel.pvt.wmtbaf.info",
        "Password: peer1.carrier-net-pw",
        "Password: User1@carrier-net-pw"
    ]
}

TASK [create/crypto/peer : Copy the crypto config folder from the ca tools] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844761.1558037-19949-29119437175704 `" && echo ansible-tmp-1604844761.1558037-19949-29119437175704="` echo /root/.ansible/tmp/ansible-tmp-1604844761.1558037-19949-29119437175704 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnuhhhlkv TO /root/.ansible/tmp/ansible-tmp-1604844761.1558037-19949-29119437175704/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844761.1558037-19949-29119437175704/ /root/.ansible/tmp/ansible-tmp-1604844761.1558037-19949-29119437175704/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844761.1558037-19949-29119437175704/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844761.1558037-19949-29119437175704/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.708095",
    "end": "2020-11-08 14:12:41.999702",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:41.291607",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peer.yaml for each peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:58
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844762.1779454-19991-155928193658130 `" && echo ansible-tmp-1604844762.1779454-19991-155928193658130="` echo /root/.ansible/tmp/ansible-tmp-1604844762.1779454-19991-155928193658130 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpezu7kjva TO /root/.ansible/tmp/ansible-tmp-1604844762.1779454-19991-155928193658130/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844762.1779454-19991-155928193658130/ /root/.ansible/tmp/ansible-tmp-1604844762.1779454-19991-155928193658130/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844762.1779454-19991-155928193658130/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844762.1779454-19991-155928193658130/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.165642",
    "end": "2020-11-08 14:12:42.475717",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:42.310075",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844762.5447125-20043-254087444034443 `" && echo ansible-tmp-1604844762.5447125-20043-254087444034443="` echo /root/.ansible/tmp/ansible-tmp-1604844762.5447125-20043-254087444034443 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpuacvtrws TO /root/.ansible/tmp/ansible-tmp-1604844762.5447125-20043-254087444034443/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844762.5447125-20043-254087444034443/ /root/.ansible/tmp/ansible-tmp-1604844762.5447125-20043-254087444034443/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844762.5447125-20043-254087444034443/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844762.5447125-20043-254087444034443/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844763.1703627-20071-38622887932307 `" && echo ansible-tmp-1604844763.1703627-20071-38622887932307="` echo /root/.ansible/tmp/ansible-tmp-1604844763.1703627-20071-38622887932307 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp496gzv3t TO /root/.ansible/tmp/ansible-tmp-1604844763.1703627-20071-38622887932307/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844763.1703627-20071-38622887932307/ /root/.ansible/tmp/ansible-tmp-1604844763.1703627-20071-38622887932307/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844763.1703627-20071-38622887932307/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844763.1703627-20071-38622887932307/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844763.7875395-20099-125156229302215 `" && echo ansible-tmp-1604844763.7875395-20099-125156229302215="` echo /root/.ansible/tmp/ansible-tmp-1604844763.7875395-20099-125156229302215 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpibrhkqam TO /root/.ansible/tmp/ansible-tmp-1604844763.7875395-20099-125156229302215/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844763.7875395-20099-125156229302215/ /root/.ansible/tmp/ansible-tmp-1604844763.7875395-20099-125156229302215/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844763.7875395-20099-125156229302215/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844763.7875395-20099-125156229302215/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.054693",
    "end": "2020-11-08 14:12:43.973187",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:43.918494",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844764.0651517-20135-256507387812470 `" && echo ansible-tmp-1604844764.0651517-20135-256507387812470="` echo /root/.ansible/tmp/ansible-tmp-1604844764.0651517-20135-256507387812470 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5cudyejx TO /root/.ansible/tmp/ansible-tmp-1604844764.0651517-20135-256507387812470/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844764.0651517-20135-256507387812470/ /root/.ansible/tmp/ansible-tmp-1604844764.0651517-20135-256507387812470/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844764.0651517-20135-256507387812470/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844764.0651517-20135-256507387812470/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844764.2608738-20161-97840959044263 `" && echo ansible-tmp-1604844764.2608738-20161-97840959044263="` echo /root/.ansible/tmp/ansible-tmp-1604844764.2608738-20161-97840959044263 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpk_xwzs7r TO /root/.ansible/tmp/ansible-tmp-1604844764.2608738-20161-97840959044263/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844764.2608738-20161-97840959044263/ /root/.ansible/tmp/ansible-tmp-1604844764.2608738-20161-97840959044263/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844764.2608738-20161-97840959044263/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844764.2608738-20161-97840959044263/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.suneel.pvt.wmtbaf.info\nEOF\n",
    "delta": "0:00:00.002561",
    "end": "2020-11-08 14:12:44.395694",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.suneel.pvt.wmtbaf.info\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:44.393133",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844764.456009-20189-9054069897126 `" && echo ansible-tmp-1604844764.456009-20189-9054069897126="` echo /root/.ansible/tmp/ansible-tmp-1604844764.456009-20189-9054069897126 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7pulegmc TO /root/.ansible/tmp/ansible-tmp-1604844764.456009-20189-9054069897126/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844764.456009-20189-9054069897126/ /root/.ansible/tmp/ansible-tmp-1604844764.456009-20189-9054069897126/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844764.456009-20189-9054069897126/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844764.456009-20189-9054069897126/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844764.6581094-20215-189796524953892 `" && echo ansible-tmp-1604844764.6581094-20215-189796524953892="` echo /root/.ansible/tmp/ansible-tmp-1604844764.6581094-20215-189796524953892 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp92tkzjhh TO /root/.ansible/tmp/ansible-tmp-1604844764.6581094-20215-189796524953892/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844764.6581094-20215-189796524953892/ /root/.ansible/tmp/ansible-tmp-1604844764.6581094-20215-189796524953892/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844764.6581094-20215-189796524953892/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844764.6581094-20215-189796524953892/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
    "delta": "0:00:00.012919",
    "end": "2020-11-08 14:12:44.800687",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:44.787768",
    "stderr": "Ignoring -days; not generating a certificate\nSignature ok\nsubject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.suneel.pvt.wmtbaf.info\nGetting CA Private Key",
    "stderr_lines": [
        "Ignoring -days; not generating a certificate",
        "Signature ok",
        "subject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.suneel.pvt.wmtbaf.info",
        "Getting CA Private Key"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844764.8630075-20248-169521467197986 `" && echo ansible-tmp-1604844764.8630075-20248-169521467197986="` echo /root/.ansible/tmp/ansible-tmp-1604844764.8630075-20248-169521467197986 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp2gir1fjc TO /root/.ansible/tmp/ansible-tmp-1604844764.8630075-20248-169521467197986/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844764.8630075-20248-169521467197986/ /root/.ansible/tmp/ansible-tmp-1604844764.8630075-20248-169521467197986/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844764.8630075-20248-169521467197986/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844764.8630075-20248-169521467197986/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
    "delta": "0:00:00.120413",
    "end": "2020-11-08 14:12:45.113700",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:44.993287",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844765.1808317-20281-280974500775606 `" && echo ansible-tmp-1604844765.1808317-20281-280974500775606="` echo /root/.ansible/tmp/ansible-tmp-1604844765.1808317-20281-280974500775606 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmplz0anenv TO /root/.ansible/tmp/ansible-tmp-1604844765.1808317-20281-280974500775606/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844765.1808317-20281-280974500775606/ /root/.ansible/tmp/ansible-tmp-1604844765.1808317-20281-280974500775606/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844765.1808317-20281-280974500775606/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844765.1808317-20281-280974500775606/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
    "delta": "0:00:00.115385",
    "end": "2020-11-08 14:12:45.431942",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:45.316557",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844765.505905-20313-73571568734350 `" && echo ansible-tmp-1604844765.505905-20313-73571568734350="` echo /root/.ansible/tmp/ansible-tmp-1604844765.505905-20313-73571568734350 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwunuxxuc TO /root/.ansible/tmp/ansible-tmp-1604844765.505905-20313-73571568734350/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844765.505905-20313-73571568734350/ /root/.ansible/tmp/ansible-tmp-1604844765.505905-20313-73571568734350/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844765.505905-20313-73571568734350/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844765.505905-20313-73571568734350/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
    "delta": "0:00:00.051870",
    "end": "2020-11-08 14:12:45.689934",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:45.638064",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador"
    ]
}

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844765.7630093-20352-126332235399168 `" && echo ansible-tmp-1604844765.7630093-20352-126332235399168="` echo /root/.ansible/tmp/ansible-tmp-1604844765.7630093-20352-126332235399168 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqawhzgej TO /root/.ansible/tmp/ansible-tmp-1604844765.7630093-20352-126332235399168/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844765.7630093-20352-126332235399168/ /root/.ansible/tmp/ansible-tmp-1604844765.7630093-20352-126332235399168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844765.7630093-20352-126332235399168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844765.7630093-20352-126332235399168/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.092669",
    "end": "2020-11-08 14:12:45.986589",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:45.893920",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844766.0526283-20404-250394264830743 `" && echo ansible-tmp-1604844766.0526283-20404-250394264830743="` echo /root/.ansible/tmp/ansible-tmp-1604844766.0526283-20404-250394264830743 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpym0mtbs7 TO /root/.ansible/tmp/ansible-tmp-1604844766.0526283-20404-250394264830743/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844766.0526283-20404-250394264830743/ /root/.ansible/tmp/ansible-tmp-1604844766.0526283-20404-250394264830743/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844766.0526283-20404-250394264830743/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844766.0526283-20404-250394264830743/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844766.6831505-20432-256834463572322 `" && echo ansible-tmp-1604844766.6831505-20432-256834463572322="` echo /root/.ansible/tmp/ansible-tmp-1604844766.6831505-20432-256834463572322 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp__zz_s4w TO /root/.ansible/tmp/ansible-tmp-1604844766.6831505-20432-256834463572322/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844766.6831505-20432-256834463572322/ /root/.ansible/tmp/ansible-tmp-1604844766.6831505-20432-256834463572322/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844766.6831505-20432-256834463572322/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844766.6831505-20432-256834463572322/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844767.3216484-20460-149777925648740 `" && echo ansible-tmp-1604844767.3216484-20460-149777925648740="` echo /root/.ansible/tmp/ansible-tmp-1604844767.3216484-20460-149777925648740 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwilfky0q TO /root/.ansible/tmp/ansible-tmp-1604844767.3216484-20460-149777925648740/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844767.3216484-20460-149777925648740/ /root/.ansible/tmp/ansible-tmp-1604844767.3216484-20460-149777925648740/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844767.3216484-20460-149777925648740/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844767.3216484-20460-149777925648740/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.057393",
    "end": "2020-11-08 14:12:47.512592",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:47.455199",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "data:\n  certificate: |-\n    -----BEGIN CERTIFICATE-----\n    MIICMTCCAdigAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwODE0MTI0NFoXDTIzMDgw\n    NTE0MTI0NFowgYExEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx\n    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxMTAvBgNV\n    BAMMKHBlZXIwLmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8wWTAT\n    BgcqhkjOPQIBBggqhkjOPQMBBwNCAAQjCKZNoUDt44NTuZgc2ntWnr/+nM0dhKy8\n    LfC5eBHWE8AwsUTi7E6JMr5MC99YFpckXFPMUQp4DN8wFP/P94jAo2cwZTAPBgNV\n    HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4EFgQU4oTPwhz0Jfww\n    uu30H9YQEAutK0swIwYDVR0RBBwwGoIYKi5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\n    MAoGCCqGSM49BAMCA0cAMEQCIG1/3cMp6OiGetTnDb6qsCWnbACJuBGpYm2njWjZ\n    EqbYAiBXBT8CRTn8ScUB/5dEsFEKj254Pn3AhYO64zJKP1Kh4A==\n    -----END CERTIFICATE-----\n    -----BEGIN CERTIFICATE-----\n    MIIB+DCCAZ6gAwIBAgIUMAJsqIYDjOF/CpzHGVQaa0r4heIwCgYIKoZIzj0EAwIw\n    WjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\n    MRAwDgYDVQQKDAdDYXJyaWVyMRcwFQYDVQQDDA5jYS5jYXJyaWVyLW5ldDAeFw0y\n    MDExMDgxNDAzMTBaFw0yMzA4MjkxNDAzMTBaMFoxCzAJBgNVBAYTAkdCMQ8wDQYD\n    VQQIDAZMb25kb24xDzANBgNVBAcMBkxvbmRvbjEQMA4GA1UECgwHQ2FycmllcjEX\n    MBUGA1UEAwwOY2EuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\n    AARZJkcKigIjTAGm2TyoEHxrxElAF6eRg5VlUaPIcN3Z5R5C4MploGAILFReMHeW\n    GweDs2slLu0hK5LM5Bhr5Ahzo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\n    /wQEAwIBpjAdBgNVHQ4EFgQUctP+UZxT6x4XZbz2gBLASSNDpcwwCgYIKoZIzj0E\n    AwIDSAAwRQIhAMPmm+W9CLpRmazhOrGSb5mNV5/iil25+Rzvo9UhW8XuAiBBRRQ1\n    UU0Fr6A9fM04/6x95SaQmnXozzKP+9XOOy5+Og==\n    -----END CERTIFICATE-----\n  clientcert: |-\n    -----BEGIN CERTIFICATE-----\n    MIICMTCCAdigAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwODE0MTI0NFoXDTIzMDgw\n    NTE0MTI0NFowgYExEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx\n    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxMTAvBgNV\n    BAMMKHBlZXIwLmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8wWTAT\n    BgcqhkjOPQIBBggqhkjOPQMBBwNCAAQjCKZNoUDt44NTuZgc2ntWnr/+nM0dhKy8\n    LfC5eBHWE8AwsUTi7E6JMr5MC99YFpckXFPMUQp4DN8wFP/P94jAo2cwZTAPBgNV\n    HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4EFgQU4oTPwhz0Jfww\n    uu30H9YQEAutK0swIwYDVR0RBBwwGoIYKi5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\n    MAoGCCqGSM49BAMCA0cAMEQCIG1/3cMp6OiGetTnDb6qsCWnbACJuBGpYm2njWjZ\n    EqbYAiBXBT8CRTn8ScUB/5dEsFEKj254Pn3AhYO64zJKP1Kh4A==\n    -----END CERTIFICATE-----\n  key: |-\n    -----BEGIN EC PRIVATE KEY-----\n    MHcCAQEEIJTHorA4HKZSLzUDho90ULQlKHHHXVQZPxmWAILrdIWjoAoGCCqGSM49\n    AwEHoUQDQgAEIwimTaFA7eODU7mYHNp7Vp6//pzNHYSsvC3wuXgR1hPAMLFE4uxO\n    iTK+TAvfWBaXJFxTzFEKeAzfMBT/z/eIwA==\n    -----END EC PRIVATE KEY-----\nlease_duration: 2764800\nlease_id: \"\"\nrenewable: false\nrequest_id: 9d1a272a-798e-bca0-6e00-5b1423dce8a3\nwarnings: null",
    "stdout_lines": [
        "data:",
        "  certificate: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICMTCCAdigAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwODE0MTI0NFoXDTIzMDgw",
        "    NTE0MTI0NFowgYExEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx",
        "    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxMTAvBgNV",
        "    BAMMKHBlZXIwLmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8wWTAT",
        "    BgcqhkjOPQIBBggqhkjOPQMBBwNCAAQjCKZNoUDt44NTuZgc2ntWnr/+nM0dhKy8",
        "    LfC5eBHWE8AwsUTi7E6JMr5MC99YFpckXFPMUQp4DN8wFP/P94jAo2cwZTAPBgNV",
        "    HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4EFgQU4oTPwhz0Jfww",
        "    uu30H9YQEAutK0swIwYDVR0RBBwwGoIYKi5zdW5lZWwucHZ0LndtdGJhZi5pbmZv",
        "    MAoGCCqGSM49BAMCA0cAMEQCIG1/3cMp6OiGetTnDb6qsCWnbACJuBGpYm2njWjZ",
        "    EqbYAiBXBT8CRTn8ScUB/5dEsFEKj254Pn3AhYO64zJKP1Kh4A==",
        "    -----END CERTIFICATE-----",
        "    -----BEGIN CERTIFICATE-----",
        "    MIIB+DCCAZ6gAwIBAgIUMAJsqIYDjOF/CpzHGVQaa0r4heIwCgYIKoZIzj0EAwIw",
        "    WjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u",
        "    MRAwDgYDVQQKDAdDYXJyaWVyMRcwFQYDVQQDDA5jYS5jYXJyaWVyLW5ldDAeFw0y",
        "    MDExMDgxNDAzMTBaFw0yMzA4MjkxNDAzMTBaMFoxCzAJBgNVBAYTAkdCMQ8wDQYD",
        "    VQQIDAZMb25kb24xDzANBgNVBAcMBkxvbmRvbjEQMA4GA1UECgwHQ2FycmllcjEX",
        "    MBUGA1UEAwwOY2EuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC",
        "    AARZJkcKigIjTAGm2TyoEHxrxElAF6eRg5VlUaPIcN3Z5R5C4MploGAILFReMHeW",
        "    GweDs2slLu0hK5LM5Bhr5Ahzo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB",
        "    /wQEAwIBpjAdBgNVHQ4EFgQUctP+UZxT6x4XZbz2gBLASSNDpcwwCgYIKoZIzj0E",
        "    AwIDSAAwRQIhAMPmm+W9CLpRmazhOrGSb5mNV5/iil25+Rzvo9UhW8XuAiBBRRQ1",
        "    UU0Fr6A9fM04/6x95SaQmnXozzKP+9XOOy5+Og==",
        "    -----END CERTIFICATE-----",
        "  clientcert: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICMTCCAdigAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwODE0MTI0NFoXDTIzMDgw",
        "    NTE0MTI0NFowgYExEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx",
        "    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxMTAvBgNV",
        "    BAMMKHBlZXIwLmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8wWTAT",
        "    BgcqhkjOPQIBBggqhkjOPQMBBwNCAAQjCKZNoUDt44NTuZgc2ntWnr/+nM0dhKy8",
        "    LfC5eBHWE8AwsUTi7E6JMr5MC99YFpckXFPMUQp4DN8wFP/P94jAo2cwZTAPBgNV",
        "    HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4EFgQU4oTPwhz0Jfww",
        "    uu30H9YQEAutK0swIwYDVR0RBBwwGoIYKi5zdW5lZWwucHZ0LndtdGJhZi5pbmZv",
        "    MAoGCCqGSM49BAMCA0cAMEQCIG1/3cMp6OiGetTnDb6qsCWnbACJuBGpYm2njWjZ",
        "    EqbYAiBXBT8CRTn8ScUB/5dEsFEKj254Pn3AhYO64zJKP1Kh4A==",
        "    -----END CERTIFICATE-----",
        "  key: |-",
        "    -----BEGIN EC PRIVATE KEY-----",
        "    MHcCAQEEIJTHorA4HKZSLzUDho90ULQlKHHHXVQZPxmWAILrdIWjoAoGCCqGSM49",
        "    AwEHoUQDQgAEIwimTaFA7eODU7mYHNp7Vp6//pzNHYSsvC3wuXgR1hPAMLFE4uxO",
        "    iTK+TAvfWBaXJFxTzFEKeAzfMBT/z/eIwA==",
        "    -----END EC PRIVATE KEY-----",
        "lease_duration: 2764800",
        "lease_id: \"\"",
        "renewable: false",
        "request_id: 9d1a272a-798e-bca0-6e00-5b1423dce8a3",
        "warnings: null"
    ]
}

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:19
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844767.763382-20503-6606652695454 `" && echo ansible-tmp-1604844767.763382-20503-6606652695454="` echo /root/.ansible/tmp/ansible-tmp-1604844767.763382-20503-6606652695454 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwrx104wk TO /root/.ansible/tmp/ansible-tmp-1604844767.763382-20503-6606652695454/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844767.763382-20503-6606652695454/ /root/.ansible/tmp/ansible-tmp-1604844767.763382-20503-6606652695454/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844767.763382-20503-6606652695454/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844767.763382-20503-6606652695454/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533 `" && echo ansible-tmp-1604844768.0333796-20529-214617883035533="` echo /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmptdfmf9tv TO /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/ /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpvqlrv9i7 TO /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/ /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpyt_qkul3 TO /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/ /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "75c4e17e104ae689722301d4921b81eecf697a52",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpvqlrv9i7",
            "attributes": null,
            "backup": false,
            "checksum": "75c4e17e104ae689722301d4921b81eecf697a52",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "fd86f59bc7cec81b090e965a571cd03c",
    "mode": "0644",
    "owner": "root",
    "size": 226,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844768.0333796-20529-214617883035533/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022 `" && echo ansible-tmp-1604844768.4560266-20569-187196766240022="` echo /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqmc7wzts TO /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/ /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpe1ndk7cx TO /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/ /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpr7vw9sci TO /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/ /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "296466baeefb5787384720b8c9b14fd41c3a7cb8",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpe1ndk7cx",
            "attributes": null,
            "backup": false,
            "checksum": "296466baeefb5787384720b8c9b14fd41c3a7cb8",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "280c9c5724a38bc8c557a8c06256b444",
    "mode": "0644",
    "owner": "root",
    "size": 1566,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844768.4560266-20569-187196766240022/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844768.8005385-20610-254187788324998 `" && echo ansible-tmp-1604844768.8005385-20610-254187788324998="` echo /root/.ansible/tmp/ansible-tmp-1604844768.8005385-20610-254187788324998 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpr03w484g TO /root/.ansible/tmp/ansible-tmp-1604844768.8005385-20610-254187788324998/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844768.8005385-20610-254187788324998/ /root/.ansible/tmp/ansible-tmp-1604844768.8005385-20610-254187788324998/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844768.8005385-20610-254187788324998/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844768.8005385-20610-254187788324998/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "atime": 1604844764.7903352,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "390f9115e7f48569bf311f0269e078e1dd2b2fbc",
        "ctime": 1604844764.3903291,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3978,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844764.3903291,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 257,
        "uid": 0,
        "version": "4010660651",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844769.0322585-20640-280687445206949 `" && echo ansible-tmp-1604844769.0322585-20640-280687445206949="` echo /root/.ansible/tmp/ansible-tmp-1604844769.0322585-20640-280687445206949 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnbx3zz0o TO /root/.ansible/tmp/ansible-tmp-1604844769.0322585-20640-280687445206949/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844769.0322585-20640-280687445206949/ /root/.ansible/tmp/ansible-tmp-1604844769.0322585-20640-280687445206949/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844769.0322585-20640-280687445206949/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844769.0322585-20640-280687445206949/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key"
        }
    },
    "stat": {
        "atime": 1604844768.3023884,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "75c4e17e104ae689722301d4921b81eecf697a52",
        "ctime": 1604844768.3023884,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3993,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844768.1703863,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 226,
        "uid": 0,
        "version": "2801560106",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the MSP config.yaml exist or not] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844769.4028575-20676-53119002615157 `" && echo ansible-tmp-1604844769.4028575-20676-53119002615157="` echo /root/.ansible/tmp/ansible-tmp-1604844769.4028575-20676-53119002615157 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5cibbwcy TO /root/.ansible/tmp/ansible-tmp-1604844769.4028575-20676-53119002615157/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844769.4028575-20676-53119002615157/ /root/.ansible/tmp/ansible-tmp-1604844769.4028575-20676-53119002615157/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844769.4028575-20676-53119002615157/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844769.4028575-20676-53119002615157/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp/config.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Create the msp directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844769.6518886-20702-132940900099061 `" && echo ansible-tmp-1604844769.6518886-20702-132940900099061="` echo /root/.ansible/tmp/ansible-tmp-1604844769.6518886-20702-132940900099061 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfbfx2h24 TO /root/.ansible/tmp/ansible-tmp-1604844769.6518886-20702-132940900099061/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844769.6518886-20702-132940900099061/ /root/.ansible/tmp/ansible-tmp-1604844769.6518886-20702-132940900099061/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844769.6518886-20702-132940900099061/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844769.6518886-20702-132940900099061/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Create the MSP config.yaml file for orgs] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:79
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844769.8850973-20728-130004672033572 `" && echo ansible-tmp-1604844769.8850973-20728-130004672033572="` echo /root/.ansible/tmp/ansible-tmp-1604844769.8850973-20728-130004672033572 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpa8bxjef5 TO /root/.ansible/tmp/ansible-tmp-1604844769.8850973-20728-130004672033572/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844769.8850973-20728-130004672033572/ /root/.ansible/tmp/ansible-tmp-1604844769.8850973-20728-130004672033572/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844769.8850973-20728-130004672033572/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844769.8850973-20728-130004672033572/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
    "delta": "0:00:00.002859",
    "end": "2020-11-08 14:12:50.024214",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:50.021355",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check that orderer-certificate file exists] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:96
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844770.103978-20756-87993181799808 `" && echo ansible-tmp-1604844770.103978-20756-87993181799808="` echo /root/.ansible/tmp/ansible-tmp-1604844770.103978-20756-87993181799808 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpmqp9cgs2 TO /root/.ansible/tmp/ansible-tmp-1604844770.103978-20756-87993181799808/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844770.103978-20756-87993181799808/ /root/.ansible/tmp/ansible-tmp-1604844770.103978-20756-87993181799808/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844770.103978-20756-87993181799808/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844770.103978-20756-87993181799808/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604841494.1327727,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
        "ctime": 1604841492.4407468,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3939,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841492.308745,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 741,
        "uid": 0,
        "version": "3885363393",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844770.3180737-20756-235801946562580 `" && echo ansible-tmp-1604844770.3180737-20756-235801946562580="` echo /root/.ansible/tmp/ansible-tmp-1604844770.3180737-20756-235801946562580 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp1qvlkkd9 TO /root/.ansible/tmp/ansible-tmp-1604844770.3180737-20756-235801946562580/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844770.3180737-20756-235801946562580/ /root/.ansible/tmp/ansible-tmp-1604844770.3180737-20756-235801946562580/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844770.3180737-20756-235801946562580/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844770.3180737-20756-235801946562580/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604841494.1847734,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
        "ctime": 1604841492.776752,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3831,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841492.6447499,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 741,
        "uid": 0,
        "version": "241225487",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844770.5090473-20756-63706043894204 `" && echo ansible-tmp-1604844770.5090473-20756-63706043894204="` echo /root/.ansible/tmp/ansible-tmp-1604844770.5090473-20756-63706043894204 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcy099gmp TO /root/.ansible/tmp/ansible-tmp-1604844770.5090473-20756-63706043894204/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844770.5090473-20756-63706043894204/ /root/.ansible/tmp/ansible-tmp-1604844770.5090473-20756-63706043894204/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844770.5090473-20756-63706043894204/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844770.5090473-20756-63706043894204/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604841494.224774,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
        "ctime": 1604841493.1047568,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3792,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841492.9687548,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 741,
        "uid": 0,
        "version": "1920297633",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Ensure orderer tls cert directory exists] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:108
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844770.7312527-20836-40893562833913 `" && echo ansible-tmp-1604844770.7312527-20836-40893562833913="` echo /root/.ansible/tmp/ansible-tmp-1604844770.7312527-20836-40893562833913 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmplp1z9uq9 TO /root/.ansible/tmp/ansible-tmp-1604844770.7312527-20836-40893562833913/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844770.7312527-20836-40893562833913/ /root/.ansible/tmp/ansible-tmp-1604844770.7312527-20836-40893562833913/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844770.7312527-20836-40893562833913/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844770.7312527-20836-40893562833913/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844770.9093585-20836-235158479797196 `" && echo ansible-tmp-1604844770.9093585-20836-235158479797196="` echo /root/.ansible/tmp/ansible-tmp-1604844770.9093585-20836-235158479797196 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpuzqvt9j3 TO /root/.ansible/tmp/ansible-tmp-1604844770.9093585-20836-235158479797196/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844770.9093585-20836-235158479797196/ /root/.ansible/tmp/ansible-tmp-1604844770.9093585-20836-235158479797196/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844770.9093585-20836-235158479797196/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844770.9093585-20836-235158479797196/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844771.088324-20836-109434690238458 `" && echo ansible-tmp-1604844771.088324-20836-109434690238458="` echo /root/.ansible/tmp/ansible-tmp-1604844771.088324-20836-109434690238458 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfrgr1j3o TO /root/.ansible/tmp/ansible-tmp-1604844771.088324-20836-109434690238458/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.088324-20836-109434690238458/ /root/.ansible/tmp/ansible-tmp-1604844771.088324-20836-109434690238458/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844771.088324-20836-109434690238458/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844771.088324-20836-109434690238458/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Copy tls ca.crt from auto-generated path to given path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:120
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027 `" && echo ansible-tmp-1604844771.300335-20910-133419619368027="` echo /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdw6t0jju TO /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/ /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/ /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpr4efgmjl TO /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/ /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "612cec6676ee586735c1c71ae2ec29909e0040f1",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "612cec6676ee586735c1c71ae2ec29909e0040f1",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "58c6f49e64c1946f2bd37c3906d708d9",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 745,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844771.300335-20910-133419619368027/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629 `" && echo ansible-tmp-1604844771.6373043-20910-42973599131629="` echo /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpd35_femp TO /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/ /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/ /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpsoxbtw13 TO /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/ /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "612cec6676ee586735c1c71ae2ec29909e0040f1",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "612cec6676ee586735c1c71ae2ec29909e0040f1",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "58c6f49e64c1946f2bd37c3906d708d9",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 745,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844771.6373043-20910-42973599131629/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626 `" && echo ansible-tmp-1604844771.9712222-20910-139911159011626="` echo /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpoofw80hk TO /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/ /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/ /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp1904ddy4 TO /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/ /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "612cec6676ee586735c1c71ae2ec29909e0040f1",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "612cec6676ee586735c1c71ae2ec29909e0040f1",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "58c6f49e64c1946f2bd37c3906d708d9",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 745,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844771.9712222-20910-139911159011626/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if Orderer certs exist in Vault] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844772.3372238-21032-26730731338718 `" && echo ansible-tmp-1604844772.3372238-21032-26730731338718="` echo /root/.ansible/tmp/ansible-tmp-1604844772.3372238-21032-26730731338718 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppj1d9eq4 TO /root/.ansible/tmp/ansible-tmp-1604844772.3372238-21032-26730731338718/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844772.3372238-21032-26730731338718/ /root/.ansible/tmp/ansible-tmp-1604844772.3372238-21032-26730731338718/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844772.3372238-21032-26730731338718/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844772.3372238-21032-26730731338718/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.101642",
    "end": "2020-11-08 14:12:52.574410",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-08 14:12:52.472768",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844772.6240242-21032-150196603942011 `" && echo ansible-tmp-1604844772.6240242-21032-150196603942011="` echo /root/.ansible/tmp/ansible-tmp-1604844772.6240242-21032-150196603942011 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppgreeimy TO /root/.ansible/tmp/ansible-tmp-1604844772.6240242-21032-150196603942011/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844772.6240242-21032-150196603942011/ /root/.ansible/tmp/ansible-tmp-1604844772.6240242-21032-150196603942011/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844772.6240242-21032-150196603942011/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844772.6240242-21032-150196603942011/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.054403",
    "end": "2020-11-08 14:12:52.811378",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-08 14:12:52.756975",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844772.8570526-21032-201853213997995 `" && echo ansible-tmp-1604844772.8570526-21032-201853213997995="` echo /root/.ansible/tmp/ansible-tmp-1604844772.8570526-21032-201853213997995 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpgnurbbkc TO /root/.ansible/tmp/ansible-tmp-1604844772.8570526-21032-201853213997995/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844772.8570526-21032-201853213997995/ /root/.ansible/tmp/ansible-tmp-1604844772.8570526-21032-201853213997995/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844772.8570526-21032-201853213997995/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844772.8570526-21032-201853213997995/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.052463",
    "end": "2020-11-08 14:12:53.041117",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-08 14:12:52.988654",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Save Orderer certs if not in Vault] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:149
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy organization level certificates for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:158
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844773.191785-21134-31314316227118 `" && echo ansible-tmp-1604844773.191785-21134-31314316227118="` echo /root/.ansible/tmp/ansible-tmp-1604844773.191785-21134-31314316227118 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0mo745v7 TO /root/.ansible/tmp/ansible-tmp-1604844773.191785-21134-31314316227118/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844773.191785-21134-31314316227118/ /root/.ansible/tmp/ansible-tmp-1604844773.191785-21134-31314316227118/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844773.191785-21134-31314316227118/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844773.191785-21134-31314316227118/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt)\" \n",
    "delta": "0:00:00.136101",
    "end": "2020-11-08 14:12:53.469096",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt)\" \n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:53.332995",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ]
}

TASK [create/crypto/peer : Check if admin msp already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:173
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844773.5408888-21190-136003315842313 `" && echo ansible-tmp-1604844773.5408888-21190-136003315842313="` echo /root/.ansible/tmp/ansible-tmp-1604844773.5408888-21190-136003315842313 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqlv5dcyu TO /root/.ansible/tmp/ansible-tmp-1604844773.5408888-21190-136003315842313/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844773.5408888-21190-136003315842313/ /root/.ansible/tmp/ansible-tmp-1604844773.5408888-21190-136003315842313/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844773.5408888-21190-136003315842313/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844773.5408888-21190-136003315842313/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/admin/msp\n",
    "delta": "0:00:00.053942",
    "end": "2020-11-08 14:12:53.729483",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:53.675541",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Copy organization level certificates for orgs] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:183
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844773.8009-21225-33578483530109 `" && echo ansible-tmp-1604844773.8009-21225-33578483530109="` echo /root/.ansible/tmp/ansible-tmp-1604844773.8009-21225-33578483530109 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppuntnavt TO /root/.ansible/tmp/ansible-tmp-1604844773.8009-21225-33578483530109/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844773.8009-21225-33578483530109/ /root/.ansible/tmp/ansible-tmp-1604844773.8009-21225-33578483530109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844773.8009-21225-33578483530109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844773.8009-21225-33578483530109/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.095879",
    "end": "2020-11-08 14:12:54.031241",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:53.935362",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/msp"
    ]
}

TASK [create/crypto/peer : Check if user msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:193
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844774.0994964-21276-254426343836456 `" && echo ansible-tmp-1604844774.0994964-21276-254426343836456="` echo /root/.ansible/tmp/ansible-tmp-1604844774.0994964-21276-254426343836456 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdahysj5i TO /root/.ansible/tmp/ansible-tmp-1604844774.0994964-21276-254426343836456/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844774.0994964-21276-254426343836456/ /root/.ansible/tmp/ansible-tmp-1604844774.0994964-21276-254426343836456/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844774.0994964-21276-254426343836456/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844774.0994964-21276-254426343836456/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/user1/msp\n",
    "delta": "0:00:00.055421",
    "end": "2020-11-08 14:12:54.287502",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/user1/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 14:12:54.232081",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/users/user1/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/users/user1/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Copy user certificates for orgs] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:203
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844774.3588336-21311-49436215068651 `" && echo ansible-tmp-1604844774.3588336-21311-49436215068651="` echo /root/.ansible/tmp/ansible-tmp-1604844774.3588336-21311-49436215068651 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp__n98p8b TO /root/.ansible/tmp/ansible-tmp-1604844774.3588336-21311-49436215068651/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844774.3588336-21311-49436215068651/ /root/.ansible/tmp/ansible-tmp-1604844774.3588336-21311-49436215068651/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844774.3588336-21311-49436215068651/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844774.3588336-21311-49436215068651/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/users/user1/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/user1/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/admincerts/User1@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.095208",
    "end": "2020-11-08 14:12:54.591929",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/users/user1/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/user1/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/admincerts/User1@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:12:54.496721",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/msp"
    ]
}

TASK [include_role : create/configtx] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:131

TASK [create/configtx : Create build directory if it does not exist] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:12
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844774.8016686-21366-105070159444457 `" && echo ansible-tmp-1604844774.8016686-21366-105070159444457="` echo /root/.ansible/tmp/ansible-tmp-1604844774.8016686-21366-105070159444457 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp09y4nqkn TO /root/.ansible/tmp/ansible-tmp-1604844774.8016686-21366-105070159444457/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844774.8016686-21366-105070159444457/ /root/.ansible/tmp/ansible-tmp-1604844774.8016686-21366-105070159444457/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844774.8016686-21366-105070159444457/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844774.8016686-21366-105070159444457/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/configtx : Remove old configtx file] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844775.0612104-21392-77188309896120 `" && echo ansible-tmp-1604844775.0612104-21392-77188309896120="` echo /root/.ansible/tmp/ansible-tmp-1604844775.0612104-21392-77188309896120 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpil35_okc TO /root/.ansible/tmp/ansible-tmp-1604844775.0612104-21392-77188309896120/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844775.0612104-21392-77188309896120/ /root/.ansible/tmp/ansible-tmp-1604844775.0612104-21392-77188309896120/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844775.0612104-21392-77188309896120/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844775.0612104-21392-77188309896120/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/configtx.yaml",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/configtx.yaml",
    "state": "absent"
}

TASK [create/configtx : create configtx.yaml file] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:25
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844775.3032959-21418-167668427929516 `" && echo ansible-tmp-1604844775.3032959-21418-167668427929516="` echo /root/.ansible/tmp/ansible-tmp-1604844775.3032959-21418-167668427929516 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp6cxnr678 TO /root/.ansible/tmp/ansible-tmp-1604844775.3032959-21418-167668427929516/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844775.3032959-21418-167668427929516/ /root/.ansible/tmp/ansible-tmp-1604844775.3032959-21418-167668427929516/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844775.3032959-21418-167668427929516/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844775.3032959-21418-167668427929516/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "dest": "./build/configtx.yaml",
    "diff": {
        "after": {
            "atime": 1604844775.443685,
            "mtime": 1604844775.443685,
            "path": "./build/configtx.yaml",
            "state": "touch"
        },
        "before": {
            "atime": 1604844775.4384966,
            "mtime": 1604844775.4384966,
            "path": "./build/configtx.yaml",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/configtx.yaml",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "touch",
            "unsafe_writes": false
        }
    },
    "mode": "0644",
    "owner": "root",
    "size": 0,
    "state": "file",
    "uid": 0
}

TASK [create/configtx : Adding init patch to configtx.yaml] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844775.5631175-21444-30393705665575 `" && echo ansible-tmp-1604844775.5631175-21444-30393705665575="` echo /root/.ansible/tmp/ansible-tmp-1604844775.5631175-21444-30393705665575 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpk12ohdbn TO /root/.ansible/tmp/ansible-tmp-1604844775.5631175-21444-30393705665575/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844775.5631175-21444-30393705665575/ /root/.ansible/tmp/ansible-tmp-1604844775.5631175-21444-30393705665575/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844775.5631175-21444-30393705665575/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844775.5631175-21444-30393705665575/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "---\nCapabilities:\n  Global: &ChannelCapabilities\n    V1_4_3: true\n  Orderer: &OrdererCapabilities\n    V1_4_2: true\n  Application: &ApplicationCapabilities\n    V1_4_2: true\n\nApplication: &ApplicationDefaults\n  Organizations:\n  Policies: &ApplicationDefaultPolicies\n    LifecycleEndorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Endorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Readers:\n        Type: ImplicitMeta\n        Rule: \"ANY Readers\"\n    Writers:\n        Type: ImplicitMeta\n        Rule: \"ANY Writers\"\n    Admins:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ApplicationCapabilities\n\nChannel: &ChannelDefaults\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ChannelCapabilities\n\nOrganizations:\n\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Adding organization patch to configtx.yaml] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:44
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844776.007705-21470-43799388852917 `" && echo ansible-tmp-1604844776.007705-21470-43799388852917="` echo /root/.ansible/tmp/ansible-tmp-1604844776.007705-21470-43799388852917 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbr7jx5ah TO /root/.ansible/tmp/ansible-tmp-1604844776.007705-21470-43799388852917/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844776.007705-21470-43799388852917/ /root/.ansible/tmp/ansible-tmp-1604844776.007705-21470-43799388852917/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844776.007705-21470-43799388852917/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844776.007705-21470-43799388852917/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "  - &walmartOrg\n    Name: walmartMSP\n    ID: walmartMSP\n    MSPDir: ./crypto-config/ordererOrganizations/walmart-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('walmartMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n    \n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844776.2731268-21470-258886389018149 `" && echo ansible-tmp-1604844776.2731268-21470-258886389018149="` echo /root/.ansible/tmp/ansible-tmp-1604844776.2731268-21470-258886389018149 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbs6s9hcu TO /root/.ansible/tmp/ansible-tmp-1604844776.2731268-21470-258886389018149/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844776.2731268-21470-258886389018149/ /root/.ansible/tmp/ansible-tmp-1604844776.2731268-21470-258886389018149/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844776.2731268-21470-258886389018149/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844776.2731268-21470-258886389018149/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "  - &carrierOrg\n    Name: carrierMSP\n    ID: carrierMSP\n    MSPDir: ./crypto-config/peerOrganizations/carrier-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('carrierMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n          \n    AnchorPeers:\n      # AnchorPeers defines the location of peers which can be used\n      # for cross org gossip communication.  Note, this value is only\n      # encoded in the genesis block in the Application section context\n      - Host: peer0.carrier-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}

TASK [create/configtx : Adding orderer patch to configtx.yaml] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844776.544786-21520-182720623697166 `" && echo ansible-tmp-1604844776.544786-21520-182720623697166="` echo /root/.ansible/tmp/ansible-tmp-1604844776.544786-21520-182720623697166 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprxmh7e0y TO /root/.ansible/tmp/ansible-tmp-1604844776.544786-21520-182720623697166/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844776.544786-21520-182720623697166/ /root/.ansible/tmp/ansible-tmp-1604844776.544786-21520-182720623697166/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844776.544786-21520-182720623697166/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844776.544786-21520-182720623697166/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "Orderer: &OrdererDefaults\n  OrdererType: etcdraft\n  Addresses:\n    - orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443\n\n  BatchTimeout: 2s\n  BatchSize:\n    MaxMessageCount: 10\n    AbsoluteMaxBytes: 98 MB\n    PreferredMaxBytes: 1024 KB\n  EtcdRaft:\n    Consenters:\n      - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n      - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n      - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n  Organizations:\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n    BlockValidation:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n  Capabilities:\n    <<: *OrdererCapabilities\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Adding profile patch to configtx.yaml] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844776.9136655-21546-66935375393472 `" && echo ansible-tmp-1604844776.9136655-21546-66935375393472="` echo /root/.ansible/tmp/ansible-tmp-1604844776.9136655-21546-66935375393472 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7nd5369m TO /root/.ansible/tmp/ansible-tmp-1604844776.9136655-21546-66935375393472/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844776.9136655-21546-66935375393472/ /root/.ansible/tmp/ansible-tmp-1604844776.9136655-21546-66935375393472/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844776.9136655-21546-66935375393472/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844776.9136655-21546-66935375393472/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "Profiles:\n  OrdererGenesis:\n    <<: *ChannelDefaults\n    Orderer:\n      <<: *OrdererDefaults\n      OrdererType: etcdraft\n      EtcdRaft:\n        Consenters:\n        - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n      Organizations:\n        - *walmartOrg\n    Consortiums:\n      SupplyChainConsortium:\n        Organizations:\n          - *carrierOrg\n  AllChannel:\n    <<: *ChannelDefaults\n    Consortium: SupplyChainConsortium\n    Application:\n      <<: *ApplicationDefaults\n      Organizations:\n        - *carrierOrg\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Display configtx file contents] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:87
ok: [localhost] => {
    "msg": "The configtx file is: #\n---\nCapabilities:\n  Global: &ChannelCapabilities\n    V1_4_3: true\n  Orderer: &OrdererCapabilities\n    V1_4_2: true\n  Application: &ApplicationCapabilities\n    V1_4_2: true\n\nApplication: &ApplicationDefaults\n  Organizations:\n  Policies: &ApplicationDefaultPolicies\n    LifecycleEndorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Endorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Readers:\n        Type: ImplicitMeta\n        Rule: \"ANY Readers\"\n    Writers:\n        Type: ImplicitMeta\n        Rule: \"ANY Writers\"\n    Admins:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ApplicationCapabilities\n\nChannel: &ChannelDefaults\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ChannelCapabilities\n\nOrganizations:\n\n#\n  - &walmartOrg\n    Name: walmartMSP\n    ID: walmartMSP\n    MSPDir: ./crypto-config/ordererOrganizations/walmart-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('walmartMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n    \n#\n  - &carrierOrg\n    Name: carrierMSP\n    ID: carrierMSP\n    MSPDir: ./crypto-config/peerOrganizations/carrier-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('carrierMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n          \n    AnchorPeers:\n      # AnchorPeers defines the location of peers which can be used\n      # for cross org gossip communication.  Note, this value is only\n      # encoded in the genesis block in the Application section context\n      - Host: peer0.carrier-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n#\nOrderer: &OrdererDefaults\n  OrdererType: etcdraft\n  Addresses:\n    - orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443\n\n  BatchTimeout: 2s\n  BatchSize:\n    MaxMessageCount: 10\n    AbsoluteMaxBytes: 98 MB\n    PreferredMaxBytes: 1024 KB\n  EtcdRaft:\n    Consenters:\n      - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n      - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n      - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n  Organizations:\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n    BlockValidation:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n  Capabilities:\n    <<: *OrdererCapabilities\n#\nProfiles:\n  OrdererGenesis:\n    <<: *ChannelDefaults\n    Orderer:\n      <<: *OrdererDefaults\n      OrdererType: etcdraft\n      EtcdRaft:\n        Consenters:\n        - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n      Organizations:\n        - *walmartOrg\n    Consortiums:\n      SupplyChainConsortium:\n        Organizations:\n          - *carrierOrg\n  AllChannel:\n    <<: *ChannelDefaults\n    Consortium: SupplyChainConsortium\n    Application:\n      <<: *ApplicationDefaults\n      Organizations:\n        - *carrierOrg\n#"
}

TASK [Create channel artifacts] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:137

TASK [create/channel_artifacts : Create build directory if it does not exist] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:5
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844777.3433201-21576-205998124947635 `" && echo ansible-tmp-1604844777.3433201-21576-205998124947635="` echo /root/.ansible/tmp/ansible-tmp-1604844777.3433201-21576-205998124947635 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpz_y0je4_ TO /root/.ansible/tmp/ansible-tmp-1604844777.3433201-21576-205998124947635/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844777.3433201-21576-205998124947635/ /root/.ansible/tmp/ansible-tmp-1604844777.3433201-21576-205998124947635/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844777.3433201-21576-205998124947635/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844777.3433201-21576-205998124947635/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : check configtxgen] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844777.549413-21602-279767044081432 `" && echo ansible-tmp-1604844777.549413-21602-279767044081432="` echo /root/.ansible/tmp/ansible-tmp-1604844777.549413-21602-279767044081432 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpima5ylif TO /root/.ansible/tmp/ansible-tmp-1604844777.549413-21602-279767044081432/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844777.549413-21602-279767044081432/ /root/.ansible/tmp/ansible-tmp-1604844777.549413-21602-279767044081432/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844777.549413-21602-279767044081432/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844777.549413-21602-279767044081432/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/configtxgen"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/channel_artifacts : register temporary directory] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844777.7551963-21628-114248016572463 `" && echo ansible-tmp-1604844777.7551963-21628-114248016572463="` echo /root/.ansible/tmp/ansible-tmp-1604844777.7551963-21628-114248016572463 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpggvdsshf TO /root/.ansible/tmp/ansible-tmp-1604844777.7551963-21628-114248016572463/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844777.7551963-21628-114248016572463/ /root/.ansible/tmp/ansible-tmp-1604844777.7551963-21628-114248016572463/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844777.7551963-21628-114248016572463/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844777.7551963-21628-114248016572463/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.erkji_js",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : Getting the configtxgen binary tar] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844777.9542654-21654-92169885092101 `" && echo ansible-tmp-1604844777.9542654-21654-92169885092101="` echo /root/.ansible/tmp/ansible-tmp-1604844777.9542654-21654-92169885092101 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/get_url.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzjj9_9we TO /root/.ansible/tmp/ansible-tmp-1604844777.9542654-21654-92169885092101/AnsiballZ_get_url.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844777.9542654-21654-92169885092101/ /root/.ansible/tmp/ansible-tmp-1604844777.9542654-21654-92169885092101/AnsiballZ_get_url.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844777.9542654-21654-92169885092101/AnsiballZ_get_url.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844777.9542654-21654-92169885092101/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum_dest": null,
    "checksum_src": "8098245d9d10578e78c0ac66e21edfa9957126e4",
    "dest": "/tmp/ansible.erkji_js/hyperledger-fabric-linux-amd64-2.0.0.tar.gz",
    "elapsed": 1,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": null,
            "checksum": "",
            "client_cert": null,
            "client_key": null,
            "dest": "/tmp/ansible.erkji_js",
            "force": false,
            "force_basic_auth": false,
            "group": null,
            "headers": null,
            "http_agent": "ansible-httpget",
            "mode": null,
            "owner": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "sha256sum": "",
            "timeout": 10,
            "tmp_dest": null,
            "unsafe_writes": false,
            "url": "https://github.com/hyperledger/fabric/releases/download/v2.0.0/hyperledger-fabric-linux-amd64-2.0.0.tar.gz",
            "url_password": null,
            "url_username": null,
            "use_proxy": true,
            "validate_certs": true
        }
    },
    "md5sum": "d113b7b9949345855f93314eebcf8fbb",
    "mode": "0644",
    "msg": "OK (76285381 bytes)",
    "owner": "root",
    "size": 76285381,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844777.9542654-21654-92169885092101/tmpga4880r1",
    "state": "file",
    "status_code": 200,
    "uid": 0,
    "url": "https://github.com/hyperledger/fabric/releases/download/v2.0.0/hyperledger-fabric-linux-amd64-2.0.0.tar.gz"
}

TASK [create/channel_artifacts : Unziping the downloaded file] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206 `" && echo ansible-tmp-1604844780.557001-21682-275910913814206="` echo /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp2xstvs2i TO /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/ /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /tmp/ansible.erkji_js/hyperledger-fabric-linux-amd64-2.0.0.tar.gz TO /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/ /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/unarchive.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpvk0739ca TO /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/AnsiballZ_unarchive.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/ /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/AnsiballZ_unarchive.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/AnsiballZ_unarchive.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "dest": "/tmp/ansible.erkji_js",
    "extract_results": {
        "cmd": [
            "/bin/tar",
            "--extract",
            "-C",
            "/tmp/ansible.erkji_js",
            "-z",
            "-f",
            "/root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/source"
        ],
        "err": "",
        "out": "",
        "rc": 0
    },
    "gid": 0,
    "group": "root",
    "handler": "TgzArchive",
    "invocation": {
        "module_args": {
            "attributes": null,
            "creates": null,
            "dest": "/tmp/ansible.erkji_js",
            "exclude": [],
            "extra_opts": [],
            "group": null,
            "keep_newer": false,
            "list_files": false,
            "mode": null,
            "owner": null,
            "remote_src": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/source",
            "unsafe_writes": false,
            "validate_certs": true
        }
    },
    "mode": "0700",
    "owner": "root",
    "size": 4096,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844780.557001-21682-275910913814206/source",
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : Moving the configtxgen from the extracted folder and place in it path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476 `" && echo ansible-tmp-1604844785.7028186-21730-37022389464476="` echo /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpnauj092q TO /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/ /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /tmp/ansible.erkji_js/bin/configtxgen TO /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/ /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpj0qsdysh TO /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/ /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "2ccdd369503d991130e0d25c0f0ba566098e4ef2",
    "dest": "./build/configtxgen",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "configtxgen",
            "attributes": null,
            "backup": false,
            "checksum": "2ccdd369503d991130e0d25c0f0ba566098e4ef2",
            "content": null,
            "dest": "./build/configtxgen",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2732cea94015343c7cdf919984fdb206",
    "mode": "0755",
    "owner": "root",
    "size": 20999008,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844785.7028186-21730-37022389464476/source",
    "state": "file",
    "uid": 0
}

TASK [create/channel_artifacts : Creating channel-artifacts folder] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844786.4033391-21770-43592714296678 `" && echo ansible-tmp-1604844786.4033391-21770-43592714296678="` echo /root/.ansible/tmp/ansible-tmp-1604844786.4033391-21770-43592714296678 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpjy3q2kbq TO /root/.ansible/tmp/ansible-tmp-1604844786.4033391-21770-43592714296678/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844786.4033391-21770-43592714296678/ /root/.ansible/tmp/ansible-tmp-1604844786.4033391-21770-43592714296678/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844786.4033391-21770-43592714296678/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844786.4033391-21770-43592714296678/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/channel-artifacts",
            "state": "directory"
        },
        "before": {
            "path": "./build/channel-artifacts",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/channel-artifacts",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : remove old channel block] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:56
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844786.6121302-21796-244877463387113 `" && echo ansible-tmp-1604844786.6121302-21796-244877463387113="` echo /root/.ansible/tmp/ansible-tmp-1604844786.6121302-21796-244877463387113 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpslzcfgs6 TO /root/.ansible/tmp/ansible-tmp-1604844786.6121302-21796-244877463387113/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844786.6121302-21796-244877463387113/ /root/.ansible/tmp/ansible-tmp-1604844786.6121302-21796-244877463387113/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844786.6121302-21796-244877463387113/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844786.6121302-21796-244877463387113/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts/allchannel.tx",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/channel-artifacts/allchannel.tx",
    "state": "absent"
}

TASK [create/channel_artifacts : Creating channels] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:64
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844786.8128364-21822-470696472812 `" && echo ansible-tmp-1604844786.8128364-21822-470696472812="` echo /root/.ansible/tmp/ansible-tmp-1604844786.8128364-21822-470696472812 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpldr8x85l TO /root/.ansible/tmp/ansible-tmp-1604844786.8128364-21822-470696472812/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844786.8128364-21822-470696472812/ /root/.ansible/tmp/ansible-tmp-1604844786.8128364-21822-470696472812/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844786.8128364-21822-470696472812/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844786.8128364-21822-470696472812/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputCreateChannelTx ./channel-artifacts/allchannel.tx -channelID allchannel\ncat ./channel-artifacts/allchannel.tx | base64 > ./channel-artifacts/allchannel.tx.base64\n",
    "delta": "0:00:00.053606",
    "end": "2020-11-08 14:13:06.998805",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile AllChannel -outputCreateChannelTx ./channel-artifacts/allchannel.tx -channelID allchannel\ncat ./channel-artifacts/allchannel.tx | base64 > ./channel-artifacts/allchannel.tx.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:06.945199",
    "stderr": "\u001b[34m2020-11-08 14:13:06.974 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-08 14:13:06.995 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-08 14:13:06.995 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003\u001b[0m Generating new channel configtx\n\u001b[34m2020-11-08 14:13:06.996 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004\u001b[0m Writing new channel tx",
    "stderr_lines": [
        "\u001b[34m2020-11-08 14:13:06.974 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-08 14:13:06.995 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-08 14:13:06.995 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003\u001b[0m Generating new channel configtx",
        "\u001b[34m2020-11-08 14:13:06.996 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004\u001b[0m Writing new channel tx"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/channel_artifacts : Creating Anchor artifacts] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:75
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844787.067552-21857-56517714719601 `" && echo ansible-tmp-1604844787.067552-21857-56517714719601="` echo /root/.ansible/tmp/ansible-tmp-1604844787.067552-21857-56517714719601 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp55qjkdnb TO /root/.ansible/tmp/ansible-tmp-1604844787.067552-21857-56517714719601/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844787.067552-21857-56517714719601/ /root/.ansible/tmp/ansible-tmp-1604844787.067552-21857-56517714719601/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844787.067552-21857-56517714719601/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844787.067552-21857-56517714719601/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443'}, {'peer': None, 'name': 'peer1', 'gossipAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443'}], 'ordererAddress': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443'}) => {
    "ansible_loop_var": "participant",
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputAnchorPeersUpdate ./channel-artifacts/allchannelcarrierMSPAnchor.tx -channelID allchannel -asOrg carrierMSP -configPath ./\ncat ./channel-artifacts/allchannelcarrierMSPAnchor.tx | base64 > ./channel-artifacts/allchannelcarrierMSPAnchor.tx.base64\n",
    "delta": "0:00:00.051156",
    "end": "2020-11-08 14:13:07.251905",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile AllChannel -outputAnchorPeersUpdate ./channel-artifacts/allchannelcarrierMSPAnchor.tx -channelID allchannel -asOrg carrierMSP -configPath ./\ncat ./channel-artifacts/allchannelcarrierMSPAnchor.tx | base64 > ./channel-artifacts/allchannelcarrierMSPAnchor.tx.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "participant": {
        "name": "carrier",
        "ordererAddress": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443",
        "org_status": "new",
        "organization": null,
        "peers": [
            {
                "gossipAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer0",
                "peer": null,
                "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443"
            },
            {
                "gossipAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer1",
                "peer": null,
                "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443"
            }
        ],
        "type": "creator"
    },
    "rc": 0,
    "start": "2020-11-08 14:13:07.200749",
    "stderr": "\u001b[34m2020-11-08 14:13:07.228 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-08 14:13:07.248 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-08 14:13:07.248 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update\n\u001b[34m2020-11-08 14:13:07.249 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update",
    "stderr_lines": [
        "\u001b[34m2020-11-08 14:13:07.228 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-08 14:13:07.248 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-08 14:13:07.248 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update",
        "\u001b[34m2020-11-08 14:13:07.249 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/channel_artifacts : Creating JSON configuration for new organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:88
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443'}, {'peer': None, 'name': 'peer1', 'gossipAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443'}], 'ordererAddress': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443'})  => {
    "ansible_loop_var": "participant",
    "changed": false,
    "participant": {
        "name": "carrier",
        "ordererAddress": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443",
        "org_status": "new",
        "organization": null,
        "peers": [
            {
                "gossipAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer0",
                "peer": null,
                "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443"
            },
            {
                "gossipAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer1",
                "peer": null,
                "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443"
            }
        ],
        "type": "creator"
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create genesis block] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:146

TASK [create/genesis : Remove old genesis block] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844787.5021224-21896-172473564855724 `" && echo ansible-tmp-1604844787.5021224-21896-172473564855724="` echo /root/.ansible/tmp/ansible-tmp-1604844787.5021224-21896-172473564855724 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_79emd5x TO /root/.ansible/tmp/ansible-tmp-1604844787.5021224-21896-172473564855724/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844787.5021224-21896-172473564855724/ /root/.ansible/tmp/ansible-tmp-1604844787.5021224-21896-172473564855724/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844787.5021224-21896-172473564855724/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844787.5021224-21896-172473564855724/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts/genesis.block",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/channel-artifacts/genesis.block",
    "state": "absent"
}

TASK [create/genesis : Create genesis block] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844787.7100718-21922-221402024264972 `" && echo ansible-tmp-1604844787.7100718-21922-221402024264972="` echo /root/.ansible/tmp/ansible-tmp-1604844787.7100718-21922-221402024264972 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0czh0ssm TO /root/.ansible/tmp/ansible-tmp-1604844787.7100718-21922-221402024264972/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844787.7100718-21922-221402024264972/ /root/.ansible/tmp/ansible-tmp-1604844787.7100718-21922-221402024264972/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844787.7100718-21922-221402024264972/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844787.7100718-21922-221402024264972/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile OrdererGenesis -channelID syschannel -outputBlock ./channel-artifacts/genesis.block\ncat ./channel-artifacts/genesis.block | base64 > ./channel-artifacts/genesis.block.base64\n",
    "delta": "0:00:00.051875",
    "end": "2020-11-08 14:13:07.900763",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile OrdererGenesis -channelID syschannel -outputBlock ./channel-artifacts/genesis.block\ncat ./channel-artifacts/genesis.block | base64 > ./channel-artifacts/genesis.block.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:07.848888",
    "stderr": "\u001b[34m2020-11-08 14:13:07.876 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-08 14:13:07.896 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002\u001b[0m orderer type: etcdraft\n\u001b[34m2020-11-08 14:13:07.896 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003\u001b[0m Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 \n\u001b[34m2020-11-08 14:13:07.896 UTC [common.tools.configtxgen.localconfig] Load -> INFO 004\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-08 14:13:07.898 UTC [common.tools.configtxgen] doOutputBlock -> INFO 005\u001b[0m Generating genesis block\n\u001b[34m2020-11-08 14:13:07.898 UTC [common.tools.configtxgen] doOutputBlock -> INFO 006\u001b[0m Writing genesis block",
    "stderr_lines": [
        "\u001b[34m2020-11-08 14:13:07.876 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-08 14:13:07.896 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002\u001b[0m orderer type: etcdraft",
        "\u001b[34m2020-11-08 14:13:07.896 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003\u001b[0m Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 ",
        "\u001b[34m2020-11-08 14:13:07.896 UTC [common.tools.configtxgen.localconfig] Load -> INFO 004\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-08 14:13:07.898 UTC [common.tools.configtxgen] doOutputBlock -> INFO 005\u001b[0m Generating genesis block",
        "\u001b[34m2020-11-08 14:13:07.898 UTC [common.tools.configtxgen] doOutputBlock -> INFO 006\u001b[0m Writing genesis block"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/genesis : Write genesis block to Vault] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844787.9730568-21957-254065563257595 `" && echo ansible-tmp-1604844787.9730568-21957-254065563257595="` echo /root/.ansible/tmp/ansible-tmp-1604844787.9730568-21957-254065563257595 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmph9sh837r TO /root/.ansible/tmp/ansible-tmp-1604844787.9730568-21957-254065563257595/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844787.9730568-21957-254065563257595/ /root/.ansible/tmp/ansible-tmp-1604844787.9730568-21957-254065563257595/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844787.9730568-21957-254065563257595/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844787.9730568-21957-254065563257595/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "org",
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations genesisBlock=\"$(cat ./build/channel-artifacts/genesis.block.base64)\"\n",
    "delta": "0:00:00.084635",
    "end": "2020-11-08 14:13:08.191221",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations genesisBlock=\"$(cat ./build/channel-artifacts/genesis.block.base64)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "org": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:08.106586",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations"
    ]
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "org",
    "changed": false,
    "org": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/orderers] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:155
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create kafka clusters] ***************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create orderers] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:25

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844788.8031986-21999-223595392857778 `" && echo ansible-tmp-1604844788.8031986-21999-223595392857778="` echo /root/.ansible/tmp/ansible-tmp-1604844788.8031986-21999-223595392857778 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprjar48x0 TO /root/.ansible/tmp/ansible-tmp-1604844788.8031986-21999-223595392857778/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844788.8031986-21999-223595392857778/ /root/.ansible/tmp/ansible-tmp-1604844788.8031986-21999-223595392857778/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844788.8031986-21999-223595392857778/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844788.8031986-21999-223595392857778/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844789.1017625-22025-249251145644539 `" && echo ansible-tmp-1604844789.1017625-22025-249251145644539="` echo /root/.ansible/tmp/ansible-tmp-1604844789.1017625-22025-249251145644539 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpb4yd4f6p TO /root/.ansible/tmp/ansible-tmp-1604844789.1017625-22025-249251145644539/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844789.1017625-22025-249251145644539/ /root/.ansible/tmp/ansible-tmp-1604844789.1017625-22025-249251145644539/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844789.1017625-22025-249251145644539/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844789.1017625-22025-249251145644539/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer1-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707 `" && echo ansible-tmp-1604844789.3182633-22051-71543332551707="` echo /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpvetvu1dr TO /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/ /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdtpgl82q/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/ /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpy9ln0dck TO /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/ /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4aed43d07b05ab31fd08dabdb9ea3d5d8dcdb42c",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "4aed43d07b05ab31fd08dabdb9ea3d5d8dcdb42c",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "80d1e5f52669ab2f813bd65ca139fa21",
    "mode": "0644",
    "owner": "root",
    "size": 23501,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844789.3182633-22051-71543332551707/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844789.7709827-22095-241111678629715 `" && echo ansible-tmp-1604844789.7709827-22095-241111678629715="` echo /root/.ansible/tmp/ansible-tmp-1604844789.7709827-22095-241111678629715 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_z7h7biv TO /root/.ansible/tmp/ansible-tmp-1604844789.7709827-22095-241111678629715/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844789.7709827-22095-241111678629715/ /root/.ansible/tmp/ansible-tmp-1604844789.7709827-22095-241111678629715/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844789.7709827-22095-241111678629715/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844789.7709827-22095-241111678629715/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604844789.642712,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "4aed43d07b05ab31fd08dabdb9ea3d5d8dcdb42c",
        "ctime": 1604844789.6467123,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4013,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844789.49871,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23501,
        "uid": 0,
        "version": "2563317929",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844790.0329895-22125-64061301455218 `" && echo ansible-tmp-1604844790.0329895-22125-64061301455218="` echo /root/.ansible/tmp/ansible-tmp-1604844790.0329895-22125-64061301455218 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc88_jlnh TO /root/.ansible/tmp/ansible-tmp-1604844790.0329895-22125-64061301455218/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844790.0329895-22125-64061301455218/ /root/.ansible/tmp/ansible-tmp-1604844790.0329895-22125-64061301455218/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844790.0329895-22125-64061301455218/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844790.0329895-22125-64061301455218/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844330.0157418,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844330.0157418,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer1",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer1",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIEQQ/6aDZr6FH0BAV5grO4jU5jXFWoa31pGiGUtNuc84EsZ2CsN2CsB2CngKWggBEAEaBgjz\n+Z/9BSIKc3lzY2hhbm5lbCpAMDM1YWI4YjAwNGUwZGIyOTc1OGFlMmEwZTc2NGEzNGRhNWFhNzA5\nZGEzYTk0M2RkNWRmNDY2YmFlODE1YTdiYxIaEhhLXxrLycgLxl/2V3rtW6Qbb15jV3Xn6MESw3UK\nwHUSvXUSgE4KB09yZGVyZXIS9E0SlhYKCndhbG1hcnRNU1AShxYaoxQKA01TUBKbFBKQFBKNFAoK\nd2FsbWFydE1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lC\nQWdJVURQSncvMldiVW1Lb0Q2MEQvbUgvRmZ4eFA2UXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURneE5EQXpNREZhRncweU16QTRNamt4TkRBek1ERmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVFRMEhWWlNwdXNQQ1Q1dEtZdlF2TkRD\nb1VaWFhHSkI2emYvNzBNYldUSlVuNDVBRmZadHQrZ09kMEsyRWtCCnA3TXlpQ2J1TW53ZUhpVnBj\ncDhLWDZ5Vm8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0NnWUlLb1pJemowRQpB\nd0lEU1FBd1JnSWhBSU9jcnBKakdyMjc2R0xRK0M4aHZoUU9wNEtydlk5Wjk0eElxRzRBWSt5TEFp\nRUFtelNyCjBKWnlYYS9nSTFzVjJRYzBKU1ozL1JORFZqdndCMlhSbURMVlVJND0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoilggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzF6Q0NB\nbjZnQXdJQkFnSVVlUHZMOFIrajZ5anc4QlVZTzBBKzFCSzIwRnd3Q2dZSUtvWkl6ajBFQXdJdwpX\nakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH\nOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlY\nSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURCYUZ3MHlNVEV4TURneE5ERXlNREJhTUdreEN6\nQUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE\nQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeER6QU5CZ05WCkJBc1RCbU5zYVdWdWRERWFNQmdHQTFVRUF3\nd1JRV1J0YVc1QWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak8KUFFJQkJnZ3Foa2pPUFFNQkJ3\nTkNBQVF6MkdlMkxkRThzK0hNQVhhSkduZisxT3BsNm5wR01lRHhmVHlscUR1cApHYzZmd3BieVQr\nQUhjcnJ5aUZiVDkyNXhLejhTdk8wbzBzZml2VytZd3gzam80SUJFVENDQVEwd0RnWURWUjBQCkFR\nSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkNqelkyaTl6ZUpMZTVa\ndzZXTHIKMTh2cEh3WEdNQjhHQTFVZEl3UVlNQmFBRk9hWW1yZUdWSTMxWllJQ1BaaHJmeWc4c1My\na01DUUdBMVVkRVFRZApNQnVDR1dOaExYUnZiMnh6TFRZNVpEYzRPRFZtT0RZdFpHZG9kMmN3Z1lZ\nR0NDb0RCQVVHQndnQkJIcDdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENK\naFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205\nc2JHMWxiblJKUkNJNklrRmtiV2x1UUhkaGJHMWhjblF0Ym1WMApJaXdpYUdZdVZIbHdaU0k2SW1O\nc2FXVnVkQ0o5ZlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCWi9VSndWRWl4ClkyaS95eFBqMVhm\nRGRUZDMyR2J4ekpjUlRWcmdGcnVPSmdJZ1VianhJNlU4V3o0TDYrYkVHSWwwZkFDQ1pMRUYKZ2ZD\nZldWNXRQTVVoYVA4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK\n6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitUQ0NBWjZnQXdJQkFnSVVEUEp3LzJX\nYlVtS29ENjBEL21IL0ZmeHhQNlF3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJ\neER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR\nS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURF\neE1EZ3hOREF6TURGYUZ3MHlNekE0TWpreE5EQXpNREZhTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3\nRFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dI\nVDNKa1pYSmxjakVYCk1CVUdBMVVFQXd3T1kyRXVkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pP\nUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRUTBIVlpTcHVzUENUNXRLWXZRdk5EQ29VWlhYR0pCNnpm\nLzcwTWJXVEpVbjQ1QUZmWnR0K2dPZDBLMkVrQgpwN015aUNidU1ud2VIaVZwY3A4S1g2eVZvMEl3\nUURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRF\nRmdRVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdDZ1lJS29aSXpqMEUKQXdJRFNRQXdSZ0lo\nQUlPY3JwSmpHcjI3NkdMUStDOGh2aFFPcDRLcnZZOVo5NHhJcUc0QVkreUxBaUVBbXpTcgowSlp5\nWGEvZ0kxc1YyUWMwSlNaMy9STkRWanZ3QjJYUm1ETFZVSTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KGgZBZG1pbnMiNwoLRW5kb3JzZW1lbnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgp3YWxt\nYXJ0TVNQGgZBZG1pbnMiMwoHUmVhZGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRN\nU1AaBkFkbWlucyIzCgdXcml0ZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoG\nQWRtaW5zIjQKBkFkbWlucxIqEiAIARIcEggSBggBEgIIABoQEg4KCndhbG1hcnRNU1AQARoGQWRt\naW5zKgZBZG1pbnMaJgoMQ2FwYWJpbGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGqs1Cg1D\nb25zZW5zdXNUeXBlEpk1Eo41CghldGNkcmFmdBKBNQrMEQorb3JkZXJlcjEud2FsbWFydC1uZXQu\nc3VuZWVsLnB2dC53bXRiYWYuaW5mbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN\nSUlDL2pDQ0FxU2dBd0lCQWdJVUoyWG9rZHhQY3VXVFhmbzFkS0w4c1k1YTlHOHdDZ1lJS29aSXpq\nMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex\nVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allT\nNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURneE5EQTNNREJhRncweU1URXhNRGd4TkRFeU1E\nQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIy\nNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJn\nTlZCQU1URkc5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUUxUTRRL0s1Z01WSnFvR0FnV0F0czFTUXptKzRwYzlqUVNTZlBtdEFMCmYv\nRTVOdVpLcVI4L24rUTR0MzBqMSsvMVh6QWdLK1BtT25QTUkveENCZUhjR0tPQ0FUWXdnZ0V5TUE0\nR0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFV\nSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVQK0J5cHltZXdXT3JKUHZLa0lX\nb1c2VER5aEV3SHdZRFZSMGpCQmd3CkZvQVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3VEFZ\nRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl4TG5k\naGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZ\nSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5K\ndmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dV\naU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRQ0haR0xHS3psQWhQWDFUaVRj\nalhpMgp5eFQzcmR0NStvSHRLNXl3UHhvMVdBSWdiRTh4bGdpbG00bUJUTDA2UVNYall1Tlkxc3RL\nMWJOTXdhUTFhdDlxCkNZQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQy9qQ0NBcVNnQXdJQkFnSVVKMlhva2R4UGN1V1RYZm8xZEtM\nOHNZNWE5Rzh3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21W\neU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURC\nYUZ3MHlNVEV4TURneE5ERXlNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJ\nMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05W\nCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBNRmt3\nRXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFMVE0US9LNWdNVkpxb0dBZ1dBdHMxU1F6\nbSs0cGM5alFTU2ZQbXRBTApmL0U1TnVaS3FSOC9uK1E0dDMwajErLzFYekFnSytQbU9uUE1JL3hD\nQmVIY0dLT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dy\nQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FV\nUCtCeXB5bWV3V09ySlB2S2tJV29XNlREeWhFd0h3WURWUjBqQkJndwpGb0FVNXBpYXQ0WlVqZlZs\nZ2dJOW1HdC9LRHl4TGFRd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqRXVkMkZzCmJXRnlkQzF1\nWlhTQ0syOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0K\nTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBi\nMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzUzWVd4dFlYSjBM\nVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJ\nUUNIWkdMR0t6bEFoUFgxVGlUY2pYaTIKeXhUM3JkdDUrb0h0SzV5d1B4bzFXQUlnYkU4eGxnaWxt\nNG1CVEwwNlFTWGpZdU5ZMXN0SzFiTk13YVExYXQ5cQpDWUE9Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KCswRCitvcmRlcmVyMi53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvEPtB\nGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVQlFvWXhk\nWE9CL08yOUVKajVjTFVKODRuOURZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1Iw\nSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZR\nUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1E\nRXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJz\nd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdW\neVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcx\naGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThNblkyM3JMRTU0\nenJzNzQwZkJJQmdGMkM3TjZ6SWVSd0NDZzhrWlIKditXdGdyMWxBMktRTE1RcHM5azRSZGNFbkd6\nSzRaaUUwTXh1UTI4ZHNEM3VycU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdO\nVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURB\nZEJnTlZIUTRFRmdRVSsyVkV3dnRYejF4ekpYTUlqeElqSWxnK3NwOHdId1lEVlIwakJCZ3cKRm9B\nVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1\nZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3\nZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1\nUVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5\nTWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5\nQkFNQ0EwY0FNRVFDSUFHeDlndUFGdytPQlV5TFRYR1doUThlCmVSQmQvVjM3ckVKOGZpZVlic1k3\nQWlCTDhvL0d1Nzh6K2hhNlpWQit4N09UOUxCMUFmUWZBb08zU0llOHZzb1IKV2c9PQotLS0tLUVO\nRCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RD\nQ0FxU2dBd0lCQWdJVUJRb1l4ZFhPQi9PMjlFSmo1Y0xVSjg0bjlEWXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0\nWVhKMExXNWxkREFlRncweQpNREV4TURneE5EQTNNREJhRncweU1URXhNRGd4TkRFeU1EQmFNR294\nQ3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4\nRURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1U\nRkc5eVpHVnlaWEl5TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBE\nQVFjRFFnQUU4TW5ZMjNyTEU1NHpyczc0MGZCSUJnRjJDN042ekllUndDQ2c4a1pSCnYrV3RncjFs\nQTJLUUxNUXBzOWs0UmRjRW5Heks0WmlFME14dVEyOGRzRDN1cnFPQ0FUWXdnZ0V5TUE0R0ExVWQK\nRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdE\nQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVUrMlZFd3Z0WHoxeHpKWE1JanhJaklsZytz\ncDh3SHdZRFZSMGpCQmd3CkZvQVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3VEFZRFZSMFJC\nRVV3UTRJVWIzSmtaWEpsY2pJdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl5TG5kaGJHMWhj\nblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVX\nWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRa\nVzUwU1VRaU9pSnZjbVJsY21WeU1pNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSnda\nV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lBR3g5Z3VBRncrT0JVeUxUWEdXaFE4ZQpl\nUkJkL1YzN3JFSjhmaWVZYnNZN0FpQkw4by9HdTc4eitoYTZaVkIreDdPVDlMQjFBZlFmQW9PM1NJ\nZTh2c29SCldnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29yZGVyZXIzLndhbG1h\ncnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8Q+0EaywgtLS0tLUJFR0lOIENFUlRJRklDQVRF\nLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVhbTJ1U3FERE5wMGIwQ1hLam9GeW83RFlBa0V3Q2dZ\nSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpF\nUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFR\nRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURCYUZ3MHlNVEV4TURn\neE5ERXlNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0\neE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJ\neEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemow\nQ0FRWUlLb1pJemowREFRY0RRZ0FFN0dCTVNuRWdVWkFWZmhMMDNqdDU5WXh4enUyTjVFVS8zWktK\neEJkaQplaVpZSkxZRVE5d2Q1SUxsRVV2NXc0UXErWklvd0kxN2R4UFRHUTFTYVAyNjBhT0NBVFl3\nZ2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJ\nS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbGtMK3cxQmpGOE5N\nbXZUeE1oZzYwbUZTbHJnd0h3WURWUjBqQkJndwpGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4\nTGFRd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5\nWlhJekxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJ\nS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pv\nWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJc0ltaG1M\nbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJQlJLK0pyL3FRcXh5\nTHZ0bkxYdVlpcTgKU3UrVWN1bE5BaG5iR0M4d09tSVhBaUJHYWxPRUphS2YzL1YwdTFMd1pjSDVE\nY01Dc1IwYXhYcklGMWdNK3dDTApZdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIssILS0t\nLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVYW0ydVNxREROcDBi\nMENYS2pvRnlvN0RZQWtFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFO\nQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQ\nY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4\nTkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQK\nVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhE\nVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRi\nbVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTdHQk1TbkVnVVpBVmZoTDAz\nanQ1OVl4eHp1Mk41RVUvM1pLSnhCZGkKZWlaWUpMWUVROXdkNUlMbEVVdjV3NFFxK1pJb3dJMTdk\neFBUR1ExU2FQMjYwYU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVG\nakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZI\nUTRFRmdRVWxrTCt3MUJqRjhOTW12VHhNaGc2MG1GU2xyZ3dId1lEVlIwakJCZ3cKRm9BVTVwaWF0\nNFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpi\nV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQy\nMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFX\neHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lX\neHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0Ew\nY0FNRVFDSUJSSytKci9xUXF4eUx2dG5MWHVZaXE4ClN1K1VjdWxOQWhuYkdDOHdPbUlYQWlCR2Fs\nT0VKYUtmMy9WMHUxTHdaY0g1RGNNQ3NSMGF4WHJJRjFnTSt3Q0wKWXc9PQotLS0tLUVORCBDRVJU\nSUZJQ0FURS0tLS0tChISCgU1MDBtcxAKGAEgBSiAgIAIGgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUS\nCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChND\naGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoH\nV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dy\naXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQ\nAhoGQWRtaW5zKgZBZG1pbnMS+iMKC0NvbnNvcnRpdW1zEuojEp8jChVTdXBwbHlDaGFpbkNvbnNv\ncnRpdW0ShSMSpyIKCmNhcnJpZXJNU1ASmCIatCAKA01TUBKsIBKhIBKeIAoKY2Fycmllck1TUBLp\nBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlE\nak9GL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4\nTURneE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdE\nUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hR\nMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9Q\nUUlCQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxV\nYVBJY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdR\nREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVG\nZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhB\nTVBtbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZy\nNkE5Zk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUt\nLS0tLQoitggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzd6Q0NBcGFnQXdJQkFnSVVN\nWEpNajJKQ0lzVlYwQjVjK2d3Smd0STgrM1F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVC\naE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdE\nZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3\nMHkKTURFeE1EZ3hOREE0TURCYUZ3MHlNVEV4TURneE5ERXpNREJhTUhreEN6QUpCZ05WQkFZVEFr\nZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIw\nTmhjbkpwWlhJeEh6QU5CZ05WCkJBc1RCbU5zYVdWdWREQU9CZ05WQkFzVEIyTmhjbkpwWlhJeEdq\nQVlCZ05WQkFNTUVVRmtiV2x1UUdOaGNuSnAKWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUV0QkJnUC9yTmdsK0RhdjMyZ3FDYgpka21HcXByOHc1aFhHZ0dsK1pzYWtl\nbGoybnpBdDVwT1h1akRxZUIwaS9zN1pTZnByL0FXd3lEZG01d2NLbVQ0Cno2T0NBUmt3Z2dFVk1B\nNEdBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVcKQkJTajd0\nS3ZLZlhRQkhBRmQ4cUpWcjFZb3QwOFhUQWZCZ05WSFNNRUdEQVdnQlJ5MC81Um5GUHJIaGRsdlBh\nQQpFc0JKSTBPbHpEQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRM09EZzFaamcyTFhO\nNmNHZG9NSUdPCkJnZ3FBd1FGQmdjSUFRU0JnWHNpWVhSMGNuTWlPbnNpWVdKaFl5NXBibWwwSWpv\naWRISjFaU0lzSW1Ga2JXbHUKSWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXVJam9pWTJG\neWNtbGxjaUlzSW1obUxrVnVjbTlzYkcxbApiblJKUkNJNklrRmtiV2x1UUdOaGNuSnBaWEl0Ym1W\nMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLCkJnZ3Foa2pPUFFRREFnTkhBREJFQWlB\ncVVZL3o5dnptMk9vTHVybnZ4YUJHREZDQ0FPRmJjZTB0YU5sMEkvNXgKbFFJZ2FleHNkTG55ODlB\nVGJmNk9vNk5QdjBwMmpSS1IzWXcyL2tvNEFiQ0EveDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0t\nLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RD\nQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9GL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5\nYVdWeUxXNWxkREFlRncweQpNREV4TURneE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94\nQ3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2\nYm1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxs\nY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdt\nMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNs\nTHUwaEs1TE01QmhyNUFoem8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIK\nL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlL\nb1pJemowRQpBd0lEU0FBd1JRSWhBTVBtbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZv\nOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5Zk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0K\nLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpa7gsIARL0BQrpBS0tLS0tQkVHSU4gQ0VSVElGSUNB\nVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9GL0NwekhHVlFhYTByNGhlSXdD\nZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZi\nakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURW\nUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURneE5EQXpNVEJhRncweU16QTRN\namt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhE\nekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVB\nd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpB\nQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJY04zWjVSNUM0TXBsb0dBSUxG\nUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFR\nSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdC\nTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhBTVBtbStXOUNMcFJtYXpoT3JHU2I1\nbU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5Zk0wNC82eDk1U2FRbW5Yb3p6\nS1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBmNsaWVudBryBQrpBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9G\nL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURn\neE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5\nY21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJ\nY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhBTVBt\nbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5\nZk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t\nLQoSBHBlZXIaBkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmll\nck1TUBoGQWRtaW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQ\nGgZBZG1pbnMiNAoGQWRtaW5zEioSIAgBEhwSCBIGCAESAggAGhASDgoKY2Fycmllck1TUBABGgZB\nZG1pbnMiNwoLRW5kb3JzZW1lbnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZB\nZG1pbnMqBkFkbWlucxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcv\nQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5z\nEiMSCAgBEgQSAhIAGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9B\nZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0\nYUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaxwEKEE9yZGVyZXJBZGRyZXNzZXMS\nsgESlgEKMG9yZGVyZXIxLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwow\nb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzCjBvcmRlcmVy\nMy53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMaFy9DaGFubmVsL09yZGVy\nZXIvQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8zEgAaBkFkbWlucyIiCgZBZG1p\nbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMa\nBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyoGQWRtaW5zGg4KBAoC\nCgAKAAoACgAKAA==",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer1",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847 `" && echo ansible-tmp-1604844790.4693568-22163-167869433657847="` echo /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpoegpjsdv TO /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/ /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpv9ppsqww TO /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/ /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpyt12zcx6 TO /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/ /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "2b8bbf89d713d35cc0f6f9fd3220889bbc3f860b",
    "dest": "./build/test/walmart-orderer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpv9ppsqww",
            "attributes": null,
            "backup": false,
            "checksum": "2b8bbf89d713d35cc0f6f9fd3220889bbc3f860b",
            "content": null,
            "dest": "./build/test/walmart-orderer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "6a472f83de33ddc1b5b6965d624cd46b",
    "mode": "0644",
    "owner": "root",
    "size": 22767,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844790.4693568-22163-167869433657847/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844790.8237553-22203-262263641277381 `" && echo ansible-tmp-1604844790.8237553-22203-262263641277381="` echo /root/.ansible/tmp/ansible-tmp-1604844790.8237553-22203-262263641277381 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp82m3db_g TO /root/.ansible/tmp/ansible-tmp-1604844790.8237553-22203-262263641277381/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844790.8237553-22203-262263641277381/ /root/.ansible/tmp/ansible-tmp-1604844790.8237553-22203-262263641277381/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844790.8237553-22203-262263641277381/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844790.8237553-22203-262263641277381/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.068153",
    "end": "2020-11-08 14:13:11.023816",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:10.955663",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844791.0959022-22235-224038407724530 `" && echo ansible-tmp-1604844791.0959022-22235-224038407724530="` echo /root/.ansible/tmp/ansible-tmp-1604844791.0959022-22235-224038407724530 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7g1ebpnm TO /root/.ansible/tmp/ansible-tmp-1604844791.0959022-22235-224038407724530/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844791.0959022-22235-224038407724530/ /root/.ansible/tmp/ansible-tmp-1604844791.0959022-22235-224038407724530/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844791.0959022-22235-224038407724530/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844791.0959022-22235-224038407724530/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844791.3022606-22261-174960732774781 `" && echo ansible-tmp-1604844791.3022606-22261-174960732774781="` echo /root/.ansible/tmp/ansible-tmp-1604844791.3022606-22261-174960732774781 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_c9p8jye TO /root/.ansible/tmp/ansible-tmp-1604844791.3022606-22261-174960732774781/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844791.3022606-22261-174960732774781/ /root/.ansible/tmp/ansible-tmp-1604844791.3022606-22261-174960732774781/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844791.3022606-22261-174960732774781/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844791.3022606-22261-174960732774781/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer2-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218 `" && echo ansible-tmp-1604844791.5086405-22287-158963574591218="` echo /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc359zobk TO /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/ /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7cmoupwm/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/ /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp53yxbrl3 TO /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/ /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a77cea1e125ab399a99a3983edc7365897ab7544",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a77cea1e125ab399a99a3983edc7365897ab7544",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8b2976501961db3e045d0cf5e5685393",
    "mode": "0644",
    "owner": "root",
    "size": 23501,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844791.5086405-22287-158963574591218/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844791.9362144-22329-190358503489725 `" && echo ansible-tmp-1604844791.9362144-22329-190358503489725="` echo /root/.ansible/tmp/ansible-tmp-1604844791.9362144-22329-190358503489725 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbb7s7t5x TO /root/.ansible/tmp/ansible-tmp-1604844791.9362144-22329-190358503489725/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844791.9362144-22329-190358503489725/ /root/.ansible/tmp/ansible-tmp-1604844791.9362144-22329-190358503489725/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844791.9362144-22329-190358503489725/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844791.9362144-22329-190358503489725/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604844791.8187451,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "a77cea1e125ab399a99a3983edc7365897ab7544",
        "ctime": 1604844791.8187451,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4015,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844791.682743,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23501,
        "uid": 0,
        "version": "2524145496",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844792.1929607-22359-148520025123605 `" && echo ansible-tmp-1604844792.1929607-22359-148520025123605="` echo /root/.ansible/tmp/ansible-tmp-1604844792.1929607-22359-148520025123605 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp6rdzu970 TO /root/.ansible/tmp/ansible-tmp-1604844792.1929607-22359-148520025123605/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844792.1929607-22359-148520025123605/ /root/.ansible/tmp/ansible-tmp-1604844792.1929607-22359-148520025123605/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844792.1929607-22359-148520025123605/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844792.1929607-22359-148520025123605/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844790.746729,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844790.746729,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer2",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer2",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIEQQ/6aDZr6FH0BAV5grO4jU5jXFWoa31pGiGUtNuc84EsZ2CsN2CsB2CngKWggBEAEaBgjz\n+Z/9BSIKc3lzY2hhbm5lbCpAMDM1YWI4YjAwNGUwZGIyOTc1OGFlMmEwZTc2NGEzNGRhNWFhNzA5\nZGEzYTk0M2RkNWRmNDY2YmFlODE1YTdiYxIaEhhLXxrLycgLxl/2V3rtW6Qbb15jV3Xn6MESw3UK\nwHUSvXUSgE4KB09yZGVyZXIS9E0SlhYKCndhbG1hcnRNU1AShxYaoxQKA01TUBKbFBKQFBKNFAoK\nd2FsbWFydE1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lC\nQWdJVURQSncvMldiVW1Lb0Q2MEQvbUgvRmZ4eFA2UXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURneE5EQXpNREZhRncweU16QTRNamt4TkRBek1ERmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVFRMEhWWlNwdXNQQ1Q1dEtZdlF2TkRD\nb1VaWFhHSkI2emYvNzBNYldUSlVuNDVBRmZadHQrZ09kMEsyRWtCCnA3TXlpQ2J1TW53ZUhpVnBj\ncDhLWDZ5Vm8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0NnWUlLb1pJemowRQpB\nd0lEU1FBd1JnSWhBSU9jcnBKakdyMjc2R0xRK0M4aHZoUU9wNEtydlk5Wjk0eElxRzRBWSt5TEFp\nRUFtelNyCjBKWnlYYS9nSTFzVjJRYzBKU1ozL1JORFZqdndCMlhSbURMVlVJND0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoilggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzF6Q0NB\nbjZnQXdJQkFnSVVlUHZMOFIrajZ5anc4QlVZTzBBKzFCSzIwRnd3Q2dZSUtvWkl6ajBFQXdJdwpX\nakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH\nOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlY\nSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURCYUZ3MHlNVEV4TURneE5ERXlNREJhTUdreEN6\nQUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE\nQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeER6QU5CZ05WCkJBc1RCbU5zYVdWdWRERWFNQmdHQTFVRUF3\nd1JRV1J0YVc1QWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak8KUFFJQkJnZ3Foa2pPUFFNQkJ3\nTkNBQVF6MkdlMkxkRThzK0hNQVhhSkduZisxT3BsNm5wR01lRHhmVHlscUR1cApHYzZmd3BieVQr\nQUhjcnJ5aUZiVDkyNXhLejhTdk8wbzBzZml2VytZd3gzam80SUJFVENDQVEwd0RnWURWUjBQCkFR\nSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkNqelkyaTl6ZUpMZTVa\ndzZXTHIKMTh2cEh3WEdNQjhHQTFVZEl3UVlNQmFBRk9hWW1yZUdWSTMxWllJQ1BaaHJmeWc4c1My\na01DUUdBMVVkRVFRZApNQnVDR1dOaExYUnZiMnh6TFRZNVpEYzRPRFZtT0RZdFpHZG9kMmN3Z1lZ\nR0NDb0RCQVVHQndnQkJIcDdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENK\naFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205\nc2JHMWxiblJKUkNJNklrRmtiV2x1UUhkaGJHMWhjblF0Ym1WMApJaXdpYUdZdVZIbHdaU0k2SW1O\nc2FXVnVkQ0o5ZlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCWi9VSndWRWl4ClkyaS95eFBqMVhm\nRGRUZDMyR2J4ekpjUlRWcmdGcnVPSmdJZ1VianhJNlU4V3o0TDYrYkVHSWwwZkFDQ1pMRUYKZ2ZD\nZldWNXRQTVVoYVA4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK\n6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitUQ0NBWjZnQXdJQkFnSVVEUEp3LzJX\nYlVtS29ENjBEL21IL0ZmeHhQNlF3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJ\neER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR\nS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURF\neE1EZ3hOREF6TURGYUZ3MHlNekE0TWpreE5EQXpNREZhTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3\nRFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dI\nVDNKa1pYSmxjakVYCk1CVUdBMVVFQXd3T1kyRXVkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pP\nUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRUTBIVlpTcHVzUENUNXRLWXZRdk5EQ29VWlhYR0pCNnpm\nLzcwTWJXVEpVbjQ1QUZmWnR0K2dPZDBLMkVrQgpwN015aUNidU1ud2VIaVZwY3A4S1g2eVZvMEl3\nUURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRF\nRmdRVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdDZ1lJS29aSXpqMEUKQXdJRFNRQXdSZ0lo\nQUlPY3JwSmpHcjI3NkdMUStDOGh2aFFPcDRLcnZZOVo5NHhJcUc0QVkreUxBaUVBbXpTcgowSlp5\nWGEvZ0kxc1YyUWMwSlNaMy9STkRWanZ3QjJYUm1ETFZVSTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KGgZBZG1pbnMiNwoLRW5kb3JzZW1lbnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgp3YWxt\nYXJ0TVNQGgZBZG1pbnMiMwoHUmVhZGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRN\nU1AaBkFkbWlucyIzCgdXcml0ZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoG\nQWRtaW5zIjQKBkFkbWlucxIqEiAIARIcEggSBggBEgIIABoQEg4KCndhbG1hcnRNU1AQARoGQWRt\naW5zKgZBZG1pbnMaJgoMQ2FwYWJpbGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGqs1Cg1D\nb25zZW5zdXNUeXBlEpk1Eo41CghldGNkcmFmdBKBNQrMEQorb3JkZXJlcjEud2FsbWFydC1uZXQu\nc3VuZWVsLnB2dC53bXRiYWYuaW5mbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN\nSUlDL2pDQ0FxU2dBd0lCQWdJVUoyWG9rZHhQY3VXVFhmbzFkS0w4c1k1YTlHOHdDZ1lJS29aSXpq\nMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex\nVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allT\nNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURneE5EQTNNREJhRncweU1URXhNRGd4TkRFeU1E\nQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIy\nNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJn\nTlZCQU1URkc5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUUxUTRRL0s1Z01WSnFvR0FnV0F0czFTUXptKzRwYzlqUVNTZlBtdEFMCmYv\nRTVOdVpLcVI4L24rUTR0MzBqMSsvMVh6QWdLK1BtT25QTUkveENCZUhjR0tPQ0FUWXdnZ0V5TUE0\nR0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFV\nSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVQK0J5cHltZXdXT3JKUHZLa0lX\nb1c2VER5aEV3SHdZRFZSMGpCQmd3CkZvQVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3VEFZ\nRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl4TG5k\naGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZ\nSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5K\ndmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dV\naU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRQ0haR0xHS3psQWhQWDFUaVRj\nalhpMgp5eFQzcmR0NStvSHRLNXl3UHhvMVdBSWdiRTh4bGdpbG00bUJUTDA2UVNYall1Tlkxc3RL\nMWJOTXdhUTFhdDlxCkNZQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQy9qQ0NBcVNnQXdJQkFnSVVKMlhva2R4UGN1V1RYZm8xZEtM\nOHNZNWE5Rzh3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21W\neU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURC\nYUZ3MHlNVEV4TURneE5ERXlNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJ\nMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05W\nCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBNRmt3\nRXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFMVE0US9LNWdNVkpxb0dBZ1dBdHMxU1F6\nbSs0cGM5alFTU2ZQbXRBTApmL0U1TnVaS3FSOC9uK1E0dDMwajErLzFYekFnSytQbU9uUE1JL3hD\nQmVIY0dLT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dy\nQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FV\nUCtCeXB5bWV3V09ySlB2S2tJV29XNlREeWhFd0h3WURWUjBqQkJndwpGb0FVNXBpYXQ0WlVqZlZs\nZ2dJOW1HdC9LRHl4TGFRd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqRXVkMkZzCmJXRnlkQzF1\nWlhTQ0syOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0K\nTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBi\nMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzUzWVd4dFlYSjBM\nVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJ\nUUNIWkdMR0t6bEFoUFgxVGlUY2pYaTIKeXhUM3JkdDUrb0h0SzV5d1B4bzFXQUlnYkU4eGxnaWxt\nNG1CVEwwNlFTWGpZdU5ZMXN0SzFiTk13YVExYXQ5cQpDWUE9Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KCswRCitvcmRlcmVyMi53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvEPtB\nGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVQlFvWXhk\nWE9CL08yOUVKajVjTFVKODRuOURZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1Iw\nSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZR\nUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1E\nRXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJz\nd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdW\neVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcx\naGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThNblkyM3JMRTU0\nenJzNzQwZkJJQmdGMkM3TjZ6SWVSd0NDZzhrWlIKditXdGdyMWxBMktRTE1RcHM5azRSZGNFbkd6\nSzRaaUUwTXh1UTI4ZHNEM3VycU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdO\nVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURB\nZEJnTlZIUTRFRmdRVSsyVkV3dnRYejF4ekpYTUlqeElqSWxnK3NwOHdId1lEVlIwakJCZ3cKRm9B\nVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1\nZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3\nZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1\nUVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5\nTWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5\nQkFNQ0EwY0FNRVFDSUFHeDlndUFGdytPQlV5TFRYR1doUThlCmVSQmQvVjM3ckVKOGZpZVlic1k3\nQWlCTDhvL0d1Nzh6K2hhNlpWQit4N09UOUxCMUFmUWZBb08zU0llOHZzb1IKV2c9PQotLS0tLUVO\nRCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RD\nQ0FxU2dBd0lCQWdJVUJRb1l4ZFhPQi9PMjlFSmo1Y0xVSjg0bjlEWXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0\nWVhKMExXNWxkREFlRncweQpNREV4TURneE5EQTNNREJhRncweU1URXhNRGd4TkRFeU1EQmFNR294\nQ3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4\nRURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1U\nRkc5eVpHVnlaWEl5TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBE\nQVFjRFFnQUU4TW5ZMjNyTEU1NHpyczc0MGZCSUJnRjJDN042ekllUndDQ2c4a1pSCnYrV3RncjFs\nQTJLUUxNUXBzOWs0UmRjRW5Heks0WmlFME14dVEyOGRzRDN1cnFPQ0FUWXdnZ0V5TUE0R0ExVWQK\nRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdE\nQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVUrMlZFd3Z0WHoxeHpKWE1JanhJaklsZytz\ncDh3SHdZRFZSMGpCQmd3CkZvQVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3VEFZRFZSMFJC\nRVV3UTRJVWIzSmtaWEpsY2pJdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl5TG5kaGJHMWhj\nblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVX\nWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRa\nVzUwU1VRaU9pSnZjbVJsY21WeU1pNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSnda\nV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lBR3g5Z3VBRncrT0JVeUxUWEdXaFE4ZQpl\nUkJkL1YzN3JFSjhmaWVZYnNZN0FpQkw4by9HdTc4eitoYTZaVkIreDdPVDlMQjFBZlFmQW9PM1NJ\nZTh2c29SCldnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29yZGVyZXIzLndhbG1h\ncnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8Q+0EaywgtLS0tLUJFR0lOIENFUlRJRklDQVRF\nLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVhbTJ1U3FERE5wMGIwQ1hLam9GeW83RFlBa0V3Q2dZ\nSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpF\nUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFR\nRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURCYUZ3MHlNVEV4TURn\neE5ERXlNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0\neE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJ\neEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemow\nQ0FRWUlLb1pJemowREFRY0RRZ0FFN0dCTVNuRWdVWkFWZmhMMDNqdDU5WXh4enUyTjVFVS8zWktK\neEJkaQplaVpZSkxZRVE5d2Q1SUxsRVV2NXc0UXErWklvd0kxN2R4UFRHUTFTYVAyNjBhT0NBVFl3\nZ2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJ\nS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbGtMK3cxQmpGOE5N\nbXZUeE1oZzYwbUZTbHJnd0h3WURWUjBqQkJndwpGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4\nTGFRd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5\nWlhJekxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJ\nS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pv\nWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJc0ltaG1M\nbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJQlJLK0pyL3FRcXh5\nTHZ0bkxYdVlpcTgKU3UrVWN1bE5BaG5iR0M4d09tSVhBaUJHYWxPRUphS2YzL1YwdTFMd1pjSDVE\nY01Dc1IwYXhYcklGMWdNK3dDTApZdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIssILS0t\nLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVYW0ydVNxREROcDBi\nMENYS2pvRnlvN0RZQWtFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFO\nQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQ\nY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4\nTkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQK\nVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhE\nVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRi\nbVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTdHQk1TbkVnVVpBVmZoTDAz\nanQ1OVl4eHp1Mk41RVUvM1pLSnhCZGkKZWlaWUpMWUVROXdkNUlMbEVVdjV3NFFxK1pJb3dJMTdk\neFBUR1ExU2FQMjYwYU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVG\nakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZI\nUTRFRmdRVWxrTCt3MUJqRjhOTW12VHhNaGc2MG1GU2xyZ3dId1lEVlIwakJCZ3cKRm9BVTVwaWF0\nNFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpi\nV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQy\nMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFX\neHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lX\neHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0Ew\nY0FNRVFDSUJSSytKci9xUXF4eUx2dG5MWHVZaXE4ClN1K1VjdWxOQWhuYkdDOHdPbUlYQWlCR2Fs\nT0VKYUtmMy9WMHUxTHdaY0g1RGNNQ3NSMGF4WHJJRjFnTSt3Q0wKWXc9PQotLS0tLUVORCBDRVJU\nSUZJQ0FURS0tLS0tChISCgU1MDBtcxAKGAEgBSiAgIAIGgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUS\nCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChND\naGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoH\nV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dy\naXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQ\nAhoGQWRtaW5zKgZBZG1pbnMS+iMKC0NvbnNvcnRpdW1zEuojEp8jChVTdXBwbHlDaGFpbkNvbnNv\ncnRpdW0ShSMSpyIKCmNhcnJpZXJNU1ASmCIatCAKA01TUBKsIBKhIBKeIAoKY2Fycmllck1TUBLp\nBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlE\nak9GL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4\nTURneE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdE\nUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hR\nMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9Q\nUUlCQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxV\nYVBJY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdR\nREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVG\nZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhB\nTVBtbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZy\nNkE5Zk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUt\nLS0tLQoitggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzd6Q0NBcGFnQXdJQkFnSVVN\nWEpNajJKQ0lzVlYwQjVjK2d3Smd0STgrM1F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVC\naE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdE\nZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3\nMHkKTURFeE1EZ3hOREE0TURCYUZ3MHlNVEV4TURneE5ERXpNREJhTUhreEN6QUpCZ05WQkFZVEFr\nZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIw\nTmhjbkpwWlhJeEh6QU5CZ05WCkJBc1RCbU5zYVdWdWREQU9CZ05WQkFzVEIyTmhjbkpwWlhJeEdq\nQVlCZ05WQkFNTUVVRmtiV2x1UUdOaGNuSnAKWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUV0QkJnUC9yTmdsK0RhdjMyZ3FDYgpka21HcXByOHc1aFhHZ0dsK1pzYWtl\nbGoybnpBdDVwT1h1akRxZUIwaS9zN1pTZnByL0FXd3lEZG01d2NLbVQ0Cno2T0NBUmt3Z2dFVk1B\nNEdBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVcKQkJTajd0\nS3ZLZlhRQkhBRmQ4cUpWcjFZb3QwOFhUQWZCZ05WSFNNRUdEQVdnQlJ5MC81Um5GUHJIaGRsdlBh\nQQpFc0JKSTBPbHpEQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRM09EZzFaamcyTFhO\nNmNHZG9NSUdPCkJnZ3FBd1FGQmdjSUFRU0JnWHNpWVhSMGNuTWlPbnNpWVdKaFl5NXBibWwwSWpv\naWRISjFaU0lzSW1Ga2JXbHUKSWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXVJam9pWTJG\neWNtbGxjaUlzSW1obUxrVnVjbTlzYkcxbApiblJKUkNJNklrRmtiV2x1UUdOaGNuSnBaWEl0Ym1W\nMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLCkJnZ3Foa2pPUFFRREFnTkhBREJFQWlB\ncVVZL3o5dnptMk9vTHVybnZ4YUJHREZDQ0FPRmJjZTB0YU5sMEkvNXgKbFFJZ2FleHNkTG55ODlB\nVGJmNk9vNk5QdjBwMmpSS1IzWXcyL2tvNEFiQ0EveDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0t\nLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RD\nQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9GL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5\nYVdWeUxXNWxkREFlRncweQpNREV4TURneE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94\nQ3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2\nYm1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxs\nY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdt\nMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNs\nTHUwaEs1TE01QmhyNUFoem8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIK\nL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlL\nb1pJemowRQpBd0lEU0FBd1JRSWhBTVBtbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZv\nOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5Zk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0K\nLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpa7gsIARL0BQrpBS0tLS0tQkVHSU4gQ0VSVElGSUNB\nVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9GL0NwekhHVlFhYTByNGhlSXdD\nZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZi\nakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURW\nUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURneE5EQXpNVEJhRncweU16QTRN\namt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhE\nekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVB\nd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpB\nQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJY04zWjVSNUM0TXBsb0dBSUxG\nUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFR\nSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdC\nTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhBTVBtbStXOUNMcFJtYXpoT3JHU2I1\nbU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5Zk0wNC82eDk1U2FRbW5Yb3p6\nS1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBmNsaWVudBryBQrpBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9G\nL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURn\neE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5\nY21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJ\nY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhBTVBt\nbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5\nZk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t\nLQoSBHBlZXIaBkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmll\nck1TUBoGQWRtaW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQ\nGgZBZG1pbnMiNAoGQWRtaW5zEioSIAgBEhwSCBIGCAESAggAGhASDgoKY2Fycmllck1TUBABGgZB\nZG1pbnMiNwoLRW5kb3JzZW1lbnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZB\nZG1pbnMqBkFkbWlucxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcv\nQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5z\nEiMSCAgBEgQSAhIAGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9B\nZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0\nYUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaxwEKEE9yZGVyZXJBZGRyZXNzZXMS\nsgESlgEKMG9yZGVyZXIxLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwow\nb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzCjBvcmRlcmVy\nMy53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMaFy9DaGFubmVsL09yZGVy\nZXIvQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8zEgAaBkFkbWlucyIiCgZBZG1p\nbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMa\nBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyoGQWRtaW5zGg4KBAoC\nCgAKAAoACgAKAA==",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer2",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204 `" && echo ansible-tmp-1604844792.6193662-22397-10816808569204="` echo /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpmu3o_q6i TO /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/ /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpg3nunlpj TO /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/ /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpztruwb8w TO /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/ /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "133a8b50aee08a336d4da718f5bec955dfe0404f",
    "dest": "./build/test/walmart-orderer2.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpg3nunlpj",
            "attributes": null,
            "backup": false,
            "checksum": "133a8b50aee08a336d4da718f5bec955dfe0404f",
            "content": null,
            "dest": "./build/test/walmart-orderer2.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "75e270840926444e2738f6ad3b35f94c",
    "mode": "0644",
    "owner": "root",
    "size": 22767,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844792.6193662-22397-10816808569204/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844792.9627337-22437-184877656877513 `" && echo ansible-tmp-1604844792.9627337-22437-184877656877513="` echo /root/.ansible/tmp/ansible-tmp-1604844792.9627337-22437-184877656877513 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmptcniuu_5 TO /root/.ansible/tmp/ansible-tmp-1604844792.9627337-22437-184877656877513/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844792.9627337-22437-184877656877513/ /root/.ansible/tmp/ansible-tmp-1604844792.9627337-22437-184877656877513/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844792.9627337-22437-184877656877513/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844792.9627337-22437-184877656877513/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer2.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.071267",
    "end": "2020-11-08 14:13:13.165591",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer2.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:13.094324",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844793.2354405-22469-123210541965453 `" && echo ansible-tmp-1604844793.2354405-22469-123210541965453="` echo /root/.ansible/tmp/ansible-tmp-1604844793.2354405-22469-123210541965453 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpggbxhg94 TO /root/.ansible/tmp/ansible-tmp-1604844793.2354405-22469-123210541965453/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844793.2354405-22469-123210541965453/ /root/.ansible/tmp/ansible-tmp-1604844793.2354405-22469-123210541965453/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844793.2354405-22469-123210541965453/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844793.2354405-22469-123210541965453/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844793.4489734-22495-199650380462268 `" && echo ansible-tmp-1604844793.4489734-22495-199650380462268="` echo /root/.ansible/tmp/ansible-tmp-1604844793.4489734-22495-199650380462268 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp05p8ds9w TO /root/.ansible/tmp/ansible-tmp-1604844793.4489734-22495-199650380462268/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844793.4489734-22495-199650380462268/ /root/.ansible/tmp/ansible-tmp-1604844793.4489734-22495-199650380462268/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844793.4489734-22495-199650380462268/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844793.4489734-22495-199650380462268/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer3-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853 `" && echo ansible-tmp-1604844793.655856-22522-72840276651853="` echo /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmparxp99zd TO /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/ /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmph4a43lit/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/ /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc5jkdoby TO /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/ /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c570e526b9fd82adcbc61e9c2617f1d13a75ced0",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c570e526b9fd82adcbc61e9c2617f1d13a75ced0",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d4819c366abeb5c8679b99fa1ee67774",
    "mode": "0644",
    "owner": "root",
    "size": 23501,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844793.655856-22522-72840276651853/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844794.0859098-22564-48059471953951 `" && echo ansible-tmp-1604844794.0859098-22564-48059471953951="` echo /root/.ansible/tmp/ansible-tmp-1604844794.0859098-22564-48059471953951 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpn1pd12mm TO /root/.ansible/tmp/ansible-tmp-1604844794.0859098-22564-48059471953951/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844794.0859098-22564-48059471953951/ /root/.ansible/tmp/ansible-tmp-1604844794.0859098-22564-48059471953951/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844794.0859098-22564-48059471953951/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844794.0859098-22564-48059471953951/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604844793.9707778,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "c570e526b9fd82adcbc61e9c2617f1d13a75ced0",
        "ctime": 1604844793.9707778,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4017,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844793.8347757,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23501,
        "uid": 0,
        "version": "3484381815",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844794.35304-22594-135687798500285 `" && echo ansible-tmp-1604844794.35304-22594-135687798500285="` echo /root/.ansible/tmp/ansible-tmp-1604844794.35304-22594-135687798500285 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpljv42_qx TO /root/.ansible/tmp/ansible-tmp-1604844794.35304-22594-135687798500285/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844794.35304-22594-135687798500285/ /root/.ansible/tmp/ansible-tmp-1604844794.35304-22594-135687798500285/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844794.35304-22594-135687798500285/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844794.35304-22594-135687798500285/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844792.8907614,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844792.8907614,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer3",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer3",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIEQQ/6aDZr6FH0BAV5grO4jU5jXFWoa31pGiGUtNuc84EsZ2CsN2CsB2CngKWggBEAEaBgjz\n+Z/9BSIKc3lzY2hhbm5lbCpAMDM1YWI4YjAwNGUwZGIyOTc1OGFlMmEwZTc2NGEzNGRhNWFhNzA5\nZGEzYTk0M2RkNWRmNDY2YmFlODE1YTdiYxIaEhhLXxrLycgLxl/2V3rtW6Qbb15jV3Xn6MESw3UK\nwHUSvXUSgE4KB09yZGVyZXIS9E0SlhYKCndhbG1hcnRNU1AShxYaoxQKA01TUBKbFBKQFBKNFAoK\nd2FsbWFydE1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lC\nQWdJVURQSncvMldiVW1Lb0Q2MEQvbUgvRmZ4eFA2UXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURneE5EQXpNREZhRncweU16QTRNamt4TkRBek1ERmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVFRMEhWWlNwdXNQQ1Q1dEtZdlF2TkRD\nb1VaWFhHSkI2emYvNzBNYldUSlVuNDVBRmZadHQrZ09kMEsyRWtCCnA3TXlpQ2J1TW53ZUhpVnBj\ncDhLWDZ5Vm8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4TGFRd0NnWUlLb1pJemowRQpB\nd0lEU1FBd1JnSWhBSU9jcnBKakdyMjc2R0xRK0M4aHZoUU9wNEtydlk5Wjk0eElxRzRBWSt5TEFp\nRUFtelNyCjBKWnlYYS9nSTFzVjJRYzBKU1ozL1JORFZqdndCMlhSbURMVlVJND0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoilggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzF6Q0NB\nbjZnQXdJQkFnSVVlUHZMOFIrajZ5anc4QlVZTzBBKzFCSzIwRnd3Q2dZSUtvWkl6ajBFQXdJdwpX\nakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH\nOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlY\nSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURCYUZ3MHlNVEV4TURneE5ERXlNREJhTUdreEN6\nQUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE\nQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeER6QU5CZ05WCkJBc1RCbU5zYVdWdWRERWFNQmdHQTFVRUF3\nd1JRV1J0YVc1QWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak8KUFFJQkJnZ3Foa2pPUFFNQkJ3\nTkNBQVF6MkdlMkxkRThzK0hNQVhhSkduZisxT3BsNm5wR01lRHhmVHlscUR1cApHYzZmd3BieVQr\nQUhjcnJ5aUZiVDkyNXhLejhTdk8wbzBzZml2VytZd3gzam80SUJFVENDQVEwd0RnWURWUjBQCkFR\nSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkNqelkyaTl6ZUpMZTVa\ndzZXTHIKMTh2cEh3WEdNQjhHQTFVZEl3UVlNQmFBRk9hWW1yZUdWSTMxWllJQ1BaaHJmeWc4c1My\na01DUUdBMVVkRVFRZApNQnVDR1dOaExYUnZiMnh6TFRZNVpEYzRPRFZtT0RZdFpHZG9kMmN3Z1lZ\nR0NDb0RCQVVHQndnQkJIcDdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENK\naFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205\nc2JHMWxiblJKUkNJNklrRmtiV2x1UUhkaGJHMWhjblF0Ym1WMApJaXdpYUdZdVZIbHdaU0k2SW1O\nc2FXVnVkQ0o5ZlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCWi9VSndWRWl4ClkyaS95eFBqMVhm\nRGRUZDMyR2J4ekpjUlRWcmdGcnVPSmdJZ1VianhJNlU4V3o0TDYrYkVHSWwwZkFDQ1pMRUYKZ2ZD\nZldWNXRQTVVoYVA4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK\n6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitUQ0NBWjZnQXdJQkFnSVVEUEp3LzJX\nYlVtS29ENjBEL21IL0ZmeHhQNlF3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJ\neER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR\nS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURF\neE1EZ3hOREF6TURGYUZ3MHlNekE0TWpreE5EQXpNREZhTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3\nRFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dI\nVDNKa1pYSmxjakVYCk1CVUdBMVVFQXd3T1kyRXVkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pP\nUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRUTBIVlpTcHVzUENUNXRLWXZRdk5EQ29VWlhYR0pCNnpm\nLzcwTWJXVEpVbjQ1QUZmWnR0K2dPZDBLMkVrQgpwN015aUNidU1ud2VIaVZwY3A4S1g2eVZvMEl3\nUURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRF\nRmdRVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdDZ1lJS29aSXpqMEUKQXdJRFNRQXdSZ0lo\nQUlPY3JwSmpHcjI3NkdMUStDOGh2aFFPcDRLcnZZOVo5NHhJcUc0QVkreUxBaUVBbXpTcgowSlp5\nWGEvZ0kxc1YyUWMwSlNaMy9STkRWanZ3QjJYUm1ETFZVSTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KGgZBZG1pbnMiNwoLRW5kb3JzZW1lbnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgp3YWxt\nYXJ0TVNQGgZBZG1pbnMiMwoHUmVhZGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRN\nU1AaBkFkbWlucyIzCgdXcml0ZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoG\nQWRtaW5zIjQKBkFkbWlucxIqEiAIARIcEggSBggBEgIIABoQEg4KCndhbG1hcnRNU1AQARoGQWRt\naW5zKgZBZG1pbnMaJgoMQ2FwYWJpbGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGqs1Cg1D\nb25zZW5zdXNUeXBlEpk1Eo41CghldGNkcmFmdBKBNQrMEQorb3JkZXJlcjEud2FsbWFydC1uZXQu\nc3VuZWVsLnB2dC53bXRiYWYuaW5mbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN\nSUlDL2pDQ0FxU2dBd0lCQWdJVUoyWG9rZHhQY3VXVFhmbzFkS0w4c1k1YTlHOHdDZ1lJS29aSXpq\nMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex\nVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allT\nNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURneE5EQTNNREJhRncweU1URXhNRGd4TkRFeU1E\nQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIy\nNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJn\nTlZCQU1URkc5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUUxUTRRL0s1Z01WSnFvR0FnV0F0czFTUXptKzRwYzlqUVNTZlBtdEFMCmYv\nRTVOdVpLcVI4L24rUTR0MzBqMSsvMVh6QWdLK1BtT25QTUkveENCZUhjR0tPQ0FUWXdnZ0V5TUE0\nR0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFV\nSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVQK0J5cHltZXdXT3JKUHZLa0lX\nb1c2VER5aEV3SHdZRFZSMGpCQmd3CkZvQVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3VEFZ\nRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl4TG5k\naGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZ\nSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5K\ndmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dV\naU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRQ0haR0xHS3psQWhQWDFUaVRj\nalhpMgp5eFQzcmR0NStvSHRLNXl3UHhvMVdBSWdiRTh4bGdpbG00bUJUTDA2UVNYall1Tlkxc3RL\nMWJOTXdhUTFhdDlxCkNZQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQy9qQ0NBcVNnQXdJQkFnSVVKMlhva2R4UGN1V1RYZm8xZEtM\nOHNZNWE5Rzh3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21W\neU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURC\nYUZ3MHlNVEV4TURneE5ERXlNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJ\nMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05W\nCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBNRmt3\nRXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFMVE0US9LNWdNVkpxb0dBZ1dBdHMxU1F6\nbSs0cGM5alFTU2ZQbXRBTApmL0U1TnVaS3FSOC9uK1E0dDMwajErLzFYekFnSytQbU9uUE1JL3hD\nQmVIY0dLT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dy\nQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FV\nUCtCeXB5bWV3V09ySlB2S2tJV29XNlREeWhFd0h3WURWUjBqQkJndwpGb0FVNXBpYXQ0WlVqZlZs\nZ2dJOW1HdC9LRHl4TGFRd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqRXVkMkZzCmJXRnlkQzF1\nWlhTQ0syOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0K\nTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBi\nMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzUzWVd4dFlYSjBM\nVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJ\nUUNIWkdMR0t6bEFoUFgxVGlUY2pYaTIKeXhUM3JkdDUrb0h0SzV5d1B4bzFXQUlnYkU4eGxnaWxt\nNG1CVEwwNlFTWGpZdU5ZMXN0SzFiTk13YVExYXQ5cQpDWUE9Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KCswRCitvcmRlcmVyMi53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvEPtB\nGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVQlFvWXhk\nWE9CL08yOUVKajVjTFVKODRuOURZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1Iw\nSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZR\nUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1E\nRXhNRGd4TkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJz\nd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdW\neVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcx\naGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThNblkyM3JMRTU0\nenJzNzQwZkJJQmdGMkM3TjZ6SWVSd0NDZzhrWlIKditXdGdyMWxBMktRTE1RcHM5azRSZGNFbkd6\nSzRaaUUwTXh1UTI4ZHNEM3VycU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdO\nVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURB\nZEJnTlZIUTRFRmdRVSsyVkV3dnRYejF4ekpYTUlqeElqSWxnK3NwOHdId1lEVlIwakJCZ3cKRm9B\nVTVwaWF0NFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1\nZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3\nZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1\nUVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5\nTWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5\nQkFNQ0EwY0FNRVFDSUFHeDlndUFGdytPQlV5TFRYR1doUThlCmVSQmQvVjM3ckVKOGZpZVlic1k3\nQWlCTDhvL0d1Nzh6K2hhNlpWQit4N09UOUxCMUFmUWZBb08zU0llOHZzb1IKV2c9PQotLS0tLUVO\nRCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RD\nQ0FxU2dBd0lCQWdJVUJRb1l4ZFhPQi9PMjlFSmo1Y0xVSjg0bjlEWXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0\nWVhKMExXNWxkREFlRncweQpNREV4TURneE5EQTNNREJhRncweU1URXhNRGd4TkRFeU1EQmFNR294\nQ3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4\nRURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1U\nRkc5eVpHVnlaWEl5TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBE\nQVFjRFFnQUU4TW5ZMjNyTEU1NHpyczc0MGZCSUJnRjJDN042ekllUndDQ2c4a1pSCnYrV3RncjFs\nQTJLUUxNUXBzOWs0UmRjRW5Heks0WmlFME14dVEyOGRzRDN1cnFPQ0FUWXdnZ0V5TUE0R0ExVWQK\nRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdE\nQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVUrMlZFd3Z0WHoxeHpKWE1JanhJaklsZytz\ncDh3SHdZRFZSMGpCQmd3CkZvQVU1cGlhdDRaVWpmVmxnZ0k5bUd0L0tEeXhMYVF3VEFZRFZSMFJC\nRVV3UTRJVWIzSmtaWEpsY2pJdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl5TG5kaGJHMWhj\nblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVX\nWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRa\nVzUwU1VRaU9pSnZjbVJsY21WeU1pNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSnda\nV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lBR3g5Z3VBRncrT0JVeUxUWEdXaFE4ZQpl\nUkJkL1YzN3JFSjhmaWVZYnNZN0FpQkw4by9HdTc4eitoYTZaVkIreDdPVDlMQjFBZlFmQW9PM1NJ\nZTh2c29SCldnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29yZGVyZXIzLndhbG1h\ncnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8Q+0EaywgtLS0tLUJFR0lOIENFUlRJRklDQVRF\nLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVhbTJ1U3FERE5wMGIwQ1hLam9GeW83RFlBa0V3Q2dZ\nSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpF\nUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFR\nRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hOREEzTURCYUZ3MHlNVEV4TURn\neE5ERXlNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0\neE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJ\neEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemow\nQ0FRWUlLb1pJemowREFRY0RRZ0FFN0dCTVNuRWdVWkFWZmhMMDNqdDU5WXh4enUyTjVFVS8zWktK\neEJkaQplaVpZSkxZRVE5d2Q1SUxsRVV2NXc0UXErWklvd0kxN2R4UFRHUTFTYVAyNjBhT0NBVFl3\nZ2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJ\nS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbGtMK3cxQmpGOE5N\nbXZUeE1oZzYwbUZTbHJnd0h3WURWUjBqQkJndwpGb0FVNXBpYXQ0WlVqZlZsZ2dJOW1HdC9LRHl4\nTGFRd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5\nWlhJekxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJ\nS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pv\nWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJc0ltaG1M\nbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJQlJLK0pyL3FRcXh5\nTHZ0bkxYdVlpcTgKU3UrVWN1bE5BaG5iR0M4d09tSVhBaUJHYWxPRUphS2YzL1YwdTFMd1pjSDVE\nY01Dc1IwYXhYcklGMWdNK3dDTApZdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIssILS0t\nLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVYW0ydVNxREROcDBi\nMENYS2pvRnlvN0RZQWtFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFO\nQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQ\nY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4\nTkRBM01EQmFGdzB5TVRFeE1EZ3hOREV5TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQK\nVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhE\nVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRi\nbVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRTdHQk1TbkVnVVpBVmZoTDAz\nanQ1OVl4eHp1Mk41RVUvM1pLSnhCZGkKZWlaWUpMWUVROXdkNUlMbEVVdjV3NFFxK1pJb3dJMTdk\neFBUR1ExU2FQMjYwYU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVG\nakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZI\nUTRFRmdRVWxrTCt3MUJqRjhOTW12VHhNaGc2MG1GU2xyZ3dId1lEVlIwakJCZ3cKRm9BVTVwaWF0\nNFpVamZWbGdnSTltR3QvS0R5eExhUXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpi\nV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQy\nMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFX\neHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lX\neHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0Ew\nY0FNRVFDSUJSSytKci9xUXF4eUx2dG5MWHVZaXE4ClN1K1VjdWxOQWhuYkdDOHdPbUlYQWlCR2Fs\nT0VKYUtmMy9WMHUxTHdaY0g1RGNNQ3NSMGF4WHJJRjFnTSt3Q0wKWXc9PQotLS0tLUVORCBDRVJU\nSUZJQ0FURS0tLS0tChISCgU1MDBtcxAKGAEgBSiAgIAIGgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUS\nCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChND\naGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoH\nV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dy\naXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQ\nAhoGQWRtaW5zKgZBZG1pbnMS+iMKC0NvbnNvcnRpdW1zEuojEp8jChVTdXBwbHlDaGFpbkNvbnNv\ncnRpdW0ShSMSpyIKCmNhcnJpZXJNU1ASmCIatCAKA01TUBKsIBKhIBKeIAoKY2Fycmllck1TUBLp\nBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlE\nak9GL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4\nTURneE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdE\nUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hR\nMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9Q\nUUlCQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxV\nYVBJY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdR\nREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVG\nZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhB\nTVBtbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZy\nNkE5Zk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUt\nLS0tLQoitggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzd6Q0NBcGFnQXdJQkFnSVVN\nWEpNajJKQ0lzVlYwQjVjK2d3Smd0STgrM1F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVC\naE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdE\nZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3\nMHkKTURFeE1EZ3hOREE0TURCYUZ3MHlNVEV4TURneE5ERXpNREJhTUhreEN6QUpCZ05WQkFZVEFr\nZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIw\nTmhjbkpwWlhJeEh6QU5CZ05WCkJBc1RCbU5zYVdWdWREQU9CZ05WQkFzVEIyTmhjbkpwWlhJeEdq\nQVlCZ05WQkFNTUVVRmtiV2x1UUdOaGNuSnAKWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUV0QkJnUC9yTmdsK0RhdjMyZ3FDYgpka21HcXByOHc1aFhHZ0dsK1pzYWtl\nbGoybnpBdDVwT1h1akRxZUIwaS9zN1pTZnByL0FXd3lEZG01d2NLbVQ0Cno2T0NBUmt3Z2dFVk1B\nNEdBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVcKQkJTajd0\nS3ZLZlhRQkhBRmQ4cUpWcjFZb3QwOFhUQWZCZ05WSFNNRUdEQVdnQlJ5MC81Um5GUHJIaGRsdlBh\nQQpFc0JKSTBPbHpEQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRM09EZzFaamcyTFhO\nNmNHZG9NSUdPCkJnZ3FBd1FGQmdjSUFRU0JnWHNpWVhSMGNuTWlPbnNpWVdKaFl5NXBibWwwSWpv\naWRISjFaU0lzSW1Ga2JXbHUKSWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXVJam9pWTJG\neWNtbGxjaUlzSW1obUxrVnVjbTlzYkcxbApiblJKUkNJNklrRmtiV2x1UUdOaGNuSnBaWEl0Ym1W\nMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLCkJnZ3Foa2pPUFFRREFnTkhBREJFQWlB\ncVVZL3o5dnptMk9vTHVybnZ4YUJHREZDQ0FPRmJjZTB0YU5sMEkvNXgKbFFJZ2FleHNkTG55ODlB\nVGJmNk9vNk5QdjBwMmpSS1IzWXcyL2tvNEFiQ0EveDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0t\nLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RD\nQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9GL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5\nYVdWeUxXNWxkREFlRncweQpNREV4TURneE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94\nQ3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2\nYm1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxs\nY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdt\nMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNs\nTHUwaEs1TE01QmhyNUFoem8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIK\nL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlL\nb1pJemowRQpBd0lEU0FBd1JRSWhBTVBtbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZv\nOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5Zk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0K\nLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpa7gsIARL0BQrpBS0tLS0tQkVHSU4gQ0VSVElGSUNB\nVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9GL0NwekhHVlFhYTByNGhlSXdD\nZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZi\nakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURW\nUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURneE5EQXpNVEJhRncweU16QTRN\namt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhE\nekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVB\nd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpB\nQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJY04zWjVSNUM0TXBsb0dBSUxG\nUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFR\nSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVY3RQK1VaeFQ2eDRYWmJ6MmdC\nTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhBTVBtbStXOUNMcFJtYXpoT3JHU2I1\nbU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5Zk0wNC82eDk1U2FRbW5Yb3p6\nS1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBmNsaWVudBryBQrpBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU1BSnNxSVlEak9G\nL0NwekhHVlFhYTByNGhlSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURn\neE5EQXpNVEJhRncweU16QTRNamt4TkRBek1UQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5\nY21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVJaSmtjS2lnSWpUQUdtMlR5b0VIeHJ4RWxBRjZlUmc1VmxVYVBJ\nY04zWjVSNUM0TXBsb0dBSUxGUmVNSGVXCkd3ZURzMnNsTHUwaEs1TE01QmhyNUFoem8wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nY3RQK1VaeFQ2eDRYWmJ6MmdCTEFTU05EcGN3d0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhBTVBt\nbStXOUNMcFJtYXpoT3JHU2I1bU5WNS9paWwyNStSenZvOVVoVzhYdUFpQkJSUlExClVVMEZyNkE5\nZk0wNC82eDk1U2FRbW5Yb3p6S1ArOVhPT3k1K09nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t\nLQoSBHBlZXIaBkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmll\nck1TUBoGQWRtaW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQ\nGgZBZG1pbnMiNAoGQWRtaW5zEioSIAgBEhwSCBIGCAESAggAGhASDgoKY2Fycmllck1TUBABGgZB\nZG1pbnMiNwoLRW5kb3JzZW1lbnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZB\nZG1pbnMqBkFkbWlucxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcv\nQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5z\nEiMSCAgBEgQSAhIAGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9B\nZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0\nYUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaxwEKEE9yZGVyZXJBZGRyZXNzZXMS\nsgESlgEKMG9yZGVyZXIxLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwow\nb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzCjBvcmRlcmVy\nMy53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMaFy9DaGFubmVsL09yZGVy\nZXIvQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8zEgAaBkFkbWlucyIiCgZBZG1p\nbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMa\nBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyoGQWRtaW5zGg4KBAoC\nCgAKAAoACgAKAA==",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer3",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997 `" && echo ansible-tmp-1604844794.7829852-22632-211837209958997="` echo /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpsg6oob0d TO /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/ /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphnfd7abv TO /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/ /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp20t94xfd TO /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/ /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9717425e47572e7737ef34c2c7ff406dfe992d65",
    "dest": "./build/test/walmart-orderer3.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmphnfd7abv",
            "attributes": null,
            "backup": false,
            "checksum": "9717425e47572e7737ef34c2c7ff406dfe992d65",
            "content": null,
            "dest": "./build/test/walmart-orderer3.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "26062ea8835f99414fee96f9553320dc",
    "mode": "0644",
    "owner": "root",
    "size": 22767,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844794.7829852-22632-211837209958997/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844795.1224494-22672-66290555215335 `" && echo ansible-tmp-1604844795.1224494-22672-66290555215335="` echo /root/.ansible/tmp/ansible-tmp-1604844795.1224494-22672-66290555215335 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8_ngs535 TO /root/.ansible/tmp/ansible-tmp-1604844795.1224494-22672-66290555215335/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844795.1224494-22672-66290555215335/ /root/.ansible/tmp/ansible-tmp-1604844795.1224494-22672-66290555215335/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844795.1224494-22672-66290555215335/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844795.1224494-22672-66290555215335/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer3.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.070409",
    "end": "2020-11-08 14:13:15.323686",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer3.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:15.253277",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844795.444499-22707-170141173792864 `" && echo ansible-tmp-1604844795.444499-22707-170141173792864="` echo /root/.ansible/tmp/ansible-tmp-1604844795.444499-22707-170141173792864 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp3i7z_5sd TO /root/.ansible/tmp/ansible-tmp-1604844795.444499-22707-170141173792864/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844795.444499-22707-170141173792864/ /root/.ansible/tmp/ansible-tmp-1604844795.444499-22707-170141173792864/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844795.444499-22707-170141173792864/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844795.444499-22707-170141173792864/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844795.6554797-22733-223100805103114 `" && echo ansible-tmp-1604844795.6554797-22733-223100805103114="` echo /root/.ansible/tmp/ansible-tmp-1604844795.6554797-22733-223100805103114 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmppb168r09 TO /root/.ansible/tmp/ansible-tmp-1604844795.6554797-22733-223100805103114/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844795.6554797-22733-223100805103114/ /root/.ansible/tmp/ansible-tmp-1604844795.6554797-22733-223100805103114/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844795.6554797-22733-223100805103114/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844795.6554797-22733-223100805103114/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Orderer files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.408095",
    "end": "2020-11-08 14:13:19.195068",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Orderer files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:15.786973",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   f14cf3d6..ec65ea87  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   f14cf3d6..ec65ea87  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla ec65ea87] [ci skip] Pushing Orderer files\n 4 files changed, 12635 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla ec65ea87] [ci skip] Pushing Orderer files",
        " 4 files changed, 12635 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla ec65ea87] [ci skip] Pushing Orderer files",
        " 4 files changed, 12635 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   f14cf3d6..ec65ea87  HEAD -> gorilla"
    ]
}

TASK [include_role : create/peers] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:173
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/peers : Write the couchdb credentials to Vault] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844799.586329-22783-257743525229574 `" && echo ansible-tmp-1604844799.586329-22783-257743525229574="` echo /root/.ansible/tmp/ansible-tmp-1604844799.586329-22783-257743525229574 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfnrpvwts TO /root/.ansible/tmp/ansible-tmp-1604844799.586329-22783-257743525229574/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844799.586329-22783-257743525229574/ /root/.ansible/tmp/ansible-tmp-1604844799.586329-22783-257743525229574/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844799.586329-22783-257743525229574/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844799.586329-22783-257743525229574/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/couchdb/carrier user=\"admin123\"\n",
    "delta": "0:00:00.083664",
    "end": "2020-11-08 14:13:19.802795",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/couchdb/carrier user=\"admin123\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:19.719131",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/couchdb/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/couchdb/carrier"
    ]
}

TASK [Create Value files for Organization Peers] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:17

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844799.9516609-22821-165515767964438 `" && echo ansible-tmp-1604844799.9516609-22821-165515767964438="` echo /root/.ansible/tmp/ansible-tmp-1604844799.9516609-22821-165515767964438 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5_4u2pjp TO /root/.ansible/tmp/ansible-tmp-1604844799.9516609-22821-165515767964438/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844799.9516609-22821-165515767964438/ /root/.ansible/tmp/ansible-tmp-1604844799.9516609-22821-165515767964438/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844799.9516609-22821-165515767964438/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844799.9516609-22821-165515767964438/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844800.1540992-22847-97656097026283 `" && echo ansible-tmp-1604844800.1540992-22847-97656097026283="` echo /root/.ansible/tmp/ansible-tmp-1604844800.1540992-22847-97656097026283 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzqhlraou TO /root/.ansible/tmp/ansible-tmp-1604844800.1540992-22847-97656097026283/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844800.1540992-22847-97656097026283/ /root/.ansible/tmp/ansible-tmp-1604844800.1540992-22847-97656097026283/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844800.1540992-22847-97656097026283/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844800.1540992-22847-97656097026283/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for values-peer0] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187 `" && echo ansible-tmp-1604844800.3550127-22873-242744489963187="` echo /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp4ymfvp2d TO /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/ /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpbu37qe2b/value_peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/ /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpuqnms224 TO /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/ /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "52b1b909f9ca458b84ca8f02bb3100e80afb0e37",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "value_peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "52b1b909f9ca458b84ca8f02bb3100e80afb0e37",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "59bd49fb37eac8d0f75b85fb20efe7f9",
    "mode": "0644",
    "owner": "root",
    "size": 1814,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844800.3550127-22873-242744489963187/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844800.779233-22915-276612771101620 `" && echo ansible-tmp-1604844800.779233-22915-276612771101620="` echo /root/.ansible/tmp/ansible-tmp-1604844800.779233-22915-276612771101620 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqz5_ucj6 TO /root/.ansible/tmp/ansible-tmp-1604844800.779233-22915-276612771101620/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844800.779233-22915-276612771101620/ /root/.ansible/tmp/ansible-tmp-1604844800.779233-22915-276612771101620/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844800.779233-22915-276612771101620/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844800.779233-22915-276612771101620/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
        }
    },
    "stat": {
        "atime": 1604844800.6628792,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "52b1b909f9ca458b84ca8f02bb3100e80afb0e37",
        "ctime": 1604844800.6628792,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4031,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844800.5268772,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1814,
        "uid": 0,
        "version": "822787393",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844801.0317934-22945-103193342873603 `" && echo ansible-tmp-1604844801.0317934-22945-103193342873603="` echo /root/.ansible/tmp/ansible-tmp-1604844801.0317934-22945-103193342873603 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp57bd6aow TO /root/.ansible/tmp/ansible-tmp-1604844801.0317934-22945-103193342873603/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844801.0317934-22945-103193342873603/ /root/.ansible/tmp/ansible-tmp-1604844801.0317934-22945-103193342873603/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844801.0317934-22945-103193342873603/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844801.0317934-22945-103193342873603/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844795.0507941,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844795.0507941,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-peer0",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/peernode",
                "ref": "gorilla"
            },
            "releaseName": "carrier-peer0",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "couchdb": "hyperledger/fabric-couchdb:0.4.18",
                        "peer": "hyperledger/fabric-peer:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "peer": {
                    "builder": "hyperledger/fabric-ccenv:2.0.0",
                    "couchdb": {
                        "username": "carrier-user"
                    },
                    "gossipexternalendpoint": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "localmspid": "carrierMSP",
                    "loglevel": "info",
                    "name": "peer0",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "couchdb": {
                            "clusteripport": 5984
                        },
                        "events": {
                            "clusteripport": 7053
                        },
                        "grpc": {
                            "clusteripport": 7051
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "couchdb": {
                        "storageclassname": "carriersc",
                        "storagesize": "1Gi"
                    },
                    "peer": {
                        "storageclassname": "carriersc",
                        "storagesize": "512Mi"
                    }
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretambassador": "secret/crypto/peerOrganizations/carrier-net/ambassador",
                    "secretcouchdbpass": "secret/credentials/carrier-net/couchdb/carrier?user",
                    "secretprefix": "secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265 `" && echo ansible-tmp-1604844801.4301045-22983-134055343265265="` echo /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp9dhcwoc0 TO /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/ /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpsh1cxsxn TO /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/ /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcnyqc6io TO /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/ /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "8534067e3b14f58f6a01ca58c16c661ba43188e9",
    "dest": "./build/test/carrier-peer0.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpsh1cxsxn",
            "attributes": null,
            "backup": false,
            "checksum": "8534067e3b14f58f6a01ca58c16c661ba43188e9",
            "content": null,
            "dest": "./build/test/carrier-peer0.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a6372ce6870dcd0e953ea718d0d7cdc1",
    "mode": "0644",
    "owner": "root",
    "size": 1353,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844801.4301045-22983-134055343265265/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844801.7734764-23023-77606786951581 `" && echo ansible-tmp-1604844801.7734764-23023-77606786951581="` echo /root/.ansible/tmp/ansible-tmp-1604844801.7734764-23023-77606786951581 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpenmr8pdn TO /root/.ansible/tmp/ansible-tmp-1604844801.7734764-23023-77606786951581/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844801.7734764-23023-77606786951581/ /root/.ansible/tmp/ansible-tmp-1604844801.7734764-23023-77606786951581/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844801.7734764-23023-77606786951581/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844801.7734764-23023-77606786951581/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-peer0.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
    "delta": "0:00:00.062097",
    "end": "2020-11-08 14:13:21.968145",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-peer0.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:21.906048",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844802.0454044-23055-223220347440326 `" && echo ansible-tmp-1604844802.0454044-23055-223220347440326="` echo /root/.ansible/tmp/ansible-tmp-1604844802.0454044-23055-223220347440326 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7vgw_9ka TO /root/.ansible/tmp/ansible-tmp-1604844802.0454044-23055-223220347440326/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844802.0454044-23055-223220347440326/ /root/.ansible/tmp/ansible-tmp-1604844802.0454044-23055-223220347440326/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844802.0454044-23055-223220347440326/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844802.0454044-23055-223220347440326/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844802.2485194-23081-13792483456758 `" && echo ansible-tmp-1604844802.2485194-23081-13792483456758="` echo /root/.ansible/tmp/ansible-tmp-1604844802.2485194-23081-13792483456758 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpok6w3k8z TO /root/.ansible/tmp/ansible-tmp-1604844802.2485194-23081-13792483456758/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844802.2485194-23081-13792483456758/ /root/.ansible/tmp/ansible-tmp-1604844802.2485194-23081-13792483456758/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844802.2485194-23081-13792483456758/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844802.2485194-23081-13792483456758/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for values-peer1] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829 `" && echo ansible-tmp-1604844802.4574668-23107-228883127576829="` echo /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp6tzib69b TO /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/ /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpys9y85m8/value_peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/ /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpcopl_zmd TO /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/ /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4747917e9c3e2839e579de891555663f5d0d9445",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "value_peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "4747917e9c3e2839e579de891555663f5d0d9445",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "c0b1d306286cc7ec7acfb12ec53d7d4c",
    "mode": "0644",
    "owner": "root",
    "size": 1814,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844802.4574668-23107-228883127576829/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844802.8842983-23149-5885913047880 `" && echo ansible-tmp-1604844802.8842983-23149-5885913047880="` echo /root/.ansible/tmp/ansible-tmp-1604844802.8842983-23149-5885913047880 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_gkli39h TO /root/.ansible/tmp/ansible-tmp-1604844802.8842983-23149-5885913047880/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844802.8842983-23149-5885913047880/ /root/.ansible/tmp/ansible-tmp-1604844802.8842983-23149-5885913047880/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844802.8842983-23149-5885913047880/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844802.8842983-23149-5885913047880/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
        }
    },
    "stat": {
        "atime": 1604844802.7629113,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "4747917e9c3e2839e579de891555663f5d0d9445",
        "ctime": 1604844802.7629113,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4034,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604844802.6309092,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1814,
        "uid": 0,
        "version": "772029286",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844803.139878-23179-99758436531342 `" && echo ansible-tmp-1604844803.139878-23179-99758436531342="` echo /root/.ansible/tmp/ansible-tmp-1604844803.139878-23179-99758436531342 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp1bzchpk7 TO /root/.ansible/tmp/ansible-tmp-1604844803.139878-23179-99758436531342/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844803.139878-23179-99758436531342/ /root/.ansible/tmp/ansible-tmp-1604844803.139878-23179-99758436531342/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844803.139878-23179-99758436531342/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844803.139878-23179-99758436531342/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844801.698895,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844801.698895,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-peer1",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/peernode",
                "ref": "gorilla"
            },
            "releaseName": "carrier-peer1",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "couchdb": "hyperledger/fabric-couchdb:0.4.18",
                        "peer": "hyperledger/fabric-peer:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "peer": {
                    "builder": "hyperledger/fabric-ccenv:2.0.0",
                    "couchdb": {
                        "username": "carrier-user"
                    },
                    "gossipexternalendpoint": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "localmspid": "carrierMSP",
                    "loglevel": "info",
                    "name": "peer1",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "couchdb": {
                            "clusteripport": 5984
                        },
                        "events": {
                            "clusteripport": 7053
                        },
                        "grpc": {
                            "clusteripport": 7051
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "couchdb": {
                        "storageclassname": "carriersc",
                        "storagesize": "1Gi"
                    },
                    "peer": {
                        "storageclassname": "carriersc",
                        "storagesize": "512Mi"
                    }
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretambassador": "secret/crypto/peerOrganizations/carrier-net/ambassador",
                    "secretcouchdbpass": "secret/credentials/carrier-net/couchdb/carrier?user",
                    "secretprefix": "secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441 `" && echo ansible-tmp-1604844803.535547-23217-118871911661441="` echo /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqxjg5n1h TO /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/ /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpde2x4ibm TO /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/ /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpravhkxrs TO /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/ /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "dcbfe3b39af3dd9a7ff5c7e18efb4660c2d2bb27",
    "dest": "./build/test/carrier-peer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpde2x4ibm",
            "attributes": null,
            "backup": false,
            "checksum": "dcbfe3b39af3dd9a7ff5c7e18efb4660c2d2bb27",
            "content": null,
            "dest": "./build/test/carrier-peer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d36bfe9ae3b7e57bba7afd19cde71908",
    "mode": "0644",
    "owner": "root",
    "size": 1353,
    "src": "/root/.ansible/tmp/ansible-tmp-1604844803.535547-23217-118871911661441/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844803.8826535-23257-227808080955213 `" && echo ansible-tmp-1604844803.8826535-23257-227808080955213="` echo /root/.ansible/tmp/ansible-tmp-1604844803.8826535-23257-227808080955213 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp90awg3vo TO /root/.ansible/tmp/ansible-tmp-1604844803.8826535-23257-227808080955213/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844803.8826535-23257-227808080955213/ /root/.ansible/tmp/ansible-tmp-1604844803.8826535-23257-227808080955213/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844803.8826535-23257-227808080955213/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844803.8826535-23257-227808080955213/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-peer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
    "delta": "0:00:00.062228",
    "end": "2020-11-08 14:13:24.075430",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-peer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:24.013202",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:36

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844804.1924965-23291-20190339861149 `" && echo ansible-tmp-1604844804.1924965-23291-20190339861149="` echo /root/.ansible/tmp/ansible-tmp-1604844804.1924965-23291-20190339861149 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp48wnwj4q TO /root/.ansible/tmp/ansible-tmp-1604844804.1924965-23291-20190339861149/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844804.1924965-23291-20190339861149/ /root/.ansible/tmp/ansible-tmp-1604844804.1924965-23291-20190339861149/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844804.1924965-23291-20190339861149/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844804.1924965-23291-20190339861149/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844804.4543445-23317-54050619741062 `" && echo ansible-tmp-1604844804.4543445-23317-54050619741062="` echo /root/.ansible/tmp/ansible-tmp-1604844804.4543445-23317-54050619741062 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpva6jrl6e TO /root/.ansible/tmp/ansible-tmp-1604844804.4543445-23317-54050619741062/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844804.4543445-23317-54050619741062/ /root/.ansible/tmp/ansible-tmp-1604844804.4543445-23317-54050619741062/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844804.4543445-23317-54050619741062/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844804.4543445-23317-54050619741062/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Peer files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.788256",
    "end": "2020-11-08 14:13:33.375939",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Peer files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:13:24.587683",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   ec65ea87..2f461cac  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   ec65ea87..2f461cac  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 2f461cac] [ci skip] Pushing Peer files\n 3 files changed, 1456 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 2f461cac] [ci skip] Pushing Peer files",
        " 3 files changed, 1456 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 2f461cac] [ci skip] Pushing Peer files",
        " 3 files changed, 1456 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   ec65ea87..2f461cac  HEAD -> gorilla"
    ]
}

TASK [Waiting for peer pod {{ peer.name }} in {{ item.name | lower }}-net] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:50
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844813.7011423-23371-165915273318566 `" && echo ansible-tmp-1604844813.7011423-23371-165915273318566="` echo /root/.ansible/tmp/ansible-tmp-1604844813.7011423-23371-165915273318566 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwtcrc717 TO /root/.ansible/tmp/ansible-tmp-1604844813.7011423-23371-165915273318566/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844813.7011423-23371-165915273318566/ /root/.ansible/tmp/ansible-tmp-1604844813.7011423-23371-165915273318566/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844813.7011423-23371-165915273318566/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844813.7011423-23371-165915273318566/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844844.32337-23371-212531895930842 `" && echo ansible-tmp-1604844844.32337-23371-212531895930842="` echo /root/.ansible/tmp/ansible-tmp-1604844844.32337-23371-212531895930842 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphnwzmj_y TO /root/.ansible/tmp/ansible-tmp-1604844844.32337-23371-212531895930842/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844844.32337-23371-212531895930842/ /root/.ansible/tmp/ansible-tmp-1604844844.32337-23371-212531895930842/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844844.32337-23371-212531895930842/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844844.32337-23371-212531895930842/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844874.9616876-23371-24268876459985 `" && echo ansible-tmp-1604844874.9616876-23371-24268876459985="` echo /root/.ansible/tmp/ansible-tmp-1604844874.9616876-23371-24268876459985 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmphs_w9m6k TO /root/.ansible/tmp/ansible-tmp-1604844874.9616876-23371-24268876459985/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844874.9616876-23371-24268876459985/ /root/.ansible/tmp/ansible-tmp-1604844874.9616876-23371-24268876459985/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844874.9616876-23371-24268876459985/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844874.9616876-23371-24268876459985/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844905.6305544-23371-195617257196870 `" && echo ansible-tmp-1604844905.6305544-23371-195617257196870="` echo /root/.ansible/tmp/ansible-tmp-1604844905.6305544-23371-195617257196870 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0fd8xl8_ TO /root/.ansible/tmp/ansible-tmp-1604844905.6305544-23371-195617257196870/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844905.6305544-23371-195617257196870/ /root/.ansible/tmp/ansible-tmp-1604844905.6305544-23371-195617257196870/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844905.6305544-23371-195617257196870/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844905.6305544-23371-195617257196870/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (17 retries left).Result was: {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844936.2889154-23371-12511694055201 `" && echo ansible-tmp-1604844936.2889154-23371-12511694055201="` echo /root/.ansible/tmp/ansible-tmp-1604844936.2889154-23371-12511694055201 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp53nerkh4 TO /root/.ansible/tmp/ansible-tmp-1604844936.2889154-23371-12511694055201/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844936.2889154-23371-12511694055201/ /root/.ansible/tmp/ansible-tmp-1604844936.2889154-23371-12511694055201/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844936.2889154-23371-12511694055201/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844936.2889154-23371-12511694055201/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (16 retries left).Result was: {
    "attempts": 5,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844966.9433675-23371-148644210492926 `" && echo ansible-tmp-1604844966.9433675-23371-148644210492926="` echo /root/.ansible/tmp/ansible-tmp-1604844966.9433675-23371-148644210492926 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpvhfvzku6 TO /root/.ansible/tmp/ansible-tmp-1604844966.9433675-23371-148644210492926/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844966.9433675-23371-148644210492926/ /root/.ansible/tmp/ansible-tmp-1604844966.9433675-23371-148644210492926/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844966.9433675-23371-148644210492926/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844966.9433675-23371-148644210492926/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (15 retries left).Result was: {
    "attempts": 6,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604844997.6182022-23371-57564974541260 `" && echo ansible-tmp-1604844997.6182022-23371-57564974541260="` echo /root/.ansible/tmp/ansible-tmp-1604844997.6182022-23371-57564974541260 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpne1xnahx TO /root/.ansible/tmp/ansible-tmp-1604844997.6182022-23371-57564974541260/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604844997.6182022-23371-57564974541260/ /root/.ansible/tmp/ansible-tmp-1604844997.6182022-23371-57564974541260/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604844997.6182022-23371-57564974541260/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604844997.6182022-23371-57564974541260/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (14 retries left).Result was: {
    "attempts": 7,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845028.314622-23371-69620076278974 `" && echo ansible-tmp-1604845028.314622-23371-69620076278974="` echo /root/.ansible/tmp/ansible-tmp-1604845028.314622-23371-69620076278974 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwtyerdle TO /root/.ansible/tmp/ansible-tmp-1604845028.314622-23371-69620076278974/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845028.314622-23371-69620076278974/ /root/.ansible/tmp/ansible-tmp-1604845028.314622-23371-69620076278974/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845028.314622-23371-69620076278974/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845028.314622-23371-69620076278974/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (13 retries left).Result was: {
    "attempts": 8,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845058.999344-23371-10326306531471 `" && echo ansible-tmp-1604845058.999344-23371-10326306531471="` echo /root/.ansible/tmp/ansible-tmp-1604845058.999344-23371-10326306531471 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp2pzsy29v TO /root/.ansible/tmp/ansible-tmp-1604845058.999344-23371-10326306531471/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845058.999344-23371-10326306531471/ /root/.ansible/tmp/ansible-tmp-1604845058.999344-23371-10326306531471/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845058.999344-23371-10326306531471/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845058.999344-23371-10326306531471/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (12 retries left).Result was: {
    "attempts": 9,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845089.6590307-23371-2566809975676 `" && echo ansible-tmp-1604845089.6590307-23371-2566809975676="` echo /root/.ansible/tmp/ansible-tmp-1604845089.6590307-23371-2566809975676 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpualq9219 TO /root/.ansible/tmp/ansible-tmp-1604845089.6590307-23371-2566809975676/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845089.6590307-23371-2566809975676/ /root/.ansible/tmp/ansible-tmp-1604845089.6590307-23371-2566809975676/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845089.6590307-23371-2566809975676/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845089.6590307-23371-2566809975676/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (11 retries left).Result was: {
    "attempts": 10,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845120.2973406-23371-242292835866421 `" && echo ansible-tmp-1604845120.2973406-23371-242292835866421="` echo /root/.ansible/tmp/ansible-tmp-1604845120.2973406-23371-242292835866421 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp6b8v8bxn TO /root/.ansible/tmp/ansible-tmp-1604845120.2973406-23371-242292835866421/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845120.2973406-23371-242292835866421/ /root/.ansible/tmp/ansible-tmp-1604845120.2973406-23371-242292835866421/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845120.2973406-23371-242292835866421/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845120.2973406-23371-242292835866421/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer0 in carrier-net (10 retries left).Result was: {
    "attempts": 11,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845150.922924-23371-20711441088752 `" && echo ansible-tmp-1604845150.922924-23371-20711441088752="` echo /root/.ansible/tmp/ansible-tmp-1604845150.922924-23371-20711441088752 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp45o50c8s TO /root/.ansible/tmp/ansible-tmp-1604845150.922924-23371-20711441088752/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845150.922924-23371-20711441088752/ /root/.ansible/tmp/ansible-tmp-1604845150.922924-23371-20711441088752/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845150.922924-23371-20711441088752/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845150.922924-23371-20711441088752/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 12,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "268febca876adda04bf19d879ad57f3095d555aea666350d45cd0feca63051c3"
                },
                "creationTimestamp": "2020-11-08T14:16:36Z",
                "generateName": "peer0-",
                "labels": {
                    "app": "peer0",
                    "app.kubernetes.io/instance": "carrier-peer0",
                    "app.kubernetes.io/name": "peer0",
                    "controller-revision-hash": "peer0-7997766749",
                    "statefulset.kubernetes.io/pod-name": "peer0-0"
                },
                "name": "peer0-0",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "peer0",
                        "uid": "fd8fc5c4-9b6d-49dd-8a34-cbb6a355bc9c"
                    }
                ],
                "resourceVersion": "2921303",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/peer0-0",
                "uid": "faf086d2-3ade-45aa-a8f8-807e8e0d65df"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "chown -R couchdb:couchdb /opt/couchdb\nchmod -R 0770 /opt/couchdb/data\nchmod 664 /opt/couchdb/etc/*.ini\nchmod 664 /opt/couchdb/etc/local.d/*.ini\nchmod 775 /opt/couchdb/etc/*.d\nif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide username for the password \"\n  exit 1\n  break\nelif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  export COUCHDB_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\n  break\nelif [ ! -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide password for username $COUCHDB_USER \"\n  exit 1\n  break\nelse\n  :\nfi\ntini -- /docker-entrypoint.sh /opt/couchdb/bin/couchdb"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "COUCHDB_USER",
                                "value": "carrier-user"
                            }
                        ],
                        "image": "hyperledger/fabric-couchdb:0.4.18",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "couchdb",
                        "ports": [
                            {
                                "containerPort": 5984,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/opt/couchdb/data",
                                "name": "datadir-couchdb"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/crypto",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "cp /etc/hyperledger/fabric/NodeOUconfig/mspconfig  /etc/hyperledger/fabric/crypto/msp/config.yaml\nexport CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\npeer node start"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "peer0-config"
                                }
                            }
                        ],
                        "image": "hyperledger/fabric-peer:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "peer0",
                        "ports": [
                            {
                                "containerPort": 7051,
                                "name": "grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 7053,
                                "name": "events",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/hyperledger/production",
                                "name": "datadir"
                            },
                            {
                                "mountPath": "/host/var/run/docker.sock",
                                "name": "dockersocket"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/crypto",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/NodeOUconfig",
                                "name": "peer0-msp-config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "peer0-0",
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')        \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt\n\n# COUCH_DB CREDENTIALS\necho \"Getting couch db credentials\"\nSECRET_COUCHDB_PASS=secret/credentials/carrier-net/couchdb/carrier?user\nif [ ! -z $SECRET_COUCHDB_PASS ]\nthen\n  vault_secret_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $1}')\n  vault_data_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $2}')\n  LOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n  validateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n  PASSWORD=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\n  echo \"${PASSWORD}\" >> ${MOUNT_PATH}/user_cred \nfi            "
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "VAULT_SECRET_PREFIX",
                                "value": "secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "certificates-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "subdomain": "peer0",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "datadir",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-peer0-0"
                        }
                    },
                    {
                        "name": "datadir-couchdb",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-couchdb-peer0-0"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "dockersocket"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "mspconfig",
                                    "path": "mspconfig"
                                }
                            ],
                            "name": "peer0-msp-config"
                        },
                        "name": "peer0-msp-config-volume"
                    },
                    {
                        "name": "vault-auth-token-745wn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-745wn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:01Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:02Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:02Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:16:38Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://09395ea9fd7cb7f5657ee3b3d3e2d1ded657524c5b96bed53744cf693f46654c",
                        "image": "hyperledger/fabric-couchdb:0.4.18",
                        "imageID": "docker-pullable://hyperledger/fabric-couchdb@sha256:048b7c44c1deaabd0f3d84fbf2f7b649d7b10c54a3241c7354f078ee2eff077c",
                        "lastState": {},
                        "name": "couchdb",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:02Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://959f928821db60d84bb5ccd56baacff79109f1a07a91d6eecf5b55ac1ec79e2c",
                        "image": "hyperledger/fabric-peer:2.0.0",
                        "imageID": "docker-pullable://hyperledger/fabric-peer@sha256:2d8c001a0843ccbd63ad2be9d30427cd5bfd35603f3c82d84921f1609371ac02",
                        "lastState": {},
                        "name": "peer0",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:02Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://b480a105807961c38a74041044e407d295443e4ae7c552a30be89d58101cad24",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "certificates-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://b480a105807961c38a74041044e407d295443e4ae7c552a30be89d58101cad24",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:19:00Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:18:57Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.29",
                "podIPs": [
                    {
                        "ip": "10.1.0.29"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:16:38Z"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer1 in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer1 in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845151.7797077-23689-113533413864476 `" && echo ansible-tmp-1604845151.7797077-23689-113533413864476="` echo /root/.ansible/tmp/ansible-tmp-1604845151.7797077-23689-113533413864476 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmph0f1xt1_ TO /root/.ansible/tmp/ansible-tmp-1604845151.7797077-23689-113533413864476/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845151.7797077-23689-113533413864476/ /root/.ansible/tmp/ansible-tmp-1604845151.7797077-23689-113533413864476/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845151.7797077-23689-113533413864476/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845151.7797077-23689-113533413864476/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod peer1 in carrier-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer1"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845182.404836-23689-17443959508824 `" && echo ansible-tmp-1604845182.404836-23689-17443959508824="` echo /root/.ansible/tmp/ansible-tmp-1604845182.404836-23689-17443959508824 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpntf9ixp1 TO /root/.ansible/tmp/ansible-tmp-1604845182.404836-23689-17443959508824/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845182.404836-23689-17443959508824/ /root/.ansible/tmp/ansible-tmp-1604845182.404836-23689-17443959508824/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845182.404836-23689-17443959508824/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845182.404836-23689-17443959508824/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer1"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "bcab380cbf359f52a122a58841aaf15ba3488e0a4ebe98be2b7b448b763bcdca"
                },
                "creationTimestamp": "2020-11-08T14:16:40Z",
                "generateName": "peer1-",
                "labels": {
                    "app": "peer1",
                    "app.kubernetes.io/instance": "carrier-peer1",
                    "app.kubernetes.io/name": "peer1",
                    "controller-revision-hash": "peer1-7cbccb7bd9",
                    "statefulset.kubernetes.io/pod-name": "peer1-0"
                },
                "name": "peer1-0",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "peer1",
                        "uid": "11162a6c-f211-402c-a2d9-e4d4a20851fa"
                    }
                ],
                "resourceVersion": "2921406",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/peer1-0",
                "uid": "41619c6c-564d-45d7-8e97-92d10db8c1ac"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "chown -R couchdb:couchdb /opt/couchdb\nchmod -R 0770 /opt/couchdb/data\nchmod 664 /opt/couchdb/etc/*.ini\nchmod 664 /opt/couchdb/etc/local.d/*.ini\nchmod 775 /opt/couchdb/etc/*.d\nif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide username for the password \"\n  exit 1\n  break\nelif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  export COUCHDB_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\n  break\nelif [ ! -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide password for username $COUCHDB_USER \"\n  exit 1\n  break\nelse\n  :\nfi\ntini -- /docker-entrypoint.sh /opt/couchdb/bin/couchdb"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "COUCHDB_USER",
                                "value": "carrier-user"
                            }
                        ],
                        "image": "hyperledger/fabric-couchdb:0.4.18",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "couchdb",
                        "ports": [
                            {
                                "containerPort": 5984,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/opt/couchdb/data",
                                "name": "datadir-couchdb"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/crypto",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "cp /etc/hyperledger/fabric/NodeOUconfig/mspconfig  /etc/hyperledger/fabric/crypto/msp/config.yaml\nexport CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\npeer node start"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "peer1-config"
                                }
                            }
                        ],
                        "image": "hyperledger/fabric-peer:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "peer1",
                        "ports": [
                            {
                                "containerPort": 7051,
                                "name": "grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 7053,
                                "name": "events",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/hyperledger/production",
                                "name": "datadir"
                            },
                            {
                                "mountPath": "/host/var/run/docker.sock",
                                "name": "dockersocket"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/crypto",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/NodeOUconfig",
                                "name": "peer1-msp-config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "peer1-0",
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')        \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt\n\n# COUCH_DB CREDENTIALS\necho \"Getting couch db credentials\"\nSECRET_COUCHDB_PASS=secret/credentials/carrier-net/couchdb/carrier?user\nif [ ! -z $SECRET_COUCHDB_PASS ]\nthen\n  vault_secret_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $1}')\n  vault_data_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $2}')\n  LOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n  validateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n  PASSWORD=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\n  echo \"${PASSWORD}\" >> ${MOUNT_PATH}/user_cred \nfi            "
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "VAULT_SECRET_PREFIX",
                                "value": "secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "certificates-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "subdomain": "peer1",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "datadir",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-peer1-0"
                        }
                    },
                    {
                        "name": "datadir-couchdb",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-couchdb-peer1-0"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "dockersocket"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "mspconfig",
                                    "path": "mspconfig"
                                }
                            ],
                            "name": "peer1-msp-config"
                        },
                        "name": "peer1-msp-config-volume"
                    },
                    {
                        "name": "vault-auth-token-745wn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-745wn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:19Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:19Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:16:59Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c9d9b021a77c87e4e913ee7f9fc5ae4efdc95b00182aa5ba87b9da6e34d036e3",
                        "image": "hyperledger/fabric-couchdb:0.4.18",
                        "imageID": "docker-pullable://hyperledger/fabric-couchdb@sha256:048b7c44c1deaabd0f3d84fbf2f7b649d7b10c54a3241c7354f078ee2eff077c",
                        "lastState": {},
                        "name": "couchdb",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:19Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://4eb2770626fb85ce16cf09bab9a609c9fc6a174542380392b2962479d05d0f87",
                        "image": "hyperledger/fabric-peer:2.0.0",
                        "imageID": "docker-pullable://hyperledger/fabric-peer@sha256:2d8c001a0843ccbd63ad2be9d30427cd5bfd35603f3c82d84921f1609371ac02",
                        "lastState": {},
                        "name": "peer1",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://2c7af0fa6f7e9403cd7fc373f160af19d629a48d8cd66032450b01de3599db9d",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "certificates-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://2c7af0fa6f7e9403cd7fc373f160af19d629a48d8cd66032450b01de3599db9d",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:19:18Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:19:17Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.78",
                "podIPs": [
                    {
                        "ip": "10.1.0.78"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:16:59Z"
            }
        }
    ]
}

TASK [include_role : create/channels] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:191

TASK [create/channels : Call valuefile when participant is creator] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/main.yaml:7
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml for localhost => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443'}, {'peer': None, 'name': 'peer1', 'gossipAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443'}], 'ordererAddress': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443'})

TASK [create/channels : Check orderer pod is up] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml:6
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "ordererorg",
    "changed": false,
    "ordererorg": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml for localhost => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})

TASK [Waiting for orderer pod {{ orderer.name }} in {{ orderer_namespace }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml:1
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod orderer1 in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod orderer1 in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845183.6480765-23755-100419821365377 `" && echo ansible-tmp-1604845183.6480765-23755-100419821365377="` echo /root/.ansible/tmp/ansible-tmp-1604845183.6480765-23755-100419821365377 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp5d9217qu TO /root/.ansible/tmp/ansible-tmp-1604845183.6480765-23755-100419821365377/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845183.6480765-23755-100419821365377/ /root/.ansible/tmp/ansible-tmp-1604845183.6480765-23755-100419821365377/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845183.6480765-23755-100419821365377/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845183.6480765-23755-100419821365377/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = orderer1"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "1e0f0e254f656c0be76620ac3d3aec2a6919d0bcba1110dd4e7d39f0516cc97b"
                },
                "creationTimestamp": "2020-11-08T14:16:36Z",
                "generateName": "orderer1-",
                "labels": {
                    "app": "orderer1",
                    "app.kubernetes.io/instance": "walmart-orderer1",
                    "app.kubernetes.io/name": "orderer1",
                    "controller-revision-hash": "orderer1-564b57bb55",
                    "statefulset.kubernetes.io/pod-name": "orderer1-0"
                },
                "name": "orderer1-0",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "orderer1",
                        "uid": "bf24ca59-336c-4d35-b745-1837d4ccfba0"
                    }
                ],
                "resourceVersion": "2921336",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/orderer1-0",
                "uid": "23204428-2f26-48b7-b50c-98217ad0f6cc"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cat /var/hyperledger/orderer/genesis/genesis.block.base64 | base64 -d > /var/hyperledger/orderer/orderer.genesis.block && orderer"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "orderer1-config"
                                }
                            }
                        ],
                        "image": "hyperledger/fabric-orderer:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "orderer1",
                        "ports": [
                            {
                                "containerPort": 7050,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/hyperledger/production/orderer",
                                "name": "datadir"
                            },
                            {
                                "mountPath": "/var/hyperledger/orderer/genesis",
                                "name": "orderer1-genesis-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/orderer/crypto",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "orderer1-0",
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nif [ raft == kafka ]\nthen\nCOUNTER=1\nFLAG=true\nKAFKACOUNT=0\nCOUNT=0\n\nwhile [ \"$COUNTER\" -le  ]\ndo\n   \n   if [ \"$FLAG\" == false ]\n   then\n      echo \"$KAFKACOUNT kafka brokers out of $COUNT are up and running!\"\n      echo \"Retry attempted $COUNTER times, retrying after  seconds\"\n      COUNTER=`expr \"$COUNTER\" + 1`\n      sleep \n\n   else\n      echo \"SUCCESS!\"\n      echo \"All $KAFKACOUNT kafka broker are up and running!\"\n      exit 0\n      break\n   fi\ndone\nif [ \"$COUNTER\" -gt  ] || [ \"$FLAG\" == false ]\nthen\n   echo \"Retry attempted $COUNTER times, no kafka brokers are up and running. Giving up!\"\n   exit 1\n   break\n\nfi\nfi"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "kafka-healthcheck",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\n\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "VAULT_SECRET_PREFIX",
                                "value": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "certificates-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "subdomain": "orderer1",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "datadir",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-orderer1-0"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "genesis.block.base64",
                                    "path": "genesis.block.base64"
                                }
                            ],
                            "name": "genesis-block-orderer1"
                        },
                        "name": "orderer1-genesis-volume"
                    },
                    {
                        "name": "vault-auth-token-njscr",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-njscr"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:05Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:06Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:06Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:16:46Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://f16fa4f3247f9fe6d3e17899093fcb73f3a204a70b6a87fc0e2db4d829ce8079",
                        "image": "hyperledger/fabric-orderer:2.0.0",
                        "imageID": "docker-pullable://hyperledger/fabric-orderer@sha256:e85d1e89248d9ae1f3953ac6eb11b4d5795903757ecd7702ac1f5384c71371e3",
                        "lastState": {},
                        "name": "orderer1",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:05Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://173744b2b7775211d2157e997e13a0c840262567245162391fabcef4b935ac8a",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:a9286defaba7b3a519d585ba0e37d0b2cbee74ebfe590960b0b1d6a5e97d1e1d",
                        "lastState": {},
                        "name": "kafka-healthcheck",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://173744b2b7775211d2157e997e13a0c840262567245162391fabcef4b935ac8a",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:19:02Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:19:02Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://3ea8fb1b90d7665c9cf44977426b373e32424eb666cea4a5e98f7ccce22c083c",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "certificates-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://3ea8fb1b90d7665c9cf44977426b373e32424eb666cea4a5e98f7ccce22c083c",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:19:04Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:19:04Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.63",
                "podIPs": [
                    {
                        "ip": "10.1.0.63"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:16:46Z"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod orderer2 in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod orderer2 in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845184.4159882-23787-202874761022988 `" && echo ansible-tmp-1604845184.4159882-23787-202874761022988="` echo /root/.ansible/tmp/ansible-tmp-1604845184.4159882-23787-202874761022988 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp374oymv4 TO /root/.ansible/tmp/ansible-tmp-1604845184.4159882-23787-202874761022988/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845184.4159882-23787-202874761022988/ /root/.ansible/tmp/ansible-tmp-1604845184.4159882-23787-202874761022988/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845184.4159882-23787-202874761022988/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845184.4159882-23787-202874761022988/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = orderer2"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "a7c691f35f011a13ff5b9407d0a4e10a3643ff3835e66d03460fd9b1b4cb552f"
                },
                "creationTimestamp": "2020-11-08T14:16:38Z",
                "generateName": "orderer2-",
                "labels": {
                    "app": "orderer2",
                    "app.kubernetes.io/instance": "walmart-orderer2",
                    "app.kubernetes.io/name": "orderer2",
                    "controller-revision-hash": "orderer2-64f5cd97c9",
                    "statefulset.kubernetes.io/pod-name": "orderer2-0"
                },
                "name": "orderer2-0",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "orderer2",
                        "uid": "ab7ff03b-b694-416f-8db6-099bac82b43d"
                    }
                ],
                "resourceVersion": "2921401",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/orderer2-0",
                "uid": "0cd9d16b-410b-4fa9-bdeb-c19607804135"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cat /var/hyperledger/orderer/genesis/genesis.block.base64 | base64 -d > /var/hyperledger/orderer/orderer.genesis.block && orderer"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "orderer2-config"
                                }
                            }
                        ],
                        "image": "hyperledger/fabric-orderer:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "orderer2",
                        "ports": [
                            {
                                "containerPort": 7050,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/hyperledger/production/orderer",
                                "name": "datadir"
                            },
                            {
                                "mountPath": "/var/hyperledger/orderer/genesis",
                                "name": "orderer2-genesis-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/orderer/crypto",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "orderer2-0",
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nif [ raft == kafka ]\nthen\nCOUNTER=1\nFLAG=true\nKAFKACOUNT=0\nCOUNT=0\n\nwhile [ \"$COUNTER\" -le  ]\ndo\n   \n   if [ \"$FLAG\" == false ]\n   then\n      echo \"$KAFKACOUNT kafka brokers out of $COUNT are up and running!\"\n      echo \"Retry attempted $COUNTER times, retrying after  seconds\"\n      COUNTER=`expr \"$COUNTER\" + 1`\n      sleep \n\n   else\n      echo \"SUCCESS!\"\n      echo \"All $KAFKACOUNT kafka broker are up and running!\"\n      exit 0\n      break\n   fi\ndone\nif [ \"$COUNTER\" -gt  ] || [ \"$FLAG\" == false ]\nthen\n   echo \"Retry attempted $COUNTER times, no kafka brokers are up and running. Giving up!\"\n   exit 1\n   break\n\nfi\nfi"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "kafka-healthcheck",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\n\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "VAULT_SECRET_PREFIX",
                                "value": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "certificates-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "subdomain": "orderer2",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "datadir",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-orderer2-0"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "genesis.block.base64",
                                    "path": "genesis.block.base64"
                                }
                            ],
                            "name": "genesis-block-orderer2"
                        },
                        "name": "orderer2-genesis-volume"
                    },
                    {
                        "name": "vault-auth-token-njscr",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-njscr"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:19Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:19Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:16:57Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://7641c0c99a8942df8f136a373ba7902067a3e3f16d76cde07a509da84cdb6437",
                        "image": "hyperledger/fabric-orderer:2.0.0",
                        "imageID": "docker-pullable://hyperledger/fabric-orderer@sha256:e85d1e89248d9ae1f3953ac6eb11b4d5795903757ecd7702ac1f5384c71371e3",
                        "lastState": {},
                        "name": "orderer2",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:18Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://4553ebcb3309396ee29a921d01f4910751033275cb0a2e44aa1583152ecf0f4a",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:a9286defaba7b3a519d585ba0e37d0b2cbee74ebfe590960b0b1d6a5e97d1e1d",
                        "lastState": {},
                        "name": "kafka-healthcheck",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://4553ebcb3309396ee29a921d01f4910751033275cb0a2e44aa1583152ecf0f4a",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:19:16Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:19:16Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://404381d3816298b3b3a0f8d01b5939ebc807eeb025c38212290cbce84aa5d5a2",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "certificates-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://404381d3816298b3b3a0f8d01b5939ebc807eeb025c38212290cbce84aa5d5a2",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:19:17Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:19:17Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.49",
                "podIPs": [
                    {
                        "ip": "10.1.0.49"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:16:57Z"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod orderer3 in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod orderer3 in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845185.1464043-23819-133210854137239 `" && echo ansible-tmp-1604845185.1464043-23819-133210854137239="` echo /root/.ansible/tmp/ansible-tmp-1604845185.1464043-23819-133210854137239 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpm3rpr3_x TO /root/.ansible/tmp/ansible-tmp-1604845185.1464043-23819-133210854137239/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845185.1464043-23819-133210854137239/ /root/.ansible/tmp/ansible-tmp-1604845185.1464043-23819-133210854137239/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845185.1464043-23819-133210854137239/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845185.1464043-23819-133210854137239/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = orderer3"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "10ccdd80503b4f68e09c444e7a9bf6e4b38b9fbdbe0bec4cf199e97c8f5aeb9c"
                },
                "creationTimestamp": "2020-11-08T14:16:42Z",
                "generateName": "orderer3-",
                "labels": {
                    "app": "orderer3",
                    "app.kubernetes.io/instance": "walmart-orderer3",
                    "app.kubernetes.io/name": "orderer3",
                    "controller-revision-hash": "orderer3-867ccf7f54",
                    "statefulset.kubernetes.io/pod-name": "orderer3-0"
                },
                "name": "orderer3-0",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "orderer3",
                        "uid": "71ff7af0-2a92-4e86-b011-982d9fabd115"
                    }
                ],
                "resourceVersion": "2921124",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/orderer3-0",
                "uid": "344e8918-af15-4486-a10f-dcfb349f86eb"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "cat /var/hyperledger/orderer/genesis/genesis.block.base64 | base64 -d > /var/hyperledger/orderer/orderer.genesis.block && orderer"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "orderer3-config"
                                }
                            }
                        ],
                        "image": "hyperledger/fabric-orderer:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "orderer3",
                        "ports": [
                            {
                                "containerPort": 7050,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/hyperledger/production/orderer",
                                "name": "datadir"
                            },
                            {
                                "mountPath": "/var/hyperledger/orderer/genesis",
                                "name": "orderer3-genesis-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/orderer/crypto",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "orderer3-0",
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nif [ raft == kafka ]\nthen\nCOUNTER=1\nFLAG=true\nKAFKACOUNT=0\nCOUNT=0\n\nwhile [ \"$COUNTER\" -le  ]\ndo\n   \n   if [ \"$FLAG\" == false ]\n   then\n      echo \"$KAFKACOUNT kafka brokers out of $COUNT are up and running!\"\n      echo \"Retry attempted $COUNTER times, retrying after  seconds\"\n      COUNTER=`expr \"$COUNTER\" + 1`\n      sleep \n\n   else\n      echo \"SUCCESS!\"\n      echo \"All $KAFKACOUNT kafka broker are up and running!\"\n      exit 0\n      break\n   fi\ndone\nif [ \"$COUNTER\" -gt  ] || [ \"$FLAG\" == false ]\nthen\n   echo \"Retry attempted $COUNTER times, no kafka brokers are up and running. Giving up!\"\n   exit 1\n   break\n\nfi\nfi"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "busybox",
                        "imagePullPolicy": "Always",
                        "name": "kafka-healthcheck",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\n\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "VAULT_SECRET_PREFIX",
                                "value": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "certificates-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-njscr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "subdomain": "orderer3",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "datadir",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-orderer3-0"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "genesis.block.base64",
                                    "path": "genesis.block.base64"
                                }
                            ],
                            "name": "genesis-block-orderer3"
                        },
                        "name": "orderer3-genesis-volume"
                    },
                    {
                        "name": "vault-auth-token-njscr",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-njscr"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:18:04Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:18:05Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:18:05Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:16:53Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://70af4fd9bb715c4ddd71d39e1bcbd23c65fcd6908a73195576f0765a68d67b89",
                        "image": "hyperledger/fabric-orderer:2.0.0",
                        "imageID": "docker-pullable://hyperledger/fabric-orderer@sha256:e85d1e89248d9ae1f3953ac6eb11b4d5795903757ecd7702ac1f5384c71371e3",
                        "lastState": {},
                        "name": "orderer3",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:18:04Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://7caeddbc46950ba8b660da4a9def97bd354609c8ce8191f59e66c0307806a715",
                        "image": "busybox:latest",
                        "imageID": "docker-pullable://busybox@sha256:a9286defaba7b3a519d585ba0e37d0b2cbee74ebfe590960b0b1d6a5e97d1e1d",
                        "lastState": {},
                        "name": "kafka-healthcheck",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://7caeddbc46950ba8b660da4a9def97bd354609c8ce8191f59e66c0307806a715",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:18:01Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:18:01Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://bb1c0933e809faf147d0241012861961808ba125fa973fecc53a0e3d9c15ffd5",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "certificates-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://bb1c0933e809faf147d0241012861961808ba125fa973fecc53a0e3d9c15ffd5",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:18:03Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:18:03Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.80",
                "podIPs": [
                    {
                        "ip": "10.1.0.80"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:16:53Z"
            }
        }
    ]
}

TASK [create/channels : Check peer pod is up] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml:18
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml for localhost => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})

TASK [Waiting for peer pod {{ peer_name }} in {{ org.name | lower }}-net] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml:1
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845186.2003198-23855-143757443668912 `" && echo ansible-tmp-1604845186.2003198-23855-143757443668912="` echo /root/.ansible/tmp/ansible-tmp-1604845186.2003198-23855-143757443668912 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpxhce2ivv TO /root/.ansible/tmp/ansible-tmp-1604845186.2003198-23855-143757443668912/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845186.2003198-23855-143757443668912/ /root/.ansible/tmp/ansible-tmp-1604845186.2003198-23855-143757443668912/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845186.2003198-23855-143757443668912/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845186.2003198-23855-143757443668912/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer0"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "268febca876adda04bf19d879ad57f3095d555aea666350d45cd0feca63051c3"
                },
                "creationTimestamp": "2020-11-08T14:16:36Z",
                "generateName": "peer0-",
                "labels": {
                    "app": "peer0",
                    "app.kubernetes.io/instance": "carrier-peer0",
                    "app.kubernetes.io/name": "peer0",
                    "controller-revision-hash": "peer0-7997766749",
                    "statefulset.kubernetes.io/pod-name": "peer0-0"
                },
                "name": "peer0-0",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "peer0",
                        "uid": "fd8fc5c4-9b6d-49dd-8a34-cbb6a355bc9c"
                    }
                ],
                "resourceVersion": "2921303",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/peer0-0",
                "uid": "faf086d2-3ade-45aa-a8f8-807e8e0d65df"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "chown -R couchdb:couchdb /opt/couchdb\nchmod -R 0770 /opt/couchdb/data\nchmod 664 /opt/couchdb/etc/*.ini\nchmod 664 /opt/couchdb/etc/local.d/*.ini\nchmod 775 /opt/couchdb/etc/*.d\nif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide username for the password \"\n  exit 1\n  break\nelif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  export COUCHDB_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\n  break\nelif [ ! -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide password for username $COUCHDB_USER \"\n  exit 1\n  break\nelse\n  :\nfi\ntini -- /docker-entrypoint.sh /opt/couchdb/bin/couchdb"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "COUCHDB_USER",
                                "value": "carrier-user"
                            }
                        ],
                        "image": "hyperledger/fabric-couchdb:0.4.18",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "couchdb",
                        "ports": [
                            {
                                "containerPort": 5984,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/opt/couchdb/data",
                                "name": "datadir-couchdb"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/crypto",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "cp /etc/hyperledger/fabric/NodeOUconfig/mspconfig  /etc/hyperledger/fabric/crypto/msp/config.yaml\nexport CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\npeer node start"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "peer0-config"
                                }
                            }
                        ],
                        "image": "hyperledger/fabric-peer:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "peer0",
                        "ports": [
                            {
                                "containerPort": 7051,
                                "name": "grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 7053,
                                "name": "events",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/hyperledger/production",
                                "name": "datadir"
                            },
                            {
                                "mountPath": "/host/var/run/docker.sock",
                                "name": "dockersocket"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/crypto",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/NodeOUconfig",
                                "name": "peer0-msp-config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "peer0-0",
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')        \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt\n\n# COUCH_DB CREDENTIALS\necho \"Getting couch db credentials\"\nSECRET_COUCHDB_PASS=secret/credentials/carrier-net/couchdb/carrier?user\nif [ ! -z $SECRET_COUCHDB_PASS ]\nthen\n  vault_secret_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $1}')\n  vault_data_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $2}')\n  LOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n  validateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n  PASSWORD=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\n  echo \"${PASSWORD}\" >> ${MOUNT_PATH}/user_cred \nfi            "
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "VAULT_SECRET_PREFIX",
                                "value": "secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "certificates-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "subdomain": "peer0",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "datadir",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-peer0-0"
                        }
                    },
                    {
                        "name": "datadir-couchdb",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-couchdb-peer0-0"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "dockersocket"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "mspconfig",
                                    "path": "mspconfig"
                                }
                            ],
                            "name": "peer0-msp-config"
                        },
                        "name": "peer0-msp-config-volume"
                    },
                    {
                        "name": "vault-auth-token-745wn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-745wn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:01Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:02Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:02Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:16:38Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://09395ea9fd7cb7f5657ee3b3d3e2d1ded657524c5b96bed53744cf693f46654c",
                        "image": "hyperledger/fabric-couchdb:0.4.18",
                        "imageID": "docker-pullable://hyperledger/fabric-couchdb@sha256:048b7c44c1deaabd0f3d84fbf2f7b649d7b10c54a3241c7354f078ee2eff077c",
                        "lastState": {},
                        "name": "couchdb",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:02Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://959f928821db60d84bb5ccd56baacff79109f1a07a91d6eecf5b55ac1ec79e2c",
                        "image": "hyperledger/fabric-peer:2.0.0",
                        "imageID": "docker-pullable://hyperledger/fabric-peer@sha256:2d8c001a0843ccbd63ad2be9d30427cd5bfd35603f3c82d84921f1609371ac02",
                        "lastState": {},
                        "name": "peer0",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:02Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://b480a105807961c38a74041044e407d295443e4ae7c552a30be89d58101cad24",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "certificates-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://b480a105807961c38a74041044e407d295443e4ae7c552a30be89d58101cad24",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:19:00Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:18:57Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.29",
                "podIPs": [
                    {
                        "ip": "10.1.0.29"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:16:38Z"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer1 in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer1 in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845186.9405313-23887-224240378542423 `" && echo ansible-tmp-1604845186.9405313-23887-224240378542423="` echo /root/.ansible/tmp/ansible-tmp-1604845186.9405313-23887-224240378542423 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmps22j2pp4 TO /root/.ansible/tmp/ansible-tmp-1604845186.9405313-23887-224240378542423/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845186.9405313-23887-224240378542423/ /root/.ansible/tmp/ansible-tmp-1604845186.9405313-23887-224240378542423/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845186.9405313-23887-224240378542423/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845186.9405313-23887-224240378542423/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = peer1"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "bcab380cbf359f52a122a58841aaf15ba3488e0a4ebe98be2b7b448b763bcdca"
                },
                "creationTimestamp": "2020-11-08T14:16:40Z",
                "generateName": "peer1-",
                "labels": {
                    "app": "peer1",
                    "app.kubernetes.io/instance": "carrier-peer1",
                    "app.kubernetes.io/name": "peer1",
                    "controller-revision-hash": "peer1-7cbccb7bd9",
                    "statefulset.kubernetes.io/pod-name": "peer1-0"
                },
                "name": "peer1-0",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "peer1",
                        "uid": "11162a6c-f211-402c-a2d9-e4d4a20851fa"
                    }
                ],
                "resourceVersion": "2921406",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/peer1-0",
                "uid": "41619c6c-564d-45d7-8e97-92d10db8c1ac"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "chown -R couchdb:couchdb /opt/couchdb\nchmod -R 0770 /opt/couchdb/data\nchmod 664 /opt/couchdb/etc/*.ini\nchmod 664 /opt/couchdb/etc/local.d/*.ini\nchmod 775 /opt/couchdb/etc/*.d\nif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide username for the password \"\n  exit 1\n  break\nelif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  export COUCHDB_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\n  break\nelif [ ! -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide password for username $COUCHDB_USER \"\n  exit 1\n  break\nelse\n  :\nfi\ntini -- /docker-entrypoint.sh /opt/couchdb/bin/couchdb"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "COUCHDB_USER",
                                "value": "carrier-user"
                            }
                        ],
                        "image": "hyperledger/fabric-couchdb:0.4.18",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "couchdb",
                        "ports": [
                            {
                                "containerPort": 5984,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/opt/couchdb/data",
                                "name": "datadir-couchdb"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/crypto",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "cp /etc/hyperledger/fabric/NodeOUconfig/mspconfig  /etc/hyperledger/fabric/crypto/msp/config.yaml\nexport CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\npeer node start"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "peer1-config"
                                }
                            }
                        ],
                        "image": "hyperledger/fabric-peer:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "peer1",
                        "ports": [
                            {
                                "containerPort": 7051,
                                "name": "grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 7053,
                                "name": "events",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/hyperledger/production",
                                "name": "datadir"
                            },
                            {
                                "mountPath": "/host/var/run/docker.sock",
                                "name": "dockersocket"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/crypto",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/etc/hyperledger/fabric/NodeOUconfig",
                                "name": "peer1-msp-config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "peer1-0",
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')        \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt\n\n# COUCH_DB CREDENTIALS\necho \"Getting couch db credentials\"\nSECRET_COUCHDB_PASS=secret/credentials/carrier-net/couchdb/carrier?user\nif [ ! -z $SECRET_COUCHDB_PASS ]\nthen\n  vault_secret_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $1}')\n  vault_data_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $2}')\n  LOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n  validateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\n  PASSWORD=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\n  echo \"${PASSWORD}\" >> ${MOUNT_PATH}/user_cred \nfi            "
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "VAULT_SECRET_PREFIX",
                                "value": "secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "certificates-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "subdomain": "peer1",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "datadir",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-peer1-0"
                        }
                    },
                    {
                        "name": "datadir-couchdb",
                        "persistentVolumeClaim": {
                            "claimName": "datadir-couchdb-peer1-0"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        },
                        "name": "dockersocket"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "mspconfig",
                                    "path": "mspconfig"
                                }
                            ],
                            "name": "peer1-msp-config"
                        },
                        "name": "peer1-msp-config-volume"
                    },
                    {
                        "name": "vault-auth-token-745wn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-745wn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:19Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:19:19Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:16:59Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c9d9b021a77c87e4e913ee7f9fc5ae4efdc95b00182aa5ba87b9da6e34d036e3",
                        "image": "hyperledger/fabric-couchdb:0.4.18",
                        "imageID": "docker-pullable://hyperledger/fabric-couchdb@sha256:048b7c44c1deaabd0f3d84fbf2f7b649d7b10c54a3241c7354f078ee2eff077c",
                        "lastState": {},
                        "name": "couchdb",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:19Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://4eb2770626fb85ce16cf09bab9a609c9fc6a174542380392b2962479d05d0f87",
                        "image": "hyperledger/fabric-peer:2.0.0",
                        "imageID": "docker-pullable://hyperledger/fabric-peer@sha256:2d8c001a0843ccbd63ad2be9d30427cd5bfd35603f3c82d84921f1609371ac02",
                        "lastState": {},
                        "name": "peer1",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T14:19:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://2c7af0fa6f7e9403cd7fc373f160af19d629a48d8cd66032450b01de3599db9d",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "certificates-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://2c7af0fa6f7e9403cd7fc373f160af19d629a48d8cd66032450b01de3599db9d",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:19:18Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:19:17Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.78",
                "podIPs": [
                    {
                        "ip": "10.1.0.78"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:16:59Z"
            }
        }
    ]
}

TASK [Create Create_Channel value file] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml:28
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845187.818103-23917-187584650140149 `" && echo ansible-tmp-1604845187.818103-23917-187584650140149="` echo /root/.ansible/tmp/ansible-tmp-1604845187.818103-23917-187584650140149 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpkvk6ljo5 TO /root/.ansible/tmp/ansible-tmp-1604845187.818103-23917-187584650140149/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845187.818103-23917-187584650140149/ /root/.ansible/tmp/ansible-tmp-1604845187.818103-23917-187584650140149/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845187.818103-23917-187584650140149/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845187.818103-23917-187584650140149/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845188.0301507-23943-28053044455890 `" && echo ansible-tmp-1604845188.0301507-23943-28053044455890="` echo /root/.ansible/tmp/ansible-tmp-1604845188.0301507-23943-28053044455890 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpl0pxmei5 TO /root/.ansible/tmp/ansible-tmp-1604845188.0301507-23943-28053044455890/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845188.0301507-23943-28053044455890/ /root/.ansible/tmp/ansible-tmp-1604845188.0301507-23943-28053044455890/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845188.0301507-23943-28053044455890/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845188.0301507-23943-28053044455890/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for allchannel] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974 `" && echo ansible-tmp-1604845188.2296839-23969-226751451201974="` echo /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974 `" ) && sleep 0'
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpxtj65oj2 TO /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/ /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp930krlxq/create_channel_job.tpl TO /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/ /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpb376pbje TO /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/ /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "91210b8cc412c833c2b2d283c009ec5bc041e577",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "create_channel_job.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "91210b8cc412c833c2b2d283c009ec5bc041e577",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8f98b3904af5241e696da03c6febb8ba",
    "mode": "0644",
    "owner": "root",
    "size": 1828,
    "src": "/root/.ansible/tmp/ansible-tmp-1604845188.2296839-23969-226751451201974/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845188.8046465-24011-217611179358034 `" && echo ansible-tmp-1604845188.8046465-24011-217611179358034="` echo /root/.ansible/tmp/ansible-tmp-1604845188.8046465-24011-217611179358034 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpsmgtm2yb TO /root/.ansible/tmp/ansible-tmp-1604845188.8046465-24011-217611179358034/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845188.8046465-24011-217611179358034/ /root/.ansible/tmp/ansible-tmp-1604845188.8046465-24011-217611179358034/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845188.8046465-24011-217611179358034/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845188.8046465-24011-217611179358034/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml"
        }
    },
    "stat": {
        "atime": 1604845188.6847765,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "91210b8cc412c833c2b2d283c009ec5bc041e577",
        "ctime": 1604845188.6887767,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4032,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604845188.5527747,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1828,
        "uid": 0,
        "version": "1740818782",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845189.085828-24041-241138604411249 `" && echo ansible-tmp-1604845189.085828-24041-241138604411249="` echo /root/.ansible/tmp/ansible-tmp-1604845189.085828-24041-241138604411249 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpqecy_38p TO /root/.ansible/tmp/ansible-tmp-1604845189.085828-24041-241138604411249/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845189.085828-24041-241138604411249/ /root/.ansible/tmp/ansible-tmp-1604845189.085828-24041-241138604411249/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845189.085828-24041-241138604411249/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845189.085828-24041-241138604411249/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604844803.806927,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604844803.806927,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "channel-carrier",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/create_channel",
                "ref": "gorilla"
            },
            "releaseName": "channel-carrier",
            "values": {
                "channel": {
                    "name": "allchannel"
                },
                "channeltx": "CrEDChgKFggCGgYI8vmf/QUiCmFsbGNoYW5uZWwSlAMKkQMKCmFsbGNoYW5uZWwSMRIfCgtBcHBs\naWNhdGlvbhIQEg4KCmNhcnJpZXJNU1ASABoOCgpDb25zb3J0aXVtEgAazwISowIKC0FwcGxpY2F0\naW9uEpMCCAESDgoKY2Fycmllck1TUBIAGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8yEgAa\nBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyI1ChRMaWZlY3ljbGVF\nbmRvcnNlbWVudBIdEhMIAxIPCgtFbmRvcnNlbWVudBACGgZBZG1pbnMiLAoLRW5kb3JzZW1lbnQS\nHRITCAMSDwoLRW5kb3JzZW1lbnQQAhoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVy\ncxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMaJwoK\nQ29uc29ydGl1bRIZEhcKFVN1cHBseUNoYWluQ29uc29ydGl1bQ==",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "fabrictools": "hyperledger/fabric-tools:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "orderer": {
                    "address": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
                },
                "peer": {
                    "address": "peer0.carrier-net:7051",
                    "localmspid": "carrierMSP",
                    "loglevel": "debug",
                    "name": "peer0",
                    "tlsstatus": true
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "adminsecretprefix": "secret/crypto/peerOrganizations/carrier-net/users/admin",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "orderersecretprefix": "secret/crypto/peerOrganizations/carrier-net/orderer",
                    "role": "vault-role",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116 `" && echo ansible-tmp-1604845189.4847975-24079-117537773615116="` echo /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpc35z0eoc TO /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/ /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp8h5pkknl TO /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/ /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwq6dhq1t TO /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/ /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f15b85750ded55264cddf36011812cf914e4c41a",
    "dest": "./build/test/channel-carrier.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp8h5pkknl",
            "attributes": null,
            "backup": false,
            "checksum": "f15b85750ded55264cddf36011812cf914e4c41a",
            "content": null,
            "dest": "./build/test/channel-carrier.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d613b75b138abb1878118f828637988e",
    "mode": "0644",
    "owner": "root",
    "size": 1375,
    "src": "/root/.ansible/tmp/ansible-tmp-1604845189.4847975-24079-117537773615116/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845189.8310375-24119-170048860831423 `" && echo ansible-tmp-1604845189.8310375-24119-170048860831423="` echo /root/.ansible/tmp/ansible-tmp-1604845189.8310375-24119-170048860831423 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdulnqjyg TO /root/.ansible/tmp/ansible-tmp-1604845189.8310375-24119-170048860831423/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845189.8310375-24119-170048860831423/ /root/.ansible/tmp/ansible-tmp-1604845189.8310375-24119-170048860831423/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845189.8310375-24119-170048860831423/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845189.8310375-24119-170048860831423/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/channel-carrier.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/create_channel\"\n",
    "delta": "0:00:00.082533",
    "end": "2020-11-08 14:19:50.045825",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/channel-carrier.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/create_channel\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:19:49.963292",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/create_channel\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/create_channel",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml:51
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845190.283965-24153-142821537539124 `" && echo ansible-tmp-1604845190.283965-24153-142821537539124="` echo /root/.ansible/tmp/ansible-tmp-1604845190.283965-24153-142821537539124 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpq2jw8sat TO /root/.ansible/tmp/ansible-tmp-1604845190.283965-24153-142821537539124/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845190.283965-24153-142821537539124/ /root/.ansible/tmp/ansible-tmp-1604845190.283965-24153-142821537539124/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845190.283965-24153-142821537539124/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845190.283965-24153-142821537539124/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845190.4991612-24179-217308112983133 `" && echo ansible-tmp-1604845190.4991612-24179-217308112983133="` echo /root/.ansible/tmp/ansible-tmp-1604845190.4991612-24179-217308112983133 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpkucztc7a TO /root/.ansible/tmp/ansible-tmp-1604845190.4991612-24179-217308112983133/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845190.4991612-24179-217308112983133/ /root/.ansible/tmp/ansible-tmp-1604845190.4991612-24179-217308112983133/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845190.4991612-24179-217308112983133/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845190.4991612-24179-217308112983133/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing channel-create files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.265770",
    "end": "2020-11-08 14:19:53.899779",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing channel-create files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:19:50.634009",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   2f461cac..4e467b5c  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   2f461cac..4e467b5c  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 4e467b5c] [ci skip] Pushing channel-create files\n 2 files changed, 4238 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 4e467b5c] [ci skip] Pushing channel-create files",
        " 2 files changed, 4238 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 4e467b5c] [ci skip] Pushing channel-create files",
        " 2 files changed, 4238 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   2f461cac..4e467b5c  HEAD -> gorilla"
    ]
}

TASK [include_role : create/channels_join] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:201

TASK [create/channels_join : Call nested_channel_join for each peer] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml:4
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml for localhost => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443'}, {'peer': None, 'name': 'peer1', 'gossipAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443'}], 'ordererAddress': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443'})

TASK [waiting for carrier to create channel allchannel] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:5
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job createchannel-allchannel in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845194.4869928-24233-217476937018253 `" && echo ansible-tmp-1604845194.4869928-24233-217476937018253="` echo /root/.ansible/tmp/ansible-tmp-1604845194.4869928-24233-217476937018253 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp1hawq62e TO /root/.ansible/tmp/ansible-tmp-1604845194.4869928-24233-217476937018253/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845194.4869928-24233-217476937018253/ /root/.ansible/tmp/ansible-tmp-1604845194.4869928-24233-217476937018253/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845194.4869928-24233-217476937018253/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845194.4869928-24233-217476937018253/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Job createchannel-allchannel in carrier-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Succeeded"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = createchannel-allchannel"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845225.1549833-24233-266955306958634 `" && echo ansible-tmp-1604845225.1549833-24233-266955306958634="` echo /root/.ansible/tmp/ansible-tmp-1604845225.1549833-24233-266955306958634 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_dyyn3hh TO /root/.ansible/tmp/ansible-tmp-1604845225.1549833-24233-266955306958634/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845225.1549833-24233-266955306958634/ /root/.ansible/tmp/ansible-tmp-1604845225.1549833-24233-266955306958634/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845225.1549833-24233-266955306958634/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845225.1549833-24233-266955306958634/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Job createchannel-allchannel in carrier-net (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Succeeded"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = createchannel-allchannel"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845255.7888849-24233-153067672725993 `" && echo ansible-tmp-1604845255.7888849-24233-153067672725993="` echo /root/.ansible/tmp/ansible-tmp-1604845255.7888849-24233-153067672725993 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpwdhf2lkp TO /root/.ansible/tmp/ansible-tmp-1604845255.7888849-24233-153067672725993/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845255.7888849-24233-153067672725993/ /root/.ansible/tmp/ansible-tmp-1604845255.7888849-24233-153067672725993/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845255.7888849-24233-153067672725993/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845255.7888849-24233-153067672725993/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Job createchannel-allchannel in carrier-net (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Succeeded"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = createchannel-allchannel"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845286.4443676-24233-128459674460986 `" && echo ansible-tmp-1604845286.4443676-24233-128459674460986="` echo /root/.ansible/tmp/ansible-tmp-1604845286.4443676-24233-128459674460986 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpl9ya1a6l TO /root/.ansible/tmp/ansible-tmp-1604845286.4443676-24233-128459674460986/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845286.4443676-24233-128459674460986/ /root/.ansible/tmp/ansible-tmp-1604845286.4443676-24233-128459674460986/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845286.4443676-24233-128459674460986/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845286.4443676-24233-128459674460986/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Job createchannel-allchannel in carrier-net (17 retries left).Result was: {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Succeeded"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = createchannel-allchannel"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845317.094228-24233-192119824976854 `" && echo ansible-tmp-1604845317.094228-24233-192119824976854="` echo /root/.ansible/tmp/ansible-tmp-1604845317.094228-24233-192119824976854 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpodu96uxv TO /root/.ansible/tmp/ansible-tmp-1604845317.094228-24233-192119824976854/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845317.094228-24233-192119824976854/ /root/.ansible/tmp/ansible-tmp-1604845317.094228-24233-192119824976854/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845317.094228-24233-192119824976854/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845317.094228-24233-192119824976854/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Job createchannel-allchannel in carrier-net (16 retries left).Result was: {
    "attempts": 5,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Succeeded"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = createchannel-allchannel"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845347.7666883-24233-158285452182600 `" && echo ansible-tmp-1604845347.7666883-24233-158285452182600="` echo /root/.ansible/tmp/ansible-tmp-1604845347.7666883-24233-158285452182600 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpq6phdq15 TO /root/.ansible/tmp/ansible-tmp-1604845347.7666883-24233-158285452182600/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845347.7666883-24233-158285452182600/ /root/.ansible/tmp/ansible-tmp-1604845347.7666883-24233-158285452182600/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845347.7666883-24233-158285452182600/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845347.7666883-24233-158285452182600/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Job createchannel-allchannel in carrier-net (15 retries left).Result was: {
    "attempts": 6,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Succeeded"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = createchannel-allchannel"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845378.4143584-24233-38393937721017 `" && echo ansible-tmp-1604845378.4143584-24233-38393937721017="` echo /root/.ansible/tmp/ansible-tmp-1604845378.4143584-24233-38393937721017 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0ah5lxjb TO /root/.ansible/tmp/ansible-tmp-1604845378.4143584-24233-38393937721017/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845378.4143584-24233-38393937721017/ /root/.ansible/tmp/ansible-tmp-1604845378.4143584-24233-38393937721017/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845378.4143584-24233-38393937721017/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845378.4143584-24233-38393937721017/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 7,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Succeeded"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = createchannel-allchannel"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T14:22:38Z",
                "generateName": "createchannel-allchannel-",
                "labels": {
                    "app": "createchannel-allchannel",
                    "app.kubernetes.io/instance": "channel-carrier",
                    "app.kubernetes.io/name": "createchannel-allchannel",
                    "controller-uid": "9c30a344-4a8d-4f57-964b-15c4eaa189d5",
                    "job-name": "createchannel-allchannel"
                },
                "name": "createchannel-allchannel-tkkh5",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "batch/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Job",
                        "name": "createchannel-allchannel",
                        "uid": "9c30a344-4a8d-4f57-964b-15c4eaa189d5"
                    }
                ],
                "resourceVersion": "2921989",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/createchannel-allchannel-tkkh5",
                "uid": "ce389432-24b5-4509-a302-ac5a256182be"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\ncat ./channel-artifacts/channel.tx.base64 | base64 -d > channel.tx\necho \"Fetch block to see if channel has already been created...\"\ntls_status=${CORE_PEER_TLS_ENABLED}\nif [ \"$tls_status\" = \"true\" ]\nthen\n  peer channel fetch 0 -c ${CHANNEL_NAME} --tls --cafile ${ORDERER_CA} -o ${ORDERER_URL} /tmp/${CHANNEL_NAME}.block\nelse\n  peer channel fetch 0 -c ${CHANNEL_NAME}  -o ${ORDERER_URL} /tmp/${CHANNEL_NAME}.block\nfi\n\nif [ -f /tmp/${CHANNEL_NAME}.block ]\nthen\n  echo \"Channel ${CHANNEL_NAME} is already created.\"\nelse\n  echo \"Creating Channel ${CHANNEL_NAME}\"\n  if [ \"$tls_status\" = \"true\" ]\n  then\n    peer channel create -o ${ORDERER_URL} -c ${CHANNEL_NAME} -f channel.tx --tls ${CORE_PEER_TLS_ENABLED} --cafile ${ORDERER_CA}\n  else\n    peer channel create -o ${ORDERER_URL} -c ${CHANNEL_NAME} -f channel.tx \n  fi\nfi"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "allchannel-config"
                                }
                            }
                        ],
                        "image": "hyperledger/fabric-tools:2.0.0",
                        "imagePullPolicy": "Always",
                        "name": "createchannel",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/opt/gopath/src/github.com/hyperledger/fabric/crypto",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts",
                                "name": "channel-artifacts-allchannel",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric/peer"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')          \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_ORDERER_SECRET_PREFIX}/tls\"\necho \"Getting Orderer TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/orderer/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"ca.crt\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\n\nvault_secret_key=\"${VAULT_PEER_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/admin/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data[\"signcerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "VAULT_PEER_SECRET_PREFIX",
                                "value": "secret/crypto/peerOrganizations/carrier-net/users/admin"
                            },
                            {
                                "name": "VAULT_ORDERER_SECRET_PREFIX",
                                "value": "secret/crypto/peerOrganizations/carrier-net/orderer"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "certificates-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-745wn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "channel-artifacts-allchannel"
                        },
                        "name": "channel-artifacts-allchannel"
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-745wn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-745wn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:22:44Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:22:47Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:22:47Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T14:22:38Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://35d2635d617a85707ec61784499a33bb541506e9a8bed68dd0b867da1d820607",
                        "image": "hyperledger/fabric-tools:2.0.0",
                        "imageID": "docker-pullable://hyperledger/fabric-tools@sha256:e8446809c5e231c65c2917afedb4fe13d18d7842d0918338333686a409471274",
                        "lastState": {},
                        "name": "createchannel",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "docker://35d2635d617a85707ec61784499a33bb541506e9a8bed68dd0b867da1d820607",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:22:46Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:22:45Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://d40106b6cc1d72dd648afb2d64ea0038925a22514dd43f11a22c38f3bb45d42c",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "certificates-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://d40106b6cc1d72dd648afb2d64ea0038925a22514dd43f11a22c38f3bb45d42c",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T14:22:44Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T14:22:41Z"
                            }
                        }
                    }
                ],
                "phase": "Succeeded",
                "podIP": "10.1.0.41",
                "podIPs": [
                    {
                        "ip": "10.1.0.41"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T14:22:38Z"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job createchannel-allchannel in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [join channel allchannel] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:16
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845379.485396-24423-157825384982584 `" && echo ansible-tmp-1604845379.485396-24423-157825384982584="` echo /root/.ansible/tmp/ansible-tmp-1604845379.485396-24423-157825384982584 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpt18e9w5s TO /root/.ansible/tmp/ansible-tmp-1604845379.485396-24423-157825384982584/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845379.485396-24423-157825384982584/ /root/.ansible/tmp/ansible-tmp-1604845379.485396-24423-157825384982584/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845379.485396-24423-157825384982584/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845379.485396-24423-157825384982584/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845379.811881-24449-114981513768154 `" && echo ansible-tmp-1604845379.811881-24449-114981513768154="` echo /root/.ansible/tmp/ansible-tmp-1604845379.811881-24449-114981513768154 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpyose6gx9 TO /root/.ansible/tmp/ansible-tmp-1604845379.811881-24449-114981513768154/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845379.811881-24449-114981513768154/ /root/.ansible/tmp/ansible-tmp-1604845379.811881-24449-114981513768154/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845379.811881-24449-114981513768154/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845379.811881-24449-114981513768154/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for join-allchannel-carrier-peer0] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532 `" && echo ansible-tmp-1604845380.107073-24475-28902103929532="` echo /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532 `" ) && sleep 0'
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpt12szld3 TO /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/ /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpylqog37f/join_channel_job.tpl TO /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/ /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpez8bvyr1 TO /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/ /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "eefd38adccae64d335a1dc122be1981f5ed93899",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "join_channel_job.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "eefd38adccae64d335a1dc122be1981f5ed93899",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "e0962fa49c31077ce7f03f6fdb1716b8",
    "mode": "0644",
    "owner": "root",
    "size": 1224,
    "src": "/root/.ansible/tmp/ansible-tmp-1604845380.107073-24475-28902103929532/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845380.6020176-24517-195111485305507 `" && echo ansible-tmp-1604845380.6020176-24517-195111485305507="` echo /root/.ansible/tmp/ansible-tmp-1604845380.6020176-24517-195111485305507 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_pu4dsym TO /root/.ansible/tmp/ansible-tmp-1604845380.6020176-24517-195111485305507/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845380.6020176-24517-195111485305507/ /root/.ansible/tmp/ansible-tmp-1604845380.6020176-24517-195111485305507/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845380.6020176-24517-195111485305507/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845380.6020176-24517-195111485305507/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml"
        }
    },
    "stat": {
        "atime": 1604845380.4637158,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "eefd38adccae64d335a1dc122be1981f5ed93899",
        "ctime": 1604845380.467716,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4049,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604845380.3277137,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1224,
        "uid": 0,
        "version": "2572827708",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845380.8661983-24547-196883229617751 `" && echo ansible-tmp-1604845380.8661983-24547-196883229617751="` echo /root/.ansible/tmp/ansible-tmp-1604845380.8661983-24547-196883229617751 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpdo9ccbwa TO /root/.ansible/tmp/ansible-tmp-1604845380.8661983-24547-196883229617751/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845380.8661983-24547-196883229617751/ /root/.ansible/tmp/ansible-tmp-1604845380.8661983-24547-196883229617751/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845380.8661983-24547-196883229617751/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845380.8661983-24547-196883229617751/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604845189.756793,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604845189.756793,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "join-allchannel-carrier-peer0",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/join_channel",
                "ref": "gorilla"
            },
            "releaseName": "join-allchannel-carrier-peer0",
            "values": {
                "channel": {
                    "name": "allchannel"
                },
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "fabrictools": "hyperledger/fabric-tools:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "orderer": {
                    "address": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
                },
                "peer": {
                    "address": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "localmspid": "carrierMSP",
                    "loglevel": "debug",
                    "name": "peer0",
                    "tlsstatus": true
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "adminsecretprefix": "secret/crypto/peerOrganizations/carrier-net/users/admin",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "orderersecretprefix": "secret/crypto/peerOrganizations/carrier-net/orderer",
                    "role": "vault-role",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810 `" && echo ansible-tmp-1604845381.294114-24585-246657119033810="` echo /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_0fbry9e TO /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/ /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfyi0j1l3 TO /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/ /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpyfuu9h2d TO /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/ /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "224c14ebac219e565366e5a9b88ba56394ccc8e6",
    "dest": "./build/test/join-allchannel-carrier-peer0.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpfyi0j1l3",
            "attributes": null,
            "backup": false,
            "checksum": "224c14ebac219e565366e5a9b88ba56394ccc8e6",
            "content": null,
            "dest": "./build/test/join-allchannel-carrier-peer0.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d7765192e529f8a4de8d49b7f7162908",
    "mode": "0644",
    "owner": "root",
    "size": 758,
    "src": "/root/.ansible/tmp/ansible-tmp-1604845381.294114-24585-246657119033810/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845381.6644845-24625-33776373955924 `" && echo ansible-tmp-1604845381.6644845-24625-33776373955924="` echo /root/.ansible/tmp/ansible-tmp-1604845381.6644845-24625-33776373955924 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7err8jq2 TO /root/.ansible/tmp/ansible-tmp-1604845381.6644845-24625-33776373955924/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845381.6644845-24625-33776373955924/ /root/.ansible/tmp/ansible-tmp-1604845381.6644845-24625-33776373955924/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845381.6644845-24625-33776373955924/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845381.6644845-24625-33776373955924/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/join-allchannel-carrier-peer0.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\"\n",
    "delta": "0:00:00.061983",
    "end": "2020-11-08 14:23:01.860661",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/join-allchannel-carrier-peer0.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:23:01.798678",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845381.9635923-24658-3406561853182 `" && echo ansible-tmp-1604845381.9635923-24658-3406561853182="` echo /root/.ansible/tmp/ansible-tmp-1604845381.9635923-24658-3406561853182 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpr2dgkqkp TO /root/.ansible/tmp/ansible-tmp-1604845381.9635923-24658-3406561853182/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845381.9635923-24658-3406561853182/ /root/.ansible/tmp/ansible-tmp-1604845381.9635923-24658-3406561853182/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845381.9635923-24658-3406561853182/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845381.9635923-24658-3406561853182/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845382.1905558-24684-195095381044532 `" && echo ansible-tmp-1604845382.1905558-24684-195095381044532="` echo /root/.ansible/tmp/ansible-tmp-1604845382.1905558-24684-195095381044532 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpva2vha2j TO /root/.ansible/tmp/ansible-tmp-1604845382.1905558-24684-195095381044532/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845382.1905558-24684-195095381044532/ /root/.ansible/tmp/ansible-tmp-1604845382.1905558-24684-195095381044532/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845382.1905558-24684-195095381044532/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845382.1905558-24684-195095381044532/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer1.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for join-allchannel-carrier-peer1] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742 `" && echo ansible-tmp-1604845382.4210432-24710-244728605836742="` echo /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742 `" ) && sleep 0'
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7z69lg4b TO /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/ /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmprf6fn5y2/join_channel_job.tpl TO /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/ /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpym2426tm TO /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/ /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9a8dbd7013765e4113f0bdfcda74aeca6200742a",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "join_channel_job.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9a8dbd7013765e4113f0bdfcda74aeca6200742a",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "3e05ba4e19e49ccf9d6c943644d3a7d6",
    "mode": "0644",
    "owner": "root",
    "size": 1224,
    "src": "/root/.ansible/tmp/ansible-tmp-1604845382.4210432-24710-244728605836742/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845382.8993564-24752-130531790927906 `" && echo ansible-tmp-1604845382.8993564-24752-130531790927906="` echo /root/.ansible/tmp/ansible-tmp-1604845382.8993564-24752-130531790927906 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp_su0gvk6 TO /root/.ansible/tmp/ansible-tmp-1604845382.8993564-24752-130531790927906/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845382.8993564-24752-130531790927906/ /root/.ansible/tmp/ansible-tmp-1604845382.8993564-24752-130531790927906/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845382.8993564-24752-130531790927906/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845382.8993564-24752-130531790927906/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer1.yaml"
        }
    },
    "stat": {
        "atime": 1604845382.759751,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "9a8dbd7013765e4113f0bdfcda74aeca6200742a",
        "ctime": 1604845382.759751,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 4063,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604845382.627749,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer1.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1224,
        "uid": 0,
        "version": "2278349696",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845383.1656907-24782-157243689690818 `" && echo ansible-tmp-1604845383.1656907-24782-157243689690818="` echo /root/.ansible/tmp/ansible-tmp-1604845383.1656907-24782-157243689690818 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpfcnnmylu TO /root/.ansible/tmp/ansible-tmp-1604845383.1656907-24782-157243689690818/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845383.1656907-24782-157243689690818/ /root/.ansible/tmp/ansible-tmp-1604845383.1656907-24782-157243689690818/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845383.1656907-24782-157243689690818/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845383.1656907-24782-157243689690818/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604844184.6215389,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604845381.579733,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3486,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604845381.579733,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "4035182366",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "join-allchannel-carrier-peer1",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/join_channel",
                "ref": "gorilla"
            },
            "releaseName": "join-allchannel-carrier-peer1",
            "values": {
                "channel": {
                    "name": "allchannel"
                },
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "fabrictools": "hyperledger/fabric-tools:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "orderer": {
                    "address": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
                },
                "peer": {
                    "address": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "localmspid": "carrierMSP",
                    "loglevel": "debug",
                    "name": "peer1",
                    "tlsstatus": true
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "adminsecretprefix": "secret/crypto/peerOrganizations/carrier-net/users/admin",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "orderersecretprefix": "secret/crypto/peerOrganizations/carrier-net/orderer",
                    "role": "vault-role",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer1.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896 `" && echo ansible-tmp-1604845383.5955932-24820-182794269482896="` echo /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpetje0xk7 TO /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/ /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp0z4ckpfa TO /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/ /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp7s469t1j TO /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/ /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4d866f5afc421b33c5cd37678974fc54fce5af18",
    "dest": "./build/test/join-allchannel-carrier-peer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp0z4ckpfa",
            "attributes": null,
            "backup": false,
            "checksum": "4d866f5afc421b33c5cd37678974fc54fce5af18",
            "content": null,
            "dest": "./build/test/join-allchannel-carrier-peer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8c753dc38785313de8d3da08d0451b63",
    "mode": "0644",
    "owner": "root",
    "size": 758,
    "src": "/root/.ansible/tmp/ansible-tmp-1604845383.5955932-24820-182794269482896/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845383.965298-24860-232237305265897 `" && echo ansible-tmp-1604845383.965298-24860-232237305265897="` echo /root/.ansible/tmp/ansible-tmp-1604845383.965298-24860-232237305265897 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzwu9sugi TO /root/.ansible/tmp/ansible-tmp-1604845383.965298-24860-232237305265897/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845383.965298-24860-232237305265897/ /root/.ansible/tmp/ansible-tmp-1604845383.965298-24860-232237305265897/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845383.965298-24860-232237305265897/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845383.965298-24860-232237305265897/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/join-allchannel-carrier-peer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\"\n",
    "delta": "0:00:00.060839",
    "end": "2020-11-08 14:23:04.181499",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/join-allchannel-carrier-peer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 14:23:04.120660",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:38

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845384.3199651-24894-50797537277326 `" && echo ansible-tmp-1604845384.3199651-24894-50797537277326="` echo /root/.ansible/tmp/ansible-tmp-1604845384.3199651-24894-50797537277326 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmp9qgqk__b TO /root/.ansible/tmp/ansible-tmp-1604845384.3199651-24894-50797537277326/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845384.3199651-24894-50797537277326/ /root/.ansible/tmp/ansible-tmp-1604845384.3199651-24894-50797537277326/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845384.3199651-24894-50797537277326/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604845384.3199651-24894-50797537277326/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
redirecting filter ansible.builtin.json_query to community.general.json_query
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604845384.6003258-24920-66651045329811 `" && echo ansible-tmp-1604845384.6003258-24920-66651045329811="` echo /root/.ansible/tmp/ansible-tmp-1604845384.6003258-24920-66651045329811 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-108882a9f9rgf/tmpzii01v0b TO /root/.ansible/tmp/ansible-tmp-1604845384.6003258-24920-66651045329811/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604845384.6003258-24920-66651045329811/ /root/.ansible/tmp/ansible-tmp-1604845384.6003258-24920-66651045329811/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604845384.6003258-24920-66651045329811/AnsiballZ_command.py && sleep 0'
