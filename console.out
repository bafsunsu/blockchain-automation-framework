ansible-playbook 2.10.2
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/dist-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
No config file found; using defaults
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Parsed /etc/ansible/hosts inventory source with ini plugin

PLAYBOOK: site.yaml ************************************************************
16 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658560.6444564-25333-13077713558308 `" && echo ansible-tmp-1604658560.6444564-25333-13077713558308="` echo /root/.ansible/tmp/ansible-tmp-1604658560.6444564-25333-13077713558308 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmphp98j73v TO /root/.ansible/tmp/ansible-tmp-1604658560.6444564-25333-13077713558308/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658560.6444564-25333-13077713558308/ /root/.ansible/tmp/ansible-tmp-1604658560.6444564-25333-13077713558308/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658560.6444564-25333-13077713558308/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658560.6444564-25333-13077713558308/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:10

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658561.580944-25385-68910973825836 `" && echo ansible-tmp-1604658561.580944-25385-68910973825836="` echo /root/.ansible/tmp/ansible-tmp-1604658561.580944-25385-68910973825836 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpcv7i893t TO /root/.ansible/tmp/ansible-tmp-1604658561.580944-25385-68910973825836/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658561.580944-25385-68910973825836/ /root/.ansible/tmp/ansible-tmp-1604658561.580944-25385-68910973825836/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658561.580944-25385-68910973825836/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658561.580944-25385-68910973825836/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.av_e4a5x",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658561.9016633-25411-279416728631402 `" && echo ansible-tmp-1604658561.9016633-25411-279416728631402="` echo /root/.ansible/tmp/ansible-tmp-1604658561.9016633-25411-279416728631402 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbgk3sfza TO /root/.ansible/tmp/ansible-tmp-1604658561.9016633-25411-279416728631402/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658561.9016633-25411-279416728631402/ /root/.ansible/tmp/ansible-tmp-1604658561.9016633-25411-279416728631402/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658561.9016633-25411-279416728631402/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658561.9016633-25411-279416728631402/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658562.3920236-25448-237596409278093 `" && echo ansible-tmp-1604658562.3920236-25448-237596409278093="` echo /root/.ansible/tmp/ansible-tmp-1604658562.3920236-25448-237596409278093 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6h9dovqj TO /root/.ansible/tmp/ansible-tmp-1604658562.3920236-25448-237596409278093/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658562.3920236-25448-237596409278093/ /root/.ansible/tmp/ansible-tmp-1604658562.3920236-25448-237596409278093/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658562.3920236-25448-237596409278093/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658562.3920236-25448-237596409278093/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.055304",
    "end": "2020-11-06 10:29:22.723209",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:22.667905",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658562.7690585-25479-245437251807630 `" && echo ansible-tmp-1604658562.7690585-25479-245437251807630="` echo /root/.ansible/tmp/ansible-tmp-1604658562.7690585-25479-245437251807630 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7c0ayc4j TO /root/.ansible/tmp/ansible-tmp-1604658562.7690585-25479-245437251807630/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658562.7690585-25479-245437251807630/ /root/.ansible/tmp/ansible-tmp-1604658562.7690585-25479-245437251807630/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658562.7690585-25479-245437251807630/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658562.7690585-25479-245437251807630/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.psiw6obc",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658562.944358-25505-114242013891250 `" && echo ansible-tmp-1604658562.944358-25505-114242013891250="` echo /root/.ansible/tmp/ansible-tmp-1604658562.944358-25505-114242013891250 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmplny3xnue TO /root/.ansible/tmp/ansible-tmp-1604658562.944358-25505-114242013891250/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658562.944358-25505-114242013891250/ /root/.ansible/tmp/ansible-tmp-1604658562.944358-25505-114242013891250/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658562.944358-25505-114242013891250/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658562.944358-25505-114242013891250/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658563.2912855-25541-131446846880231 `" && echo ansible-tmp-1604658563.2912855-25541-131446846880231="` echo /root/.ansible/tmp/ansible-tmp-1604658563.2912855-25541-131446846880231 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp2f58no7h TO /root/.ansible/tmp/ansible-tmp-1604658563.2912855-25541-131446846880231/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658563.2912855-25541-131446846880231/ /root/.ansible/tmp/ansible-tmp-1604658563.2912855-25541-131446846880231/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658563.2912855-25541-131446846880231/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658563.2912855-25541-131446846880231/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.047917",
    "end": "2020-11-06 10:29:23.468557",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:23.420640",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [include_role : setup/helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:20

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658563.5980752-25574-107005237134879 `" && echo ansible-tmp-1604658563.5980752-25574-107005237134879="` echo /root/.ansible/tmp/ansible-tmp-1604658563.5980752-25574-107005237134879 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwsexy0lp TO /root/.ansible/tmp/ansible-tmp-1604658563.5980752-25574-107005237134879/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658563.5980752-25574-107005237134879/ /root/.ansible/tmp/ansible-tmp-1604658563.5980752-25574-107005237134879/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658563.5980752-25574-107005237134879/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658563.5980752-25574-107005237134879/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.189oe0ir",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658563.7753222-25600-179813281470335 `" && echo ansible-tmp-1604658563.7753222-25600-179813281470335="` echo /root/.ansible/tmp/ansible-tmp-1604658563.7753222-25600-179813281470335 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpnipa4ufs TO /root/.ansible/tmp/ansible-tmp-1604658563.7753222-25600-179813281470335/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658563.7753222-25600-179813281470335/ /root/.ansible/tmp/ansible-tmp-1604658563.7753222-25600-179813281470335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658563.7753222-25600-179813281470335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658563.7753222-25600-179813281470335/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658564.116877-25636-188632232500464 `" && echo ansible-tmp-1604658564.116877-25636-188632232500464="` echo /root/.ansible/tmp/ansible-tmp-1604658564.116877-25636-188632232500464 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpcob38pab TO /root/.ansible/tmp/ansible-tmp-1604658564.116877-25636-188632232500464/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658564.116877-25636-188632232500464/ /root/.ansible/tmp/ansible-tmp-1604658564.116877-25636-188632232500464/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658564.116877-25636-188632232500464/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658564.116877-25636-188632232500464/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.055645",
    "end": "2020-11-06 10:29:24.301079",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:24.245434",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658564.3469052-25667-125500875882443 `" && echo ansible-tmp-1604658564.3469052-25667-125500875882443="` echo /root/.ansible/tmp/ansible-tmp-1604658564.3469052-25667-125500875882443 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp15es5lda TO /root/.ansible/tmp/ansible-tmp-1604658564.3469052-25667-125500875882443/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658564.3469052-25667-125500875882443/ /root/.ansible/tmp/ansible-tmp-1604658564.3469052-25667-125500875882443/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658564.3469052-25667-125500875882443/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658564.3469052-25667-125500875882443/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.2y4aegmw",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658564.522324-25693-19066086426665 `" && echo ansible-tmp-1604658564.522324-25693-19066086426665="` echo /root/.ansible/tmp/ansible-tmp-1604658564.522324-25693-19066086426665 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmppad4yvo9 TO /root/.ansible/tmp/ansible-tmp-1604658564.522324-25693-19066086426665/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658564.522324-25693-19066086426665/ /root/.ansible/tmp/ansible-tmp-1604658564.522324-25693-19066086426665/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658564.522324-25693-19066086426665/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658564.522324-25693-19066086426665/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658564.8579626-25729-10538786788095 `" && echo ansible-tmp-1604658564.8579626-25729-10538786788095="` echo /root/.ansible/tmp/ansible-tmp-1604658564.8579626-25729-10538786788095 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpu2cfs8ez TO /root/.ansible/tmp/ansible-tmp-1604658564.8579626-25729-10538786788095/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658564.8579626-25729-10538786788095/ /root/.ansible/tmp/ansible-tmp-1604658564.8579626-25729-10538786788095/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658564.8579626-25729-10538786788095/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658564.8579626-25729-10538786788095/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.053935",
    "end": "2020-11-06 10:29:25.040544",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:24.986609",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [include_role : setup/vault] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:30

TASK [setup/vault : register temporary directory] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658565.1399112-25762-150056822283861 `" && echo ansible-tmp-1604658565.1399112-25762-150056822283861="` echo /root/.ansible/tmp/ansible-tmp-1604658565.1399112-25762-150056822283861 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp9xd27_rd TO /root/.ansible/tmp/ansible-tmp-1604658565.1399112-25762-150056822283861/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658565.1399112-25762-150056822283861/ /root/.ansible/tmp/ansible-tmp-1604658565.1399112-25762-150056822283861/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658565.1399112-25762-150056822283861/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658565.1399112-25762-150056822283861/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.4xfrsv1c",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658565.3234806-25788-153336687879668 `" && echo ansible-tmp-1604658565.3234806-25788-153336687879668="` echo /root/.ansible/tmp/ansible-tmp-1604658565.3234806-25788-153336687879668 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpw0iokzka TO /root/.ansible/tmp/ansible-tmp-1604658565.3234806-25788-153336687879668/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658565.3234806-25788-153336687879668/ /root/.ansible/tmp/ansible-tmp-1604658565.3234806-25788-153336687879668/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658565.3234806-25788-153336687879668/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658565.3234806-25788-153336687879668/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1603618466.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 270632,
        "charset": "binary",
        "checksum": "b1cacaa735c4406d1f47a6937e9329a38a842ede",
        "ctime": 1604239660.105088,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126520,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618466.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 138561023,
        "uid": 0,
        "version": "2790310722",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:34
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658565.7702487-25822-149351155139054 `" && echo ansible-tmp-1604658565.7702487-25822-149351155139054="` echo /root/.ansible/tmp/ansible-tmp-1604658565.7702487-25822-149351155139054 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmppsro9epo TO /root/.ansible/tmp/ansible-tmp-1604658565.7702487-25822-149351155139054/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658565.7702487-25822-149351155139054/ /root/.ansible/tmp/ansible-tmp-1604658565.7702487-25822-149351155139054/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658565.7702487-25822-149351155139054/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658565.7702487-25822-149351155139054/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.031044",
    "end": "2020-11-06 10:29:25.930191",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:25.899147",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)",
    "stdout_lines": [
        "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)"
    ]
}

TASK [include_role : setup/aws-cli] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'orderer.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "orderer.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'orderer.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "orderer.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:63
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658566.1836183-25863-108361263111182 `" && echo ansible-tmp-1604658566.1836183-25863-108361263111182="` echo /root/.ansible/tmp/ansible-tmp-1604658566.1836183-25863-108361263111182 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpb4rl6wlg TO /root/.ansible/tmp/ansible-tmp-1604658566.1836183-25863-108361263111182/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658566.1836183-25863-108361263111182/ /root/.ansible/tmp/ansible-tmp-1604658566.1836183-25863-108361263111182/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658566.1836183-25863-108361263111182/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658566.1836183-25863-108361263111182/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658567.1885295-25903-1090261629012 `" && echo ansible-tmp-1604658567.1885295-25903-1090261629012="` echo /root/.ansible/tmp/ansible-tmp-1604658567.1885295-25903-1090261629012 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwybzvx2b TO /root/.ansible/tmp/ansible-tmp-1604658567.1885295-25903-1090261629012/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658567.1885295-25903-1090261629012/ /root/.ansible/tmp/ansible-tmp-1604658567.1885295-25903-1090261629012/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658567.1885295-25903-1090261629012/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658567.1885295-25903-1090261629012/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658567.80733-25931-47078224171553 `" && echo ansible-tmp-1604658567.80733-25931-47078224171553="` echo /root/.ansible/tmp/ansible-tmp-1604658567.80733-25931-47078224171553 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmptylyvk5e TO /root/.ansible/tmp/ansible-tmp-1604658567.80733-25931-47078224171553/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658567.80733-25931-47078224171553/ /root/.ansible/tmp/ansible-tmp-1604658567.80733-25931-47078224171553/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658567.80733-25931-47078224171553/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658567.80733-25931-47078224171553/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658568.583332-25971-145994328210504 `" && echo ansible-tmp-1604658568.583332-25971-145994328210504="` echo /root/.ansible/tmp/ansible-tmp-1604658568.583332-25971-145994328210504 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfgn6atta TO /root/.ansible/tmp/ansible-tmp-1604658568.583332-25971-145994328210504/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658568.583332-25971-145994328210504/ /root/.ansible/tmp/ansible-tmp-1604658568.583332-25971-145994328210504/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658568.583332-25971-145994328210504/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658568.583332-25971-145994328210504/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658569.6563072-26026-93651903146000 `" && echo ansible-tmp-1604658569.6563072-26026-93651903146000="` echo /root/.ansible/tmp/ansible-tmp-1604658569.6563072-26026-93651903146000 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp9c28il5a TO /root/.ansible/tmp/ansible-tmp-1604658569.6563072-26026-93651903146000/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658569.6563072-26026-93651903146000/ /root/.ansible/tmp/ansible-tmp-1604658569.6563072-26026-93651903146000/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658569.6563072-26026-93651903146000/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658569.6563072-26026-93651903146000/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.cm8omjly",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658569.8350515-26052-58488246810178 `" && echo ansible-tmp-1604658569.8350515-26052-58488246810178="` echo /root/.ansible/tmp/ansible-tmp-1604658569.8350515-26052-58488246810178 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6rjg5b49 TO /root/.ansible/tmp/ansible-tmp-1604658569.8350515-26052-58488246810178/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658569.8350515-26052-58488246810178/ /root/.ansible/tmp/ansible-tmp-1604658569.8350515-26052-58488246810178/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658569.8350515-26052-58488246810178/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658569.8350515-26052-58488246810178/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658570.2004943-26088-97403965618009 `" && echo ansible-tmp-1604658570.2004943-26088-97403965618009="` echo /root/.ansible/tmp/ansible-tmp-1604658570.2004943-26088-97403965618009 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp5uvcdovh TO /root/.ansible/tmp/ansible-tmp-1604658570.2004943-26088-97403965618009/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658570.2004943-26088-97403965618009/ /root/.ansible/tmp/ansible-tmp-1604658570.2004943-26088-97403965618009/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658570.2004943-26088-97403965618009/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658570.2004943-26088-97403965618009/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.059357",
    "end": "2020-11-06 10:29:30.389811",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:30.330454",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658570.4424908-26119-149028496420700 `" && echo ansible-tmp-1604658570.4424908-26119-149028496420700="` echo /root/.ansible/tmp/ansible-tmp-1604658570.4424908-26119-149028496420700 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp9ami0_nn TO /root/.ansible/tmp/ansible-tmp-1604658570.4424908-26119-149028496420700/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658570.4424908-26119-149028496420700/ /root/.ansible/tmp/ansible-tmp-1604658570.4424908-26119-149028496420700/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658570.4424908-26119-149028496420700/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658570.4424908-26119-149028496420700/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.tuh43566",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658570.6218996-26145-163812309375627 `" && echo ansible-tmp-1604658570.6218996-26145-163812309375627="` echo /root/.ansible/tmp/ansible-tmp-1604658570.6218996-26145-163812309375627 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp1cgwizj4 TO /root/.ansible/tmp/ansible-tmp-1604658570.6218996-26145-163812309375627/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658570.6218996-26145-163812309375627/ /root/.ansible/tmp/ansible-tmp-1604658570.6218996-26145-163812309375627/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658570.6218996-26145-163812309375627/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658570.6218996-26145-163812309375627/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658570.9767017-26181-69571472690339 `" && echo ansible-tmp-1604658570.9767017-26181-69571472690339="` echo /root/.ansible/tmp/ansible-tmp-1604658570.9767017-26181-69571472690339 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmps_1yok2v TO /root/.ansible/tmp/ansible-tmp-1604658570.9767017-26181-69571472690339/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658570.9767017-26181-69571472690339/ /root/.ansible/tmp/ansible-tmp-1604658570.9767017-26181-69571472690339/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658570.9767017-26181-69571472690339/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658570.9767017-26181-69571472690339/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.047333",
    "end": "2020-11-06 10:29:31.153872",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:31.106539",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658571.2095132-26212-41990093405487 `" && echo ansible-tmp-1604658571.2095132-26212-41990093405487="` echo /root/.ansible/tmp/ansible-tmp-1604658571.2095132-26212-41990093405487 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpucyt9q18 TO /root/.ansible/tmp/ansible-tmp-1604658571.2095132-26212-41990093405487/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658571.2095132-26212-41990093405487/ /root/.ansible/tmp/ansible-tmp-1604658571.2095132-26212-41990093405487/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658571.2095132-26212-41990093405487/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658571.2095132-26212-41990093405487/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658572.071178-26252-178810767186013 `" && echo ansible-tmp-1604658572.071178-26252-178810767186013="` echo /root/.ansible/tmp/ansible-tmp-1604658572.071178-26252-178810767186013 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpsip7i8j8 TO /root/.ansible/tmp/ansible-tmp-1604658572.071178-26252-178810767186013/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658572.071178-26252-178810767186013/ /root/.ansible/tmp/ansible-tmp-1604658572.071178-26252-178810767186013/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658572.071178-26252-178810767186013/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658572.071178-26252-178810767186013/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658572.684538-26280-93146903641822 `" && echo ansible-tmp-1604658572.684538-26280-93146903641822="` echo /root/.ansible/tmp/ansible-tmp-1604658572.684538-26280-93146903641822 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpnjl98r6k TO /root/.ansible/tmp/ansible-tmp-1604658572.684538-26280-93146903641822/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658572.684538-26280-93146903641822/ /root/.ansible/tmp/ansible-tmp-1604658572.684538-26280-93146903641822/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658572.684538-26280-93146903641822/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658572.684538-26280-93146903641822/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658573.2906566-26308-169938980382329 `" && echo ansible-tmp-1604658573.2906566-26308-169938980382329="` echo /root/.ansible/tmp/ansible-tmp-1604658573.2906566-26308-169938980382329 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpoav2k89n TO /root/.ansible/tmp/ansible-tmp-1604658573.2906566-26308-169938980382329/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658573.2906566-26308-169938980382329/ /root/.ansible/tmp/ansible-tmp-1604658573.2906566-26308-169938980382329/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658573.2906566-26308-169938980382329/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658573.2906566-26308-169938980382329/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
    "delta": "0:00:00.398343",
    "end": "2020-11-06 10:29:33.818575",
    "invocation": {
        "module_args": {
            "_raw_params": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:33.420232",
    "stderr": "# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658573.8716383-26337-11501623250562 `" && echo ansible-tmp-1604658573.8716383-26337-11501623250562="` echo /root/.ansible/tmp/ansible-tmp-1604658573.8716383-26337-11501623250562 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpskbzpeq0 TO /root/.ansible/tmp/ansible-tmp-1604658573.8716383-26337-11501623250562/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658573.8716383-26337-11501623250562/ /root/.ansible/tmp/ansible-tmp-1604658573.8716383-26337-11501623250562/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658573.8716383-26337-11501623250562/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658573.8716383-26337-11501623250562/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
    "delta": "0:00:00.277457",
    "end": "2020-11-06 10:29:34.278435",
    "invocation": {
        "module_args": {
            "_raw_params": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:34.000978",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "$HELM_HOME has been configured at /root/.helm.\nNot installing Tiller due to 'client-only' flag having been set\n\"fluxcd\" has been added to your repositories",
    "stdout_lines": [
        "$HELM_HOME has been configured at /root/.helm.",
        "Not installing Tiller due to 'client-only' flag having been set",
        "\"fluxcd\" has been added to your repositories"
    ]
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658574.3452997-26375-153551193197982 `" && echo ansible-tmp-1604658574.3452997-26375-153551193197982="` echo /root/.ansible/tmp/ansible-tmp-1604658574.3452997-26375-153551193197982 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmplc2bdt8h TO /root/.ansible/tmp/ansible-tmp-1604658574.3452997-26375-153551193197982/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658574.3452997-26375-153551193197982/ /root/.ansible/tmp/ansible-tmp-1604658574.3452997-26375-153551193197982/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658574.3452997-26375-153551193197982/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658574.3452997-26375-153551193197982/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
    "delta": "0:00:01.713073",
    "end": "2020-11-06 10:29:36.189941",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:29:34.476868",
    "stderr": "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists",
    "stderr_lines": [
        "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists"
    ],
    "stdout": "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged\nRelease \"flux-dev\" does not exist. Installing it now.\nNAME:   flux-dev\nLAST DEPLOYED: Fri Nov  6 10:29:35 2020\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME                  DATA  AGE\nflux-dev-kube-config  1     1s\nflux-dev-ssh-config   1     1s\n\n==> v1/Deployment\nNAME                    READY  UP-TO-DATE  AVAILABLE  AGE\nflux-dev                0/1    1           0          1s\nflux-dev-helm-operator  0/1    1           0          1s\nflux-dev-memcached      0/1    1           0          1s\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS             RESTARTS  AGE\nflux-dev-794c97d9cc-hxwg8                0/1    ContainerCreating  0         1s\nflux-dev-helm-operator-745dc7fb99-4jr2w  0/1    ContainerCreating  0         1s\nflux-dev-memcached-5f689bfdb9-d5s9s      0/1    Pending            0         1s\n\n==> v1/Service\nNAME                TYPE       CLUSTER-IP   EXTERNAL-IP  PORT(S)    AGE\nflux-dev            ClusterIP  10.0.42.82   <none>       3030/TCP   1s\nflux-dev-memcached  ClusterIP  10.0.197.81  <none>       11211/TCP  1s\n\n==> v1/ServiceAccount\nNAME      SECRETS  AGE\nflux-dev  1        1s\n\n==> v1beta1/ClusterRole\nNAME      AGE\nflux-dev  1s\n\n==> v1beta1/ClusterRoleBinding\nNAME      AGE\nflux-dev  1s\n\n\nNOTES:\nGet the Git deploy key by either (a) running\n\n  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n\nor by (b) installing fluxctl through\nhttps://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl\nand running:\n\n  fluxctl identity --k8s-fwd-ns default",
    "stdout_lines": [
        "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged",
        "Release \"flux-dev\" does not exist. Installing it now.",
        "NAME:   flux-dev",
        "LAST DEPLOYED: Fri Nov  6 10:29:35 2020",
        "NAMESPACE: default",
        "STATUS: DEPLOYED",
        "",
        "RESOURCES:",
        "==> v1/ConfigMap",
        "NAME                  DATA  AGE",
        "flux-dev-kube-config  1     1s",
        "flux-dev-ssh-config   1     1s",
        "",
        "==> v1/Deployment",
        "NAME                    READY  UP-TO-DATE  AVAILABLE  AGE",
        "flux-dev                0/1    1           0          1s",
        "flux-dev-helm-operator  0/1    1           0          1s",
        "flux-dev-memcached      0/1    1           0          1s",
        "",
        "==> v1/Pod(related)",
        "NAME                                     READY  STATUS             RESTARTS  AGE",
        "flux-dev-794c97d9cc-hxwg8                0/1    ContainerCreating  0         1s",
        "flux-dev-helm-operator-745dc7fb99-4jr2w  0/1    ContainerCreating  0         1s",
        "flux-dev-memcached-5f689bfdb9-d5s9s      0/1    Pending            0         1s",
        "",
        "==> v1/Service",
        "NAME                TYPE       CLUSTER-IP   EXTERNAL-IP  PORT(S)    AGE",
        "flux-dev            ClusterIP  10.0.42.82   <none>       3030/TCP   1s",
        "flux-dev-memcached  ClusterIP  10.0.197.81  <none>       11211/TCP  1s",
        "",
        "==> v1/ServiceAccount",
        "NAME      SECRETS  AGE",
        "flux-dev  1        1s",
        "",
        "==> v1beta1/ClusterRole",
        "NAME      AGE",
        "flux-dev  1s",
        "",
        "==> v1beta1/ClusterRoleBinding",
        "NAME      AGE",
        "flux-dev  1s",
        "",
        "",
        "NOTES:",
        "Get the Git deploy key by either (a) running",
        "",
        "  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2",
        "",
        "or by (b) installing fluxctl through",
        "https://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl",
        "and running:",
        "",
        "  fluxctl identity --k8s-fwd-ns default"
    ]
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658576.3839564-26423-139900662967084 `" && echo ansible-tmp-1604658576.3839564-26423-139900662967084="` echo /root/.ansible/tmp/ansible-tmp-1604658576.3839564-26423-139900662967084 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6qckt94d TO /root/.ansible/tmp/ansible-tmp-1604658576.3839564-26423-139900662967084/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658576.3839564-26423-139900662967084/ /root/.ansible/tmp/ansible-tmp-1604658576.3839564-26423-139900662967084/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658576.3839564-26423-139900662967084/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658576.3839564-26423-139900662967084/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod flux in default (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658607.0995746-26423-36532131189589 `" && echo ansible-tmp-1604658607.0995746-26423-36532131189589="` echo /root/.ansible/tmp/ansible-tmp-1604658607.0995746-26423-36532131189589 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpamfpapfx TO /root/.ansible/tmp/ansible-tmp-1604658607.0995746-26423-36532131189589/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658607.0995746-26423-36532131189589/ /root/.ansible/tmp/ansible-tmp-1604658607.0995746-26423-36532131189589/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658607.0995746-26423-36532131189589/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658607.0995746-26423-36532131189589/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T10:29:35Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-hxwg8",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "af11fffb-55ea-4e38-87d0-36a4535b6029"
                    }
                ],
                "resourceVersion": "2428090",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-hxwg8",
                "uid": "b8168368-afbe-4160-843f-f3ee64f24eaf"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-zbl9f",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-zbl9f",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-zbl9f"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:29:36Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:29:42Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:29:42Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:29:36Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://32824315d6cdd9f300489fd0bf6da43c9b8329ec4f18431f53b752bef383c3a1",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T10:29:37Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.5",
                "podIPs": [
                    {
                        "ip": "10.1.0.5"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-06T10:29:36Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658607.846363-26492-207158379476177 `" && echo ansible-tmp-1604658607.846363-26492-207158379476177="` echo /root/.ansible/tmp/ansible-tmp-1604658607.846363-26492-207158379476177 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmps6ezy7_i TO /root/.ansible/tmp/ansible-tmp-1604658607.846363-26492-207158379476177/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658607.846363-26492-207158379476177/ /root/.ansible/tmp/ansible-tmp-1604658607.846363-26492-207158379476177/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658607.846363-26492-207158379476177/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658607.846363-26492-207158379476177/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.348746",
    "end": "2020-11-06 10:30:08.467179",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:30:08.118433",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658608.9133353-26553-61652979243429 `" && echo ansible-tmp-1604658608.9133353-26553-61652979243429="` echo /root/.ansible/tmp/ansible-tmp-1604658608.9133353-26553-61652979243429 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpczl2g3u7 TO /root/.ansible/tmp/ansible-tmp-1604658608.9133353-26553-61652979243429/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658608.9133353-26553-61652979243429/ /root/.ansible/tmp/ansible-tmp-1604658608.9133353-26553-61652979243429/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658608.9133353-26553-61652979243429/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658608.9133353-26553-61652979243429/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.yw99b3w2",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658609.1109383-26579-169286758380156 `" && echo ansible-tmp-1604658609.1109383-26579-169286758380156="` echo /root/.ansible/tmp/ansible-tmp-1604658609.1109383-26579-169286758380156 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpg9bea_qi TO /root/.ansible/tmp/ansible-tmp-1604658609.1109383-26579-169286758380156/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658609.1109383-26579-169286758380156/ /root/.ansible/tmp/ansible-tmp-1604658609.1109383-26579-169286758380156/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658609.1109383-26579-169286758380156/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658609.1109383-26579-169286758380156/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658609.713858-26615-29202981498010 `" && echo ansible-tmp-1604658609.713858-26615-29202981498010="` echo /root/.ansible/tmp/ansible-tmp-1604658609.713858-26615-29202981498010 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp9exjvu3g TO /root/.ansible/tmp/ansible-tmp-1604658609.713858-26615-29202981498010/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658609.713858-26615-29202981498010/ /root/.ansible/tmp/ansible-tmp-1604658609.713858-26615-29202981498010/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658609.713858-26615-29202981498010/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658609.713858-26615-29202981498010/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.055923",
    "end": "2020-11-06 10:30:09.918012",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:30:09.862089",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658609.9792159-26646-206562413727759 `" && echo ansible-tmp-1604658609.9792159-26646-206562413727759="` echo /root/.ansible/tmp/ansible-tmp-1604658609.9792159-26646-206562413727759 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpqbhn1gs_ TO /root/.ansible/tmp/ansible-tmp-1604658609.9792159-26646-206562413727759/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658609.9792159-26646-206562413727759/ /root/.ansible/tmp/ansible-tmp-1604658609.9792159-26646-206562413727759/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658609.9792159-26646-206562413727759/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658609.9792159-26646-206562413727759/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.jxr6ngkc",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658610.1856089-26672-274601812533444 `" && echo ansible-tmp-1604658610.1856089-26672-274601812533444="` echo /root/.ansible/tmp/ansible-tmp-1604658610.1856089-26672-274601812533444 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprqdi0fyp TO /root/.ansible/tmp/ansible-tmp-1604658610.1856089-26672-274601812533444/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658610.1856089-26672-274601812533444/ /root/.ansible/tmp/ansible-tmp-1604658610.1856089-26672-274601812533444/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658610.1856089-26672-274601812533444/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658610.1856089-26672-274601812533444/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658610.5916853-26708-271608833471454 `" && echo ansible-tmp-1604658610.5916853-26708-271608833471454="` echo /root/.ansible/tmp/ansible-tmp-1604658610.5916853-26708-271608833471454 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpemypsqd6 TO /root/.ansible/tmp/ansible-tmp-1604658610.5916853-26708-271608833471454/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658610.5916853-26708-271608833471454/ /root/.ansible/tmp/ansible-tmp-1604658610.5916853-26708-271608833471454/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658610.5916853-26708-271608833471454/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658610.5916853-26708-271608833471454/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.055651",
    "end": "2020-11-06 10:30:10.781099",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:30:10.725448",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658610.8431938-26739-182371263969951 `" && echo ansible-tmp-1604658610.8431938-26739-182371263969951="` echo /root/.ansible/tmp/ansible-tmp-1604658610.8431938-26739-182371263969951 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp0fr4n3f6 TO /root/.ansible/tmp/ansible-tmp-1604658610.8431938-26739-182371263969951/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658610.8431938-26739-182371263969951/ /root/.ansible/tmp/ansible-tmp-1604658610.8431938-26739-182371263969951/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658610.8431938-26739-182371263969951/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658610.8431938-26739-182371263969951/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658612.3739023-26779-141472056678556 `" && echo ansible-tmp-1604658612.3739023-26779-141472056678556="` echo /root/.ansible/tmp/ansible-tmp-1604658612.3739023-26779-141472056678556 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp318xz4pl TO /root/.ansible/tmp/ansible-tmp-1604658612.3739023-26779-141472056678556/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658612.3739023-26779-141472056678556/ /root/.ansible/tmp/ansible-tmp-1604658612.3739023-26779-141472056678556/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658612.3739023-26779-141472056678556/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658612.3739023-26779-141472056678556/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658613.1034725-26807-94515665392409 `" && echo ansible-tmp-1604658613.1034725-26807-94515665392409="` echo /root/.ansible/tmp/ansible-tmp-1604658613.1034725-26807-94515665392409 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpgy_ytbsl TO /root/.ansible/tmp/ansible-tmp-1604658613.1034725-26807-94515665392409/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658613.1034725-26807-94515665392409/ /root/.ansible/tmp/ansible-tmp-1604658613.1034725-26807-94515665392409/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658613.1034725-26807-94515665392409/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658613.1034725-26807-94515665392409/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T10:29:35Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-hxwg8",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "af11fffb-55ea-4e38-87d0-36a4535b6029"
                    }
                ],
                "resourceVersion": "2428090",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-hxwg8",
                "uid": "b8168368-afbe-4160-843f-f3ee64f24eaf"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-zbl9f",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-zbl9f",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-zbl9f"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:29:36Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:29:42Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:29:42Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:29:36Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://32824315d6cdd9f300489fd0bf6da43c9b8329ec4f18431f53b752bef383c3a1",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T10:29:37Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.5",
                "podIPs": [
                    {
                        "ip": "10.1.0.5"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-06T10:29:36Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658613.8832314-26843-190645445088765 `" && echo ansible-tmp-1604658613.8832314-26843-190645445088765="` echo /root/.ansible/tmp/ansible-tmp-1604658613.8832314-26843-190645445088765 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp_nsq7asr TO /root/.ansible/tmp/ansible-tmp-1604658613.8832314-26843-190645445088765/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658613.8832314-26843-190645445088765/ /root/.ansible/tmp/ansible-tmp-1604658613.8832314-26843-190645445088765/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658613.8832314-26843-190645445088765/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658613.8832314-26843-190645445088765/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.177278",
    "end": "2020-11-06 10:30:14.191644",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:30:14.014366",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:22
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'orderer.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "orderer.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:31
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'orderer.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "orderer.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658614.8754368-26909-200565550434764 `" && echo ansible-tmp-1604658614.8754368-26909-200565550434764="` echo /root/.ansible/tmp/ansible-tmp-1604658614.8754368-26909-200565550434764 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpojpe90cx TO /root/.ansible/tmp/ansible-tmp-1604658614.8754368-26909-200565550434764/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658614.8754368-26909-200565550434764/ /root/.ansible/tmp/ansible-tmp-1604658614.8754368-26909-200565550434764/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658614.8754368-26909-200565550434764/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658614.8754368-26909-200565550434764/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.90_k5p90",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658615.0593863-26935-269161379124448 `" && echo ansible-tmp-1604658615.0593863-26935-269161379124448="` echo /root/.ansible/tmp/ansible-tmp-1604658615.0593863-26935-269161379124448 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpkl16uvcz TO /root/.ansible/tmp/ansible-tmp-1604658615.0593863-26935-269161379124448/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658615.0593863-26935-269161379124448/ /root/.ansible/tmp/ansible-tmp-1604658615.0593863-26935-269161379124448/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658615.0593863-26935-269161379124448/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658615.0593863-26935-269161379124448/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658615.4380503-26971-96387473074620 `" && echo ansible-tmp-1604658615.4380503-26971-96387473074620="` echo /root/.ansible/tmp/ansible-tmp-1604658615.4380503-26971-96387473074620 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpyojnqc5_ TO /root/.ansible/tmp/ansible-tmp-1604658615.4380503-26971-96387473074620/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658615.4380503-26971-96387473074620/ /root/.ansible/tmp/ansible-tmp-1604658615.4380503-26971-96387473074620/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658615.4380503-26971-96387473074620/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658615.4380503-26971-96387473074620/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.062170",
    "end": "2020-11-06 10:30:15.629776",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:30:15.567606",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658615.692047-27002-23566358340152 `" && echo ansible-tmp-1604658615.692047-27002-23566358340152="` echo /root/.ansible/tmp/ansible-tmp-1604658615.692047-27002-23566358340152 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwf9c5kcs TO /root/.ansible/tmp/ansible-tmp-1604658615.692047-27002-23566358340152/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658615.692047-27002-23566358340152/ /root/.ansible/tmp/ansible-tmp-1604658615.692047-27002-23566358340152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658615.692047-27002-23566358340152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658615.692047-27002-23566358340152/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658616.512973-27042-87975753903920 `" && echo ansible-tmp-1604658616.512973-27042-87975753903920="` echo /root/.ansible/tmp/ansible-tmp-1604658616.512973-27042-87975753903920 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpun4gy4bg TO /root/.ansible/tmp/ansible-tmp-1604658616.512973-27042-87975753903920/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658616.512973-27042-87975753903920/ /root/.ansible/tmp/ansible-tmp-1604658616.512973-27042-87975753903920/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658616.512973-27042-87975753903920/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658616.512973-27042-87975753903920/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658617.1448278-27070-5396286459933 `" && echo ansible-tmp-1604658617.1448278-27070-5396286459933="` echo /root/.ansible/tmp/ansible-tmp-1604658617.1448278-27070-5396286459933 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpvctpwpku TO /root/.ansible/tmp/ansible-tmp-1604658617.1448278-27070-5396286459933/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658617.1448278-27070-5396286459933/ /root/.ansible/tmp/ansible-tmp-1604658617.1448278-27070-5396286459933/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658617.1448278-27070-5396286459933/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658617.1448278-27070-5396286459933/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658618.005316-27110-198574810757630 `" && echo ansible-tmp-1604658618.005316-27110-198574810757630="` echo /root/.ansible/tmp/ansible-tmp-1604658618.005316-27110-198574810757630 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp93onj5yo TO /root/.ansible/tmp/ansible-tmp-1604658618.005316-27110-198574810757630/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658618.005316-27110-198574810757630/ /root/.ansible/tmp/ansible-tmp-1604658618.005316-27110-198574810757630/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658618.005316-27110-198574810757630/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658618.005316-27110-198574810757630/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658618.9393327-27162-130857426294576 `" && echo ansible-tmp-1604658618.9393327-27162-130857426294576="` echo /root/.ansible/tmp/ansible-tmp-1604658618.9393327-27162-130857426294576 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpy95whyp6 TO /root/.ansible/tmp/ansible-tmp-1604658618.9393327-27162-130857426294576/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658618.9393327-27162-130857426294576/ /root/.ansible/tmp/ansible-tmp-1604658618.9393327-27162-130857426294576/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658618.9393327-27162-130857426294576/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658618.9393327-27162-130857426294576/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.igz76u7w",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658619.119214-27188-212441358012992 `" && echo ansible-tmp-1604658619.119214-27188-212441358012992="` echo /root/.ansible/tmp/ansible-tmp-1604658619.119214-27188-212441358012992 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbyt_kls6 TO /root/.ansible/tmp/ansible-tmp-1604658619.119214-27188-212441358012992/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658619.119214-27188-212441358012992/ /root/.ansible/tmp/ansible-tmp-1604658619.119214-27188-212441358012992/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658619.119214-27188-212441358012992/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658619.119214-27188-212441358012992/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658619.4805443-27224-255997026724395 `" && echo ansible-tmp-1604658619.4805443-27224-255997026724395="` echo /root/.ansible/tmp/ansible-tmp-1604658619.4805443-27224-255997026724395 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfhu6slhf TO /root/.ansible/tmp/ansible-tmp-1604658619.4805443-27224-255997026724395/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658619.4805443-27224-255997026724395/ /root/.ansible/tmp/ansible-tmp-1604658619.4805443-27224-255997026724395/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658619.4805443-27224-255997026724395/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658619.4805443-27224-255997026724395/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051223",
    "end": "2020-11-06 10:30:19.662268",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:30:19.611045",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658619.7218497-27255-257306751940682 `" && echo ansible-tmp-1604658619.7218497-27255-257306751940682="` echo /root/.ansible/tmp/ansible-tmp-1604658619.7218497-27255-257306751940682 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbv726278 TO /root/.ansible/tmp/ansible-tmp-1604658619.7218497-27255-257306751940682/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658619.7218497-27255-257306751940682/ /root/.ansible/tmp/ansible-tmp-1604658619.7218497-27255-257306751940682/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658619.7218497-27255-257306751940682/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658619.7218497-27255-257306751940682/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658620.5333338-27295-99191716198197 `" && echo ansible-tmp-1604658620.5333338-27295-99191716198197="` echo /root/.ansible/tmp/ansible-tmp-1604658620.5333338-27295-99191716198197 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpeauer021 TO /root/.ansible/tmp/ansible-tmp-1604658620.5333338-27295-99191716198197/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658620.5333338-27295-99191716198197/ /root/.ansible/tmp/ansible-tmp-1604658620.5333338-27295-99191716198197/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658620.5333338-27295-99191716198197/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658620.5333338-27295-99191716198197/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658621.1587458-27323-21574501631673 `" && echo ansible-tmp-1604658621.1587458-27323-21574501631673="` echo /root/.ansible/tmp/ansible-tmp-1604658621.1587458-27323-21574501631673 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmplprnfa7b TO /root/.ansible/tmp/ansible-tmp-1604658621.1587458-27323-21574501631673/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658621.1587458-27323-21574501631673/ /root/.ansible/tmp/ansible-tmp-1604658621.1587458-27323-21574501631673/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658621.1587458-27323-21574501631673/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658621.1587458-27323-21574501631673/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658622.010515-27363-274691529835601 `" && echo ansible-tmp-1604658622.010515-27363-274691529835601="` echo /root/.ansible/tmp/ansible-tmp-1604658622.010515-27363-274691529835601 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpjgm4veda TO /root/.ansible/tmp/ansible-tmp-1604658622.010515-27363-274691529835601/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658622.010515-27363-274691529835601/ /root/.ansible/tmp/ansible-tmp-1604658622.010515-27363-274691529835601/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658622.010515-27363-274691529835601/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658622.010515-27363-274691529835601/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658622.6721942-27392-150017837618703 `" && echo ansible-tmp-1604658622.6721942-27392-150017837618703="` echo /root/.ansible/tmp/ansible-tmp-1604658622.6721942-27392-150017837618703 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpk8cft_yl TO /root/.ansible/tmp/ansible-tmp-1604658622.6721942-27392-150017837618703/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658622.6721942-27392-150017837618703/ /root/.ansible/tmp/ansible-tmp-1604658622.6721942-27392-150017837618703/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658622.6721942-27392-150017837618703/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658622.6721942-27392-150017837618703/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [include_role : create/namespace_vaultauth] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:22

TASK [Checking if the namespace walmart-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658623.2328486-27422-184964862640141 `" && echo ansible-tmp-1604658623.2328486-27422-184964862640141="` echo /root/.ansible/tmp/ansible-tmp-1604658623.2328486-27422-184964862640141 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpebcm731n TO /root/.ansible/tmp/ansible-tmp-1604658623.2328486-27422-184964862640141/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658623.2328486-27422-184964862640141/ /root/.ansible/tmp/ansible-tmp-1604658623.2328486-27422-184964862640141/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658623.2328486-27422-184964862640141/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658623.2328486-27422-184964862640141/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658624.0353186-27460-67004210865785 `" && echo ansible-tmp-1604658624.0353186-27460-67004210865785="` echo /root/.ansible/tmp/ansible-tmp-1604658624.0353186-27460-67004210865785 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp16ottshy TO /root/.ansible/tmp/ansible-tmp-1604658624.0353186-27460-67004210865785/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658624.0353186-27460-67004210865785/ /root/.ansible/tmp/ansible-tmp-1604658624.0353186-27460-67004210865785/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658624.0353186-27460-67004210865785/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658624.0353186-27460-67004210865785/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041 `" && echo ansible-tmp-1604658624.2417161-27486-258951855598041="` echo /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpugflp5u5 TO /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/ /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp0ph8ff4m/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/ /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpeyel9wca TO /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/ /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4d93c9ae989d8757fd969fecf14722d7",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658624.2417161-27486-258951855598041/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658624.908349-27528-245924742416012 `" && echo ansible-tmp-1604658624.908349-27528-245924742416012="` echo /root/.ansible/tmp/ansible-tmp-1604658624.908349-27528-245924742416012 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxsgf1506 TO /root/.ansible/tmp/ansible-tmp-1604658624.908349-27528-245924742416012/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658624.908349-27528-245924742416012/ /root/.ansible/tmp/ansible-tmp-1604658624.908349-27528-245924742416012/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658624.908349-27528-245924742416012/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658624.908349-27528-245924742416012/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for orderer] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064 `" && echo ansible-tmp-1604658625.1129026-27554-240041639303064="` echo /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpyzecgcn8 TO /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/ /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpmpnevpmf/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/ /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxss4ufyh TO /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/ /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b1e902eb27343ada17df0d459fa5440c",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658625.1129026-27554-240041639303064/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658625.5191715-27596-14696400531090 `" && echo ansible-tmp-1604658625.5191715-27596-14696400531090="` echo /root/.ansible/tmp/ansible-tmp-1604658625.5191715-27596-14696400531090 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpsddbvl3z TO /root/.ansible/tmp/ansible-tmp-1604658625.5191715-27596-14696400531090/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658625.5191715-27596-14696400531090/ /root/.ansible/tmp/ansible-tmp-1604658625.5191715-27596-14696400531090/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658625.5191715-27596-14696400531090/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658625.5191715-27596-14696400531090/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531 `" && echo ansible-tmp-1604658625.7237418-27622-99827866393531="` echo /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpefn0bgpm TO /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/ /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpagv8w1cr/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/ /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpg7_1h53p TO /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/ /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "707b3f479630c38f6e663c6c7306b4d0",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658625.7237418-27622-99827866393531/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658626.1313748-27664-78499412555277 `" && echo ansible-tmp-1604658626.1313748-27664-78499412555277="` echo /root/.ansible/tmp/ansible-tmp-1604658626.1313748-27664-78499412555277 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp17mb7p5o TO /root/.ansible/tmp/ansible-tmp-1604658626.1313748-27664-78499412555277/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658626.1313748-27664-78499412555277/ /root/.ansible/tmp/ansible-tmp-1604658626.1313748-27664-78499412555277/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658626.1313748-27664-78499412555277/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658626.1313748-27664-78499412555277/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for orderer] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371 `" && echo ansible-tmp-1604658626.3342612-27690-50964229832371="` echo /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmponuj0txf TO /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/ /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpjaerrpp7/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/ /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp14tnpl84 TO /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/ /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "48ca9ca3bda6a4d4373d83682874e266",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658626.3342612-27690-50964229832371/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658626.73893-27732-245185060862568 `" && echo ansible-tmp-1604658626.73893-27732-245185060862568="` echo /root/.ansible/tmp/ansible-tmp-1604658626.73893-27732-245185060862568 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp867_vf8b TO /root/.ansible/tmp/ansible-tmp-1604658626.73893-27732-245185060862568/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658626.73893-27732-245185060862568/ /root/.ansible/tmp/ansible-tmp-1604658626.73893-27732-245185060862568/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658626.73893-27732-245185060862568/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658626.73893-27732-245185060862568/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658626.9843562-27758-170866577451623 `" && echo ansible-tmp-1604658626.9843562-27758-170866577451623="` echo /root/.ansible/tmp/ansible-tmp-1604658626.9843562-27758-170866577451623 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpy332cz4q TO /root/.ansible/tmp/ansible-tmp-1604658626.9843562-27758-170866577451623/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658626.9843562-27758-170866577451623/ /root/.ansible/tmp/ansible-tmp-1604658626.9843562-27758-170866577451623/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658626.9843562-27758-170866577451623/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658626.9843562-27758-170866577451623/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.270215",
    "end": "2020-11-06 10:30:35.384980",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:30:27.114765",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   83e53eea..d5f67137  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   83e53eea..d5f67137  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla d5f67137] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 11231 insertions(+), 26607 deletions(-)\n rewrite console.out (73%)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d5f67137] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+), 26607 deletions(-)",
        " rewrite console.out (73%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d5f67137] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+), 26607 deletions(-)",
        " rewrite console.out (73%)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   83e53eea..d5f67137  HEAD -> gorilla"
    ]
}

TASK [Checking for the walmart-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding walmart-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658635.6401246-27810-118861071818525 `" && echo ansible-tmp-1604658635.6401246-27810-118861071818525="` echo /root/.ansible/tmp/ansible-tmp-1604658635.6401246-27810-118861071818525 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7m6jv721 TO /root/.ansible/tmp/ansible-tmp-1604658635.6401246-27810-118861071818525/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658635.6401246-27810-118861071818525/ /root/.ansible/tmp/ansible-tmp-1604658635.6401246-27810-118861071818525/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658635.6401246-27810-118861071818525/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658635.6401246-27810-118861071818525/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "2ac106c4abd83ffb52d3a8e3b910c95c18efa038",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"2ac106c4abd83ffb52d3a8e3b910c95c18efa038\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78\"},\"name\":\"walmart-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}]}\n"
                },
                "creationTimestamp": "2020-11-06T07:10:22Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78"
                },
                "name": "walmart-net-role-tokenreview-binding",
                "resourceVersion": "2396289",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/walmart-net-role-tokenreview-binding",
                "uid": "27e7b4f4-321f-4fde-8504-e817937d7507"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "walmart-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in walmart-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658636.5155444-27850-51583019817851 `" && echo ansible-tmp-1604658636.5155444-27850-51583019817851="` echo /root/.ansible/tmp/ansible-tmp-1604658636.5155444-27850-51583019817851 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp02azd0z3 TO /root/.ansible/tmp/ansible-tmp-1604658636.5155444-27850-51583019817851/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658636.5155444-27850-51583019817851/ /root/.ansible/tmp/ansible-tmp-1604658636.5155444-27850-51583019817851/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658636.5155444-27850-51583019817851/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658636.5155444-27850-51583019817851/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658672.1664484-27850-136336962820481 `" && echo ansible-tmp-1604658672.1664484-27850-136336962820481="` echo /root/.ansible/tmp/ansible-tmp-1604658672.1664484-27850-136336962820481 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfsmn5vx_ TO /root/.ansible/tmp/ansible-tmp-1604658672.1664484-27850-136336962820481/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658672.1664484-27850-136336962820481/ /root/.ansible/tmp/ansible-tmp-1604658672.1664484-27850-136336962820481/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658672.1664484-27850-136336962820481/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658672.1664484-27850-136336962820481/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658707.832092-27850-149808877947319 `" && echo ansible-tmp-1604658707.832092-27850-149808877947319="` echo /root/.ansible/tmp/ansible-tmp-1604658707.832092-27850-149808877947319 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp24yvyld4 TO /root/.ansible/tmp/ansible-tmp-1604658707.832092-27850-149808877947319/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658707.832092-27850-149808877947319/ /root/.ansible/tmp/ansible-tmp-1604658707.832092-27850-149808877947319/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658707.832092-27850-149808877947319/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658707.832092-27850-149808877947319/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658743.4782703-27850-109522963137746 `" && echo ansible-tmp-1604658743.4782703-27850-109522963137746="` echo /root/.ansible/tmp/ansible-tmp-1604658743.4782703-27850-109522963137746 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7ngt00ws TO /root/.ansible/tmp/ansible-tmp-1604658743.4782703-27850-109522963137746/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658743.4782703-27850-109522963137746/ /root/.ansible/tmp/ansible-tmp-1604658743.4782703-27850-109522963137746/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658743.4782703-27850-109522963137746/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658743.4782703-27850-109522963137746/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "586eac56c69c15efee4d4ceb86bb2999c96a56c2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"586eac56c69c15efee4d4ceb86bb2999c96a56c2\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA\"},\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T10:31:54Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA"
                },
                "name": "vault-reviewer",
                "namespace": "walmart-net",
                "resourceVersion": "2428436",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-reviewer",
                "uid": "acc4f14d-1b85-45a5-a082-dca5d649a7e7"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-rcbqr"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in walmart-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658744.3394532-27964-7021909640499 `" && echo ansible-tmp-1604658744.3394532-27964-7021909640499="` echo /root/.ansible/tmp/ansible-tmp-1604658744.3394532-27964-7021909640499 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprfjun41p TO /root/.ansible/tmp/ansible-tmp-1604658744.3394532-27964-7021909640499/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658744.3394532-27964-7021909640499/ /root/.ansible/tmp/ansible-tmp-1604658744.3394532-27964-7021909640499/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658744.3394532-27964-7021909640499/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658744.3394532-27964-7021909640499/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b527239518c6f14365e0009e83a7965e765a8dc3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b527239518c6f14365e0009e83a7965e765a8dc3\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0\"},\"name\":\"vault-auth\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T10:31:54Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0"
                },
                "name": "vault-auth",
                "namespace": "walmart-net",
                "resourceVersion": "2428434",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-auth",
                "uid": "b6c8891f-4c45-493a-a245-cc91866ac83b"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-kcf5k"
                }
            ]
        }
    ]
}

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658745.0249689-27994-35075742606136 `" && echo ansible-tmp-1604658745.0249689-27994-35075742606136="` echo /root/.ansible/tmp/ansible-tmp-1604658745.0249689-27994-35075742606136 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpzmyvbxck TO /root/.ansible/tmp/ansible-tmp-1604658745.0249689-27994-35075742606136/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658745.0249689-27994-35075742606136/ /root/.ansible/tmp/ansible-tmp-1604658745.0249689-27994-35075742606136/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658745.0249689-27994-35075742606136/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658745.0249689-27994-35075742606136/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658745.8163304-28032-147185987169276 `" && echo ansible-tmp-1604658745.8163304-28032-147185987169276="` echo /root/.ansible/tmp/ansible-tmp-1604658745.8163304-28032-147185987169276 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp2l7hegus TO /root/.ansible/tmp/ansible-tmp-1604658745.8163304-28032-147185987169276/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658745.8163304-28032-147185987169276/ /root/.ansible/tmp/ansible-tmp-1604658745.8163304-28032-147185987169276/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658745.8163304-28032-147185987169276/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658745.8163304-28032-147185987169276/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766 `" && echo ansible-tmp-1604658746.0219214-28058-256597269897766="` echo /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp4tvtw3gi TO /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/ /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp8wtz5mnu/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/ /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp804xvkim TO /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/ /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "87aff577d25e325fac79903302d07758",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658746.0219214-28058-256597269897766/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658746.423638-28100-268204457503686 `" && echo ansible-tmp-1604658746.423638-28100-268204457503686="` echo /root/.ansible/tmp/ansible-tmp-1604658746.423638-28100-268204457503686 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpsxucnnxp TO /root/.ansible/tmp/ansible-tmp-1604658746.423638-28100-268204457503686/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658746.423638-28100-268204457503686/ /root/.ansible/tmp/ansible-tmp-1604658746.423638-28100-268204457503686/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658746.423638-28100-268204457503686/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658746.423638-28100-268204457503686/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for peer] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135 `" && echo ansible-tmp-1604658746.6681185-28126-249584317740135="` echo /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpa2c4fqc4 TO /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/ /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmps0d6pnc5/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/ /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpoqs43ka2 TO /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/ /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "9749a00045b3fd05c025cc29e7eabfb1",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658746.6681185-28126-249584317740135/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658747.0652456-28168-203535926221412 `" && echo ansible-tmp-1604658747.0652456-28168-203535926221412="` echo /root/.ansible/tmp/ansible-tmp-1604658747.0652456-28168-203535926221412 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp43bl61g2 TO /root/.ansible/tmp/ansible-tmp-1604658747.0652456-28168-203535926221412/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658747.0652456-28168-203535926221412/ /root/.ansible/tmp/ansible-tmp-1604658747.0652456-28168-203535926221412/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658747.0652456-28168-203535926221412/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658747.0652456-28168-203535926221412/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630 `" && echo ansible-tmp-1604658747.2690957-28194-242339026193630="` echo /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp4wpssq62 TO /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/ /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp79dervzz/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/ /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpaalq91c1 TO /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/ /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d39874ba996a2494812a782b78453e995845be6b",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "d39874ba996a2494812a782b78453e995845be6b",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "603f99cf710abd04581efdc563a6074a",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658747.2690957-28194-242339026193630/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658747.6626446-28237-179650908606421 `" && echo ansible-tmp-1604658747.6626446-28237-179650908606421="` echo /root/.ansible/tmp/ansible-tmp-1604658747.6626446-28237-179650908606421 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6jy4oyzf TO /root/.ansible/tmp/ansible-tmp-1604658747.6626446-28237-179650908606421/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658747.6626446-28237-179650908606421/ /root/.ansible/tmp/ansible-tmp-1604658747.6626446-28237-179650908606421/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658747.6626446-28237-179650908606421/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658747.6626446-28237-179650908606421/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620 `" && echo ansible-tmp-1604658747.869066-28263-25782759623620="` echo /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpow_km2br TO /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/ /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpomqysx2_/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/ /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp1t9b9ojy TO /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/ /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdea783ba12108f490d72ae42abb8b05",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658747.869066-28263-25782759623620/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658748.2668345-28305-235056062304211 `" && echo ansible-tmp-1604658748.2668345-28305-235056062304211="` echo /root/.ansible/tmp/ansible-tmp-1604658748.2668345-28305-235056062304211 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpf472l01v TO /root/.ansible/tmp/ansible-tmp-1604658748.2668345-28305-235056062304211/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658748.2668345-28305-235056062304211/ /root/.ansible/tmp/ansible-tmp-1604658748.2668345-28305-235056062304211/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658748.2668345-28305-235056062304211/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658748.2668345-28305-235056062304211/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658748.4677064-28331-217446271066693 `" && echo ansible-tmp-1604658748.4677064-28331-217446271066693="` echo /root/.ansible/tmp/ansible-tmp-1604658748.4677064-28331-217446271066693 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbs3c0aqo TO /root/.ansible/tmp/ansible-tmp-1604658748.4677064-28331-217446271066693/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658748.4677064-28331-217446271066693/ /root/.ansible/tmp/ansible-tmp-1604658748.4677064-28331-217446271066693/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658748.4677064-28331-217446271066693/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658748.4677064-28331-217446271066693/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.236975",
    "end": "2020-11-06 10:32:31.834708",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:32:28.597733",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   d5f67137..d4e47ccf  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d5f67137..d4e47ccf  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla d4e47ccf] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 1162 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d4e47ccf] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d4e47ccf] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d5f67137..d4e47ccf  HEAD -> gorilla"
    ]
}

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding carrier-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658752.0745492-28383-209648715709367 `" && echo ansible-tmp-1604658752.0745492-28383-209648715709367="` echo /root/.ansible/tmp/ansible-tmp-1604658752.0745492-28383-209648715709367 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpv06dbw4k TO /root/.ansible/tmp/ansible-tmp-1604658752.0745492-28383-209648715709367/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658752.0745492-28383-209648715709367/ /root/.ansible/tmp/ansible-tmp-1604658752.0745492-28383-209648715709367/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658752.0745492-28383-209648715709367/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658752.0745492-28383-209648715709367/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "ebf39e3d696d21f8f7b231cc1556e148d9bc32ca",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"ebf39e3d696d21f8f7b231cc1556e148d9bc32ca\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E\"},\"name\":\"carrier-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T09:21:48Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E"
                },
                "name": "carrier-net-role-tokenreview-binding",
                "resourceVersion": "2396603",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/carrier-net-role-tokenreview-binding",
                "uid": "595b15f6-118b-4cc4-8d71-d2e003a9ffc1"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "carrier-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658752.9860196-28423-144860468215756 `" && echo ansible-tmp-1604658752.9860196-28423-144860468215756="` echo /root/.ansible/tmp/ansible-tmp-1604658752.9860196-28423-144860468215756 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6s45rsrw TO /root/.ansible/tmp/ansible-tmp-1604658752.9860196-28423-144860468215756/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658752.9860196-28423-144860468215756/ /root/.ansible/tmp/ansible-tmp-1604658752.9860196-28423-144860468215756/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658752.9860196-28423-144860468215756/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658752.9860196-28423-144860468215756/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658788.6037548-28423-11256930004295 `" && echo ansible-tmp-1604658788.6037548-28423-11256930004295="` echo /root/.ansible/tmp/ansible-tmp-1604658788.6037548-28423-11256930004295 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpd984th5i TO /root/.ansible/tmp/ansible-tmp-1604658788.6037548-28423-11256930004295/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658788.6037548-28423-11256930004295/ /root/.ansible/tmp/ansible-tmp-1604658788.6037548-28423-11256930004295/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658788.6037548-28423-11256930004295/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658788.6037548-28423-11256930004295/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658824.2180324-28423-69546310965601 `" && echo ansible-tmp-1604658824.2180324-28423-69546310965601="` echo /root/.ansible/tmp/ansible-tmp-1604658824.2180324-28423-69546310965601 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7s7lty87 TO /root/.ansible/tmp/ansible-tmp-1604658824.2180324-28423-69546310965601/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658824.2180324-28423-69546310965601/ /root/.ansible/tmp/ansible-tmp-1604658824.2180324-28423-69546310965601/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658824.2180324-28423-69546310965601/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658824.2180324-28423-69546310965601/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658859.8742576-28423-57311110952031 `" && echo ansible-tmp-1604658859.8742576-28423-57311110952031="` echo /root/.ansible/tmp/ansible-tmp-1604658859.8742576-28423-57311110952031 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpqupsfzn7 TO /root/.ansible/tmp/ansible-tmp-1604658859.8742576-28423-57311110952031/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658859.8742576-28423-57311110952031/ /root/.ansible/tmp/ansible-tmp-1604658859.8742576-28423-57311110952031/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658859.8742576-28423-57311110952031/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658859.8742576-28423-57311110952031/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T10:33:56Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM"
                },
                "name": "vault-reviewer",
                "namespace": "carrier-net",
                "resourceVersion": "2428756",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-reviewer",
                "uid": "bea86b0e-601e-439a-955a-33e05387d601"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-jrggp"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658860.7047079-28537-153389454727952 `" && echo ansible-tmp-1604658860.7047079-28537-153389454727952="` echo /root/.ansible/tmp/ansible-tmp-1604658860.7047079-28537-153389454727952 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpgh4x2yj2 TO /root/.ansible/tmp/ansible-tmp-1604658860.7047079-28537-153389454727952/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658860.7047079-28537-153389454727952/ /root/.ansible/tmp/ansible-tmp-1604658860.7047079-28537-153389454727952/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658860.7047079-28537-153389454727952/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658860.7047079-28537-153389454727952/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T10:33:56Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4"
                },
                "name": "vault-auth",
                "namespace": "carrier-net",
                "resourceVersion": "2428754",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-auth",
                "uid": "318ef95c-aad4-4ef8-80cb-5bd275f3dcc6"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-5tsvd"
                }
            ]
        }
    ]
}

TASK [include_role : setup/vault_kubernetes] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:32

TASK [Waiting for the namespace walmart-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658861.5728073-28571-99618414401775 `" && echo ansible-tmp-1604658861.5728073-28571-99618414401775="` echo /root/.ansible/tmp/ansible-tmp-1604658861.5728073-28571-99618414401775 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpy7rgredz TO /root/.ansible/tmp/ansible-tmp-1604658861.5728073-28571-99618414401775/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658861.5728073-28571-99618414401775/ /root/.ansible/tmp/ansible-tmp-1604658861.5728073-28571-99618414401775/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658861.5728073-28571-99618414401775/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658861.5728073-28571-99618414401775/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "42333c092f583cd8c9e567f7c9309cf9b1a19a7a",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"42333c092f583cd8c9e567f7c9309cf9b1a19a7a\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0\"},\"name\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T10:31:53Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0"
                },
                "name": "walmart-net",
                "resourceVersion": "2428427",
                "selfLink": "/api/v1/namespaces/walmart-net",
                "uid": "7edbe27f-2408-40b0-98c3-f7f1849e75e0"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658862.3278532-28605-30767139949548 `" && echo ansible-tmp-1604658862.3278532-28605-30767139949548="` echo /root/.ansible/tmp/ansible-tmp-1604658862.3278532-28605-30767139949548 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpatheb8la TO /root/.ansible/tmp/ansible-tmp-1604658862.3278532-28605-30767139949548/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658862.3278532-28605-30767139949548/ /root/.ansible/tmp/ansible-tmp-1604658862.3278532-28605-30767139949548/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658862.3278532-28605-30767139949548/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658862.3278532-28605-30767139949548/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658862.5176375-28631-3169890460897 `" && echo ansible-tmp-1604658862.5176375-28631-3169890460897="` echo /root/.ansible/tmp/ansible-tmp-1604658862.5176375-28631-3169890460897 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbi31ii7w TO /root/.ansible/tmp/ansible-tmp-1604658862.5176375-28631-3169890460897/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658862.5176375-28631-3169890460897/ /root/.ansible/tmp/ansible-tmp-1604658862.5176375-28631-3169890460897/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658862.5176375-28631-3169890460897/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658862.5176375-28631-3169890460897/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658862.916766-28669-137482652182901 `" && echo ansible-tmp-1604658862.916766-28669-137482652182901="` echo /root/.ansible/tmp/ansible-tmp-1604658862.916766-28669-137482652182901 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp24b0acbr TO /root/.ansible/tmp/ansible-tmp-1604658862.916766-28669-137482652182901/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658862.916766-28669-137482652182901/ /root/.ansible/tmp/ansible-tmp-1604658862.916766-28669-137482652182901/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658862.916766-28669-137482652182901/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658862.916766-28669-137482652182901/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.085548",
    "end": "2020-11-06 10:34:23.133440",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:23.047892",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"",
    "stdout_lines": [
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.085548",
            "end": "2020-11-06 10:34:23.133440",
            "failed": false,
            "rc": 0,
            "start": "2020-11-06 10:34:23.047892",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"",
            "stdout_lines": [
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"walmart-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658863.3761601-28716-58810066638514 `" && echo ansible-tmp-1604658863.3761601-28716-58810066638514="` echo /root/.ansible/tmp/ansible-tmp-1604658863.3761601-28716-58810066638514 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmplodn1x_w TO /root/.ansible/tmp/ansible-tmp-1604658863.3761601-28716-58810066638514/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658863.3761601-28716-58810066638514/ /root/.ansible/tmp/ansible-tmp-1604658863.3761601-28716-58810066638514/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658863.3761601-28716-58810066638514/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658863.3761601-28716-58810066638514/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
    "delta": "0:00:00.048037",
    "end": "2020-11-06 10:34:23.554377",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:23.506340",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: walmart-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: walmart-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658863.6168604-28751-74429775183878 `" && echo ansible-tmp-1604658863.6168604-28751-74429775183878="` echo /root/.ansible/tmp/ansible-tmp-1604658863.6168604-28751-74429775183878 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp9z8gnd88 TO /root/.ansible/tmp/ansible-tmp-1604658863.6168604-28751-74429775183878/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658863.6168604-28751-74429775183878/ /root/.ansible/tmp/ansible-tmp-1604658863.6168604-28751-74429775183878/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658863.6168604-28751-74429775183878/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658863.6168604-28751-74429775183878/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.246330",
    "end": "2020-11-06 10:34:23.993917",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:23.747587",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658864.0647194-28794-181063714981370 `" && echo ansible-tmp-1604658864.0647194-28794-181063714981370="` echo /root/.ansible/tmp/ansible-tmp-1604658864.0647194-28794-181063714981370 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp5hcg0aac TO /root/.ansible/tmp/ansible-tmp-1604658864.0647194-28794-181063714981370/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658864.0647194-28794-181063714981370/ /root/.ansible/tmp/ansible-tmp-1604658864.0647194-28794-181063714981370/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658864.0647194-28794-181063714981370/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658864.0647194-28794-181063714981370/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.292510",
    "end": "2020-11-06 10:34:24.488402",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:24.195892",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658864.6991563-28855-59610402710753 `" && echo ansible-tmp-1604658864.6991563-28855-59610402710753="` echo /root/.ansible/tmp/ansible-tmp-1604658864.6991563-28855-59610402710753 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpabfqv6le TO /root/.ansible/tmp/ansible-tmp-1604658864.6991563-28855-59610402710753/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658864.6991563-28855-59610402710753/ /root/.ansible/tmp/ansible-tmp-1604658864.6991563-28855-59610402710753/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658864.6991563-28855-59610402710753/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658864.6991563-28855-59610402710753/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
    "delta": "0:00:00.038977",
    "end": "2020-11-06 10:34:24.871506",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:34:24.832529",
    "stderr": "No policy named: vault-crypto-orderer-walmart-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-orderer-walmart-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297 `" && echo ansible-tmp-1604658864.9610825-28891-93756523564297="` echo /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp870gewf4 TO /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/ /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpuqxig9yq/orderer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/ /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp3ao1r3_v TO /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/ /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
    "dest": "./build/vault-crypto-walmart-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
            "content": null,
            "dest": "./build/vault-crypto-walmart-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8e853417c42460b613805d59c18a9b53",
    "mode": "0644",
    "owner": "root",
    "size": 297,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658864.9610825-28891-93756523564297/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658865.3495343-28933-75494425415679 `" && echo ansible-tmp-1604658865.3495343-28933-75494425415679="` echo /root/.ansible/tmp/ansible-tmp-1604658865.3495343-28933-75494425415679 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmps_evf3uc TO /root/.ansible/tmp/ansible-tmp-1604658865.3495343-28933-75494425415679/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658865.3495343-28933-75494425415679/ /root/.ansible/tmp/ansible-tmp-1604658865.3495343-28933-75494425415679/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658865.3495343-28933-75494425415679/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658865.3495343-28933-75494425415679/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
    "delta": "0:00:00.041780",
    "end": "2020-11-06 10:34:25.522084",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:25.480304",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658865.590556-28969-263327454097665 `" && echo ansible-tmp-1604658865.590556-28969-263327454097665="` echo /root/.ansible/tmp/ansible-tmp-1604658865.590556-28969-263327454097665 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmptkhi2r04 TO /root/.ansible/tmp/ansible-tmp-1604658865.590556-28969-263327454097665/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658865.590556-28969-263327454097665/ /root/.ansible/tmp/ansible-tmp-1604658865.590556-28969-263327454097665/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658865.590556-28969-263327454097665/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658865.590556-28969-263327454097665/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.040397",
    "end": "2020-11-06 10:34:25.801446",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:25.761049",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658866.0970747-29014-214953570604984 `" && echo ansible-tmp-1604658866.0970747-29014-214953570604984="` echo /root/.ansible/tmp/ansible-tmp-1604658866.0970747-29014-214953570604984 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpy0l822ed TO /root/.ansible/tmp/ansible-tmp-1604658866.0970747-29014-214953570604984/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658866.0970747-29014-214953570604984/ /root/.ansible/tmp/ansible-tmp-1604658866.0970747-29014-214953570604984/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658866.0970747-29014-214953570604984/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658866.0970747-29014-214953570604984/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658866.7170596-29042-198096323893659 `" && echo ansible-tmp-1604658866.7170596-29042-198096323893659="` echo /root/.ansible/tmp/ansible-tmp-1604658866.7170596-29042-198096323893659 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpsxcnph04 TO /root/.ansible/tmp/ansible-tmp-1604658866.7170596-29042-198096323893659/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658866.7170596-29042-198096323893659/ /root/.ansible/tmp/ansible-tmp-1604658866.7170596-29042-198096323893659/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658866.7170596-29042-198096323893659/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658866.7170596-29042-198096323893659/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.101679",
    "end": "2020-11-06 10:34:26.948553",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:26.846874",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658867.1125836-29078-19648391573905 `" && echo ansible-tmp-1604658867.1125836-29078-19648391573905="` echo /root/.ansible/tmp/ansible-tmp-1604658867.1125836-29078-19648391573905 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpcvncsnwq TO /root/.ansible/tmp/ansible-tmp-1604658867.1125836-29078-19648391573905/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658867.1125836-29078-19648391573905/ /root/.ansible/tmp/ansible-tmp-1604658867.1125836-29078-19648391573905/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658867.1125836-29078-19648391573905/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658867.1125836-29078-19648391573905/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI\"},\"name\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-06T10:33:56Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI"
                },
                "name": "carrier-net",
                "resourceVersion": "2428747",
                "selfLink": "/api/v1/namespaces/carrier-net",
                "uid": "58c78022-1055-4ca7-af0d-9f4d0c27bc4b"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658867.8424962-29112-200695138156759 `" && echo ansible-tmp-1604658867.8424962-29112-200695138156759="` echo /root/.ansible/tmp/ansible-tmp-1604658867.8424962-29112-200695138156759 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpizmdy96w TO /root/.ansible/tmp/ansible-tmp-1604658867.8424962-29112-200695138156759/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658867.8424962-29112-200695138156759/ /root/.ansible/tmp/ansible-tmp-1604658867.8424962-29112-200695138156759/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658867.8424962-29112-200695138156759/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658867.8424962-29112-200695138156759/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "atime": 1604658862.6501887,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604658865.2462277,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 2943,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604658865.2462277,
        "nlink": 2,
        "path": "./build",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "3060513408",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658868.264831-29154-29624696881866 `" && echo ansible-tmp-1604658868.264831-29154-29624696881866="` echo /root/.ansible/tmp/ansible-tmp-1604658868.264831-29154-29624696881866 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpb_cb7r43 TO /root/.ansible/tmp/ansible-tmp-1604658868.264831-29154-29624696881866/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658868.264831-29154-29624696881866/ /root/.ansible/tmp/ansible-tmp-1604658868.264831-29154-29624696881866/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658868.264831-29154-29624696881866/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658868.264831-29154-29624696881866/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.045698",
    "end": "2020-11-06 10:34:28.442477",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:28.396779",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"\n\"walmart-net-auth/\"",
    "stdout_lines": [
        "\"token/\"",
        "\"walmart-net-auth/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.045698",
            "end": "2020-11-06 10:34:28.442477",
            "failed": false,
            "rc": 0,
            "start": "2020-11-06 10:34:28.396779",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"\n\"walmart-net-auth/\"",
            "stdout_lines": [
                "\"token/\"",
                "\"walmart-net-auth/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"carrier-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item="walmart-net-auth/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"walmart-net-auth/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658868.6707797-29201-237057745961306 `" && echo ansible-tmp-1604658868.6707797-29201-237057745961306="` echo /root/.ansible/tmp/ansible-tmp-1604658868.6707797-29201-237057745961306 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpb24voezl TO /root/.ansible/tmp/ansible-tmp-1604658868.6707797-29201-237057745961306/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658868.6707797-29201-237057745961306/ /root/.ansible/tmp/ansible-tmp-1604658868.6707797-29201-237057745961306/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658868.6707797-29201-237057745961306/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658868.6707797-29201-237057745961306/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
    "delta": "0:00:00.040637",
    "end": "2020-11-06 10:34:28.845003",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:28.804366",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: carrier-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: carrier-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658868.9080992-29236-198930115909 `" && echo ansible-tmp-1604658868.9080992-29236-198930115909="` echo /root/.ansible/tmp/ansible-tmp-1604658868.9080992-29236-198930115909 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp23a3k048 TO /root/.ansible/tmp/ansible-tmp-1604658868.9080992-29236-198930115909/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658868.9080992-29236-198930115909/ /root/.ansible/tmp/ansible-tmp-1604658868.9080992-29236-198930115909/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658868.9080992-29236-198930115909/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658868.9080992-29236-198930115909/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.201892",
    "end": "2020-11-06 10:34:29.239279",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:29.037387",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658869.3166964-29277-179079539039792 `" && echo ansible-tmp-1604658869.3166964-29277-179079539039792="` echo /root/.ansible/tmp/ansible-tmp-1604658869.3166964-29277-179079539039792 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpqjgdhzdk TO /root/.ansible/tmp/ansible-tmp-1604658869.3166964-29277-179079539039792/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658869.3166964-29277-179079539039792/ /root/.ansible/tmp/ansible-tmp-1604658869.3166964-29277-179079539039792/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658869.3166964-29277-179079539039792/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658869.3166964-29277-179079539039792/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.274959",
    "end": "2020-11-06 10:34:29.725681",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:29.450722",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658869.9322722-29339-132407812896797 `" && echo ansible-tmp-1604658869.9322722-29339-132407812896797="` echo /root/.ansible/tmp/ansible-tmp-1604658869.9322722-29339-132407812896797 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp36_1bptv TO /root/.ansible/tmp/ansible-tmp-1604658869.9322722-29339-132407812896797/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658869.9322722-29339-132407812896797/ /root/.ansible/tmp/ansible-tmp-1604658869.9322722-29339-132407812896797/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658869.9322722-29339-132407812896797/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658869.9322722-29339-132407812896797/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-peer-carrier-net-ro\n",
    "delta": "0:00:00.044806",
    "end": "2020-11-06 10:34:30.118060",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-peer-carrier-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:34:30.073254",
    "stderr": "No policy named: vault-crypto-peer-carrier-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-peer-carrier-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197 `" && echo ansible-tmp-1604658870.2408867-29378-226225184296197="` echo /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpf49eqllt TO /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/ /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmppysyizot/peer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/ /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp8030l7v7 TO /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/ /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
    "dest": "./build/vault-crypto-carrier-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "peer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
            "content": null,
            "dest": "./build/vault-crypto-carrier-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a9752761bec6323a75d51e7a8cef75ea",
    "mode": "0644",
    "owner": "root",
    "size": 433,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658870.2408867-29378-226225184296197/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658870.5975885-29418-250249779949392 `" && echo ansible-tmp-1604658870.5975885-29418-250249779949392="` echo /root/.ansible/tmp/ansible-tmp-1604658870.5975885-29418-250249779949392 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpzbs1fue8 TO /root/.ansible/tmp/ansible-tmp-1604658870.5975885-29418-250249779949392/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658870.5975885-29418-250249779949392/ /root/.ansible/tmp/ansible-tmp-1604658870.5975885-29418-250249779949392/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658870.5975885-29418-250249779949392/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658870.5975885-29418-250249779949392/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
    "delta": "0:00:00.039068",
    "end": "2020-11-06 10:34:30.768523",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:30.729455",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658870.836291-29454-75590054055538 `" && echo ansible-tmp-1604658870.836291-29454-75590054055538="` echo /root/.ansible/tmp/ansible-tmp-1604658870.836291-29454-75590054055538 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp4l8nhdw7 TO /root/.ansible/tmp/ansible-tmp-1604658870.836291-29454-75590054055538/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658870.836291-29454-75590054055538/ /root/.ansible/tmp/ansible-tmp-1604658870.836291-29454-75590054055538/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658870.836291-29454-75590054055538/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658870.836291-29454-75590054055538/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.041483",
    "end": "2020-11-06 10:34:31.008807",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:30.967324",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658871.2535715-29500-24870843234327 `" && echo ansible-tmp-1604658871.2535715-29500-24870843234327="` echo /root/.ansible/tmp/ansible-tmp-1604658871.2535715-29500-24870843234327 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpi12rege5 TO /root/.ansible/tmp/ansible-tmp-1604658871.2535715-29500-24870843234327/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658871.2535715-29500-24870843234327/ /root/.ansible/tmp/ansible-tmp-1604658871.2535715-29500-24870843234327/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658871.2535715-29500-24870843234327/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658871.2535715-29500-24870843234327/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658871.9141881-29528-56112575918758 `" && echo ansible-tmp-1604658871.9141881-29528-56112575918758="` echo /root/.ansible/tmp/ansible-tmp-1604658871.9141881-29528-56112575918758 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpes7aet0o TO /root/.ansible/tmp/ansible-tmp-1604658871.9141881-29528-56112575918758/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658871.9141881-29528-56112575918758/ /root/.ansible/tmp/ansible-tmp-1604658871.9141881-29528-56112575918758/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658871.9141881-29528-56112575918758/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658871.9141881-29528-56112575918758/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.103468",
    "end": "2020-11-06 10:34:32.146897",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:32.043429",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [include_role : create/storageclass] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:43

TASK [Checking if the storage class walmartsc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass walmartsc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658872.4290192-29564-150601775958676 `" && echo ansible-tmp-1604658872.4290192-29564-150601775958676="` echo /root/.ansible/tmp/ansible-tmp-1604658872.4290192-29564-150601775958676 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprq5g0p52 TO /root/.ansible/tmp/ansible-tmp-1604658872.4290192-29564-150601775958676/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658872.4290192-29564-150601775958676/ /root/.ansible/tmp/ansible-tmp-1604658872.4290192-29564-150601775958676/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658872.4290192-29564-150601775958676/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658872.4290192-29564-150601775958676/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmartsc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-11-06T08:18:49Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                },
                "name": "walmartsc",
                "resourceVersion": "2406961",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-11-06T08:18:49Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                        },
                        "name": "walmartsc",
                        "resourceVersion": "2406961",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                        "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of walmartsc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the storage class carriersc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658873.4270074-29612-40251713336475 `" && echo ansible-tmp-1604658873.4270074-29612-40251713336475="` echo /root/.ansible/tmp/ansible-tmp-1604658873.4270074-29612-40251713336475 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpze9wv_0k TO /root/.ansible/tmp/ansible-tmp-1604658873.4270074-29612-40251713336475/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658873.4270074-29612-40251713336475/ /root/.ansible/tmp/ansible-tmp-1604658873.4270074-29612-40251713336475/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658873.4270074-29612-40251713336475/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658873.4270074-29612-40251713336475/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carriersc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:44:35Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                },
                "name": "carriersc",
                "resourceVersion": "378759",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:44:35Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                        },
                        "name": "carriersc",
                        "resourceVersion": "378759",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                        "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/ca-server] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658874.495018-29660-109047379647874 `" && echo ansible-tmp-1604658874.495018-29660-109047379647874="` echo /root/.ansible/tmp/ansible-tmp-1604658874.495018-29660-109047379647874 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpoeyz7eya TO /root/.ansible/tmp/ansible-tmp-1604658874.495018-29660-109047379647874/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658874.495018-29660-109047379647874/ /root/.ansible/tmp/ansible-tmp-1604658874.495018-29660-109047379647874/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658874.495018-29660-109047379647874/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658874.495018-29660-109047379647874/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
    "delta": "0:00:00.085781",
    "end": "2020-11-06 10:34:34.710998",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:34:34.625217",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/ordererOrganizations/walmart-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658874.828937-29697-17821283555101 `" && echo ansible-tmp-1604658874.828937-29697-17821283555101="` echo /root/.ansible/tmp/ansible-tmp-1604658874.828937-29697-17821283555101 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpcssst0kj TO /root/.ansible/tmp/ansible-tmp-1604658874.828937-29697-17821283555101/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658874.828937-29697-17821283555101/ /root/.ansible/tmp/ansible-tmp-1604658874.828937-29697-17821283555101/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658874.828937-29697-17821283555101/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658874.828937-29697-17821283555101/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658875.0159018-29723-243941131919538 `" && echo ansible-tmp-1604658875.0159018-29723-243941131919538="` echo /root/.ansible/tmp/ansible-tmp-1604658875.0159018-29723-243941131919538 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpc5r0mnng TO /root/.ansible/tmp/ansible-tmp-1604658875.0159018-29723-243941131919538/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658875.0159018-29723-243941131919538/ /root/.ansible/tmp/ansible-tmp-1604658875.0159018-29723-243941131919538/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658875.0159018-29723-243941131919538/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658875.0159018-29723-243941131919538/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658875.3283963-29757-270902450006931 `" && echo ansible-tmp-1604658875.3283963-29757-270902450006931="` echo /root/.ansible/tmp/ansible-tmp-1604658875.3283963-29757-270902450006931 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpuevwd403 TO /root/.ansible/tmp/ansible-tmp-1604658875.3283963-29757-270902450006931/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658875.3283963-29757-270902450006931/ /root/.ansible/tmp/ansible-tmp-1604658875.3283963-29757-270902450006931/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658875.3283963-29757-270902450006931/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658875.3283963-29757-270902450006931/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658875.573539-29783-111497053795639 `" && echo ansible-tmp-1604658875.573539-29783-111497053795639="` echo /root/.ansible/tmp/ansible-tmp-1604658875.573539-29783-111497053795639 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfii05ugf TO /root/.ansible/tmp/ansible-tmp-1604658875.573539-29783-111497053795639/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658875.573539-29783-111497053795639/ /root/.ansible/tmp/ansible-tmp-1604658875.573539-29783-111497053795639/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658875.573539-29783-111497053795639/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658875.573539-29783-111497053795639/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart\"\n",
    "delta": "0:00:00.008392",
    "end": "2020-11-06 10:34:35.712336",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:35.703944",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658875.7799227-29812-31345989746399 `" && echo ansible-tmp-1604658875.7799227-29812-31345989746399="` echo /root/.ansible/tmp/ansible-tmp-1604658875.7799227-29812-31345989746399 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpw15dx0aw TO /root/.ansible/tmp/ansible-tmp-1604658875.7799227-29812-31345989746399/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658875.7799227-29812-31345989746399/ /root/.ansible/tmp/ansible-tmp-1604658875.7799227-29812-31345989746399/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658875.7799227-29812-31345989746399/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658875.7799227-29812-31345989746399/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
    "delta": "0:00:00.043254",
    "end": "2020-11-06 10:34:35.953592",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:35.910338",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658876.0163999-29850-140603431608630 `" && echo ansible-tmp-1604658876.0163999-29850-140603431608630="` echo /root/.ansible/tmp/ansible-tmp-1604658876.0163999-29850-140603431608630 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp3xqw8d_o TO /root/.ansible/tmp/ansible-tmp-1604658876.0163999-29850-140603431608630/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658876.0163999-29850-140603431608630/ /root/.ansible/tmp/ansible-tmp-1604658876.0163999-29850-140603431608630/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658876.0163999-29850-140603431608630/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658876.0163999-29850-140603431608630/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
    "delta": "0:00:00.046927",
    "end": "2020-11-06 10:34:36.201318",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:34:36.154391",
    "stderr": "No value found at secret/credentials/walmart-net/ca/walmart",
    "stderr_lines": [
        "No value found at secret/credentials/walmart-net/ca/walmart"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658876.2677095-29884-215728892873534 `" && echo ansible-tmp-1604658876.2677095-29884-215728892873534="` echo /root/.ansible/tmp/ansible-tmp-1604658876.2677095-29884-215728892873534 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpjvcytrc0 TO /root/.ansible/tmp/ansible-tmp-1604658876.2677095-29884-215728892873534/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658876.2677095-29884-215728892873534/ /root/.ansible/tmp/ansible-tmp-1604658876.2677095-29884-215728892873534/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658876.2677095-29884-215728892873534/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658876.2677095-29884-215728892873534/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
    "delta": "0:00:00.045181",
    "end": "2020-11-06 10:34:36.443499",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:36.398318",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/walmart-net/ca/walmart",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/walmart-net/ca/walmart"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658876.5066156-29920-203589856457866 `" && echo ansible-tmp-1604658876.5066156-29920-203589856457866="` echo /root/.ansible/tmp/ansible-tmp-1604658876.5066156-29920-203589856457866 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpokvrqdvs TO /root/.ansible/tmp/ansible-tmp-1604658876.5066156-29920-203589856457866/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658876.5066156-29920-203589856457866/ /root/.ansible/tmp/ansible-tmp-1604658876.5066156-29920-203589856457866/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658876.5066156-29920-203589856457866/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658876.5066156-29920-203589856457866/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658877.1289804-29948-88106199784077 `" && echo ansible-tmp-1604658877.1289804-29948-88106199784077="` echo /root/.ansible/tmp/ansible-tmp-1604658877.1289804-29948-88106199784077 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp82u82o1p TO /root/.ansible/tmp/ansible-tmp-1604658877.1289804-29948-88106199784077/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658877.1289804-29948-88106199784077/ /root/.ansible/tmp/ansible-tmp-1604658877.1289804-29948-88106199784077/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658877.1289804-29948-88106199784077/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658877.1289804-29948-88106199784077/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
    "delta": "0:00:00.141347",
    "end": "2020-11-06 10:34:37.401728",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:37.260381",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-walmart-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-walmart-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658877.5700681-29982-102550400878172 `" && echo ansible-tmp-1604658877.5700681-29982-102550400878172="` echo /root/.ansible/tmp/ansible-tmp-1604658877.5700681-29982-102550400878172 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpicl1qva6 TO /root/.ansible/tmp/ansible-tmp-1604658877.5700681-29982-102550400878172/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658877.5700681-29982-102550400878172/ /root/.ansible/tmp/ansible-tmp-1604658877.5700681-29982-102550400878172/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658877.5700681-29982-102550400878172/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658877.5700681-29982-102550400878172/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658877.7730742-30008-181022424784291 `" && echo ansible-tmp-1604658877.7730742-30008-181022424784291="` echo /root/.ansible/tmp/ansible-tmp-1604658877.7730742-30008-181022424784291 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprmbei4fz TO /root/.ansible/tmp/ansible-tmp-1604658877.7730742-30008-181022424784291/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658877.7730742-30008-181022424784291/ /root/.ansible/tmp/ansible-tmp-1604658877.7730742-30008-181022424784291/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658877.7730742-30008-181022424784291/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658877.7730742-30008-181022424784291/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741 `" && echo ansible-tmp-1604658877.9758282-30034-72430702399741="` echo /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp3hqo21fh TO /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/ /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpvisoq782/ca-orderer.tpl TO /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/ /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp4gy5ua__ TO /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/ /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-orderer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "98a580d5a06a395442faeb695bf50cc0",
    "mode": "0644",
    "owner": "root",
    "size": 1272,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658877.9758282-30034-72430702399741/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658878.4117534-30076-146008186489783 `" && echo ansible-tmp-1604658878.4117534-30076-146008186489783="` echo /root/.ansible/tmp/ansible-tmp-1604658878.4117534-30076-146008186489783 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpg6sa8p5x TO /root/.ansible/tmp/ansible-tmp-1604658878.4117534-30076-146008186489783/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658878.4117534-30076-146008186489783/ /root/.ansible/tmp/ansible-tmp-1604658878.4117534-30076-146008186489783/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658878.4117534-30076-146008186489783/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658878.4117534-30076-146008186489783/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604658878.2744246,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
        "ctime": 1604658878.2784245,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3032,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604658878.1424224,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1272,
        "uid": 0,
        "version": "982696035",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658878.705637-30106-56861699723053 `" && echo ansible-tmp-1604658878.705637-30106-56861699723053="` echo /root/.ansible/tmp/ansible-tmp-1604658878.705637-30106-56861699723053 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpq47albwi TO /root/.ansible/tmp/ansible-tmp-1604658878.705637-30106-56861699723053/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658878.705637-30106-56861699723053/ /root/.ansible/tmp/ansible-tmp-1604658878.705637-30106-56861699723053/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658878.705637-30106-56861699723053/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658878.705637-30106-56861699723053/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658878.9093268-30132-164518130019643 `" && echo ansible-tmp-1604658878.9093268-30132-164518130019643="` echo /root/.ansible/tmp/ansible-tmp-1604658878.9093268-30132-164518130019643 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp_zc4e37q TO /root/.ansible/tmp/ansible-tmp-1604658878.9093268-30132-164518130019643/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658878.9093268-30132-164518130019643/ /root/.ansible/tmp/ansible-tmp-1604658878.9093268-30132-164518130019643/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658878.9093268-30132-164518130019643/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658878.9093268-30132-164518130019643/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/test",
            "state": "directory"
        },
        "before": {
            "path": "./build/test",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/test",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/test",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "walmart-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "orderer"
                },
                "server": {
                    "admin": "walmart-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/walmart-net/ca/walmart?user",
                    "secretcert": "secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem",
                    "secretkey": "secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593 `" && echo ansible-tmp-1604658879.2704966-30168-106811616335593="` echo /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp19koos8s TO /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/ /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpzx84n14g TO /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/ /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpsv9jaczy TO /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/ /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
    "dest": "./build/test/walmart-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpzx84n14g",
            "attributes": null,
            "backup": false,
            "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
            "content": null,
            "dest": "./build/test/walmart-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d6c44224a3b7e1ecf5d32e6ff6e2bb00",
    "mode": "0644",
    "owner": "root",
    "size": 843,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658879.2704966-30168-106811616335593/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658879.6174839-30208-105027210785497 `" && echo ansible-tmp-1604658879.6174839-30208-105027210785497="` echo /root/.ansible/tmp/ansible-tmp-1604658879.6174839-30208-105027210785497 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp3x7q9ilc TO /root/.ansible/tmp/ansible-tmp-1604658879.6174839-30208-105027210785497/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658879.6174839-30208-105027210785497/ /root/.ansible/tmp/ansible-tmp-1604658879.6174839-30208-105027210785497/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658879.6174839-30208-105027210785497/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658879.6174839-30208-105027210785497/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.067634",
    "end": "2020-11-06 10:34:39.814864",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:39.747230",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658879.9717357-30245-97010867425467 `" && echo ansible-tmp-1604658879.9717357-30245-97010867425467="` echo /root/.ansible/tmp/ansible-tmp-1604658879.9717357-30245-97010867425467 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpcvalky23 TO /root/.ansible/tmp/ansible-tmp-1604658879.9717357-30245-97010867425467/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658879.9717357-30245-97010867425467/ /root/.ansible/tmp/ansible-tmp-1604658879.9717357-30245-97010867425467/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658879.9717357-30245-97010867425467/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658879.9717357-30245-97010867425467/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658880.1781962-30271-67107005095485 `" && echo ansible-tmp-1604658880.1781962-30271-67107005095485="` echo /root/.ansible/tmp/ansible-tmp-1604658880.1781962-30271-67107005095485 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwjlvzyia TO /root/.ansible/tmp/ansible-tmp-1604658880.1781962-30271-67107005095485/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658880.1781962-30271-67107005095485/ /root/.ansible/tmp/ansible-tmp-1604658880.1781962-30271-67107005095485/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658880.1781962-30271-67107005095485/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658880.1781962-30271-67107005095485/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:04.133161",
    "end": "2020-11-06 10:34:44.442774",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:40.309613",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   d4e47ccf..f821c71e  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d4e47ccf..f821c71e  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla f821c71e] [ci skip] Pushing CA server files\n 2 files changed, 3447 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla f821c71e] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla f821c71e] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d4e47ccf..f821c71e  HEAD -> gorilla"
    ]
}

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658884.5754795-30319-208569162333754 `" && echo ansible-tmp-1604658884.5754795-30319-208569162333754="` echo /root/.ansible/tmp/ansible-tmp-1604658884.5754795-30319-208569162333754 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp_ml39u9i TO /root/.ansible/tmp/ansible-tmp-1604658884.5754795-30319-208569162333754/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658884.5754795-30319-208569162333754/ /root/.ansible/tmp/ansible-tmp-1604658884.5754795-30319-208569162333754/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658884.5754795-30319-208569162333754/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658884.5754795-30319-208569162333754/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
    "delta": "0:00:00.090700",
    "end": "2020-11-06 10:34:44.797246",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:34:44.706546",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/peerOrganizations/carrier-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658884.9101846-30356-225590750089924 `" && echo ansible-tmp-1604658884.9101846-30356-225590750089924="` echo /root/.ansible/tmp/ansible-tmp-1604658884.9101846-30356-225590750089924 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmptp7g0n5b TO /root/.ansible/tmp/ansible-tmp-1604658884.9101846-30356-225590750089924/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658884.9101846-30356-225590750089924/ /root/.ansible/tmp/ansible-tmp-1604658884.9101846-30356-225590750089924/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658884.9101846-30356-225590750089924/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658884.9101846-30356-225590750089924/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658885.1007802-30382-79001732286601 `" && echo ansible-tmp-1604658885.1007802-30382-79001732286601="` echo /root/.ansible/tmp/ansible-tmp-1604658885.1007802-30382-79001732286601 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpsd2vwjlw TO /root/.ansible/tmp/ansible-tmp-1604658885.1007802-30382-79001732286601/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658885.1007802-30382-79001732286601/ /root/.ansible/tmp/ansible-tmp-1604658885.1007802-30382-79001732286601/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658885.1007802-30382-79001732286601/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658885.1007802-30382-79001732286601/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658885.4106097-30416-157201937716297 `" && echo ansible-tmp-1604658885.4106097-30416-157201937716297="` echo /root/.ansible/tmp/ansible-tmp-1604658885.4106097-30416-157201937716297 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpeysay6kk TO /root/.ansible/tmp/ansible-tmp-1604658885.4106097-30416-157201937716297/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658885.4106097-30416-157201937716297/ /root/.ansible/tmp/ansible-tmp-1604658885.4106097-30416-157201937716297/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658885.4106097-30416-157201937716297/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658885.4106097-30416-157201937716297/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658885.6019843-30442-223889174853793 `" && echo ansible-tmp-1604658885.6019843-30442-223889174853793="` echo /root/.ansible/tmp/ansible-tmp-1604658885.6019843-30442-223889174853793 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpc_ve6qoe TO /root/.ansible/tmp/ansible-tmp-1604658885.6019843-30442-223889174853793/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658885.6019843-30442-223889174853793/ /root/.ansible/tmp/ansible-tmp-1604658885.6019843-30442-223889174853793/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658885.6019843-30442-223889174853793/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658885.6019843-30442-223889174853793/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier\"\n",
    "delta": "0:00:00.007920",
    "end": "2020-11-06 10:34:45.739545",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:45.731625",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658885.806141-30471-145732887953220 `" && echo ansible-tmp-1604658885.806141-30471-145732887953220="` echo /root/.ansible/tmp/ansible-tmp-1604658885.806141-30471-145732887953220 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpsx5a7aru TO /root/.ansible/tmp/ansible-tmp-1604658885.806141-30471-145732887953220/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658885.806141-30471-145732887953220/ /root/.ansible/tmp/ansible-tmp-1604658885.806141-30471-145732887953220/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658885.806141-30471-145732887953220/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658885.806141-30471-145732887953220/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
    "delta": "0:00:00.049321",
    "end": "2020-11-06 10:34:45.986348",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:45.937027",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658886.0506635-30509-5652738500163 `" && echo ansible-tmp-1604658886.0506635-30509-5652738500163="` echo /root/.ansible/tmp/ansible-tmp-1604658886.0506635-30509-5652738500163 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmph9tmf83k TO /root/.ansible/tmp/ansible-tmp-1604658886.0506635-30509-5652738500163/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658886.0506635-30509-5652738500163/ /root/.ansible/tmp/ansible-tmp-1604658886.0506635-30509-5652738500163/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658886.0506635-30509-5652738500163/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658886.0506635-30509-5652738500163/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
    "delta": "0:00:00.046896",
    "end": "2020-11-06 10:34:46.233889",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:34:46.186993",
    "stderr": "No value found at secret/credentials/carrier-net/ca/carrier",
    "stderr_lines": [
        "No value found at secret/credentials/carrier-net/ca/carrier"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658886.300084-30544-35634231564013 `" && echo ansible-tmp-1604658886.300084-30544-35634231564013="` echo /root/.ansible/tmp/ansible-tmp-1604658886.300084-30544-35634231564013 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp5awiz_4m TO /root/.ansible/tmp/ansible-tmp-1604658886.300084-30544-35634231564013/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658886.300084-30544-35634231564013/ /root/.ansible/tmp/ansible-tmp-1604658886.300084-30544-35634231564013/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658886.300084-30544-35634231564013/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658886.300084-30544-35634231564013/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
    "delta": "0:00:00.039816",
    "end": "2020-11-06 10:34:46.469721",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:46.429905",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/ca/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/ca/carrier"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658886.5383315-30579-81608174528224 `" && echo ansible-tmp-1604658886.5383315-30579-81608174528224="` echo /root/.ansible/tmp/ansible-tmp-1604658886.5383315-30579-81608174528224 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpu6a_0_q8 TO /root/.ansible/tmp/ansible-tmp-1604658886.5383315-30579-81608174528224/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658886.5383315-30579-81608174528224/ /root/.ansible/tmp/ansible-tmp-1604658886.5383315-30579-81608174528224/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658886.5383315-30579-81608174528224/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658886.5383315-30579-81608174528224/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658887.1826982-30607-75566921554995 `" && echo ansible-tmp-1604658887.1826982-30607-75566921554995="` echo /root/.ansible/tmp/ansible-tmp-1604658887.1826982-30607-75566921554995 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpa8seweju TO /root/.ansible/tmp/ansible-tmp-1604658887.1826982-30607-75566921554995/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658887.1826982-30607-75566921554995/ /root/.ansible/tmp/ansible-tmp-1604658887.1826982-30607-75566921554995/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658887.1826982-30607-75566921554995/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658887.1826982-30607-75566921554995/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
    "delta": "0:00:00.144533",
    "end": "2020-11-06 10:34:47.457290",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:47.312757",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-carrier-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658887.618415-30644-206749458666684 `" && echo ansible-tmp-1604658887.618415-30644-206749458666684="` echo /root/.ansible/tmp/ansible-tmp-1604658887.618415-30644-206749458666684 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpzz56tbdr TO /root/.ansible/tmp/ansible-tmp-1604658887.618415-30644-206749458666684/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658887.618415-30644-206749458666684/ /root/.ansible/tmp/ansible-tmp-1604658887.618415-30644-206749458666684/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658887.618415-30644-206749458666684/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658887.618415-30644-206749458666684/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658887.8626006-30670-261785646048757 `" && echo ansible-tmp-1604658887.8626006-30670-261785646048757="` echo /root/.ansible/tmp/ansible-tmp-1604658887.8626006-30670-261785646048757 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpuz16fcxu TO /root/.ansible/tmp/ansible-tmp-1604658887.8626006-30670-261785646048757/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658887.8626006-30670-261785646048757/ /root/.ansible/tmp/ansible-tmp-1604658887.8626006-30670-261785646048757/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658887.8626006-30670-261785646048757/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658887.8626006-30670-261785646048757/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151 `" && echo ansible-tmp-1604658888.0802453-30696-193707849676151="` echo /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpge5n5c5f TO /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/ /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpzkesbosx/ca-peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/ /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp5ria0wa4 TO /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/ /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "7d8e039d61ac8a6ff961573116ce20ca",
    "mode": "0644",
    "owner": "root",
    "size": 1262,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658888.0802453-30696-193707849676151/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658888.5049436-30738-252253262279963 `" && echo ansible-tmp-1604658888.5049436-30738-252253262279963="` echo /root/.ansible/tmp/ansible-tmp-1604658888.5049436-30738-252253262279963 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpptxio_nu TO /root/.ansible/tmp/ansible-tmp-1604658888.5049436-30738-252253262279963/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658888.5049436-30738-252253262279963/ /root/.ansible/tmp/ansible-tmp-1604658888.5049436-30738-252253262279963/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658888.5049436-30738-252253262279963/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658888.5049436-30738-252253262279963/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604658888.382577,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
        "ctime": 1604658888.382577,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3055,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604658888.250575,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1262,
        "uid": 0,
        "version": "2999276262",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658888.7496488-30768-280156022969140 `" && echo ansible-tmp-1604658888.7496488-30768-280156022969140="` echo /root/.ansible/tmp/ansible-tmp-1604658888.7496488-30768-280156022969140 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfudjggfx TO /root/.ansible/tmp/ansible-tmp-1604658888.7496488-30768-280156022969140/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658888.7496488-30768-280156022969140/ /root/.ansible/tmp/ansible-tmp-1604658888.7496488-30768-280156022969140/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658888.7496488-30768-280156022969140/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658888.7496488-30768-280156022969140/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604658879.0424361,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604658879.5424435,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3033,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604658879.5424435,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "3293327725",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "carrier-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "peer"
                },
                "server": {
                    "admin": "carrier-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/carrier-net/ca/carrier?user",
                    "secretcert": "secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem",
                    "secretkey": "secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950 `" && echo ansible-tmp-1604658889.130065-30806-186031671656950="` echo /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp8tstopyx TO /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/ /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp2skr5jrn TO /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/ /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprtreckhf TO /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/ /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
    "dest": "./build/test/carrier-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp2skr5jrn",
            "attributes": null,
            "backup": false,
            "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
            "content": null,
            "dest": "./build/test/carrier-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea14e4e12c26cbb2cb9ee3a173335ca1",
    "mode": "0644",
    "owner": "root",
    "size": 834,
    "src": "/root/.ansible/tmp/ansible-tmp-1604658889.130065-30806-186031671656950/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658889.4701114-30846-218682695632290 `" && echo ansible-tmp-1604658889.4701114-30846-218682695632290="` echo /root/.ansible/tmp/ansible-tmp-1604658889.4701114-30846-218682695632290 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp01z813ey TO /root/.ansible/tmp/ansible-tmp-1604658889.4701114-30846-218682695632290/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658889.4701114-30846-218682695632290/ /root/.ansible/tmp/ansible-tmp-1604658889.4701114-30846-218682695632290/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658889.4701114-30846-218682695632290/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658889.4701114-30846-218682695632290/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.058628",
    "end": "2020-11-06 10:34:49.659079",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:49.600451",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658889.7741818-30881-246296156735737 `" && echo ansible-tmp-1604658889.7741818-30881-246296156735737="` echo /root/.ansible/tmp/ansible-tmp-1604658889.7741818-30881-246296156735737 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp4fj_aiv2 TO /root/.ansible/tmp/ansible-tmp-1604658889.7741818-30881-246296156735737/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658889.7741818-30881-246296156735737/ /root/.ansible/tmp/ansible-tmp-1604658889.7741818-30881-246296156735737/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658889.7741818-30881-246296156735737/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658889.7741818-30881-246296156735737/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658889.9785304-30907-121288903544885 `" && echo ansible-tmp-1604658889.9785304-30907-121288903544885="` echo /root/.ansible/tmp/ansible-tmp-1604658889.9785304-30907-121288903544885 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpke6tyx15 TO /root/.ansible/tmp/ansible-tmp-1604658889.9785304-30907-121288903544885/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658889.9785304-30907-121288903544885/ /root/.ansible/tmp/ansible-tmp-1604658889.9785304-30907-121288903544885/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658889.9785304-30907-121288903544885/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658889.9785304-30907-121288903544885/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.214384",
    "end": "2020-11-06 10:34:53.322974",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:34:50.108590",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   f821c71e..ff74fa4f  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   f821c71e..ff74fa4f  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla ff74fa4f] [ci skip] Pushing CA server files\n 2 files changed, 1142 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla ff74fa4f] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla ff74fa4f] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   f821c71e..ff74fa4f  HEAD -> gorilla"
    ]
}

TASK [include_role : create/ca-tools] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:70

TASK [waiting for the CA server to be created in walmart-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658893.7346516-30963-41138798305138 `" && echo ansible-tmp-1604658893.7346516-30963-41138798305138="` echo /root/.ansible/tmp/ansible-tmp-1604658893.7346516-30963-41138798305138 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpvfp2iasc TO /root/.ansible/tmp/ansible-tmp-1604658893.7346516-30963-41138798305138/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658893.7346516-30963-41138798305138/ /root/.ansible/tmp/ansible-tmp-1604658893.7346516-30963-41138798305138/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658893.7346516-30963-41138798305138/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658893.7346516-30963-41138798305138/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658924.4082441-30963-26499260586749 `" && echo ansible-tmp-1604658924.4082441-30963-26499260586749="` echo /root/.ansible/tmp/ansible-tmp-1604658924.4082441-30963-26499260586749 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpszquxwe8 TO /root/.ansible/tmp/ansible-tmp-1604658924.4082441-30963-26499260586749/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658924.4082441-30963-26499260586749/ /root/.ansible/tmp/ansible-tmp-1604658924.4082441-30963-26499260586749/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658924.4082441-30963-26499260586749/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658924.4082441-30963-26499260586749/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658955.0456204-30963-191901338445938 `" && echo ansible-tmp-1604658955.0456204-30963-191901338445938="` echo /root/.ansible/tmp/ansible-tmp-1604658955.0456204-30963-191901338445938 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpb9d5m4kr TO /root/.ansible/tmp/ansible-tmp-1604658955.0456204-30963-191901338445938/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658955.0456204-30963-191901338445938/ /root/.ansible/tmp/ansible-tmp-1604658955.0456204-30963-191901338445938/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658955.0456204-30963-191901338445938/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658955.0456204-30963-191901338445938/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604658985.6867871-30963-276482084387294 `" && echo ansible-tmp-1604658985.6867871-30963-276482084387294="` echo /root/.ansible/tmp/ansible-tmp-1604658985.6867871-30963-276482084387294 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp088ovas0 TO /root/.ansible/tmp/ansible-tmp-1604658985.6867871-30963-276482084387294/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604658985.6867871-30963-276482084387294/ /root/.ansible/tmp/ansible-tmp-1604658985.6867871-30963-276482084387294/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604658985.6867871-30963-276482084387294/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604658985.6867871-30963-276482084387294/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (17 retries left).Result was: {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659016.4701445-30963-41153105392743 `" && echo ansible-tmp-1604659016.4701445-30963-41153105392743="` echo /root/.ansible/tmp/ansible-tmp-1604659016.4701445-30963-41153105392743 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbqqfemxc TO /root/.ansible/tmp/ansible-tmp-1604659016.4701445-30963-41153105392743/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659016.4701445-30963-41153105392743/ /root/.ansible/tmp/ansible-tmp-1604659016.4701445-30963-41153105392743/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659016.4701445-30963-41153105392743/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659016.4701445-30963-41153105392743/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 5,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T10:36:06Z",
                "generateName": "ca-876984656-",
                "labels": {
                    "app.kubernetes.io/instance": "walmart-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "876984656"
                },
                "name": "ca-876984656-77d7q",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-876984656",
                        "uid": "d3ea322a-48fa-4b7b-a021-e4c1e8d2ce1f"
                    }
                ],
                "resourceVersion": "2429294",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-876984656-77d7q",
                "uid": "6c483ff6-6590-4fb6-a234-c291c39b391e"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b walmart-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.walmart-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-kcf5k",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/walmart-net/ca/walmart?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-kcf5k",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-kcf5k",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-kcf5k"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:36:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:36:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:36:43Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:36:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://49470d9ea4f5e42bc3b4e35af2de11da2ac613b6c14b231a2eda6d5bc65acb28",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T10:36:42Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://87ebc133c7385c5f4c7dacd14ed09e5ec02849b9c60b8cee27ff004e0d48371f",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://87ebc133c7385c5f4c7dacd14ed09e5ec02849b9c60b8cee27ff004e0d48371f",
                                "exitCode": 0,
                                "finishedAt": "2020-11-06T10:36:42Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-06T10:36:41Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.38",
                "podIPs": [
                    {
                        "ip": "10.1.0.38"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T10:36:21Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659017.1872525-31097-272333651309371 `" && echo ansible-tmp-1604659017.1872525-31097-272333651309371="` echo /root/.ansible/tmp/ansible-tmp-1604659017.1872525-31097-272333651309371 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmps4zyp826 TO /root/.ansible/tmp/ansible-tmp-1604659017.1872525-31097-272333651309371/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659017.1872525-31097-272333651309371/ /root/.ansible/tmp/ansible-tmp-1604659017.1872525-31097-272333651309371/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659017.1872525-31097-272333651309371/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659017.1872525-31097-272333651309371/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659017.3858573-31123-275213358422319 `" && echo ansible-tmp-1604659017.3858573-31123-275213358422319="` echo /root/.ansible/tmp/ansible-tmp-1604659017.3858573-31123-275213358422319 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7v1rbjj3 TO /root/.ansible/tmp/ansible-tmp-1604659017.3858573-31123-275213358422319/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659017.3858573-31123-275213358422319/ /root/.ansible/tmp/ansible-tmp-1604659017.3858573-31123-275213358422319/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659017.3858573-31123-275213358422319/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659017.3858573-31123-275213358422319/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745 `" && echo ansible-tmp-1604659017.5860524-31149-180410896554745="` echo /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp2kn2wavb TO /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/ /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7m3_061e/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/ /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp17xuc3f5 TO /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/ /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "22eb57fc62c4c46e12211ccc6f0ae59e",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659017.5860524-31149-180410896554745/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659017.9900136-31191-70240458106275 `" && echo ansible-tmp-1604659017.9900136-31191-70240458106275="` echo /root/.ansible/tmp/ansible-tmp-1604659017.9900136-31191-70240458106275 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp994551ly TO /root/.ansible/tmp/ansible-tmp-1604659017.9900136-31191-70240458106275/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659017.9900136-31191-70240458106275/ /root/.ansible/tmp/ansible-tmp-1604659017.9900136-31191-70240458106275/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659017.9900136-31191-70240458106275/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659017.9900136-31191-70240458106275/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604659017.8765328,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
        "ctime": 1604659017.8765328,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3061,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604659017.7445307,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "4005198901",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659018.2358491-31221-62738871070181 `" && echo ansible-tmp-1604659018.2358491-31221-62738871070181="` echo /root/.ansible/tmp/ansible-tmp-1604659018.2358491-31221-62738871070181 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp99_exklu TO /root/.ansible/tmp/ansible-tmp-1604659018.2358491-31221-62738871070181/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659018.2358491-31221-62738871070181/ /root/.ansible/tmp/ansible-tmp-1604659018.2358491-31221-62738871070181/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659018.2358491-31221-62738871070181/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659018.2358491-31221-62738871070181/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604658879.0424361,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604658889.3985925,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3033,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604658889.3985925,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "3293327725",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca-tools",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "walmart-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696 `" && echo ansible-tmp-1604659018.6059213-31259-92684523656696="` echo /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmphkql40op TO /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/ /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpdsr3sp37 TO /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/ /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7d6iydgq TO /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/ /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
    "dest": "./build/test/walmart-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpdsr3sp37",
            "attributes": null,
            "backup": false,
            "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
            "content": null,
            "dest": "./build/test/walmart-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "590790aef7bb9a4128b32a0352fb27f4",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659018.6059213-31259-92684523656696/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659018.947806-31299-187863747353564 `" && echo ansible-tmp-1604659018.947806-31299-187863747353564="` echo /root/.ansible/tmp/ansible-tmp-1604659018.947806-31299-187863747353564 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpratf5lfc TO /root/.ansible/tmp/ansible-tmp-1604659018.947806-31299-187863747353564/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659018.947806-31299-187863747353564/ /root/.ansible/tmp/ansible-tmp-1604659018.947806-31299-187863747353564/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659018.947806-31299-187863747353564/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659018.947806-31299-187863747353564/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.055413",
    "end": "2020-11-06 10:36:59.136251",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:36:59.080838",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659019.2493443-31333-122566089724346 `" && echo ansible-tmp-1604659019.2493443-31333-122566089724346="` echo /root/.ansible/tmp/ansible-tmp-1604659019.2493443-31333-122566089724346 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfx4mj64m TO /root/.ansible/tmp/ansible-tmp-1604659019.2493443-31333-122566089724346/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659019.2493443-31333-122566089724346/ /root/.ansible/tmp/ansible-tmp-1604659019.2493443-31333-122566089724346/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659019.2493443-31333-122566089724346/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659019.2493443-31333-122566089724346/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659019.5058753-31359-103566580462816 `" && echo ansible-tmp-1604659019.5058753-31359-103566580462816="` echo /root/.ansible/tmp/ansible-tmp-1604659019.5058753-31359-103566580462816 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp16yefbre TO /root/.ansible/tmp/ansible-tmp-1604659019.5058753-31359-103566580462816/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659019.5058753-31359-103566580462816/ /root/.ansible/tmp/ansible-tmp-1604659019.5058753-31359-103566580462816/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659019.5058753-31359-103566580462816/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659019.5058753-31359-103566580462816/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.538817",
    "end": "2020-11-06 10:37:03.184283",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:36:59.645466",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   ff74fa4f..d4a115fe  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   ff74fa4f..d4a115fe  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla d4a115fe] [ci skip] Pushing CA-tools files\n 2 files changed, 1193 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d4a115fe] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla d4a115fe] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   ff74fa4f..d4a115fe  HEAD -> gorilla"
    ]
}

TASK [waiting for the CA server to be created in carrier-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659023.4599817-31413-93218565924644 `" && echo ansible-tmp-1604659023.4599817-31413-93218565924644="` echo /root/.ansible/tmp/ansible-tmp-1604659023.4599817-31413-93218565924644 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpgn9rp1fx TO /root/.ansible/tmp/ansible-tmp-1604659023.4599817-31413-93218565924644/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659023.4599817-31413-93218565924644/ /root/.ansible/tmp/ansible-tmp-1604659023.4599817-31413-93218565924644/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659023.4599817-31413-93218565924644/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659023.4599817-31413-93218565924644/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T10:36:05Z",
                "generateName": "ca-645c757f7d-",
                "labels": {
                    "app.kubernetes.io/instance": "carrier-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "645c757f7d"
                },
                "name": "ca-645c757f7d-56w5h",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-645c757f7d",
                        "uid": "69415f74-1fae-44ae-8ecb-d14f2cdff02e"
                    }
                ],
                "resourceVersion": "2429247",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-645c757f7d-56w5h",
                "uid": "f7f38667-f8f9-49f7-8974-a3d52e63d90f"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b carrier-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.carrier-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-5tsvd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/carrier-net/ca/carrier?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-5tsvd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-5tsvd",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-5tsvd"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:36:29Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:36:30Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:36:30Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:36:07Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://12556a39ac6f04ab261c897023292668afcb35b50ac92da1ee5efe8875158617",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T10:36:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://730994a858c2eb01c6c804708a1b22e8f5a05f0847d2bcfa75f37df33702c489",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://730994a858c2eb01c6c804708a1b22e8f5a05f0847d2bcfa75f37df33702c489",
                                "exitCode": 0,
                                "finishedAt": "2020-11-06T10:36:28Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-06T10:36:28Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.16",
                "podIPs": [
                    {
                        "ip": "10.1.0.16"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T10:36:07Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659024.1519482-31443-21202761199348 `" && echo ansible-tmp-1604659024.1519482-31443-21202761199348="` echo /root/.ansible/tmp/ansible-tmp-1604659024.1519482-31443-21202761199348 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpb5qln3pm TO /root/.ansible/tmp/ansible-tmp-1604659024.1519482-31443-21202761199348/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659024.1519482-31443-21202761199348/ /root/.ansible/tmp/ansible-tmp-1604659024.1519482-31443-21202761199348/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659024.1519482-31443-21202761199348/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659024.1519482-31443-21202761199348/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659024.351941-31469-43362231350177 `" && echo ansible-tmp-1604659024.351941-31469-43362231350177="` echo /root/.ansible/tmp/ansible-tmp-1604659024.351941-31469-43362231350177 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxz58l1ld TO /root/.ansible/tmp/ansible-tmp-1604659024.351941-31469-43362231350177/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659024.351941-31469-43362231350177/ /root/.ansible/tmp/ansible-tmp-1604659024.351941-31469-43362231350177/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659024.351941-31469-43362231350177/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659024.351941-31469-43362231350177/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952 `" && echo ansible-tmp-1604659024.5556004-31496-146216050443952="` echo /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp8vr3ukz1 TO /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/ /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7ffc57og/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/ /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpopm8vh6o TO /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/ /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "31ce48ae00d8d8ffe510b3550432011b",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659024.5556004-31496-146216050443952/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659024.9564948-31538-189787570055484 `" && echo ansible-tmp-1604659024.9564948-31538-189787570055484="` echo /root/.ansible/tmp/ansible-tmp-1604659024.9564948-31538-189787570055484 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpz42j3ki3 TO /root/.ansible/tmp/ansible-tmp-1604659024.9564948-31538-189787570055484/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659024.9564948-31538-189787570055484/ /root/.ansible/tmp/ansible-tmp-1604659024.9564948-31538-189787570055484/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659024.9564948-31538-189787570055484/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659024.9564948-31538-189787570055484/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604659024.8446379,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
        "ctime": 1604659024.8446379,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3068,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604659024.712636,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "1222575235",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659025.2023425-31568-75295549448454 `" && echo ansible-tmp-1604659025.2023425-31568-75295549448454="` echo /root/.ansible/tmp/ansible-tmp-1604659025.2023425-31568-75295549448454 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpswwla6q1 TO /root/.ansible/tmp/ansible-tmp-1604659025.2023425-31568-75295549448454/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659025.2023425-31568-75295549448454/ /root/.ansible/tmp/ansible-tmp-1604659025.2023425-31568-75295549448454/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659025.2023425-31568-75295549448454/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659025.2023425-31568-75295549448454/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604658879.0424361,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604659018.8765478,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3033,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604659018.8765478,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "3293327725",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca-tools",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "carrier-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185 `" && echo ansible-tmp-1604659025.5741518-31606-50368777471185="` echo /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp4g7x1mqi TO /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/ /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpg0dr1b5n TO /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/ /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpm2atheek TO /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/ /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
    "dest": "./build/test/carrier-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpg0dr1b5n",
            "attributes": null,
            "backup": false,
            "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
            "content": null,
            "dest": "./build/test/carrier-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "1e84a94c7e9daff778218b24a27091ea",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659025.5741518-31606-50368777471185/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659025.9149177-31646-256851565219999 `" && echo ansible-tmp-1604659025.9149177-31646-256851565219999="` echo /root/.ansible/tmp/ansible-tmp-1604659025.9149177-31646-256851565219999 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpyenokgb8 TO /root/.ansible/tmp/ansible-tmp-1604659025.9149177-31646-256851565219999/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659025.9149177-31646-256851565219999/ /root/.ansible/tmp/ansible-tmp-1604659025.9149177-31646-256851565219999/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659025.9149177-31646-256851565219999/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659025.9149177-31646-256851565219999/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.058372",
    "end": "2020-11-06 10:37:06.103123",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:37:06.044751",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659026.2127504-31680-159803476494420 `" && echo ansible-tmp-1604659026.2127504-31680-159803476494420="` echo /root/.ansible/tmp/ansible-tmp-1604659026.2127504-31680-159803476494420 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbzbw8gt6 TO /root/.ansible/tmp/ansible-tmp-1604659026.2127504-31680-159803476494420/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659026.2127504-31680-159803476494420/ /root/.ansible/tmp/ansible-tmp-1604659026.2127504-31680-159803476494420/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659026.2127504-31680-159803476494420/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659026.2127504-31680-159803476494420/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659026.4189813-31706-56058338438466 `" && echo ansible-tmp-1604659026.4189813-31706-56058338438466="` echo /root/.ansible/tmp/ansible-tmp-1604659026.4189813-31706-56058338438466 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpkvh0i1m0 TO /root/.ansible/tmp/ansible-tmp-1604659026.4189813-31706-56058338438466/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659026.4189813-31706-56058338438466/ /root/.ansible/tmp/ansible-tmp-1604659026.4189813-31706-56058338438466/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659026.4189813-31706-56058338438466/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659026.4189813-31706-56058338438466/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.350898",
    "end": "2020-11-06 10:37:14.900592",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:37:06.549694",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   d4a115fe..15011dfa  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d4a115fe..15011dfa  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 15011dfa] [ci skip] Pushing CA-tools files\n 2 files changed, 1011 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 15011dfa] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 15011dfa] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   d4a115fe..15011dfa  HEAD -> gorilla"
    ]
}

TASK [include_role : create/crypto_script] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:85

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659035.166464-31756-259911185512589 `" && echo ansible-tmp-1604659035.166464-31756-259911185512589="` echo /root/.ansible/tmp/ansible-tmp-1604659035.166464-31756-259911185512589 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxxylo1dt TO /root/.ansible/tmp/ansible-tmp-1604659035.166464-31756-259911185512589/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659035.166464-31756-259911185512589/ /root/.ansible/tmp/ansible-tmp-1604659035.166464-31756-259911185512589/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659035.166464-31756-259911185512589/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659035.166464-31756-259911185512589/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368 `" && echo ansible-tmp-1604659035.3850749-31782-131186071715368="` echo /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpe7_e4fzk TO /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/ /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpie3h8c6w/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/ /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmphxwog5sf TO /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/ /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "764a4e842ab03fe5dd1f23e402c24c7319423d30",
    "dest": "./build/generate-crypto-walmart-orderer1.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "764a4e842ab03fe5dd1f23e402c24c7319423d30",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer1.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a87944c789a754d11936fb1a4b3c74b5",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer1",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2591,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659035.3850749-31782-131186071715368/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492 `" && echo ansible-tmp-1604659035.720131-31782-90707347564492="` echo /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6vjss8xj TO /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/ /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp129bo5o4/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/ /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpue3xvfiq TO /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/ /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "aabdfe51d42dc14e58a1dee827440253101c4a2d",
    "dest": "./build/generate-crypto-walmart-orderer2.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "aabdfe51d42dc14e58a1dee827440253101c4a2d",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer2.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "6601ea47fc85eac846679b46fd004573",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer2",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2591,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659035.720131-31782-90707347564492/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970 `" && echo ansible-tmp-1604659036.0544906-31782-68054525476970="` echo /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbx48mbxj TO /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/ /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp2ph996bf/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/ /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpjde8hvzq TO /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/ /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "7a6a999bd6dbb9f2dca69f3190d4b3b87c9e1d7d",
    "dest": "./build/generate-crypto-walmart-orderer3.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "7a6a999bd6dbb9f2dca69f3190d4b3b87c9e1d7d",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer3.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4faef10d00ce6d8ab9a8ce6b53ea9078",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer3",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2591,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659036.0544906-31782-68054525476970/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199 `" && echo ansible-tmp-1604659036.4047813-31898-6877340173199="` echo /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpqm5996j4 TO /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/ /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6c0dwq98/orderer_organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/ /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpoj6l4pp9 TO /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/ /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "1c221654eb868455dfb6e123e29770e8aa2e7a80",
    "dest": "./build/generate-crypto-walmart.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "1c221654eb868455dfb6e123e29770e8aa2e7a80",
            "content": null,
            "dest": "./build/generate-crypto-walmart.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "acec4ed0a4a961285897a89c4176dc05",
    "mode": "0644",
    "owner": "root",
    "size": 2908,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659036.4047813-31898-6877340173199/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659036.7794926-31940-10557683305851 `" && echo ansible-tmp-1604659036.7794926-31940-10557683305851="` echo /root/.ansible/tmp/ansible-tmp-1604659036.7794926-31940-10557683305851 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6y2po4r4 TO /root/.ansible/tmp/ansible-tmp-1604659036.7794926-31940-10557683305851/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659036.7794926-31940-10557683305851/ /root/.ansible/tmp/ansible-tmp-1604659036.7794926-31940-10557683305851/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659036.7794926-31940-10557683305851/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659036.7794926-31940-10557683305851/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728 `" && echo ansible-tmp-1604659037.0469813-31970-222075563257728="` echo /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprqfsnkqd TO /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/ /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpb678vann/organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/ /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmptvcriwz4 TO /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/ /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9b0219314b564b677d8729c2646cc3f70683d9d7",
    "dest": "./build/generate-crypto-carrier.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9b0219314b564b677d8729c2646cc3f70683d9d7",
            "content": null,
            "dest": "./build/generate-crypto-carrier.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "6dbe6657d953c4e519484ce3a085eec5",
    "mode": "0644",
    "owner": "root",
    "size": 5178,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659037.0469813-31970-222075563257728/source",
    "state": "file",
    "uid": 0
}

TASK [pause] *******************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:94
Pausing for 360 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[pause]
Sleeping... so that the client certificates are valid:
ok: [localhost] => {
    "changed": false,
    "delta": 360,
    "echo": true,
    "rc": 0,
    "start": "2020-11-06 10:37:17.396194",
    "stderr": "",
    "stdout": "Paused for 6.0 minutes",
    "stop": "2020-11-06 10:43:17.396474",
    "user_input": ""
}

TASK [include_role : create/crypto/orderer] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:99
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659397.5721185-32015-191456581321333 `" && echo ansible-tmp-1604659397.5721185-32015-191456581321333="` echo /root/.ansible/tmp/ansible-tmp-1604659397.5721185-32015-191456581321333 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpqrhzzuzl TO /root/.ansible/tmp/ansible-tmp-1604659397.5721185-32015-191456581321333/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659397.5721185-32015-191456581321333/ /root/.ansible/tmp/ansible-tmp-1604659397.5721185-32015-191456581321333/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659397.5721185-32015-191456581321333/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659397.5721185-32015-191456581321333/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.063405",
    "end": "2020-11-06 10:43:17.765783",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:17.702378",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Call orderercheck.yaml for orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:16
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml for localhost

TASK [Waiting for CA-tool in walmart-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:2
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659398.0450883-32058-123241990479026 `" && echo ansible-tmp-1604659398.0450883-32058-123241990479026="` echo /root/.ansible/tmp/ansible-tmp-1604659398.0450883-32058-123241990479026 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpeh41sfjn TO /root/.ansible/tmp/ansible-tmp-1604659398.0450883-32058-123241990479026/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659398.0450883-32058-123241990479026/ /root/.ansible/tmp/ansible-tmp-1604659398.0450883-32058-123241990479026/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659398.0450883-32058-123241990479026/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659398.0450883-32058-123241990479026/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T10:38:06Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-htsff",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "77daf3b4-f6af-4ea5-b033-10cb36c14b59"
                    }
                ],
                "resourceVersion": "2429755",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-tools-69d7885f86-htsff",
                "uid": "3b835233-821c-4889-a209-e9fd3c756c8f"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-42dnt",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-42dnt",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-42dnt"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:38:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:38:57Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:38:57Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:38:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://6c6a66e9cc1ebfa39f150ed7353ae268dedf2b600f1537205864473eb2cc629e",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T10:38:57Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.77",
                "podIPs": [
                    {
                        "ip": "10.1.0.77"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T10:38:21Z"
            }
        }
    ]
}

TASK [include_role : {{ playbook_dir }}/../../shared/configuration/roles/check/setup] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:15
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659398.761447-32089-95256529634270 `" && echo ansible-tmp-1604659398.761447-32089-95256529634270="` echo /root/.ansible/tmp/ansible-tmp-1604659398.761447-32089-95256529634270 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmplknxmr6f TO /root/.ansible/tmp/ansible-tmp-1604659398.761447-32089-95256529634270/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659398.761447-32089-95256529634270/ /root/.ansible/tmp/ansible-tmp-1604659398.761447-32089-95256529634270/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659398.761447-32089-95256529634270/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659398.761447-32089-95256529634270/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "atime": 1604658875.1463773,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604658875.7063856,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3016,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604658875.7063856,
        "nlink": 2,
        "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1400525870",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if ca certs already created] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659399.0821233-32125-50334247944926 `" && echo ansible-tmp-1604659399.0821233-32125-50334247944926="` echo /root/.ansible/tmp/ansible-tmp-1604659399.0821233-32125-50334247944926 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpbsuhtczu TO /root/.ansible/tmp/ansible-tmp-1604659399.0821233-32125-50334247944926/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659399.0821233-32125-50334247944926/ /root/.ansible/tmp/ansible-tmp-1604659399.0821233-32125-50334247944926/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659399.0821233-32125-50334247944926/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659399.0821233-32125-50334247944926/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.057301",
    "end": "2020-11-06 10:43:19.270714",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:19.213413",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Check if ca key already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659399.3373961-32161-56213679348689 `" && echo ansible-tmp-1604659399.3373961-32161-56213679348689="` echo /root/.ansible/tmp/ansible-tmp-1604659399.3373961-32161-56213679348689 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp_8cbz1eu TO /root/.ansible/tmp/ansible-tmp-1604659399.3373961-32161-56213679348689/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659399.3373961-32161-56213679348689/ /root/.ansible/tmp/ansible-tmp-1604659399.3373961-32161-56213679348689/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659399.3373961-32161-56213679348689/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659399.3373961-32161-56213679348689/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.052126",
    "end": "2020-11-06 10:43:19.519923",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:19.467797",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call common.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:19
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml for localhost

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659399.632382-32200-202998989792068 `" && echo ansible-tmp-1604659399.632382-32200-202998989792068="` echo /root/.ansible/tmp/ansible-tmp-1604659399.632382-32200-202998989792068 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpet9i51pb TO /root/.ansible/tmp/ansible-tmp-1604659399.632382-32200-202998989792068/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659399.632382-32200-202998989792068/ /root/.ansible/tmp/ansible-tmp-1604659399.632382-32200-202998989792068/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659399.632382-32200-202998989792068/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659399.632382-32200-202998989792068/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:02.193915",
    "end": "2020-11-06 10:43:21.956483",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:19.762568",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Changing the permissions for generate-crypto script] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659402.023238-32245-149288613379304 `" && echo ansible-tmp-1604659402.023238-32245-149288613379304="` echo /root/.ansible/tmp/ansible-tmp-1604659402.023238-32245-149288613379304 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpmus6cy7_ TO /root/.ansible/tmp/ansible-tmp-1604659402.023238-32245-149288613379304/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659402.023238-32245-149288613379304/ /root/.ansible/tmp/ansible-tmp-1604659402.023238-32245-149288613379304/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659402.023238-32245-149288613379304/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659402.023238-32245-149288613379304/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart.sh"
        }
    },
    "files": "generate-crypto-walmart.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart.sh",
    "size": 2908,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659402.2293465-32271-104959132488754 `" && echo ansible-tmp-1604659402.2293465-32271-104959132488754="` echo /root/.ansible/tmp/ansible-tmp-1604659402.2293465-32271-104959132488754 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpjgbs60x2 TO /root/.ansible/tmp/ansible-tmp-1604659402.2293465-32271-104959132488754/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659402.2293465-32271-104959132488754/ /root/.ansible/tmp/ansible-tmp-1604659402.2293465-32271-104959132488754/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659402.2293465-32271-104959132488754/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659402.2293465-32271-104959132488754/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:02.519672",
    "end": "2020-11-06 10:43:24.880859",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:22.361187",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659404.948232-32316-204447895996395 `" && echo ansible-tmp-1604659404.948232-32316-204447895996395="` echo /root/.ansible/tmp/ansible-tmp-1604659404.948232-32316-204447895996395 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxw97qz55 TO /root/.ansible/tmp/ansible-tmp-1604659404.948232-32316-204447895996395/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659404.948232-32316-204447895996395/ /root/.ansible/tmp/ansible-tmp-1604659404.948232-32316-204447895996395/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659404.948232-32316-204447895996395/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659404.948232-32316-204447895996395/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
    "delta": "0:00:00.936563",
    "end": "2020-11-06 10:43:26.014516",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:25.077953",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"orderer.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:25 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:25 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 10:43:25 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e870}\n2020/11/06 10:43:25 [DEBUG] Entered runEnroll\n2020/11/06 10:43:25 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e870}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e8d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a4690 DummyKeystore:<nil>}\n2020/11/06 10:43:25 [INFO] TLS Enabled\n2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:25 [DEBUG] Client Cert File: \n2020/11/06 10:43:25 [DEBUG] Client Key File: \n2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:25 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:25 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:25 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:25 [INFO] encoded CSR\n2020/11/06 10:43:25 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRjCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEtDHJ1brKV+BWVBq+4Za8+zEMfUhl\\nFLyp9SklBrDq8ePlsx5xP46/75UeongexJcGHwAvLeCR/Xg5G87GTPw9qaA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1o\\ndHNmZjAKBggqhkjOPQQDAgNIADBFAiEAwdukb2338+ysPrvGm4B5H+MrV/N56Szc\\n+oFMOIkPH0ICIEuB/qKkXKgRRL5mm1dZVetfDmdvv4IR++b2SATf/6ZK\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRjCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEtDHJ1brKV+BWVBq+4Za8+zEMfUhl\\nFLyp9SklBrDq8ePlsx5xP46/75UeongexJcGHwAvLeCR/Xg5G87GTPw9qaA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1o\\ndHNmZjAKBggqhkjOPQQDAgNIADBFAiEAwdukb2338+ysPrvGm4B5H+MrV/N56Szc\\n+oFMOIkPH0ICIEuB/qKkXKgRRL5mm1dZVetfDmdvv4IR++b2SATf/6ZK\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ fabric-ca-client getcacert -d -u https://ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp\n2020/11/06 10:43:25 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:25 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 10:43:25 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 10:43:25 [DEBUG] Entered runGetCACert\n2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016bd70 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42009dfd0 DummyKeystore:<nil>}\n2020/11/06 10:43:25 [INFO] TLS Enabled\n2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:25 [DEBUG] Client Cert File: \n2020/11/06 10:43:25 [DEBUG] Client Key File: \n2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:25 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/cainfo\n{}\nError: POST failure of request: POST https://ca.walmart-net:7054/cainfo\n{}: Post https://ca.walmart-net:7054/cainfo: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*': No such file or directory\n+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:25 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:25 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 10:43:25 [DEBUG] Checking for enrollment\n2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200d1ec0}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200d1f20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a4b40 DummyKeystore:<nil>}\n2020/11/06 10:43:25 [INFO] TLS Enabled\n2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:25 [DEBUG] Client Cert File: \n2020/11/06 10:43:25 [DEBUG] Client Key File: \n2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:25 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:25 [DEBUG] Home directory: /root/ca-tools/walmart/admin\n2020/11/06 10:43:25 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml\n2020/11/06 10:43:25 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203826f0}\n2020/11/06 10:43:25 [DEBUG] Entered runEnroll\n2020/11/06 10:43:25 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203826f0}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420382750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42046b8c0 DummyKeystore:<nil>}\n2020/11/06 10:43:25 [INFO] TLS Enabled\n2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:25 [DEBUG] Client Cert File: \n2020/11/06 10:43:25 [DEBUG] Client Key File: \n2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:25 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:25 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:25 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:25 [INFO] encoded CSR\n2020/11/06 10:43:25 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOG2Vpb+STzKGC3Z/l11KJnl\\nL/V/abWWu4stkRnOT71jXrB5hg2DfNDRv4SCgQ4Ooscjoupwhx3Xk/dxfwmUykyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAKxIveJzts/SglEHnuxGsFbq7zyY\\nyR6mIVac4V99Cm0NAiB26nT2DEXHVWQV2CcqY3bodgukV3hGFZiN2enyR8Gvrw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOG2Vpb+STzKGC3Z/l11KJnl\\nL/V/abWWu4stkRnOT71jXrB5hg2DfNDRv4SCgQ4Ooscjoupwhx3Xk/dxfwmUykyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAKxIveJzts/SglEHnuxGsFbq7zyY\\nyR6mIVac4V99Cm0NAiB26nT2DEXHVWQV2CcqY3bodgukV3hGFZiN2enyR8Gvrw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts\n+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory\n+ mkdir /root/ca-tools/walmart/admin/msp/admincerts\n+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:25 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:25 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 10:43:25 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038c720}\n2020/11/06 10:43:25 [DEBUG] Entered runEnroll\n2020/11/06 10:43:25 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038c720}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038c780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420469620 DummyKeystore:<nil>}\n2020/11/06 10:43:25 [INFO] TLS Enabled\n2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:25 [DEBUG] Client Cert File: \n2020/11/06 10:43:25 [DEBUG] Client Key File: \n2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:25 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:25 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:25 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:25 [INFO] encoded CSR\n2020/11/06 10:43:25 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGimSxgAogAxfEXQwwnY+p8r\\n8kLXAUk7CJ3NBOd/jLM0bXJFtPoRwHE3yTOXCrhmue3draeoH3s97QAvkdhJeXyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAJwg+0RVya5rxoXHi3XLA9KtCfaQ\\nmzN6vjWtQBGWP+I9AiA8AHCnB9tz33DgPKMtWrFksDPEBQewf7z4BsPy3wiP/w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGimSxgAogAxfEXQwwnY+p8r\\n8kLXAUk7CJ3NBOd/jLM0bXJFtPoRwHE3yTOXCrhmue3draeoH3s97QAvkdhJeXyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAJwg+0RVya5rxoXHi3XLA9KtCfaQ\\nmzN6vjWtQBGWP+I9AiA8AHCnB9tz33DgPKMtWrFksDPEBQewf7z4BsPy3wiP/w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls\n+ cp /root/ca-tools/walmart/admin/tls/keystore/fd0db1afad142ff7c01879c29d8a98f42379c8a3603f44059094a0e6f6c73ba7_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key\n+ cp '/root/ca-tools/walmart/admin/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/admin/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/admin/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/admin/tls/tlscacerts/*': No such file or directory\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"orderer.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:25 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:25 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:25 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e870}",
        "2020/11/06 10:43:25 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:25 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e870}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e8d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a4690 DummyKeystore:<nil>}",
        "2020/11/06 10:43:25 [INFO] TLS Enabled",
        "2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:25 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:25 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:25 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:25 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:25 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:25 [INFO] encoded CSR",
        "2020/11/06 10:43:25 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRjCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEtDHJ1brKV+BWVBq+4Za8+zEMfUhl\\nFLyp9SklBrDq8ePlsx5xP46/75UeongexJcGHwAvLeCR/Xg5G87GTPw9qaA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1o\\ndHNmZjAKBggqhkjOPQQDAgNIADBFAiEAwdukb2338+ysPrvGm4B5H+MrV/N56Szc\\n+oFMOIkPH0ICIEuB/qKkXKgRRL5mm1dZVetfDmdvv4IR++b2SATf/6ZK\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRjCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEtDHJ1brKV+BWVBq+4Za8+zEMfUhl\\nFLyp9SklBrDq8ePlsx5xP46/75UeongexJcGHwAvLeCR/Xg5G87GTPw9qaA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1o\\ndHNmZjAKBggqhkjOPQQDAgNIADBFAiEAwdukb2338+ysPrvGm4B5H+MrV/N56Szc\\n+oFMOIkPH0ICIEuB/qKkXKgRRL5mm1dZVetfDmdvv4IR++b2SATf/6ZK\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ fabric-ca-client getcacert -d -u https://ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp",
        "2020/11/06 10:43:25 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:25 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:25 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 10:43:25 [DEBUG] Entered runGetCACert",
        "2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016bd70 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42009dfd0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:25 [INFO] TLS Enabled",
        "2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:25 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:25 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:25 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/cainfo",
        "{}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/cainfo",
        "{}: Post https://ca.walmart-net:7054/cainfo: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/cacerts/*': No such file or directory",
        "+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:25 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:25 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:25 [DEBUG] Checking for enrollment",
        "2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200d1ec0}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200d1f20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a4b40 DummyKeystore:<nil>}",
        "2020/11/06 10:43:25 [INFO] TLS Enabled",
        "2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:25 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:25 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:25 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:25 [DEBUG] Home directory: /root/ca-tools/walmart/admin",
        "2020/11/06 10:43:25 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:25 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203826f0}",
        "2020/11/06 10:43:25 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:25 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203826f0}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420382750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42046b8c0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:25 [INFO] TLS Enabled",
        "2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:25 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:25 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:25 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:25 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:25 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:25 [INFO] encoded CSR",
        "2020/11/06 10:43:25 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOG2Vpb+STzKGC3Z/l11KJnl\\nL/V/abWWu4stkRnOT71jXrB5hg2DfNDRv4SCgQ4Ooscjoupwhx3Xk/dxfwmUykyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAKxIveJzts/SglEHnuxGsFbq7zyY\\nyR6mIVac4V99Cm0NAiB26nT2DEXHVWQV2CcqY3bodgukV3hGFZiN2enyR8Gvrw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOG2Vpb+STzKGC3Z/l11KJnl\\nL/V/abWWu4stkRnOT71jXrB5hg2DfNDRv4SCgQ4Ooscjoupwhx3Xk/dxfwmUykyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAKxIveJzts/SglEHnuxGsFbq7zyY\\nyR6mIVac4V99Cm0NAiB26nT2DEXHVWQV2CcqY3bodgukV3hGFZiN2enyR8Gvrw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir /root/ca-tools/walmart/admin/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/admin/msp/signcerts/*' /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:25 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:25 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:25 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038c720}",
        "2020/11/06 10:43:25 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:25 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:25 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038c720}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038c780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:25 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420469620 DummyKeystore:<nil>}",
        "2020/11/06 10:43:25 [INFO] TLS Enabled",
        "2020/11/06 10:43:25 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:25 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:25 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:25 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:25 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:25 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:25 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:25 [INFO] encoded CSR",
        "2020/11/06 10:43:25 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGimSxgAogAxfEXQwwnY+p8r\\n8kLXAUk7CJ3NBOd/jLM0bXJFtPoRwHE3yTOXCrhmue3draeoH3s97QAvkdhJeXyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAJwg+0RVya5rxoXHi3XLA9KtCfaQ\\nmzN6vjWtQBGWP+I9AiA8AHCnB9tz33DgPKMtWrFksDPEBQewf7z4BsPy3wiP/w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGimSxgAogAxfEXQwwnY+p8r\\n8kLXAUk7CJ3NBOd/jLM0bXJFtPoRwHE3yTOXCrhmue3draeoH3s97QAvkdhJeXyg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAJwg+0RVya5rxoXHi3XLA9KtCfaQ\\nmzN6vjWtQBGWP+I9AiA8AHCnB9tz33DgPKMtWrFksDPEBQewf7z4BsPy3wiP/w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/admin/tls/keystore/fd0db1afad142ff7c01879c29d8a98f42379c8a3603f44059094a0e6f6c73ba7_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key",
        "+ cp '/root/ca-tools/walmart/admin/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/admin/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/admin/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/admin/tls/tlscacerts/*': No such file or directory",
        "+ cd /"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:48
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659406.0818276-32356-117931663827078 `" && echo ansible-tmp-1604659406.0818276-32356-117931663827078="` echo /root/.ansible/tmp/ansible-tmp-1604659406.0818276-32356-117931663827078 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmps5s2wjo6 TO /root/.ansible/tmp/ansible-tmp-1604659406.0818276-32356-117931663827078/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659406.0818276-32356-117931663827078/ /root/.ansible/tmp/ansible-tmp-1604659406.0818276-32356-117931663827078/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659406.0818276-32356-117931663827078/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659406.0818276-32356-117931663827078/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.736703",
    "end": "2020-11-06 10:43:26.949188",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:26.212485",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call orderer.yaml for each orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659407.1382372-32399-103562543278261 `" && echo ansible-tmp-1604659407.1382372-32399-103562543278261="` echo /root/.ansible/tmp/ansible-tmp-1604659407.1382372-32399-103562543278261 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp1c84fhqu TO /root/.ansible/tmp/ansible-tmp-1604659407.1382372-32399-103562543278261/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659407.1382372-32399-103562543278261/ /root/.ansible/tmp/ansible-tmp-1604659407.1382372-32399-103562543278261/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659407.1382372-32399-103562543278261/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659407.1382372-32399-103562543278261/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
    "delta": "0:00:00.059828",
    "end": "2020-11-06 10:43:27.332167",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:27.272339",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659407.4280715-32435-177395085942704 `" && echo ansible-tmp-1604659407.4280715-32435-177395085942704="` echo /root/.ansible/tmp/ansible-tmp-1604659407.4280715-32435-177395085942704 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxot_emx3 TO /root/.ansible/tmp/ansible-tmp-1604659407.4280715-32435-177395085942704/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659407.4280715-32435-177395085942704/ /root/.ansible/tmp/ansible-tmp-1604659407.4280715-32435-177395085942704/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659407.4280715-32435-177395085942704/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659407.4280715-32435-177395085942704/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
    "delta": "0:00:00.047044",
    "end": "2020-11-06 10:43:27.608265",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:27.561221",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659407.7444022-32474-26895835639161 `" && echo ansible-tmp-1604659407.7444022-32474-26895835639161="` echo /root/.ansible/tmp/ansible-tmp-1604659407.7444022-32474-26895835639161 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpldayuaw5 TO /root/.ansible/tmp/ansible-tmp-1604659407.7444022-32474-26895835639161/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659407.7444022-32474-26895835639161/ /root/.ansible/tmp/ansible-tmp-1604659407.7444022-32474-26895835639161/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659407.7444022-32474-26895835639161/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659407.7444022-32474-26895835639161/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.082830",
    "end": "2020-11-06 10:43:28.959898",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:27.877068",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659409.0253012-32519-175130327329358 `" && echo ansible-tmp-1604659409.0253012-32519-175130327329358="` echo /root/.ansible/tmp/ansible-tmp-1604659409.0253012-32519-175130327329358 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp3vyybzw0 TO /root/.ansible/tmp/ansible-tmp-1604659409.0253012-32519-175130327329358/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659409.0253012-32519-175130327329358/ /root/.ansible/tmp/ansible-tmp-1604659409.0253012-32519-175130327329358/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659409.0253012-32519-175130327329358/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659409.0253012-32519-175130327329358/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659409.2337716-32547-156726964371464 `" && echo ansible-tmp-1604659409.2337716-32547-156726964371464="` echo /root/.ansible/tmp/ansible-tmp-1604659409.2337716-32547-156726964371464 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpp42sn5vj TO /root/.ansible/tmp/ansible-tmp-1604659409.2337716-32547-156726964371464/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659409.2337716-32547-156726964371464/ /root/.ansible/tmp/ansible-tmp-1604659409.2337716-32547-156726964371464/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659409.2337716-32547-156726964371464/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659409.2337716-32547-156726964371464/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer1.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer1.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer1.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer1.sh",
    "size": 2591,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659409.4161801-32547-226064640676039 `" && echo ansible-tmp-1604659409.4161801-32547-226064640676039="` echo /root/.ansible/tmp/ansible-tmp-1604659409.4161801-32547-226064640676039 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpl6zxnjny TO /root/.ansible/tmp/ansible-tmp-1604659409.4161801-32547-226064640676039/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659409.4161801-32547-226064640676039/ /root/.ansible/tmp/ansible-tmp-1604659409.4161801-32547-226064640676039/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659409.4161801-32547-226064640676039/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659409.4161801-32547-226064640676039/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659409.6181798-32597-84740729956483 `" && echo ansible-tmp-1604659409.6181798-32597-84740729956483="` echo /root/.ansible/tmp/ansible-tmp-1604659409.6181798-32597-84740729956483 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp50pxsg17 TO /root/.ansible/tmp/ansible-tmp-1604659409.6181798-32597-84740729956483/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659409.6181798-32597-84740729956483/ /root/.ansible/tmp/ansible-tmp-1604659409.6181798-32597-84740729956483/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659409.6181798-32597-84740729956483/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659409.6181798-32597-84740729956483/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.748325",
    "end": "2020-11-06 10:43:33.496687",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:29.748362",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659413.565783-32647-20800797927510 `" && echo ansible-tmp-1604659413.565783-32647-20800797927510="` echo /root/.ansible/tmp/ansible-tmp-1604659413.565783-32647-20800797927510 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpg6v4q7z6 TO /root/.ansible/tmp/ansible-tmp-1604659413.565783-32647-20800797927510/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659413.565783-32647-20800797927510/ /root/.ansible/tmp/ansible-tmp-1604659413.565783-32647-20800797927510/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659413.565783-32647-20800797927510/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659413.565783-32647-20800797927510/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.599807",
    "end": "2020-11-06 10:43:35.296061",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:33.696254",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"orderer.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer1.walmart-net\n+ CSR_HOSTS=orderer1.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer1.walmart-net,orderer1.orderer.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.orderer.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:34 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:34 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 10:43:34 [DEBUG] Checking for enrollment\n2020/11/06 10:43:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c05d0}\n2020/11/06 10:43:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398ed0 DummyKeystore:<nil>}\n2020/11/06 10:43:34 [INFO] TLS Enabled\n2020/11/06 10:43:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:34 [DEBUG] Client Cert File: \n2020/11/06 10:43:34 [DEBUG] Client Key File: \n2020/11/06 10:43:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:34 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.orderer.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:34 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:34 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c6c0}\n2020/11/06 10:43:34 [DEBUG] Entered runEnroll\n2020/11/06 10:43:34 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c6c0}\n2020/11/06 10:43:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bbc00 DummyKeystore:<nil>}\n2020/11/06 10:43:34 [INFO] TLS Enabled\n2020/11/06 10:43:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:34 [DEBUG] Client Cert File: \n2020/11/06 10:43:34 [DEBUG] Client Key File: \n2020/11/06 10:43:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:34 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:34 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:34 [INFO] encoded CSR\n2020/11/06 10:43:34 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASRXcM4ezz2cbY7/y92\\nsxLXRfSiiYMo0MtvQnJvu+73ZnhqJWjTTjcGMEWeQfEjs4X6E/rfcIATz6S4Hmy+\\nJQRMoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQCeVvlkd5mhSM0b0LJxhMKu59mIZiNs1U21lxYv\\nV2dHeAIgUaFbIBlsaODnVZ/d5Q1hMFTVlFu3LcMa/YpoWYNhC24=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASRXcM4ezz2cbY7/y92\\nsxLXRfSiiYMo0MtvQnJvu+73ZnhqJWjTTjcGMEWeQfEjs4X6E/rfcIATz6S4Hmy+\\nJQRMoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQCeVvlkd5mhSM0b0LJxhMKu59mIZiNs1U21lxYv\\nV2dHeAIgUaFbIBlsaODnVZ/d5Q1hMFTVlFu3LcMa/YpoWYNhC24=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/1b1944eccf0d0b62ee8f1522a071018b8f22ba79dfc6a7571eb92363f8438cb1_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:34 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:34 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2780}\n2020/11/06 10:43:34 [DEBUG] Entered runEnroll\n2020/11/06 10:43:34 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2780}\n2020/11/06 10:43:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c27e0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a25a0 DummyKeystore:<nil>}\n2020/11/06 10:43:34 [INFO] TLS Enabled\n2020/11/06 10:43:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:34 [DEBUG] Client Cert File: \n2020/11/06 10:43:34 [DEBUG] Client Key File: \n2020/11/06 10:43:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:34 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:34 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:34 [INFO] encoded CSR\n2020/11/06 10:43:34 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNKnhu5nS1/AK1Ded4cz\\ns/ZCymoEp9C7U7QJxpdYuxYNj4D8pKMqEzQh8podMY0OC1HtkEgSRGTFGjXrOOkc\\nkY6gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgD0QtXUhnyR5gGvXdaJ9+RnfC\\navvOowjIn+na45QL4IUCIEJ6UJfwoWAgcQggUwJgX9LyjZ82iOnYyGgPekFkA+xP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNKnhu5nS1/AK1Ded4cz\\ns/ZCymoEp9C7U7QJxpdYuxYNj4D8pKMqEzQh8podMY0OC1HtkEgSRGTFGjXrOOkc\\nkY6gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgD0QtXUhnyR5gGvXdaJ9+RnfC\\navvOowjIn+na45QL4IUCIEJ6UJfwoWAgcQggUwJgX9LyjZ82iOnYyGgPekFkA+xP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer1s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer1 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer1 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:35 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:35 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 10:43:35 [DEBUG] Checking for enrollment\n2020/11/06 10:43:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188630}\n2020/11/06 10:43:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420188690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c3720 DummyKeystore:<nil>}\n2020/11/06 10:43:35 [INFO] TLS Enabled\n2020/11/06 10:43:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:35 [DEBUG] Client Cert File: \n2020/11/06 10:43:35 [DEBUG] Client Key File: \n2020/11/06 10:43:35 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:35 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 10:43:35 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 10:43:35 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml\n2020/11/06 10:43:35 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e810}\n2020/11/06 10:43:35 [DEBUG] Entered runEnroll\n2020/11/06 10:43:35 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e810}\n2020/11/06 10:43:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e870 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a66b0 DummyKeystore:<nil>}\n2020/11/06 10:43:35 [INFO] TLS Enabled\n2020/11/06 10:43:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:35 [DEBUG] Client Cert File: \n2020/11/06 10:43:35 [DEBUG] Client Key File: \n2020/11/06 10:43:35 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:35 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:35 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:35 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:35 [INFO] encoded CSR\n2020/11/06 10:43:35 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLDR38sWW1E8RQExX0fqKP9b\\neBMjOzjD8hbUlXLhhH1iI4s7BsGXGMWdpkPh93aA+1rnsc8FjFHOhLo4YXnTNmmg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAJdwXa+X4aZ++X2bhJ6LMXn5KB1/\\nkJrYF2iEKUNwIEBdAiADz3y3ekqKzBamkv2oyKm2YfQWamrctdNf/05gmFN6xg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLDR38sWW1E8RQExX0fqKP9b\\neBMjOzjD8hbUlXLhhH1iI4s7BsGXGMWdpkPh93aA+1rnsc8FjFHOhLo4YXnTNmmg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAJdwXa+X4aZ++X2bhJ6LMXn5KB1/\\nkJrYF2iEKUNwIEBdAiADz3y3ekqKzBamkv2oyKm2YfQWamrctdNf/05gmFN6xg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 10:43:35 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:35 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380690}\n2020/11/06 10:43:35 [DEBUG] Entered runEnroll\n2020/11/06 10:43:35 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380690}\n2020/11/06 10:43:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203806f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200aa030 DummyKeystore:<nil>}\n2020/11/06 10:43:35 [INFO] TLS Enabled\n2020/11/06 10:43:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:35 [DEBUG] Client Cert File: \n2020/11/06 10:43:35 [DEBUG] Client Key File: \n2020/11/06 10:43:35 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:35 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:35 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:35 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:35 [INFO] encoded CSR\n2020/11/06 10:43:35 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEv4TCIvZ3XiNaGFCAxo8qHT4/7S9nWF/XblgCOyI6RRM4Sz742o6Nv83ZlcFQ87\\nRNzW/z8J3gDeP4phgroH6iagNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgBrye\\nPXkU2UsjrhWStKO1fOSvZQZu/lqYKfu39IpAT0QCIGYsWzrPTL1oinZVivI0zGU1\\nlB+YqixW5zP+iTxclM7x\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEv4TCIvZ3XiNaGFCAxo8qHT4/7S9nWF/XblgCOyI6RRM4Sz742o6Nv83ZlcFQ87\\nRNzW/z8J3gDeP4phgroH6iagNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgBrye\\nPXkU2UsjrhWStKO1fOSvZQZu/lqYKfu39IpAT0QCIGYsWzrPTL1oinZVivI0zGU1\\nlB+YqixW5zP+iTxclM7x\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/d8f96724cb95d63a81076ade8a2a3d5e99ce08b220bc1e5830c174d6958ebcf2_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"orderer.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer1.walmart-net",
        "+ CSR_HOSTS=orderer1.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer1.walmart-net,orderer1.orderer.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.orderer.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:34 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:34 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:34 [DEBUG] Checking for enrollment",
        "2020/11/06 10:43:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c05d0}",
        "2020/11/06 10:43:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398ed0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:34 [INFO] TLS Enabled",
        "2020/11/06 10:43:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:34 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:34 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:34 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.orderer.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:34 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:34 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c6c0}",
        "2020/11/06 10:43:34 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:34 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c6c0}",
        "2020/11/06 10:43:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bbc00 DummyKeystore:<nil>}",
        "2020/11/06 10:43:34 [INFO] TLS Enabled",
        "2020/11/06 10:43:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:34 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:34 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:34 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:34 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:34 [INFO] encoded CSR",
        "2020/11/06 10:43:34 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASRXcM4ezz2cbY7/y92\\nsxLXRfSiiYMo0MtvQnJvu+73ZnhqJWjTTjcGMEWeQfEjs4X6E/rfcIATz6S4Hmy+\\nJQRMoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQCeVvlkd5mhSM0b0LJxhMKu59mIZiNs1U21lxYv\\nV2dHeAIgUaFbIBlsaODnVZ/d5Q1hMFTVlFu3LcMa/YpoWYNhC24=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASRXcM4ezz2cbY7/y92\\nsxLXRfSiiYMo0MtvQnJvu+73ZnhqJWjTTjcGMEWeQfEjs4X6E/rfcIATz6S4Hmy+\\nJQRMoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjEub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQCeVvlkd5mhSM0b0LJxhMKu59mIZiNs1U21lxYv\\nV2dHeAIgUaFbIBlsaODnVZ/d5Q1hMFTVlFu3LcMa/YpoWYNhC24=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/1b1944eccf0d0b62ee8f1522a071018b8f22ba79dfc6a7571eb92363f8438cb1_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:34 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:34 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2780}",
        "2020/11/06 10:43:34 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:34 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c2780}",
        "2020/11/06 10:43:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c27e0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a25a0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:34 [INFO] TLS Enabled",
        "2020/11/06 10:43:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:34 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:34 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:34 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:34 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:34 [INFO] encoded CSR",
        "2020/11/06 10:43:34 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNKnhu5nS1/AK1Ded4cz\\ns/ZCymoEp9C7U7QJxpdYuxYNj4D8pKMqEzQh8podMY0OC1HtkEgSRGTFGjXrOOkc\\nkY6gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgD0QtXUhnyR5gGvXdaJ9+RnfC\\navvOowjIn+na45QL4IUCIEJ6UJfwoWAgcQggUwJgX9LyjZ82iOnYyGgPekFkA+xP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABNKnhu5nS1/AK1Ded4cz\\ns/ZCymoEp9C7U7QJxpdYuxYNj4D8pKMqEzQh8podMY0OC1HtkEgSRGTFGjXrOOkc\\nkY6gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgD0QtXUhnyR5gGvXdaJ9+RnfC\\navvOowjIn+na45QL4IUCIEJ6UJfwoWAgcQggUwJgX9LyjZ82iOnYyGgPekFkA+xP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer1s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer1 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer1 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:35 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:35 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:35 [DEBUG] Checking for enrollment",
        "2020/11/06 10:43:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188630}",
        "2020/11/06 10:43:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420188690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c3720 DummyKeystore:<nil>}",
        "2020/11/06 10:43:35 [INFO] TLS Enabled",
        "2020/11/06 10:43:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:35 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:35 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:35 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:35 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 10:43:35 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 10:43:35 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:35 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e810}",
        "2020/11/06 10:43:35 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:35 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e810}",
        "2020/11/06 10:43:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e870 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a66b0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:35 [INFO] TLS Enabled",
        "2020/11/06 10:43:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:35 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:35 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:35 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:35 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:35 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:35 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:35 [INFO] encoded CSR",
        "2020/11/06 10:43:35 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLDR38sWW1E8RQExX0fqKP9b\\neBMjOzjD8hbUlXLhhH1iI4s7BsGXGMWdpkPh93aA+1rnsc8FjFHOhLo4YXnTNmmg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAJdwXa+X4aZ++X2bhJ6LMXn5KB1/\\nkJrYF2iEKUNwIEBdAiADz3y3ekqKzBamkv2oyKm2YfQWamrctdNf/05gmFN6xg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLDR38sWW1E8RQExX0fqKP9b\\neBMjOzjD8hbUlXLhhH1iI4s7BsGXGMWdpkPh93aA+1rnsc8FjFHOhLo4YXnTNmmg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAJdwXa+X4aZ++X2bhJ6LMXn5KB1/\\nkJrYF2iEKUNwIEBdAiADz3y3ekqKzBamkv2oyKm2YfQWamrctdNf/05gmFN6xg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 10:43:35 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:35 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380690}",
        "2020/11/06 10:43:35 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:35 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:35 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380690}",
        "2020/11/06 10:43:35 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203806f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:35 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200aa030 DummyKeystore:<nil>}",
        "2020/11/06 10:43:35 [INFO] TLS Enabled",
        "2020/11/06 10:43:35 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:35 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:35 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:35 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:35 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:35 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:35 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:35 [INFO] encoded CSR",
        "2020/11/06 10:43:35 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEv4TCIvZ3XiNaGFCAxo8qHT4/7S9nWF/XblgCOyI6RRM4Sz742o6Nv83ZlcFQ87\\nRNzW/z8J3gDeP4phgroH6iagNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgBrye\\nPXkU2UsjrhWStKO1fOSvZQZu/lqYKfu39IpAT0QCIGYsWzrPTL1oinZVivI0zGU1\\nlB+YqixW5zP+iTxclM7x\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBEv4TCIvZ3XiNaGFCAxo8qHT4/7S9nWF/XblgCOyI6RRM4Sz742o6Nv83ZlcFQ87\\nRNzW/z8J3gDeP4phgroH6iagNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgBrye\\nPXkU2UsjrhWStKO1fOSvZQZu/lqYKfu39IpAT0QCIGYsWzrPTL1oinZVivI0zGU1\\nlB+YqixW5zP+iTxclM7x\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/d8f96724cb95d63a81076ade8a2a3d5e99ce08b220bc1e5830c174d6958ebcf2_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.orderer.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.orderer.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659415.3643348-32692-7764989590721 `" && echo ansible-tmp-1604659415.3643348-32692-7764989590721="` echo /root/.ansible/tmp/ansible-tmp-1604659415.3643348-32692-7764989590721 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpqb62lgas TO /root/.ansible/tmp/ansible-tmp-1604659415.3643348-32692-7764989590721/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659415.3643348-32692-7764989590721/ /root/.ansible/tmp/ansible-tmp-1604659415.3643348-32692-7764989590721/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659415.3643348-32692-7764989590721/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659415.3643348-32692-7764989590721/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.687663",
    "end": "2020-11-06 10:43:36.185459",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:35.497796",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659416.2567585-32732-26495151306364 `" && echo ansible-tmp-1604659416.2567585-32732-26495151306364="` echo /root/.ansible/tmp/ansible-tmp-1604659416.2567585-32732-26495151306364 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpp5fshwnz TO /root/.ansible/tmp/ansible-tmp-1604659416.2567585-32732-26495151306364/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659416.2567585-32732-26495151306364/ /root/.ansible/tmp/ansible-tmp-1604659416.2567585-32732-26495151306364/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659416.2567585-32732-26495151306364/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659416.2567585-32732-26495151306364/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.092111",
    "end": "2020-11-06 10:43:36.481957",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:36.389846",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659416.5502844-318-84564558263539 `" && echo ansible-tmp-1604659416.5502844-318-84564558263539="` echo /root/.ansible/tmp/ansible-tmp-1604659416.5502844-318-84564558263539 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp5ovwdzkc TO /root/.ansible/tmp/ansible-tmp-1604659416.5502844-318-84564558263539/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659416.5502844-318-84564558263539/ /root/.ansible/tmp/ansible-tmp-1604659416.5502844-318-84564558263539/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659416.5502844-318-84564558263539/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659416.5502844-318-84564558263539/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer1-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5RENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9EUTVXaGNOTWpNd09EQXpNRGd5Ck9EUTVXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TVM1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFkCmFncTQ3ZjdueVp6eHZRVnM5UjRoV0VQeHVpZk1HZEttRVFveW52NVUrWDNlRndLYytQSkZPekJKNnlQMVBlRXIKbENGWHR2ZmxTYzYzb1dXOHpqMGhvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVVJqNWFNMDRUd3dCSk43SG9oWjhpbmpQcDdWNHdDZ1lJS29aSXpqMEVBd0lEClJ3QXdSQUlnUVVtNmRUNG41VlErT0I3TXMxckFtNVV6ZzNwS1hzNmlicnBJbUVTWkU2OENJQWw2d3I4enUrMFEKT011VTBTREZVMjhKamZjSnFQb1hBLzc3ZFlTRHhHNWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjhEQ0NBWmFnQXdJQkFnSVVNemhzd2VRL1l4R1RBbHFkUDFpdmtNWXg4NzB3Q2dZSUtvWkl6ajBFQXdJdwpWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEVlFRRERBcGpZUzUzWVd4dFlYSjBNQjRYRFRJd01URXcKTmpBNE1Ua3hObG9YRFRJek1EZ3lOekE0TVRreE5sb3dWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTQpCa3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEClZRUUREQXBqWVM1M1lXeHRZWEowTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFeG9JdDhlWisKOVhHQ0M3VzdMbEdVK2lVUTV2bmFxem1PczF0Snc2anZMYm40ZDlLTk56NHVuclg1LzViM3E0WWtMeEpZT3poTQpYYzd3N3JwbXFLV0VzcU5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBYVl3CkhRWURWUjBPQkJZRUZKNGlUblB4dk1wbVNLSXFkN2ZmaG5tQzhNOEFNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUMKSVFEZ3dQZlFZTVBDYjJiaXdma09UNVZkVnVFUkh2SWdidGxrdHpWVkZCTjl0Z0lnTmw0T3AyVEdIT1kwcXRoRAp2dENDMUNvMGhEbHZKTGVyYUxwYlYxdGtHVGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVjRXFDbXgycWJFcnQyZmd0ODZhR2ZGWVdZcGx2Z2pQK00yREpqL2pwdnlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSFdvS3VPMys1OG1jOGIwRmJQVWVJVmhEOGJvbnpCblNwaEVLTXA3K1ZQbDkzaGNDblBqeQpSVHN3U2VzajlUM2hLNVFoVjdiMzVVbk90NkZsdk00OUlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:28:49Z",
                "name": "orderer1-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408734",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer1-walmart-net-ambassador-certs",
                "uid": "a5a7499f-2fa9-4ba5-9662-97fa6bef6281"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659417.1704156-350-208926885909933 `" && echo ansible-tmp-1604659417.1704156-350-208926885909933="` echo /root/.ansible/tmp/ansible-tmp-1604659417.1704156-350-208926885909933 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpi3g_czc8 TO /root/.ansible/tmp/ansible-tmp-1604659417.1704156-350-208926885909933/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659417.1704156-350-208926885909933/ /root/.ansible/tmp/ansible-tmp-1604659417.1704156-350-208926885909933/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659417.1704156-350-208926885909933/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659417.1704156-350-208926885909933/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
    "delta": "0:00:00.068166",
    "end": "2020-11-06 10:43:37.371845",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:37.303679",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659417.5397997-390-249718449122816 `" && echo ansible-tmp-1604659417.5397997-390-249718449122816="` echo /root/.ansible/tmp/ansible-tmp-1604659417.5397997-390-249718449122816 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwyz05v4c TO /root/.ansible/tmp/ansible-tmp-1604659417.5397997-390-249718449122816/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659417.5397997-390-249718449122816/ /root/.ansible/tmp/ansible-tmp-1604659417.5397997-390-249718449122816/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659417.5397997-390-249718449122816/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659417.5397997-390-249718449122816/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
    "delta": "0:00:00.043261",
    "end": "2020-11-06 10:43:37.716911",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:37.673650",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659417.78535-428-99646660799543 `" && echo ansible-tmp-1604659417.78535-428-99646660799543="` echo /root/.ansible/tmp/ansible-tmp-1604659417.78535-428-99646660799543 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp0rhxw9kt TO /root/.ansible/tmp/ansible-tmp-1604659417.78535-428-99646660799543/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659417.78535-428-99646660799543/ /root/.ansible/tmp/ansible-tmp-1604659417.78535-428-99646660799543/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659417.78535-428-99646660799543/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659417.78535-428-99646660799543/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
    "delta": "0:00:00.084460",
    "end": "2020-11-06 10:43:38.001390",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:37.916930",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659418.0998-465-13625274057 `" && echo ansible-tmp-1604659418.0998-465-13625274057="` echo /root/.ansible/tmp/ansible-tmp-1604659418.0998-465-13625274057 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpkpsr6h0y TO /root/.ansible/tmp/ansible-tmp-1604659418.0998-465-13625274057/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659418.0998-465-13625274057/ /root/.ansible/tmp/ansible-tmp-1604659418.0998-465-13625274057/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659418.0998-465-13625274057/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659418.0998-465-13625274057/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
    "delta": "0:00:00.063936",
    "end": "2020-11-06 10:43:38.297231",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:38.233295",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659418.5044386-503-24117299090944 `" && echo ansible-tmp-1604659418.5044386-503-24117299090944="` echo /root/.ansible/tmp/ansible-tmp-1604659418.5044386-503-24117299090944 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpylg7z2ud TO /root/.ansible/tmp/ansible-tmp-1604659418.5044386-503-24117299090944/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659418.5044386-503-24117299090944/ /root/.ansible/tmp/ansible-tmp-1604659418.5044386-503-24117299090944/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659418.5044386-503-24117299090944/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659418.5044386-503-24117299090944/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.374247",
    "end": "2020-11-06 10:43:40.014322",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:38.640075",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659420.087734-548-14995956958202 `" && echo ansible-tmp-1604659420.087734-548-14995956958202="` echo /root/.ansible/tmp/ansible-tmp-1604659420.087734-548-14995956958202 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpn_qiwo91 TO /root/.ansible/tmp/ansible-tmp-1604659420.087734-548-14995956958202/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659420.087734-548-14995956958202/ /root/.ansible/tmp/ansible-tmp-1604659420.087734-548-14995956958202/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659420.087734-548-14995956958202/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659420.087734-548-14995956958202/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659420.342154-574-179456756637386 `" && echo ansible-tmp-1604659420.342154-574-179456756637386="` echo /root/.ansible/tmp/ansible-tmp-1604659420.342154-574-179456756637386 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpuzaizqzs TO /root/.ansible/tmp/ansible-tmp-1604659420.342154-574-179456756637386/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659420.342154-574-179456756637386/ /root/.ansible/tmp/ansible-tmp-1604659420.342154-574-179456756637386/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659420.342154-574-179456756637386/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659420.342154-574-179456756637386/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer2.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer2.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer2.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer2.sh",
    "size": 2591,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659420.5202963-574-186105397646211 `" && echo ansible-tmp-1604659420.5202963-574-186105397646211="` echo /root/.ansible/tmp/ansible-tmp-1604659420.5202963-574-186105397646211 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpt8e79et7 TO /root/.ansible/tmp/ansible-tmp-1604659420.5202963-574-186105397646211/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659420.5202963-574-186105397646211/ /root/.ansible/tmp/ansible-tmp-1604659420.5202963-574-186105397646211/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659420.5202963-574-186105397646211/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659420.5202963-574-186105397646211/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659420.7284107-624-263701598631027 `" && echo ansible-tmp-1604659420.7284107-624-263701598631027="` echo /root/.ansible/tmp/ansible-tmp-1604659420.7284107-624-263701598631027 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpw80mx6wl TO /root/.ansible/tmp/ansible-tmp-1604659420.7284107-624-263701598631027/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659420.7284107-624-263701598631027/ /root/.ansible/tmp/ansible-tmp-1604659420.7284107-624-263701598631027/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659420.7284107-624-263701598631027/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659420.7284107-624-263701598631027/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.673841",
    "end": "2020-11-06 10:43:44.542212",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:40.868371",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659424.6386156-675-36369889859241 `" && echo ansible-tmp-1604659424.6386156-675-36369889859241="` echo /root/.ansible/tmp/ansible-tmp-1604659424.6386156-675-36369889859241 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmptl7zbj1p TO /root/.ansible/tmp/ansible-tmp-1604659424.6386156-675-36369889859241/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659424.6386156-675-36369889859241/ /root/.ansible/tmp/ansible-tmp-1604659424.6386156-675-36369889859241/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659424.6386156-675-36369889859241/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659424.6386156-675-36369889859241/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.551459",
    "end": "2020-11-06 10:43:46.368048",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:44.816589",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"orderer.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer2.walmart-net\n+ CSR_HOSTS=orderer2.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer2.walmart-net,orderer2.orderer.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.orderer.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:45 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:45 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 10:43:45 [DEBUG] Checking for enrollment\n2020/11/06 10:43:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205da600}\n2020/11/06 10:43:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205da660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205e1360 DummyKeystore:<nil>}\n2020/11/06 10:43:45 [INFO] TLS Enabled\n2020/11/06 10:43:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:45 [DEBUG] Client Cert File: \n2020/11/06 10:43:45 [DEBUG] Client Key File: \n2020/11/06 10:43:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:45 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.orderer.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:45 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:45 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}\n2020/11/06 10:43:45 [DEBUG] Entered runEnroll\n2020/11/06 10:43:45 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}\n2020/11/06 10:43:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a1370 DummyKeystore:<nil>}\n2020/11/06 10:43:45 [INFO] TLS Enabled\n2020/11/06 10:43:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:45 [DEBUG] Client Cert File: \n2020/11/06 10:43:45 [DEBUG] Client Key File: \n2020/11/06 10:43:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:45 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:45 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:45 [INFO] encoded CSR\n2020/11/06 10:43:45 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATsNt3xbTEsFlynXSEN\\ndg1ns+Wp94c+ypZNMMXGC3HLm1qox1MMH93FTLCou1RedP7n8GzrzX3b6RpAlcYs\\nSBCNoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDgwutXeE5HVwNumhMMDcecQA1J3/EL/jRUB6qM\\n7f+xgQIgQ+PR4RACSQ3R8mlpIhARAe+UA95pqmsgTaAaHeZuFOE=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATsNt3xbTEsFlynXSEN\\ndg1ns+Wp94c+ypZNMMXGC3HLm1qox1MMH93FTLCou1RedP7n8GzrzX3b6RpAlcYs\\nSBCNoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDgwutXeE5HVwNumhMMDcecQA1J3/EL/jRUB6qM\\n7f+xgQIgQ+PR4RACSQ3R8mlpIhARAe+UA95pqmsgTaAaHeZuFOE=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/3fdb68e441a3a370df436c19c8231e2e7df4d49bbd74ab45b122a5b4cfc1a5ed_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:45 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:45 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203926f0}\n2020/11/06 10:43:45 [DEBUG] Entered runEnroll\n2020/11/06 10:43:45 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203926f0}\n2020/11/06 10:43:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420392750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039e3e0 DummyKeystore:<nil>}\n2020/11/06 10:43:45 [INFO] TLS Enabled\n2020/11/06 10:43:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:45 [DEBUG] Client Cert File: \n2020/11/06 10:43:45 [DEBUG] Client Key File: \n2020/11/06 10:43:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:45 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:45 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:45 [INFO] encoded CSR\n2020/11/06 10:43:45 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMNpl44zj7j5dbuvSVSF\\nMazZ47BBdHvRwKecAwAhvnlt+9mMSaa6jf/VTrPsQizbYRqrSYTgPPH/enIENlW3\\nvZCgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgaEUSzi2V1DHT3UX6tvWF607/\\n7Khk/k6aMBHygO9HzBICIHBRVHA0Ga0fkrSJJ4iFMhB6DlbxhFfdMj6DCAWJc96c\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMNpl44zj7j5dbuvSVSF\\nMazZ47BBdHvRwKecAwAhvnlt+9mMSaa6jf/VTrPsQizbYRqrSYTgPPH/enIENlW3\\nvZCgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgaEUSzi2V1DHT3UX6tvWF607/\\n7Khk/k6aMBHygO9HzBICIHBRVHA0Ga0fkrSJJ4iFMhB6DlbxhFfdMj6DCAWJc96c\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer2s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer2 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer2 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:46 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:46 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 10:43:46 [DEBUG] Checking for enrollment\n2020/11/06 10:43:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be570}\n2020/11/06 10:43:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396cc0 DummyKeystore:<nil>}\n2020/11/06 10:43:46 [INFO] TLS Enabled\n2020/11/06 10:43:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:46 [DEBUG] Client Cert File: \n2020/11/06 10:43:46 [DEBUG] Client Key File: \n2020/11/06 10:43:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:46 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 10:43:46 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 10:43:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203906c0}\n2020/11/06 10:43:46 [DEBUG] Entered runEnroll\n2020/11/06 10:43:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203906c0}\n2020/11/06 10:43:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420390720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420263dd0 DummyKeystore:<nil>}\n2020/11/06 10:43:46 [INFO] TLS Enabled\n2020/11/06 10:43:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:46 [DEBUG] Client Cert File: \n2020/11/06 10:43:46 [DEBUG] Client Key File: \n2020/11/06 10:43:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:46 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:46 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:46 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:46 [INFO] encoded CSR\n2020/11/06 10:43:46 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEbx7Xe7bZTvpeInAkA7yaB5\\n9u1e/1lTABDw+huU+jLU7Y6WSazBbiKZ195QTh046A9rX5eoesY3SHuHYdWTMqWg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgIQIzYs5Lil+483E7yay1gZtvSb69\\n1QCs3cdLOUpBmAYCIBfYbg3IYKOin2hNNN/UEEpsUqSYOCMu8xv6xd6EzmW0\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEbx7Xe7bZTvpeInAkA7yaB5\\n9u1e/1lTABDw+huU+jLU7Y6WSazBbiKZ195QTh046A9rX5eoesY3SHuHYdWTMqWg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgIQIzYs5Lil+483E7yay1gZtvSb69\\n1QCs3cdLOUpBmAYCIBfYbg3IYKOin2hNNN/UEEpsUqSYOCMu8xv6xd6EzmW0\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 10:43:46 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a6c0}\n2020/11/06 10:43:46 [DEBUG] Entered runEnroll\n2020/11/06 10:43:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a6c0}\n2020/11/06 10:43:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019a110 DummyKeystore:<nil>}\n2020/11/06 10:43:46 [INFO] TLS Enabled\n2020/11/06 10:43:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:46 [DEBUG] Client Cert File: \n2020/11/06 10:43:46 [DEBUG] Client Key File: \n2020/11/06 10:43:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:46 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:46 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:46 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:46 [INFO] encoded CSR\n2020/11/06 10:43:46 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBMFFi6IgpyMMPDPTNmnoC1QsAhetwdg0VbranZ/HyufqK4CL193Cg062K7HtnsQc\\n5kf8Asn53c28E6nm8Muq446gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAOyx\\nsaxHEnYQ6OOkU6vcCViQyvim0Xcg0HB33b0wjdxpAiA2oq91fYNwC/MjGDF8BB7a\\nM8tJFLrlOdfEil6pUEcVRg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBMFFi6IgpyMMPDPTNmnoC1QsAhetwdg0VbranZ/HyufqK4CL193Cg062K7HtnsQc\\n5kf8Asn53c28E6nm8Muq446gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAOyx\\nsaxHEnYQ6OOkU6vcCViQyvim0Xcg0HB33b0wjdxpAiA2oq91fYNwC/MjGDF8BB7a\\nM8tJFLrlOdfEil6pUEcVRg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/2d029118cdb4d70338b9e61850a833cd6148ff060dbf156d533b299f5461c898_sk /root/ca-tools/walmart/client1/tls/keystore/d8f96724cb95d63a81076ade8a2a3d5e99ce08b220bc1e5830c174d6958ebcf2_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"orderer.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer2.walmart-net",
        "+ CSR_HOSTS=orderer2.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer2.walmart-net,orderer2.orderer.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.orderer.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:45 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:45 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:45 [DEBUG] Checking for enrollment",
        "2020/11/06 10:43:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205da600}",
        "2020/11/06 10:43:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205da660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205e1360 DummyKeystore:<nil>}",
        "2020/11/06 10:43:45 [INFO] TLS Enabled",
        "2020/11/06 10:43:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:45 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:45 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:45 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.orderer.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:45 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:45 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}",
        "2020/11/06 10:43:45 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:45 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}",
        "2020/11/06 10:43:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a1370 DummyKeystore:<nil>}",
        "2020/11/06 10:43:45 [INFO] TLS Enabled",
        "2020/11/06 10:43:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:45 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:45 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:45 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:45 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:45 [INFO] encoded CSR",
        "2020/11/06 10:43:45 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATsNt3xbTEsFlynXSEN\\ndg1ns+Wp94c+ypZNMMXGC3HLm1qox1MMH93FTLCou1RedP7n8GzrzX3b6RpAlcYs\\nSBCNoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDgwutXeE5HVwNumhMMDcecQA1J3/EL/jRUB6qM\\n7f+xgQIgQ+PR4RACSQ3R8mlpIhARAe+UA95pqmsgTaAaHeZuFOE=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATsNt3xbTEsFlynXSEN\\ndg1ns+Wp94c+ypZNMMXGC3HLm1qox1MMH93FTLCou1RedP7n8GzrzX3b6RpAlcYs\\nSBCNoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjIub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDgwutXeE5HVwNumhMMDcecQA1J3/EL/jRUB6qM\\n7f+xgQIgQ+PR4RACSQ3R8mlpIhARAe+UA95pqmsgTaAaHeZuFOE=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/3fdb68e441a3a370df436c19c8231e2e7df4d49bbd74ab45b122a5b4cfc1a5ed_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:45 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:45 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203926f0}",
        "2020/11/06 10:43:45 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:45 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203926f0}",
        "2020/11/06 10:43:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420392750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039e3e0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:45 [INFO] TLS Enabled",
        "2020/11/06 10:43:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:45 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:45 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:45 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:45 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:45 [INFO] encoded CSR",
        "2020/11/06 10:43:45 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMNpl44zj7j5dbuvSVSF\\nMazZ47BBdHvRwKecAwAhvnlt+9mMSaa6jf/VTrPsQizbYRqrSYTgPPH/enIENlW3\\nvZCgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgaEUSzi2V1DHT3UX6tvWF607/\\n7Khk/k6aMBHygO9HzBICIHBRVHA0Ga0fkrSJJ4iFMhB6DlbxhFfdMj6DCAWJc96c\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMNpl44zj7j5dbuvSVSF\\nMazZ47BBdHvRwKecAwAhvnlt+9mMSaa6jf/VTrPsQizbYRqrSYTgPPH/enIENlW3\\nvZCgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgaEUSzi2V1DHT3UX6tvWF607/\\n7Khk/k6aMBHygO9HzBICIHBRVHA0Ga0fkrSJJ4iFMhB6DlbxhFfdMj6DCAWJc96c\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer2s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer2 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer2 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:46 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:46 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:46 [DEBUG] Checking for enrollment",
        "2020/11/06 10:43:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be570}",
        "2020/11/06 10:43:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396cc0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:46 [INFO] TLS Enabled",
        "2020/11/06 10:43:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:46 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:46 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:46 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 10:43:46 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 10:43:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203906c0}",
        "2020/11/06 10:43:46 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203906c0}",
        "2020/11/06 10:43:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420390720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420263dd0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:46 [INFO] TLS Enabled",
        "2020/11/06 10:43:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:46 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:46 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:46 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:46 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:46 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:46 [INFO] encoded CSR",
        "2020/11/06 10:43:46 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEbx7Xe7bZTvpeInAkA7yaB5\\n9u1e/1lTABDw+huU+jLU7Y6WSazBbiKZ195QTh046A9rX5eoesY3SHuHYdWTMqWg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgIQIzYs5Lil+483E7yay1gZtvSb69\\n1QCs3cdLOUpBmAYCIBfYbg3IYKOin2hNNN/UEEpsUqSYOCMu8xv6xd6EzmW0\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEbx7Xe7bZTvpeInAkA7yaB5\\n9u1e/1lTABDw+huU+jLU7Y6WSazBbiKZ195QTh046A9rX5eoesY3SHuHYdWTMqWg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgIQIzYs5Lil+483E7yay1gZtvSb69\\n1QCs3cdLOUpBmAYCIBfYbg3IYKOin2hNNN/UEEpsUqSYOCMu8xv6xd6EzmW0\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 10:43:46 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a6c0}",
        "2020/11/06 10:43:46 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a6c0}",
        "2020/11/06 10:43:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019a110 DummyKeystore:<nil>}",
        "2020/11/06 10:43:46 [INFO] TLS Enabled",
        "2020/11/06 10:43:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:46 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:46 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:46 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:46 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:46 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:46 [INFO] encoded CSR",
        "2020/11/06 10:43:46 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBMFFi6IgpyMMPDPTNmnoC1QsAhetwdg0VbranZ/HyufqK4CL193Cg062K7HtnsQc\\n5kf8Asn53c28E6nm8Muq446gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAOyx\\nsaxHEnYQ6OOkU6vcCViQyvim0Xcg0HB33b0wjdxpAiA2oq91fYNwC/MjGDF8BB7a\\nM8tJFLrlOdfEil6pUEcVRg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBMFFi6IgpyMMPDPTNmnoC1QsAhetwdg0VbranZ/HyufqK4CL193Cg062K7HtnsQc\\n5kf8Asn53c28E6nm8Muq446gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAOyx\\nsaxHEnYQ6OOkU6vcCViQyvim0Xcg0HB33b0wjdxpAiA2oq91fYNwC/MjGDF8BB7a\\nM8tJFLrlOdfEil6pUEcVRg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/2d029118cdb4d70338b9e61850a833cd6148ff060dbf156d533b299f5461c898_sk /root/ca-tools/walmart/client1/tls/keystore/d8f96724cb95d63a81076ade8a2a3d5e99ce08b220bc1e5830c174d6958ebcf2_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.orderer.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.orderer.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659426.436507-723-258205840858979 `" && echo ansible-tmp-1604659426.436507-723-258205840858979="` echo /root/.ansible/tmp/ansible-tmp-1604659426.436507-723-258205840858979 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp6s4k7i_y TO /root/.ansible/tmp/ansible-tmp-1604659426.436507-723-258205840858979/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659426.436507-723-258205840858979/ /root/.ansible/tmp/ansible-tmp-1604659426.436507-723-258205840858979/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659426.436507-723-258205840858979/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659426.436507-723-258205840858979/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.793891",
    "end": "2020-11-06 10:43:47.368255",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:46.574364",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659427.4397116-763-218426505290135 `" && echo ansible-tmp-1604659427.4397116-763-218426505290135="` echo /root/.ansible/tmp/ansible-tmp-1604659427.4397116-763-218426505290135 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpa85nnpsd TO /root/.ansible/tmp/ansible-tmp-1604659427.4397116-763-218426505290135/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659427.4397116-763-218426505290135/ /root/.ansible/tmp/ansible-tmp-1604659427.4397116-763-218426505290135/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659427.4397116-763-218426505290135/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659427.4397116-763-218426505290135/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.122500",
    "end": "2020-11-06 10:43:47.725946",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:47.603446",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659427.794554-814-91802060128904 `" && echo ansible-tmp-1604659427.794554-814-91802060128904="` echo /root/.ansible/tmp/ansible-tmp-1604659427.794554-814-91802060128904 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp1bp75pm3 TO /root/.ansible/tmp/ansible-tmp-1604659427.794554-814-91802060128904/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659427.794554-814-91802060128904/ /root/.ansible/tmp/ansible-tmp-1604659427.794554-814-91802060128904/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659427.794554-814-91802060128904/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659427.794554-814-91802060128904/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer2-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5VENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9UQXdXaGNOTWpNd09EQXpNRGd5Ck9UQXdXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TWk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRQCkVnSmR2S1BGc0RoNno2MitGKzB4Nk8wa3JlNXJmTE5Kb0ppSVNBamprU0dCQ2N6MWhOR1FuWHZvbU5iMnJacC8KcCtzMDBIWXI3bllHQmhDVHNsTXFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVU40a1J1cDBMNXlVNVNab1dMbVc3NkFpK0d4OHdDZ1lJS29aSXpqMEVBd0lEClNBQXdSUUloQUlQR1FpRWFEWkJJYnhxT0pBdWVNMTNqNkpENktlY1A0dXVSWEczTm1YVU9BaUI5WU5RR1pZOWQKSWp3bWZVdENrR3drNytCalNsSmVBWTlzalBWM2ZuZmJwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUY5SERaSWExVE5TZkY3bmVRYVdFTzkyOVNnMVBKUXl4YTUvVmJXTzV0ZGNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFenhJQ1hieWp4YkE0ZXMrdHZoZnRNZWp0SkszdWEzeXpTYUNZaUVnSTQ1RWhnUW5NOVlUUgprSjE3NkpqVzlxMmFmNmZyTk5CMksrNTJCZ1lRazdKVEtnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:00Z",
                "name": "orderer2-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408765",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer2-walmart-net-ambassador-certs",
                "uid": "3a84af21-a525-4755-8465-cda893746ea9"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659428.418899-842-127718648133524 `" && echo ansible-tmp-1604659428.418899-842-127718648133524="` echo /root/.ansible/tmp/ansible-tmp-1604659428.418899-842-127718648133524 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfcyk4dp0 TO /root/.ansible/tmp/ansible-tmp-1604659428.418899-842-127718648133524/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659428.418899-842-127718648133524/ /root/.ansible/tmp/ansible-tmp-1604659428.418899-842-127718648133524/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659428.418899-842-127718648133524/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659428.418899-842-127718648133524/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
    "delta": "0:00:00.049137",
    "end": "2020-11-06 10:43:48.611227",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:48.562090",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659428.7670274-883-204203441323009 `" && echo ansible-tmp-1604659428.7670274-883-204203441323009="` echo /root/.ansible/tmp/ansible-tmp-1604659428.7670274-883-204203441323009 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpoqq6x8er TO /root/.ansible/tmp/ansible-tmp-1604659428.7670274-883-204203441323009/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659428.7670274-883-204203441323009/ /root/.ansible/tmp/ansible-tmp-1604659428.7670274-883-204203441323009/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659428.7670274-883-204203441323009/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659428.7670274-883-204203441323009/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
    "delta": "0:00:00.043978",
    "end": "2020-11-06 10:43:48.943149",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:48.899171",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659429.0106668-921-217872005075891 `" && echo ansible-tmp-1604659429.0106668-921-217872005075891="` echo /root/.ansible/tmp/ansible-tmp-1604659429.0106668-921-217872005075891 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpgpa7lkgg TO /root/.ansible/tmp/ansible-tmp-1604659429.0106668-921-217872005075891/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659429.0106668-921-217872005075891/ /root/.ansible/tmp/ansible-tmp-1604659429.0106668-921-217872005075891/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659429.0106668-921-217872005075891/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659429.0106668-921-217872005075891/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
    "delta": "0:00:00.046352",
    "end": "2020-11-06 10:43:49.187346",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:49.140994",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659429.2852457-957-266674897712913 `" && echo ansible-tmp-1604659429.2852457-957-266674897712913="` echo /root/.ansible/tmp/ansible-tmp-1604659429.2852457-957-266674897712913 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpycatme4t TO /root/.ansible/tmp/ansible-tmp-1604659429.2852457-957-266674897712913/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659429.2852457-957-266674897712913/ /root/.ansible/tmp/ansible-tmp-1604659429.2852457-957-266674897712913/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659429.2852457-957-266674897712913/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659429.2852457-957-266674897712913/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
    "delta": "0:00:00.049576",
    "end": "2020-11-06 10:43:49.465949",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:49.416373",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659429.5953047-995-68522584900260 `" && echo ansible-tmp-1604659429.5953047-995-68522584900260="` echo /root/.ansible/tmp/ansible-tmp-1604659429.5953047-995-68522584900260 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp0sfpunie TO /root/.ansible/tmp/ansible-tmp-1604659429.5953047-995-68522584900260/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659429.5953047-995-68522584900260/ /root/.ansible/tmp/ansible-tmp-1604659429.5953047-995-68522584900260/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659429.5953047-995-68522584900260/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659429.5953047-995-68522584900260/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.373947",
    "end": "2020-11-06 10:43:51.100390",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:49.726443",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659431.1660535-1040-261912408751919 `" && echo ansible-tmp-1604659431.1660535-1040-261912408751919="` echo /root/.ansible/tmp/ansible-tmp-1604659431.1660535-1040-261912408751919 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprwhb46ms TO /root/.ansible/tmp/ansible-tmp-1604659431.1660535-1040-261912408751919/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659431.1660535-1040-261912408751919/ /root/.ansible/tmp/ansible-tmp-1604659431.1660535-1040-261912408751919/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659431.1660535-1040-261912408751919/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659431.1660535-1040-261912408751919/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659431.3733757-1066-87677341400965 `" && echo ansible-tmp-1604659431.3733757-1066-87677341400965="` echo /root/.ansible/tmp/ansible-tmp-1604659431.3733757-1066-87677341400965 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfram5xdq TO /root/.ansible/tmp/ansible-tmp-1604659431.3733757-1066-87677341400965/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659431.3733757-1066-87677341400965/ /root/.ansible/tmp/ansible-tmp-1604659431.3733757-1066-87677341400965/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659431.3733757-1066-87677341400965/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659431.3733757-1066-87677341400965/ > /dev/null 2>&1 && sleep 0'
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer3.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer3.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer3.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer3.sh",
    "size": 2591,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659431.549179-1066-258417384493039 `" && echo ansible-tmp-1604659431.549179-1066-258417384493039="` echo /root/.ansible/tmp/ansible-tmp-1604659431.549179-1066-258417384493039 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpmz0gb4s4 TO /root/.ansible/tmp/ansible-tmp-1604659431.549179-1066-258417384493039/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659431.549179-1066-258417384493039/ /root/.ansible/tmp/ansible-tmp-1604659431.549179-1066-258417384493039/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659431.549179-1066-258417384493039/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659431.549179-1066-258417384493039/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659431.7526684-1116-279526969231415 `" && echo ansible-tmp-1604659431.7526684-1116-279526969231415="` echo /root/.ansible/tmp/ansible-tmp-1604659431.7526684-1116-279526969231415 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpem0nazqg TO /root/.ansible/tmp/ansible-tmp-1604659431.7526684-1116-279526969231415/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659431.7526684-1116-279526969231415/ /root/.ansible/tmp/ansible-tmp-1604659431.7526684-1116-279526969231415/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659431.7526684-1116-279526969231415/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659431.7526684-1116-279526969231415/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.748483",
    "end": "2020-11-06 10:43:55.632763",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:51.884280",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659435.7011948-1167-38018720416985 `" && echo ansible-tmp-1604659435.7011948-1167-38018720416985="` echo /root/.ansible/tmp/ansible-tmp-1604659435.7011948-1167-38018720416985 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7j9r4ge9 TO /root/.ansible/tmp/ansible-tmp-1604659435.7011948-1167-38018720416985/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659435.7011948-1167-38018720416985/ /root/.ansible/tmp/ansible-tmp-1604659435.7011948-1167-38018720416985/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659435.7011948-1167-38018720416985/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659435.7011948-1167-38018720416985/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:01.627100",
    "end": "2020-11-06 10:43:57.458849",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:55.831749",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"orderer.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer3.walmart-net\n+ CSR_HOSTS=orderer3.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer3.walmart-net,orderer3.orderer.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.orderer.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:56 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:56 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 10:43:56 [DEBUG] Checking for enrollment\n2020/11/06 10:43:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5d0}\n2020/11/06 10:43:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205df0f0 DummyKeystore:<nil>}\n2020/11/06 10:43:56 [INFO] TLS Enabled\n2020/11/06 10:43:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:56 [DEBUG] Client Cert File: \n2020/11/06 10:43:56 [DEBUG] Client Key File: \n2020/11/06 10:43:56 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:56 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.orderer.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:56 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:56 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0690}\n2020/11/06 10:43:56 [DEBUG] Entered runEnroll\n2020/11/06 10:43:56 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0690}\n2020/11/06 10:43:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c06f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420393c10 DummyKeystore:<nil>}\n2020/11/06 10:43:56 [INFO] TLS Enabled\n2020/11/06 10:43:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:56 [DEBUG] Client Cert File: \n2020/11/06 10:43:56 [DEBUG] Client Key File: \n2020/11/06 10:43:56 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:56 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:56 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:56 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:56 [INFO] encoded CSR\n2020/11/06 10:43:56 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQ8hJCrNpauUqPmVHTV\\nWZ5ydrnVANWNmsH2icD5ipoQDm2knHB3hDKwbuja8bu9gmlHRRGXKytfpv8fcyLt\\n1UjdoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDVHzegtG6hCPOmkaI6oxqCPsAlNikFWkCBIHU1\\nxJZd9QIgCde9pPYqNokIgt29oEmnWLPEVRqFRTt7ygL7ug81jOs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQ8hJCrNpauUqPmVHTV\\nWZ5ydrnVANWNmsH2icD5ipoQDm2knHB3hDKwbuja8bu9gmlHRRGXKytfpv8fcyLt\\n1UjdoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDVHzegtG6hCPOmkaI6oxqCPsAlNikFWkCBIHU1\\nxJZd9QIgCde9pPYqNokIgt29oEmnWLPEVRqFRTt7ygL7ug81jOs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/e0d4dd056e672fd20960f785f373c4c41344bbafad6626c3c64f6be4df4cd664_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/06 10:43:56 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:56 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}\n2020/11/06 10:43:56 [DEBUG] Entered runEnroll\n2020/11/06 10:43:56 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}\n2020/11/06 10:43:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203b8480 DummyKeystore:<nil>}\n2020/11/06 10:43:56 [INFO] TLS Enabled\n2020/11/06 10:43:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:56 [DEBUG] Client Cert File: \n2020/11/06 10:43:56 [DEBUG] Client Key File: \n2020/11/06 10:43:56 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:56 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:56 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:56 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:56 [INFO] encoded CSR\n2020/11/06 10:43:56 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABD1Eo8bjY9MJ4fSy44VD\\nNmgecTIoefgDBFMdgJXmmLgBh5D2meJ9d3u+EKDSFKyFlk4+nhSkpQwMWATaoZDf\\n1ZGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAPpk3rlvN0HrquKcOBa2p1Wd\\nZyxLmD2lhhtbKIlBZuXGAiB4FlmOCRimza4rwUTqtx/N5xFM7Fm5gimYCk/cvOME\\nSA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABD1Eo8bjY9MJ4fSy44VD\\nNmgecTIoefgDBFMdgJXmmLgBh5D2meJ9d3u+EKDSFKyFlk4+nhSkpQwMWATaoZDf\\n1ZGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAPpk3rlvN0HrquKcOBa2p1Wd\\nZyxLmD2lhhtbKIlBZuXGAiB4FlmOCRimza4rwUTqtx/N5xFM7Fm5gimYCk/cvOME\\nSA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\ncp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer3s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer3 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer3 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:57 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/06 10:43:57 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/06 10:43:57 [DEBUG] Checking for enrollment\n2020/11/06 10:43:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420196390}\n2020/11/06 10:43:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201963f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019b740 DummyKeystore:<nil>}\n2020/11/06 10:43:57 [INFO] TLS Enabled\n2020/11/06 10:43:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:57 [DEBUG] Client Cert File: \n2020/11/06 10:43:57 [DEBUG] Client Key File: \n2020/11/06 10:43:57 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:57 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/06 10:43:57 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/06 10:43:57 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203786f0}\n2020/11/06 10:43:57 [DEBUG] Entered runEnroll\n2020/11/06 10:43:57 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203786f0}\n2020/11/06 10:43:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420378750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420180450 DummyKeystore:<nil>}\n2020/11/06 10:43:57 [INFO] TLS Enabled\n2020/11/06 10:43:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:57 [DEBUG] Client Cert File: \n2020/11/06 10:43:57 [DEBUG] Client Key File: \n2020/11/06 10:43:57 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:57 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:57 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:57 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:57 [INFO] encoded CSR\n2020/11/06 10:43:57 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHoMr8Wk6hDAa7xomIt1Fjk5\\nlC+27em3g1Zgsf0f06+WkQXZPCC1MPHnOr5rPXTaJJIYTUQZ7kplrAvhzBtv/Fag\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgVM+abM/5FxcVRRcMTaMuQqwBKDU3\\nO/3xX+A8HMuhNzICIA4aGw5LkXq4/CN47ZAhIUK2fE8lh/KP5+nW9/Sw1SRh\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHoMr8Wk6hDAa7xomIt1Fjk5\\nlC+27em3g1Zgsf0f06+WkQXZPCC1MPHnOr5rPXTaJJIYTUQZ7kplrAvhzBtv/Fag\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgVM+abM/5FxcVRRcMTaMuQqwBKDU3\\nO/3xX+A8HMuhNzICIA4aGw5LkXq4/CN47ZAhIUK2fE8lh/KP5+nW9/Sw1SRh\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\ncp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/06 10:43:57 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:43:57 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203805a0}\n2020/11/06 10:43:57 [DEBUG] Entered runEnroll\n2020/11/06 10:43:57 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }\n2020/11/06 10:43:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203805a0}\n2020/11/06 10:43:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380600 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:43:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a1380 DummyKeystore:<nil>}\n2020/11/06 10:43:57 [INFO] TLS Enabled\n2020/11/06 10:43:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/06 10:43:57 [DEBUG] Client Cert File: \n2020/11/06 10:43:57 [DEBUG] Client Key File: \n2020/11/06 10:43:57 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:43:57 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:43:57 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:43:57 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:43:57 [INFO] encoded CSR\n2020/11/06 10:43:57 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBBZldGhWhY3qPFyV6fuo7hqic+VyizcfitGYpHpJxLY7noSVW0c/KCQqwis5TpoL\\n0X2LOUTCYtjp0BGE0dYt37CgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgW9B/\\ns/jr2dyXmQQGTEZpvPNzvz5RRrMCnR92H8Fr4SwCIGMVUhcH1CHvmPj7a5I2Icie\\nrgArApC0gmsA68LUzxXO\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBBZldGhWhY3qPFyV6fuo7hqic+VyizcfitGYpHpJxLY7noSVW0c/KCQqwis5TpoL\\n0X2LOUTCYtjp0BGE0dYt37CgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgW9B/\\ns/jr2dyXmQQGTEZpvPNzvz5RRrMCnR92H8Fr4SwCIGMVUhcH1CHvmPj7a5I2Icie\\nrgArApC0gmsA68LUzxXO\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/11cf77fe6b226f7c9c9dac1d972c96b27661abb2c5eac33c87e828d523a30c4e_sk /root/ca-tools/walmart/client1/tls/keystore/2d029118cdb4d70338b9e61850a833cd6148ff060dbf156d533b299f5461c898_sk /root/ca-tools/walmart/client1/tls/keystore/d8f96724cb95d63a81076ade8a2a3d5e99ce08b220bc1e5830c174d6958ebcf2_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"orderer.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer3.walmart-net",
        "+ CSR_HOSTS=orderer3.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer3.walmart-net,orderer3.orderer.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.orderer.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:56 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:56 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:56 [DEBUG] Checking for enrollment",
        "2020/11/06 10:43:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be5d0}",
        "2020/11/06 10:43:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205df0f0 DummyKeystore:<nil>}",
        "2020/11/06 10:43:56 [INFO] TLS Enabled",
        "2020/11/06 10:43:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:56 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:56 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:56 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:56 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.orderer.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:56 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:56 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0690}",
        "2020/11/06 10:43:56 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:56 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0690}",
        "2020/11/06 10:43:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c06f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420393c10 DummyKeystore:<nil>}",
        "2020/11/06 10:43:56 [INFO] TLS Enabled",
        "2020/11/06 10:43:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:56 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:56 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:56 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:56 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.orderer.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:56 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:56 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:56 [INFO] encoded CSR",
        "2020/11/06 10:43:56 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQ8hJCrNpauUqPmVHTV\\nWZ5ydrnVANWNmsH2icD5ipoQDm2knHB3hDKwbuja8bu9gmlHRRGXKytfpv8fcyLt\\n1UjdoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDVHzegtG6hCPOmkaI6oxqCPsAlNikFWkCBIHU1\\nxJZd9QIgCde9pPYqNokIgt29oEmnWLPEVRqFRTt7ygL7ug81jOs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.orderer.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBcjCCARgCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQ8hJCrNpauUqPmVHTV\\nWZ5ydrnVANWNmsH2icD5ipoQDm2knHB3hDKwbuja8bu9gmlHRRGXKytfpv8fcyLt\\n1UjdoFswWQYJKoZIhvcNAQkOMUwwSjBIBgNVHREEQTA/ghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIInb3JkZXJlcjMub3JkZXJlci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\\nMAoGCCqGSM49BAMCA0gAMEUCIQDVHzegtG6hCPOmkaI6oxqCPsAlNikFWkCBIHU1\\nxJZd9QIgCde9pPYqNokIgt29oEmnWLPEVRqFRTt7ygL7ug81jOs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/e0d4dd056e672fd20960f785f373c4c41344bbafad6626c3c64f6be4df4cd664_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/cas/orderers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:43:56 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:56 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}",
        "2020/11/06 10:43:56 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:56 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:56 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380720}",
        "2020/11/06 10:43:56 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:56 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203b8480 DummyKeystore:<nil>}",
        "2020/11/06 10:43:56 [INFO] TLS Enabled",
        "2020/11/06 10:43:56 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:56 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:56 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:56 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:56 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:56 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:56 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:56 [INFO] encoded CSR",
        "2020/11/06 10:43:56 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABD1Eo8bjY9MJ4fSy44VD\\nNmgecTIoefgDBFMdgJXmmLgBh5D2meJ9d3u+EKDSFKyFlk4+nhSkpQwMWATaoZDf\\n1ZGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAPpk3rlvN0HrquKcOBa2p1Wd\\nZyxLmD2lhhtbKIlBZuXGAiB4FlmOCRimza4rwUTqtx/N5xFM7Fm5gimYCk/cvOME\\nSA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABD1Eo8bjY9MJ4fSy44VD\\nNmgecTIoefgDBFMdgJXmmLgBh5D2meJ9d3u+EKDSFKyFlk4+nhSkpQwMWATaoZDf\\n1ZGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDSAAwRQIhAPpk3rlvN0HrquKcOBa2p1Wd\\nZyxLmD2lhhtbKIlBZuXGAiB4FlmOCRimza4rwUTqtx/N5xFM7Fm5gimYCk/cvOME\\nSA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ cp '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*' /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem': No such file or directory",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer3s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer3 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer3 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:57 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/06 10:43:57 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/06 10:43:57 [DEBUG] Checking for enrollment",
        "2020/11/06 10:43:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420196390}",
        "2020/11/06 10:43:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201963f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019b740 DummyKeystore:<nil>}",
        "2020/11/06 10:43:57 [INFO] TLS Enabled",
        "2020/11/06 10:43:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:57 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:57 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:57 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:57 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/06 10:43:57 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/06 10:43:57 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203786f0}",
        "2020/11/06 10:43:57 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:57 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203786f0}",
        "2020/11/06 10:43:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420378750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420180450 DummyKeystore:<nil>}",
        "2020/11/06 10:43:57 [INFO] TLS Enabled",
        "2020/11/06 10:43:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:57 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:57 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:57 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:57 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:57 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:57 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:57 [INFO] encoded CSR",
        "2020/11/06 10:43:57 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHoMr8Wk6hDAa7xomIt1Fjk5\\nlC+27em3g1Zgsf0f06+WkQXZPCC1MPHnOr5rPXTaJJIYTUQZ7kplrAvhzBtv/Fag\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgVM+abM/5FxcVRRcMTaMuQqwBKDU3\\nO/3xX+A8HMuhNzICIA4aGw5LkXq4/CN47ZAhIUK2fE8lh/KP5+nW9/Sw1SRh\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHoMr8Wk6hDAa7xomIt1Fjk5\\nlC+27em3g1Zgsf0f06+WkQXZPCC1MPHnOr5rPXTaJJIYTUQZ7kplrAvhzBtv/Fag\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgVM+abM/5FxcVRRcMTaMuQqwBKDU3\\nO/3xX+A8HMuhNzICIA4aGw5LkXq4/CN47ZAhIUK2fE8lh/KP5+nW9/Sw1SRh\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp '/root/ca-tools/walmart/client1/msp/signcerts/*' /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/walmart/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/06 10:43:57 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:43:57 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203805a0}",
        "2020/11/06 10:43:57 [DEBUG] Entered runEnroll",
        "2020/11/06 10:43:57 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:43:57 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-htsff] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203805a0}",
        "2020/11/06 10:43:57 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380600 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:43:57 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a1380 DummyKeystore:<nil>}",
        "2020/11/06 10:43:57 [INFO] TLS Enabled",
        "2020/11/06 10:43:57 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/06 10:43:57 [DEBUG] Client Cert File: ",
        "2020/11/06 10:43:57 [DEBUG] Client Key File: ",
        "2020/11/06 10:43:57 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:43:57 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-htsff] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:43:57 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:43:57 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:43:57 [INFO] encoded CSR",
        "2020/11/06 10:43:57 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBBZldGhWhY3qPFyV6fuo7hqic+VyizcfitGYpHpJxLY7noSVW0c/KCQqwis5TpoL\\n0X2LOUTCYtjp0BGE0dYt37CgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgW9B/\\ns/jr2dyXmQQGTEZpvPNzvz5RRrMCnR92H8Fr4SwCIGMVUhcH1CHvmPj7a5I2Icie\\nrgArApC0gmsA68LUzxXO\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-htsff\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBBZldGhWhY3qPFyV6fuo7hqic+VyizcfitGYpHpJxLY7noSVW0c/KCQqwis5TpoL\\n0X2LOUTCYtjp0BGE0dYt37CgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtaHRzZmYwCgYIKoZIzj0EAwIDRwAwRAIgW9B/\\ns/jr2dyXmQQGTEZpvPNzvz5RRrMCnR92H8Fr4SwCIGMVUhcH1CHvmPj7a5I2Icie\\nrgArApC0gmsA68LUzxXO\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.walmart-net:7054/enroll: x509: certificate is valid for ca.walmart, not ca.walmart-net",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/11cf77fe6b226f7c9c9dac1d972c96b27661abb2c5eac33c87e828d523a30c4e_sk /root/ca-tools/walmart/client1/tls/keystore/2d029118cdb4d70338b9e61850a833cd6148ff060dbf156d533b299f5461c898_sk /root/ca-tools/walmart/client1/tls/keystore/d8f96724cb95d63a81076ade8a2a3d5e99ce08b220bc1e5830c174d6958ebcf2_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/signcerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/walmart/client1/tls/tlscacerts/*' /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/walmart/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.orderer.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.orderer.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659437.5290952-1213-202727909177257 `" && echo ansible-tmp-1604659437.5290952-1213-202727909177257="` echo /root/.ansible/tmp/ansible-tmp-1604659437.5290952-1213-202727909177257 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprir8uavs TO /root/.ansible/tmp/ansible-tmp-1604659437.5290952-1213-202727909177257/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659437.5290952-1213-202727909177257/ /root/.ansible/tmp/ansible-tmp-1604659437.5290952-1213-202727909177257/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659437.5290952-1213-202727909177257/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659437.5290952-1213-202727909177257/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.743399",
    "end": "2020-11-06 10:43:58.404446",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:57.661047",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659438.4747984-1253-21298008683738 `" && echo ansible-tmp-1604659438.4747984-1253-21298008683738="` echo /root/.ansible/tmp/ansible-tmp-1604659438.4747984-1253-21298008683738 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpjyktj1d8 TO /root/.ansible/tmp/ansible-tmp-1604659438.4747984-1253-21298008683738/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659438.4747984-1253-21298008683738/ /root/.ansible/tmp/ansible-tmp-1604659438.4747984-1253-21298008683738/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659438.4747984-1253-21298008683738/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659438.4747984-1253-21298008683738/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.153379",
    "end": "2020-11-06 10:43:58.772484",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:58.619105",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659438.8387837-1306-9547398018321 `" && echo ansible-tmp-1604659438.8387837-1306-9547398018321="` echo /root/.ansible/tmp/ansible-tmp-1604659438.8387837-1306-9547398018321 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp_j9hc83l TO /root/.ansible/tmp/ansible-tmp-1604659438.8387837-1306-9547398018321/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659438.8387837-1306-9547398018321/ /root/.ansible/tmp/ansible-tmp-1604659438.8387837-1306-9547398018321/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659438.8387837-1306-9547398018321/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659438.8387837-1306-9547398018321/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer3-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5akNDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9URXhXaGNOTWpNd09EQXpNRGd5Ck9URXhXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TXk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFCCnlFK21McFhYUE9CZ2NFK3lKelRJZ3M2SGdGOHdwVWhIZDZveExYSjBIaC85NC9VWCtzTVY5TlpqclAvVktQL0MKVWdodytHMzRSL0hUbmFqalVnZ21vMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVXFINFJwbFZ3aENqNHE3cXROSmVPN1Z5SWRtb3dDZ1lJS29aSXpqMEVBd0lEClNRQXdSZ0loQU51TVYveDBvZ3lKekd3bXFhMDZIZWswY0NZckxvaytCUkRtaDZ3OGFDZEFBaUVBcGJ3Qi90QjcKQ2pBcDZ6emZPRmU3c25CUFE5WUl1ZmZiTnhzRTJrQ3Rzenc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUMzSks3ZzJKRVhxaGZLR3YyL2hheWlJRi9ndDNSazVBL0IySzNNdGNHOFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQWNoUHBpNlYxenpnWUhCUHNpYzB5SUxPaDRCZk1LVklSM2VxTVMxeWRCNGYvZVAxRi9yRApGZlRXWTZ6LzFTai93bElJY1BodCtFZngwNTJvNDFJSUpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:11Z",
                "name": "orderer3-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408791",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer3-walmart-net-ambassador-certs",
                "uid": "9c28f8f6-56fe-49c2-9cf9-f892bc7312b3"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659439.4527593-1334-88012956341523 `" && echo ansible-tmp-1604659439.4527593-1334-88012956341523="` echo /root/.ansible/tmp/ansible-tmp-1604659439.4527593-1334-88012956341523 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwnbjy1nu TO /root/.ansible/tmp/ansible-tmp-1604659439.4527593-1334-88012956341523/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659439.4527593-1334-88012956341523/ /root/.ansible/tmp/ansible-tmp-1604659439.4527593-1334-88012956341523/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659439.4527593-1334-88012956341523/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659439.4527593-1334-88012956341523/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
    "delta": "0:00:00.054124",
    "end": "2020-11-06 10:43:59.638194",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:43:59.584070",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659439.7981539-1375-182254830228684 `" && echo ansible-tmp-1604659439.7981539-1375-182254830228684="` echo /root/.ansible/tmp/ansible-tmp-1604659439.7981539-1375-182254830228684 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpgkd3enw4 TO /root/.ansible/tmp/ansible-tmp-1604659439.7981539-1375-182254830228684/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659439.7981539-1375-182254830228684/ /root/.ansible/tmp/ansible-tmp-1604659439.7981539-1375-182254830228684/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659439.7981539-1375-182254830228684/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659439.7981539-1375-182254830228684/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
    "delta": "0:00:00.040642",
    "end": "2020-11-06 10:43:59.970726",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:43:59.930084",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ]
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:31
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659440.035106-1413-101534623975824 `" && echo ansible-tmp-1604659440.035106-1413-101534623975824="` echo /root/.ansible/tmp/ansible-tmp-1604659440.035106-1413-101534623975824 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwp_2820n TO /root/.ansible/tmp/ansible-tmp-1604659440.035106-1413-101534623975824/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659440.035106-1413-101534623975824/ /root/.ansible/tmp/ansible-tmp-1604659440.035106-1413-101534623975824/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659440.035106-1413-101534623975824/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659440.035106-1413-101534623975824/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.047858",
    "end": "2020-11-06 10:44:00.214995",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:44:00.167137",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Copy organization level certificates for orgs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659440.2852664-1448-98260392317015 `" && echo ansible-tmp-1604659440.2852664-1448-98260392317015="` echo /root/.ansible/tmp/ansible-tmp-1604659440.2852664-1448-98260392317015 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp0kunilkn TO /root/.ansible/tmp/ansible-tmp-1604659440.2852664-1448-98260392317015/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659440.2852664-1448-98260392317015/ /root/.ansible/tmp/ansible-tmp-1604659440.2852664-1448-98260392317015/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659440.2852664-1448-98260392317015/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659440.2852664-1448-98260392317015/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.085438",
    "end": "2020-11-06 10:44:00.508398",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:00.422960",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ]
}

TASK [include_role : create/crypto/peer] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:114
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'orderer.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "orderer.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for CA-tool in carrier-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659440.9239528-1509-201549278216703 `" && echo ansible-tmp-1604659440.9239528-1509-201549278216703="` echo /root/.ansible/tmp/ansible-tmp-1604659440.9239528-1509-201549278216703 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpfhnw2sby TO /root/.ansible/tmp/ansible-tmp-1604659440.9239528-1509-201549278216703/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659440.9239528-1509-201549278216703/ /root/.ansible/tmp/ansible-tmp-1604659440.9239528-1509-201549278216703/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659440.9239528-1509-201549278216703/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659440.9239528-1509-201549278216703/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-06T10:38:05Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-nvmr2",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "e837d075-38a9-4590-a374-55801ed9eae6"
                    }
                ],
                "resourceVersion": "2429710",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-tools-69d7885f86-nvmr2",
                "uid": "d345e68c-1e5d-487e-8ed2-9fcde3cb4015"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-h7r5v",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-h7r5v",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-h7r5v"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:38:07Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:38:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:38:43Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-06T10:38:07Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://28f7409132242027a20e640b9175478fa982026f1b6468edc13cc2515ecc13a5",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-06T10:38:42Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.94",
                "podIPs": [
                    {
                        "ip": "10.1.0.94"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-06T10:38:07Z"
            }
        }
    ]
}

TASK [create/crypto/peer : Ensure ca directory exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:21
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659441.5529878-1537-211027370863951 `" && echo ansible-tmp-1604659441.5529878-1537-211027370863951="` echo /root/.ansible/tmp/ansible-tmp-1604659441.5529878-1537-211027370863951 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpd4139u2l TO /root/.ansible/tmp/ansible-tmp-1604659441.5529878-1537-211027370863951/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659441.5529878-1537-211027370863951/ /root/.ansible/tmp/ansible-tmp-1604659441.5529878-1537-211027370863951/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659441.5529878-1537-211027370863951/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659441.5529878-1537-211027370863951/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Check if ca certs already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659441.7601116-1563-246203463790071 `" && echo ansible-tmp-1604659441.7601116-1563-246203463790071="` echo /root/.ansible/tmp/ansible-tmp-1604659441.7601116-1563-246203463790071 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpi46p_lbx TO /root/.ansible/tmp/ansible-tmp-1604659441.7601116-1563-246203463790071/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659441.7601116-1563-246203463790071/ /root/.ansible/tmp/ansible-tmp-1604659441.7601116-1563-246203463790071/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659441.7601116-1563-246203463790071/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659441.7601116-1563-246203463790071/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.048497",
    "end": "2020-11-06 10:44:01.942723",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:01.894226",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if ca key already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:38
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659442.0114553-1600-207542972758356 `" && echo ansible-tmp-1604659442.0114553-1600-207542972758356="` echo /root/.ansible/tmp/ansible-tmp-1604659442.0114553-1600-207542972758356 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxnqjfxs2 TO /root/.ansible/tmp/ansible-tmp-1604659442.0114553-1600-207542972758356/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659442.0114553-1600-207542972758356/ /root/.ansible/tmp/ansible-tmp-1604659442.0114553-1600-207542972758356/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659442.0114553-1600-207542972758356/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659442.0114553-1600-207542972758356/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.050313",
    "end": "2020-11-06 10:44:02.195158",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:02.144845",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peercheck.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:47
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659442.3261616-1639-269916010850280 `" && echo ansible-tmp-1604659442.3261616-1639-269916010850280="` echo /root/.ansible/tmp/ansible-tmp-1604659442.3261616-1639-269916010850280 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp8ahmm5ap TO /root/.ansible/tmp/ansible-tmp-1604659442.3261616-1639-269916010850280/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659442.3261616-1639-269916010850280/ /root/.ansible/tmp/ansible-tmp-1604659442.3261616-1639-269916010850280/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659442.3261616-1639-269916010850280/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659442.3261616-1639-269916010850280/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
    "delta": "0:00:00.048014",
    "end": "2020-11-06 10:44:02.507350",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:44:02.459336",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659442.606326-1676-279145947523166 `" && echo ansible-tmp-1604659442.606326-1676-279145947523166="` echo /root/.ansible/tmp/ansible-tmp-1604659442.606326-1676-279145947523166 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp1q74qo6u TO /root/.ansible/tmp/ansible-tmp-1604659442.606326-1676-279145947523166/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659442.606326-1676-279145947523166/ /root/.ansible/tmp/ansible-tmp-1604659442.606326-1676-279145947523166/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659442.606326-1676-279145947523166/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659442.606326-1676-279145947523166/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
    "delta": "0:00:00.046280",
    "end": "2020-11-06 10:44:02.783342",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:44:02.737062",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Call common.yaml for each peer] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:53
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml for localhost

TASK [create/crypto/peer : Create directory path on CA Tools] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659442.9397469-1715-60560099977343 `" && echo ansible-tmp-1604659442.9397469-1715-60560099977343="` echo /root/.ansible/tmp/ansible-tmp-1604659442.9397469-1715-60560099977343 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpoxs3h8fv TO /root/.ansible/tmp/ansible-tmp-1604659442.9397469-1715-60560099977343/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659442.9397469-1715-60560099977343/ /root/.ansible/tmp/ansible-tmp-1604659442.9397469-1715-60560099977343/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659442.9397469-1715-60560099977343/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659442.9397469-1715-60560099977343/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
    "delta": "0:00:01.402067",
    "end": "2020-11-06 10:44:04.472586",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:03.070519",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659444.5436063-1760-239630905871972 `" && echo ansible-tmp-1604659444.5436063-1760-239630905871972="` echo /root/.ansible/tmp/ansible-tmp-1604659444.5436063-1760-239630905871972 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpaq7jycdm TO /root/.ansible/tmp/ansible-tmp-1604659444.5436063-1760-239630905871972/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659444.5436063-1760-239630905871972/ /root/.ansible/tmp/ansible-tmp-1604659444.5436063-1760-239630905871972/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659444.5436063-1760-239630905871972/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659444.5436063-1760-239630905871972/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Changing the permission of msp files] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659444.7485313-1786-39608597193662 `" && echo ansible-tmp-1604659444.7485313-1786-39608597193662="` echo /root/.ansible/tmp/ansible-tmp-1604659444.7485313-1786-39608597193662 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp_wztdql1 TO /root/.ansible/tmp/ansible-tmp-1604659444.7485313-1786-39608597193662/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659444.7485313-1786-39608597193662/ /root/.ansible/tmp/ansible-tmp-1604659444.7485313-1786-39608597193662/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659444.7485313-1786-39608597193662/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659444.7485313-1786-39608597193662/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-carrier.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-carrier.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-carrier.sh"
        }
    },
    "files": "generate-crypto-carrier.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-carrier.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-carrier.sh",
    "size": 5178,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659444.921825-1786-141273444286631 `" && echo ansible-tmp-1604659444.921825-1786-141273444286631="` echo /root/.ansible/tmp/ansible-tmp-1604659444.921825-1786-141273444286631 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpaj3onucq TO /root/.ansible/tmp/ansible-tmp-1604659444.921825-1786-141273444286631/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659444.921825-1786-141273444286631/ /root/.ansible/tmp/ansible-tmp-1604659444.921825-1786-141273444286631/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659444.921825-1786-141273444286631/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659444.921825-1786-141273444286631/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:43
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659445.1250598-1836-139152016743923 `" && echo ansible-tmp-1604659445.1250598-1836-139152016743923="` echo /root/.ansible/tmp/ansible-tmp-1604659445.1250598-1836-139152016743923 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpom9svhg5 TO /root/.ansible/tmp/ansible-tmp-1604659445.1250598-1836-139152016743923/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659445.1250598-1836-139152016743923/ /root/.ansible/tmp/ansible-tmp-1604659445.1250598-1836-139152016743923/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659445.1250598-1836-139152016743923/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659445.1250598-1836-139152016743923/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:03.801858",
    "end": "2020-11-06 10:44:09.056804",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:05.254946",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Generate crypto material for organization peers] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659449.1243322-1886-19208040884732 `" && echo ansible-tmp-1604659449.1243322-1886-19208040884732="` echo /root/.ansible/tmp/ansible-tmp-1604659449.1243322-1886-19208040884732 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpnqt4x65g TO /root/.ansible/tmp/ansible-tmp-1604659449.1243322-1886-19208040884732/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659449.1243322-1886-19208040884732/ /root/.ansible/tmp/ansible-tmp-1604659449.1243322-1886-19208040884732/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659449.1243322-1886-19208040884732/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659449.1243322-1886-19208040884732/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.046974",
    "end": "2020-11-06 10:44:11.301483",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:09.254509",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=carrier\n+ AFFILIATION=carrier\n+ SUBJECT=C=GB,ST=London,L=London,O=carrier\n+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ CA_ADMIN_USER=carrier-admin\n+ CA_ADMIN_PASS=carrier-adminpw\n+ ORG_ADMIN_USER=Admin@carrier-net\n+ ORG_ADMIN_PASS=Admin@carrier-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ NO_OF_PEERS=2\n+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 10:44:09 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:09 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 10:44:09 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201bc210}\n2020/11/06 10:44:09 [DEBUG] Entered runEnroll\n2020/11/06 10:44:09 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:09 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201bc210}\n2020/11/06 10:44:09 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201bc270 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:09 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201bb9b0 DummyKeystore:<nil>}\n2020/11/06 10:44:09 [INFO] TLS Enabled\n2020/11/06 10:44:09 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:09 [DEBUG] Client Cert File: \n2020/11/06 10:44:09 [DEBUG] Client Key File: \n2020/11/06 10:44:09 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:09 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:09 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:09 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:10 [INFO] encoded CSR\n2020/11/06 10:44:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE7UxZ\\nIOnxxvaoUyvclTyvP4uXwp97KYveahfxiJukpl1LcxO4HnSXa4APClr6fpep5DfZ\\nNBZn7xP9rq4gnvNGo6A3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1udm1yMjAKBggqhkjOPQQDAgNHADBEAiBrXx8+UxUI\\ncxpb3sEBtfhfbDkgxn4VRw36OJnaOyAdVgIgTGFmDZYB67eqBgQYvEVcukal0AiE\\nnpT73S+cXc1g+Ow=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE7UxZ\\nIOnxxvaoUyvclTyvP4uXwp97KYveahfxiJukpl1LcxO4HnSXa4APClr6fpep5DfZ\\nNBZn7xP9rq4gnvNGo6A3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1udm1yMjAKBggqhkjOPQQDAgNHADBEAiBrXx8+UxUI\\ncxpb3sEBtfhfbDkgxn4VRw36OJnaOyAdVgIgTGFmDZYB67eqBgQYvEVcukal0AiE\\nnpT73S+cXc1g+Ow=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:44:10 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 10:44:10 [DEBUG] Entered runGetCACert\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016be90 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42024bf80 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/cainfo\n{}\nError: POST failure of request: POST https://ca.carrier-net:7054/cainfo\n{}: Post https://ca.carrier-net:7054/cainfo: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*': No such file or directory\n+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 10:44:10 [DEBUG] Checking for enrollment\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42031e540}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42031e5a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420271280 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/ca-tools/carrier/admin\n2020/11/06 10:44:10 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml\n2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205f80c0}\n2020/11/06 10:44:10 [DEBUG] Entered runEnroll\n2020/11/06 10:44:10 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205f80c0}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205f8120 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205fac50 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:10 [INFO] encoded CSR\n2020/11/06 10:44:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATuv0jrE04CSPg5FYp3iQ0lWW4F95iSthj34Pxv82Bfg59+hl9Q/fqar6H2drGT\\n9cQfBvNU3f6TlrV54WH8+YOEoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0gAMEUCIQDM\\nGHLna9s5skLC0TwCR1GFqH2nIi8ottBbLevVjOctswIgB9UHHVTzElglsk2/ZTiB\\n6o0bQLX6OPIxlmaqEHu6W5s=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATuv0jrE04CSPg5FYp3iQ0lWW4F95iSthj34Pxv82Bfg59+hl9Q/fqar6H2drGT\\n9cQfBvNU3f6TlrV54WH8+YOEoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0gAMEUCIQDM\\nGHLna9s5skLC0TwCR1GFqH2nIi8ottBbLevVjOctswIgB9UHHVTzElglsk2/ZTiB\\n6o0bQLX6OPIxlmaqEHu6W5s=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts\n+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory\n+ mkdir /root/ca-tools/carrier/admin/msp/admincerts\n+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:44:10 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42009a660}\n2020/11/06 10:44:10 [DEBUG] Entered runEnroll\n2020/11/06 10:44:10 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42009a660}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42009a6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a17d0 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:10 [INFO] encoded CSR\n2020/11/06 10:44:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQArI46rf6i35efqrJfKuoWH8ntWcwIcpxTrZVieyOBbzU2W5FJiu4vUGlRKd+b\\nUE0EEpb+ohdJ4Lsg+F8Ij3BzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0gAMEUCIQDf\\nOAscwCMaj8a485GMySSq9NLXQAAM3KMqh+t8Xd+aJgIgXkYmYjoDk9EvUY8+YLZD\\n3xYZxK9D039riMIVqwlA/7g=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQArI46rf6i35efqrJfKuoWH8ntWcwIcpxTrZVieyOBbzU2W5FJiu4vUGlRKd+b\\nUE0EEpb+ohdJ4Lsg+F8Ij3BzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0gAMEUCIQDf\\nOAscwCMaj8a485GMySSq9NLXQAAM3KMqh+t8Xd+aJgIgXkYmYjoDk9EvUY8+YLZD\\n3xYZxK9D039riMIVqwlA/7g=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls\n+ cp /root/ca-tools/carrier/admin/tls/keystore/cb0292dbabe916bfb90cbf77447c00e0e84c20f130d334ef0ba92c437b9f6ecd_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key\n+ cp '/root/ca-tools/carrier/admin/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/carrier/admin/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/admin/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/admin/tls/tlscacerts/*': No such file or directory\n+ COUNTER=0\n+ '[' 0 -lt 2 ']'\n+ PEER=peer0.carrier-net\n+ CSR_HOSTS=peer0.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 10:44:10 [DEBUG] Checking for enrollment\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203805d0}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420455650 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380540}\n2020/11/06 10:44:10 [DEBUG] Entered runEnroll\n2020/11/06 10:44:10 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380540}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203805a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420456de0 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:10 [INFO] encoded CSR\n2020/11/06 10:44:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARiPmwhiiAAuA2EelNCXxP4KGjqmwtDCtPArgImWxE35SXPPsio/7i/qwLqpzxu\\ntHpck6dU5SaFHaTFHYFPY3LDoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA54PJR32QVopOqiSdhNwp5W+UqqaKmta5DSWMb1rfKSMCIF66nfsv7QHW\\nxnuCCgw5E5XebgkfXCQqNFASsmvlaysu\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARiPmwhiiAAuA2EelNCXxP4KGjqmwtDCtPArgImWxE35SXPPsio/7i/qwLqpzxu\\ntHpck6dU5SaFHaTFHYFPY3LDoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA54PJR32QVopOqiSdhNwp5W+UqqaKmta5DSWMb1rfKSMCIF66nfsv7QHW\\nxnuCCgw5E5XebgkfXCQqNFASsmvlaysu\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/7c0a369dd658b6ed0458cc0ec598ceae2e3644b5d7fe1cb1d9f165d5825b15b8_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key\n+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fec0}\n2020/11/06 10:44:10 [DEBUG] Entered runEnroll\n2020/11/06 10:44:10 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fec0}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006ff20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42018fee0 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:10 [INFO] encoded CSR\n2020/11/06 10:44:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARH9krY8iG4l1iQDdx74gGxB7pNkTg5sfI1YWmpSxDO274W07h8V4C327slE9Ff\\nxtmZ+Sb+yrnnoKpG5jvGNMAVoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCICzd\\nt1nGNP80+RgQDTij0Ey+kVpv1kK4jlx6QBOKFEIFAiBH5hErGkG4L1DF0IqeryGK\\nbi/TLbhdWfL2iHgHMK/N7w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARH9krY8iG4l1iQDdx74gGxB7pNkTg5sfI1YWmpSxDO274W07h8V4C327slE9Ff\\nxtmZ+Sb+yrnnoKpG5jvGNMAVoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCICzd\\nt1nGNP80+RgQDTij0Ey+kVpv1kK4jlx6QBOKFEIFAiBH5hErGkG4L1DF0IqeryGK\\nbi/TLbhdWfL2iHgHMK/N7w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory\n+ let COUNTER=COUNTER+1\n+ '[' 1 -lt 2 ']'\n+ PEER=peer1.carrier-net\n+ CSR_HOSTS=peer1.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 10:44:10 [DEBUG] Checking for enrollment\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380570}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203805d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420466ee0 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c25d0}\n2020/11/06 10:44:10 [DEBUG] Entered runEnroll\n2020/11/06 10:44:10 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c25d0}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203971a0 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:10 [INFO] encoded CSR\n2020/11/06 10:44:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAThQ8GQTOIvEvv4qdXNCAp49e7aHCS5m4NeOdkgDiTL8h4cfHHYA33b/dZDB/Mz\\naEvwY3ALDabg345CLexVVa8AoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA/Y6lUAcdgqW/y5BswVYNmDJLF2BSg6fYCVxc7klSmU4CICnZWk5RyFRe\\nh63z7u77SHZdZBeVrC2WOM7KlmyHsGLH\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAThQ8GQTOIvEvv4qdXNCAp49e7aHCS5m4NeOdkgDiTL8h4cfHHYA33b/dZDB/Mz\\naEvwY3ALDabg345CLexVVa8AoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA/Y6lUAcdgqW/y5BswVYNmDJLF2BSg6fYCVxc7klSmU4CICnZWk5RyFRe\\nh63z7u77SHZdZBeVrC2WOM7KlmyHsGLH\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/b59f790acb79f0ad5715dc05c8ac36f2aed83f4fbcc0446840682852f55d59d1_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key\n+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}\n2020/11/06 10:44:10 [DEBUG] Entered runEnroll\n2020/11/06 10:44:10 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039e6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b9cd0 DummyKeystore:<nil>}\n2020/11/06 10:44:10 [INFO] TLS Enabled\n2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:10 [DEBUG] Client Cert File: \n2020/11/06 10:44:10 [DEBUG] Client Key File: \n2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:10 [INFO] encoded CSR\n2020/11/06 10:44:10 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATkkRM3mBBqxX22oJLQ8wOH3zlXTEY/L3MToKNHE0rn3c8hmnjZj+gDSUAoz+K2\\nSibK7emOkZPNObYGh3S6d43HoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCIHs3\\nIGOI+Vx/vJqZTzb5q2r0KgD5xidaWk8yT/ZkchslAiAgrF6+IFa5l2h2DEZLIHqB\\nJ9RzESz1icEXf+LQnfhW1w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATkkRM3mBBqxX22oJLQ8wOH3zlXTEY/L3MToKNHE0rn3c8hmnjZj+gDSUAoz+K2\\nSibK7emOkZPNObYGh3S6d43HoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCIHs3\\nIGOI+Vx/vJqZTzb5q2r0KgD5xidaWk8yT/ZkchslAiAgrF6+IFa5l2h2DEZLIHqB\\nJ9RzESz1icEXf+LQnfhW1w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\ncp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory\n+ let COUNTER=COUNTER+1\n+ '[' 2 -lt 2 ']'\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ORG_NAME=carrier\n+ TYPE_FOLDER=peers\n+ NO_OF_USERS=1\n+ AFFILIATION=carrier\n+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ '[' peer '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@carrier-net\n+ ORG_USERPASS=User1@carrier-net-pw\n+ '[' peer = peer ']'\n+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:11 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/06 10:44:11 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/06 10:44:11 [DEBUG] Checking for enrollment\n2020/11/06 10:44:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a2540}\n2020/11/06 10:44:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a25a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bccb0 DummyKeystore:<nil>}\n2020/11/06 10:44:11 [INFO] TLS Enabled\n2020/11/06 10:44:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:11 [DEBUG] Client Cert File: \n2020/11/06 10:44:11 [DEBUG] Client Key File: \n2020/11/06 10:44:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:11 [ERROR] Enrollment check failed: Idemix enrollment information does not exist\nError: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort\n+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1\n2020/11/06 10:44:11 [DEBUG] Home directory: /root/ca-tools/carrier/client1\n2020/11/06 10:44:11 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml\n2020/11/06 10:44:11 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a750}\n2020/11/06 10:44:11 [DEBUG] Entered runEnroll\n2020/11/06 10:44:11 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a750}\n2020/11/06 10:44:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028a7b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202959b0 DummyKeystore:<nil>}\n2020/11/06 10:44:11 [INFO] TLS Enabled\n2020/11/06 10:44:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:11 [DEBUG] Client Cert File: \n2020/11/06 10:44:11 [DEBUG] Client Key File: \n2020/11/06 10:44:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:11 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:11 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:11 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:11 [INFO] encoded CSR\n2020/11/06 10:44:11 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARDj4a3jeHgCY9n6Sg+bK+DhsrskhD4RVzZWzOvNqCkBZPpcPiXsABZboFAfMNN\\nsnm9pJFi1ToN9hEuFBssTlbEoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCIFgk\\nuLdl8+kKKuaka5n9QnkQF4WNCtph+fONEbAHMYQqAiAna8ArF1xnQZLV0FqmLXNV\\nDn+TblOQBSG617eT+EOdeA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARDj4a3jeHgCY9n6Sg+bK+DhsrskhD4RVzZWzOvNqCkBZPpcPiXsABZboFAfMNN\\nsnm9pJFi1ToN9hEuFBssTlbEoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCIFgk\\nuLdl8+kKKuaka5n9QnkQF4WNCtph+fONEbAHMYQqAiAna8ArF1xnQZLV0FqmLXNV\\nDn+TblOQBSG617eT+EOdeA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir /root/ca-tools/carrier/client1/msp/admincerts\n+ cp '/root/ca-tools/carrier/client1/msp/signcerts/*' /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem\ncp: cannot stat '/root/ca-tools/carrier/client1/msp/signcerts/*': No such file or directory\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n2020/11/06 10:44:11 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/06 10:44:11 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}\n2020/11/06 10:44:11 [DEBUG] Entered runEnroll\n2020/11/06 10:44:11 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }\n2020/11/06 10:44:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}\n2020/11/06 10:44:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039e6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/06 10:44:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a8000 DummyKeystore:<nil>}\n2020/11/06 10:44:11 [INFO] TLS Enabled\n2020/11/06 10:44:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/06 10:44:11 [DEBUG] Client Cert File: \n2020/11/06 10:44:11 [DEBUG] Client Key File: \n2020/11/06 10:44:11 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/06 10:44:11 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/06 10:44:11 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/06 10:44:11 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/06 10:44:11 [INFO] encoded CSR\n2020/11/06 10:44:11 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBPsMilgZZqSBhxH+mZcH/oE/NvxoH3wn3axphgGd283BNIhCPACbC8W/CyOWfd/q\\nhtb7drys6UXbmz7IqWzFxF+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtbnZtcjIwCgYIKoZIzj0EAwIDRwAwRAIgaC/S\\nUi4BvbeMMUA1sd55j907kOzkMmwA7y0Lk7uZbSgCIELS0V0xWH6n3JJeNrrDinz3\\n/IlmFnbuXMZKu+lq63Xb\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\nError: POST failure of request: POST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBPsMilgZZqSBhxH+mZcH/oE/NvxoH3wn3axphgGd283BNIhCPACbC8W/CyOWfd/q\\nhtb7drys6UXbmz7IqWzFxF+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtbnZtcjIwCgYIKoZIzj0EAwIDRwAwRAIgaC/S\\nUi4BvbeMMUA1sd55j907kOzkMmwA7y0Lk7uZbSgCIELS0V0xWH6n3JJeNrrDinz3\\n/IlmFnbuXMZKu+lq63Xb\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls\n+ cp /root/ca-tools/carrier/client1/tls/keystore/73a5ad0355e0bbb581c9ed2a39b234c13cf3882eb6965a93f615333dbf442fec_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key\n+ cp '/root/ca-tools/carrier/client1/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt\ncp: cannot stat '/root/ca-tools/carrier/client1/tls/signcerts/*': No such file or directory\n+ cp '/root/ca-tools/carrier/client1/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt\ncp: cannot stat '/root/ca-tools/carrier/client1/tls/tlscacerts/*': No such file or directory\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=carrier",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=C=GB,ST=London,L=London,O=carrier",
        "+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ CA_ADMIN_USER=carrier-admin",
        "+ CA_ADMIN_PASS=carrier-adminpw",
        "+ ORG_ADMIN_USER=Admin@carrier-net",
        "+ ORG_ADMIN_PASS=Admin@carrier-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ NO_OF_PEERS=2",
        "+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:44:09 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:09 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:09 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201bc210}",
        "2020/11/06 10:44:09 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:09 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:09 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201bc210}",
        "2020/11/06 10:44:09 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201bc270 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:09 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201bb9b0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:09 [INFO] TLS Enabled",
        "2020/11/06 10:44:09 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:09 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:09 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:09 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:09 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:09 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:09 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:10 [INFO] encoded CSR",
        "2020/11/06 10:44:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE7UxZ\\nIOnxxvaoUyvclTyvP4uXwp97KYveahfxiJukpl1LcxO4HnSXa4APClr6fpep5DfZ\\nNBZn7xP9rq4gnvNGo6A3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1udm1yMjAKBggqhkjOPQQDAgNHADBEAiBrXx8+UxUI\\ncxpb3sEBtfhfbDkgxn4VRw36OJnaOyAdVgIgTGFmDZYB67eqBgQYvEVcukal0AiE\\nnpT73S+cXc1g+Ow=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE7UxZ\\nIOnxxvaoUyvclTyvP4uXwp97KYveahfxiJukpl1LcxO4HnSXa4APClr6fpep5DfZ\\nNBZn7xP9rq4gnvNGo6A3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni1udm1yMjAKBggqhkjOPQQDAgNHADBEAiBrXx8+UxUI\\ncxpb3sEBtfhfbDkgxn4VRw36OJnaOyAdVgIgTGFmDZYB67eqBgQYvEVcukal0AiE\\nnpT73S+cXc1g+Ow=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:44:10 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Entered runGetCACert",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016be90 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42024bf80 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/cainfo",
        "{}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/cainfo",
        "{}: Post https://ca.carrier-net:7054/cainfo: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/cacerts/*': No such file or directory",
        "+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:10 [DEBUG] Checking for enrollment",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42031e540}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42031e5a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420271280 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/ca-tools/carrier/admin",
        "2020/11/06 10:44:10 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205f80c0}",
        "2020/11/06 10:44:10 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:10 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205f80c0}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205f8120 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205fac50 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:10 [INFO] encoded CSR",
        "2020/11/06 10:44:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATuv0jrE04CSPg5FYp3iQ0lWW4F95iSthj34Pxv82Bfg59+hl9Q/fqar6H2drGT\\n9cQfBvNU3f6TlrV54WH8+YOEoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0gAMEUCIQDM\\nGHLna9s5skLC0TwCR1GFqH2nIi8ottBbLevVjOctswIgB9UHHVTzElglsk2/ZTiB\\n6o0bQLX6OPIxlmaqEHu6W5s=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATuv0jrE04CSPg5FYp3iQ0lWW4F95iSthj34Pxv82Bfg59+hl9Q/fqar6H2drGT\\n9cQfBvNU3f6TlrV54WH8+YOEoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0gAMEUCIQDM\\nGHLna9s5skLC0TwCR1GFqH2nIi8ottBbLevVjOctswIgB9UHHVTzElglsk2/ZTiB\\n6o0bQLX6OPIxlmaqEHu6W5s=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir /root/ca-tools/carrier/admin/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/admin/msp/signcerts/*' /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/admin/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:44:10 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42009a660}",
        "2020/11/06 10:44:10 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:10 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42009a660}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42009a6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a17d0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:10 [INFO] encoded CSR",
        "2020/11/06 10:44:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQArI46rf6i35efqrJfKuoWH8ntWcwIcpxTrZVieyOBbzU2W5FJiu4vUGlRKd+b\\nUE0EEpb+ohdJ4Lsg+F8Ij3BzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0gAMEUCIQDf\\nOAscwCMaj8a485GMySSq9NLXQAAM3KMqh+t8Xd+aJgIgXkYmYjoDk9EvUY8+YLZD\\n3xYZxK9D039riMIVqwlA/7g=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQArI46rf6i35efqrJfKuoWH8ntWcwIcpxTrZVieyOBbzU2W5FJiu4vUGlRKd+b\\nUE0EEpb+ohdJ4Lsg+F8Ij3BzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0gAMEUCIQDf\\nOAscwCMaj8a485GMySSq9NLXQAAM3KMqh+t8Xd+aJgIgXkYmYjoDk9EvUY8+YLZD\\n3xYZxK9D039riMIVqwlA/7g=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/admin/tls/keystore/cb0292dbabe916bfb90cbf77447c00e0e84c20f130d334ef0ba92c437b9f6ecd_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key",
        "+ cp '/root/ca-tools/carrier/admin/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/carrier/admin/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/admin/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/admin/tls/tlscacerts/*': No such file or directory",
        "+ COUNTER=0",
        "+ '[' 0 -lt 2 ']'",
        "+ PEER=peer0.carrier-net",
        "+ CSR_HOSTS=peer0.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:10 [DEBUG] Checking for enrollment",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203805d0}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420455650 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380540}",
        "2020/11/06 10:44:10 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:10 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380540}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203805a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420456de0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:10 [INFO] encoded CSR",
        "2020/11/06 10:44:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARiPmwhiiAAuA2EelNCXxP4KGjqmwtDCtPArgImWxE35SXPPsio/7i/qwLqpzxu\\ntHpck6dU5SaFHaTFHYFPY3LDoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA54PJR32QVopOqiSdhNwp5W+UqqaKmta5DSWMb1rfKSMCIF66nfsv7QHW\\nxnuCCgw5E5XebgkfXCQqNFASsmvlaysu\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARiPmwhiiAAuA2EelNCXxP4KGjqmwtDCtPArgImWxE35SXPPsio/7i/qwLqpzxu\\ntHpck6dU5SaFHaTFHYFPY3LDoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIwLmNhcnJpZXItbmV0giNwZWVyMC5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjAuY2Fycmllci5uZXSCMHBlZXIwLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA54PJR32QVopOqiSdhNwp5W+UqqaKmta5DSWMb1rfKSMCIF66nfsv7QHW\\nxnuCCgw5E5XebgkfXCQqNFASsmvlaysu\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/7c0a369dd658b6ed0458cc0ec598ceae2e3644b5d7fe1cb1d9f165d5825b15b8_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fec0}",
        "2020/11/06 10:44:10 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:10 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fec0}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006ff20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42018fee0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:10 [INFO] encoded CSR",
        "2020/11/06 10:44:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARH9krY8iG4l1iQDdx74gGxB7pNkTg5sfI1YWmpSxDO274W07h8V4C327slE9Ff\\nxtmZ+Sb+yrnnoKpG5jvGNMAVoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCICzd\\nt1nGNP80+RgQDTij0Ey+kVpv1kK4jlx6QBOKFEIFAiBH5hErGkG4L1DF0IqeryGK\\nbi/TLbhdWfL2iHgHMK/N7w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARH9krY8iG4l1iQDdx74gGxB7pNkTg5sfI1YWmpSxDO274W07h8V4C327slE9Ff\\nxtmZ+Sb+yrnnoKpG5jvGNMAVoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCICzd\\nt1nGNP80+RgQDTij0Ey+kVpv1kK4jlx6QBOKFEIFAiBH5hErGkG4L1DF0IqeryGK\\nbi/TLbhdWfL2iHgHMK/N7w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 1 -lt 2 ']'",
        "+ PEER=peer1.carrier-net",
        "+ CSR_HOSTS=peer1.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:10 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:10 [DEBUG] Checking for enrollment",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380570}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203805d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420466ee0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c25d0}",
        "2020/11/06 10:44:10 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:10 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c25d0}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203971a0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:10 [INFO] encoded CSR",
        "2020/11/06 10:44:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAThQ8GQTOIvEvv4qdXNCAp49e7aHCS5m4NeOdkgDiTL8h4cfHHYA33b/dZDB/Mz\\naEvwY3ALDabg345CLexVVa8AoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA/Y6lUAcdgqW/y5BswVYNmDJLF2BSg6fYCVxc7klSmU4CICnZWk5RyFRe\\nh63z7u77SHZdZBeVrC2WOM7KlmyHsGLH\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBxDCCAWoCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAThQ8GQTOIvEvv4qdXNCAp49e7aHCS5m4NeOdkgDiTL8h4cfHHYA33b/dZDB/Mz\\naEvwY3ALDabg345CLexVVa8AoIGdMIGaBgkqhkiG9w0BCQ4xgYwwgYkwgYYGA1Ud\\nEQR/MH2CEXBlZXIxLmNhcnJpZXItbmV0giNwZWVyMS5jYXJyaWVyLW5ldC5zdmMu\\nY2x1c3Rlci5sb2NhbIIRcGVlcjEuY2Fycmllci5uZXSCMHBlZXIxLmNhcnJpZXIt\\nbmV0LmNhcnJpZXIuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjOPQQDAgNI\\nADBFAiEA/Y6lUAcdgqW/y5BswVYNmDJLF2BSg6fYCVxc7klSmU4CICnZWk5RyFRe\\nh63z7u77SHZdZBeVrC2WOM7KlmyHsGLH\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/b59f790acb79f0ad5715dc05c8ac36f2aed83f4fbcc0446840682852f55d59d1_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/cas/peers/tls/tlscacerts/*': No such file or directory",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/06 10:44:10 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:44:10 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}",
        "2020/11/06 10:44:10 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:10 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:10 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039e6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:10 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b9cd0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:10 [INFO] TLS Enabled",
        "2020/11/06 10:44:10 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:10 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:10 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:10 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:10 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:10 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:10 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:10 [INFO] encoded CSR",
        "2020/11/06 10:44:10 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATkkRM3mBBqxX22oJLQ8wOH3zlXTEY/L3MToKNHE0rn3c8hmnjZj+gDSUAoz+K2\\nSibK7emOkZPNObYGh3S6d43HoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCIHs3\\nIGOI+Vx/vJqZTzb5q2r0KgD5xidaWk8yT/ZkchslAiAgrF6+IFa5l2h2DEZLIHqB\\nJ9RzESz1icEXf+LQnfhW1w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATkkRM3mBBqxX22oJLQ8wOH3zlXTEY/L3MToKNHE0rn3c8hmnjZj+gDSUAoz+K2\\nSibK7emOkZPNObYGh3S6d43HoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCIHs3\\nIGOI+Vx/vJqZTzb5q2r0KgD5xidaWk8yT/ZkchslAiAgrF6+IFa5l2h2DEZLIHqB\\nJ9RzESz1icEXf+LQnfhW1w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ cp '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*' /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "cp: cannot stat '/crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem': No such file or directory",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 2 -lt 2 ']'",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ORG_NAME=carrier",
        "+ TYPE_FOLDER=peers",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ '[' peer '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@carrier-net",
        "+ ORG_USERPASS=User1@carrier-net-pw",
        "+ '[' peer = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:11 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/06 10:44:11 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:11 [DEBUG] Checking for enrollment",
        "2020/11/06 10:44:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a2540}",
        "2020/11/06 10:44:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a25a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bccb0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:11 [INFO] TLS Enabled",
        "2020/11/06 10:44:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:11 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:11 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:11 [ERROR] Enrollment check failed: Idemix enrollment information does not exist",
        "Error: Enrollment information does not exist. Please execute enroll command first. Example: fabric-ca-client enroll -u http://user:userpw@serverAddr:serverPort",
        "+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1",
        "2020/11/06 10:44:11 [DEBUG] Home directory: /root/ca-tools/carrier/client1",
        "2020/11/06 10:44:11 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml",
        "2020/11/06 10:44:11 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a750}",
        "2020/11/06 10:44:11 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:11 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028a750}",
        "2020/11/06 10:44:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028a7b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202959b0 DummyKeystore:<nil>}",
        "2020/11/06 10:44:11 [INFO] TLS Enabled",
        "2020/11/06 10:44:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:11 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:11 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:11 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:11 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:11 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:11 [INFO] encoded CSR",
        "2020/11/06 10:44:11 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARDj4a3jeHgCY9n6Sg+bK+DhsrskhD4RVzZWzOvNqCkBZPpcPiXsABZboFAfMNN\\nsnm9pJFi1ToN9hEuFBssTlbEoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCIFgk\\nuLdl8+kKKuaka5n9QnkQF4WNCtph+fONEbAHMYQqAiAna8ArF1xnQZLV0FqmLXNV\\nDn+TblOQBSG617eT+EOdeA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARDj4a3jeHgCY9n6Sg+bK+DhsrskhD4RVzZWzOvNqCkBZPpcPiXsABZboFAfMNN\\nsnm9pJFi1ToN9hEuFBssTlbEoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LW52bXIyMAoGCCqGSM49BAMCA0cAMEQCIFgk\\nuLdl8+kKKuaka5n9QnkQF4WNCtph+fONEbAHMYQqAiAna8ArF1xnQZLV0FqmLXNV\\nDn+TblOQBSG617eT+EOdeA==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir /root/ca-tools/carrier/client1/msp/admincerts",
        "+ cp '/root/ca-tools/carrier/client1/msp/signcerts/*' /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem",
        "cp: cannot stat '/root/ca-tools/carrier/client1/msp/signcerts/*': No such file or directory",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "2020/11/06 10:44:11 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/06 10:44:11 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}",
        "2020/11/06 10:44:11 [DEBUG] Entered runEnroll",
        "2020/11/06 10:44:11 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  }",
        "2020/11/06 10:44:11 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-nvmr2] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e690}",
        "2020/11/06 10:44:11 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039e6f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/06 10:44:11 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a8000 DummyKeystore:<nil>}",
        "2020/11/06 10:44:11 [INFO] TLS Enabled",
        "2020/11/06 10:44:11 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/06 10:44:11 [DEBUG] Client Cert File: ",
        "2020/11/06 10:44:11 [DEBUG] Client Key File: ",
        "2020/11/06 10:44:11 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/06 10:44:11 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-nvmr2] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/06 10:44:11 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/06 10:44:11 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/06 10:44:11 [INFO] encoded CSR",
        "2020/11/06 10:44:11 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBPsMilgZZqSBhxH+mZcH/oE/NvxoH3wn3axphgGd283BNIhCPACbC8W/CyOWfd/q\\nhtb7drys6UXbmz7IqWzFxF+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtbnZtcjIwCgYIKoZIzj0EAwIDRwAwRAIgaC/S\\nUi4BvbeMMUA1sd55j907kOzkMmwA7y0Lk7uZbSgCIELS0V0xWH6n3JJeNrrDinz3\\n/IlmFnbuXMZKu+lq63Xb\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "Error: POST failure of request: POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-nvmr2\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBPsMilgZZqSBhxH+mZcH/oE/NvxoH3wn3axphgGd283BNIhCPACbC8W/CyOWfd/q\\nhtb7drys6UXbmz7IqWzFxF+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtbnZtcjIwCgYIKoZIzj0EAwIDRwAwRAIgaC/S\\nUi4BvbeMMUA1sd55j907kOzkMmwA7y0Lk7uZbSgCIELS0V0xWH6n3JJeNrrDinz3\\n/IlmFnbuXMZKu+lq63Xb\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}: Post https://ca.carrier-net:7054/enroll: x509: certificate is valid for ca.carrier, not ca.carrier-net",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/client1/tls/keystore/73a5ad0355e0bbb581c9ed2a39b234c13cf3882eb6965a93f615333dbf442fec_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key",
        "+ cp '/root/ca-tools/carrier/client1/tls/signcerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt",
        "cp: cannot stat '/root/ca-tools/carrier/client1/tls/signcerts/*': No such file or directory",
        "+ cp '/root/ca-tools/carrier/client1/tls/tlscacerts/*' /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt",
        "cp: cannot stat '/root/ca-tools/carrier/client1/tls/tlscacerts/*': No such file or directory",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\nRegistering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info",
    "stdout_lines": [
        "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier.suneel.pvt.wmtbaf.info"
    ]
}

TASK [create/crypto/peer : Copy the crypto config folder from the ca tools] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659451.3764732-1931-219227653091922 `" && echo ansible-tmp-1604659451.3764732-1931-219227653091922="` echo /root/.ansible/tmp/ansible-tmp-1604659451.3764732-1931-219227653091922 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmptzp2rslf TO /root/.ansible/tmp/ansible-tmp-1604659451.3764732-1931-219227653091922/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659451.3764732-1931-219227653091922/ /root/.ansible/tmp/ansible-tmp-1604659451.3764732-1931-219227653091922/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659451.3764732-1931-219227653091922/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659451.3764732-1931-219227653091922/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.789341",
    "end": "2020-11-06 10:44:12.296418",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:11.507077",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peer.yaml for each peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:58
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659452.4712048-1973-266416017739973 `" && echo ansible-tmp-1604659452.4712048-1973-266416017739973="` echo /root/.ansible/tmp/ansible-tmp-1604659452.4712048-1973-266416017739973 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp52dixdqo TO /root/.ansible/tmp/ansible-tmp-1604659452.4712048-1973-266416017739973/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659452.4712048-1973-266416017739973/ /root/.ansible/tmp/ansible-tmp-1604659452.4712048-1973-266416017739973/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659452.4712048-1973-266416017739973/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659452.4712048-1973-266416017739973/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.118507",
    "end": "2020-11-06 10:44:12.721412",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:12.602905",
    "stderr": "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659452.788453-2025-201172065431731 `" && echo ansible-tmp-1604659452.788453-2025-201172065431731="` echo /root/.ansible/tmp/ansible-tmp-1604659452.788453-2025-201172065431731 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpnp48c34u TO /root/.ansible/tmp/ansible-tmp-1604659452.788453-2025-201172065431731/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659452.788453-2025-201172065431731/ /root/.ansible/tmp/ansible-tmp-1604659452.788453-2025-201172065431731/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659452.788453-2025-201172065431731/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659452.788453-2025-201172065431731/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659453.423957-2053-62855316284237 `" && echo ansible-tmp-1604659453.423957-2053-62855316284237="` echo /root/.ansible/tmp/ansible-tmp-1604659453.423957-2053-62855316284237 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwejm3pq8 TO /root/.ansible/tmp/ansible-tmp-1604659453.423957-2053-62855316284237/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659453.423957-2053-62855316284237/ /root/.ansible/tmp/ansible-tmp-1604659453.423957-2053-62855316284237/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659453.423957-2053-62855316284237/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659453.423957-2053-62855316284237/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659454.048534-2081-141536849281109 `" && echo ansible-tmp-1604659454.048534-2081-141536849281109="` echo /root/.ansible/tmp/ansible-tmp-1604659454.048534-2081-141536849281109 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpo6dj8aob TO /root/.ansible/tmp/ansible-tmp-1604659454.048534-2081-141536849281109/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659454.048534-2081-141536849281109/ /root/.ansible/tmp/ansible-tmp-1604659454.048534-2081-141536849281109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659454.048534-2081-141536849281109/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659454.048534-2081-141536849281109/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.085664",
    "end": "2020-11-06 10:44:14.264644",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-06 10:44:14.178980",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659454.3570375-2117-113714674271262 `" && echo ansible-tmp-1604659454.3570375-2117-113714674271262="` echo /root/.ansible/tmp/ansible-tmp-1604659454.3570375-2117-113714674271262 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpcxem_7iq TO /root/.ansible/tmp/ansible-tmp-1604659454.3570375-2117-113714674271262/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659454.3570375-2117-113714674271262/ /root/.ansible/tmp/ansible-tmp-1604659454.3570375-2117-113714674271262/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659454.3570375-2117-113714674271262/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659454.3570375-2117-113714674271262/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659454.5434124-2143-58110480797223 `" && echo ansible-tmp-1604659454.5434124-2143-58110480797223="` echo /root/.ansible/tmp/ansible-tmp-1604659454.5434124-2143-58110480797223 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpwjw2742h TO /root/.ansible/tmp/ansible-tmp-1604659454.5434124-2143-58110480797223/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659454.5434124-2143-58110480797223/ /root/.ansible/tmp/ansible-tmp-1604659454.5434124-2143-58110480797223/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659454.5434124-2143-58110480797223/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659454.5434124-2143-58110480797223/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier.suneel.pvt.wmtbaf.info\nEOF\n",
    "delta": "0:00:00.002520",
    "end": "2020-11-06 10:44:14.676046",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier.suneel.pvt.wmtbaf.info\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:14.673526",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659454.7335026-2171-153335416068650 `" && echo ansible-tmp-1604659454.7335026-2171-153335416068650="` echo /root/.ansible/tmp/ansible-tmp-1604659454.7335026-2171-153335416068650 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpnlf9ghh5 TO /root/.ansible/tmp/ansible-tmp-1604659454.7335026-2171-153335416068650/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659454.7335026-2171-153335416068650/ /root/.ansible/tmp/ansible-tmp-1604659454.7335026-2171-153335416068650/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659454.7335026-2171-153335416068650/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659454.7335026-2171-153335416068650/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659454.928542-2197-140041379083323 `" && echo ansible-tmp-1604659454.928542-2197-140041379083323="` echo /root/.ansible/tmp/ansible-tmp-1604659454.928542-2197-140041379083323 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmprmqdusi4 TO /root/.ansible/tmp/ansible-tmp-1604659454.928542-2197-140041379083323/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659454.928542-2197-140041379083323/ /root/.ansible/tmp/ansible-tmp-1604659454.928542-2197-140041379083323/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659454.928542-2197-140041379083323/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659454.928542-2197-140041379083323/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
    "delta": "0:00:00.012937",
    "end": "2020-11-06 10:44:15.071813",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:15.058876",
    "stderr": "Ignoring -days; not generating a certificate\nSignature ok\nsubject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info\nGetting CA Private Key",
    "stderr_lines": [
        "Ignoring -days; not generating a certificate",
        "Signature ok",
        "subject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier.suneel.pvt.wmtbaf.info",
        "Getting CA Private Key"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659455.1342287-2229-242470514204329 `" && echo ansible-tmp-1604659455.1342287-2229-242470514204329="` echo /root/.ansible/tmp/ansible-tmp-1604659455.1342287-2229-242470514204329 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpi2lifgi9 TO /root/.ansible/tmp/ansible-tmp-1604659455.1342287-2229-242470514204329/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659455.1342287-2229-242470514204329/ /root/.ansible/tmp/ansible-tmp-1604659455.1342287-2229-242470514204329/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659455.1342287-2229-242470514204329/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659455.1342287-2229-242470514204329/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
    "delta": "0:00:00.149334",
    "end": "2020-11-06 10:44:15.413213",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:15.263879",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659455.4809308-2261-225674941381410 `" && echo ansible-tmp-1604659455.4809308-2261-225674941381410="` echo /root/.ansible/tmp/ansible-tmp-1604659455.4809308-2261-225674941381410 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpjqtfpsfb TO /root/.ansible/tmp/ansible-tmp-1604659455.4809308-2261-225674941381410/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659455.4809308-2261-225674941381410/ /root/.ansible/tmp/ansible-tmp-1604659455.4809308-2261-225674941381410/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659455.4809308-2261-225674941381410/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659455.4809308-2261-225674941381410/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
    "delta": "0:00:00.109348",
    "end": "2020-11-06 10:44:15.723477",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:15.614129",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659455.792222-2293-136687055506831 `" && echo ansible-tmp-1604659455.792222-2293-136687055506831="` echo /root/.ansible/tmp/ansible-tmp-1604659455.792222-2293-136687055506831 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpyvfq2ya1 TO /root/.ansible/tmp/ansible-tmp-1604659455.792222-2293-136687055506831/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659455.792222-2293-136687055506831/ /root/.ansible/tmp/ansible-tmp-1604659455.792222-2293-136687055506831/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659455.792222-2293-136687055506831/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659455.792222-2293-136687055506831/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
    "delta": "0:00:00.039033",
    "end": "2020-11-06 10:44:15.961561",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:15.922528",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador"
    ]
}

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659456.0431795-2331-8348657994708 `" && echo ansible-tmp-1604659456.0431795-2331-8348657994708="` echo /root/.ansible/tmp/ansible-tmp-1604659456.0431795-2331-8348657994708 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpf4qgcoum TO /root/.ansible/tmp/ansible-tmp-1604659456.0431795-2331-8348657994708/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659456.0431795-2331-8348657994708/ /root/.ansible/tmp/ansible-tmp-1604659456.0431795-2331-8348657994708/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659456.0431795-2331-8348657994708/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659456.0431795-2331-8348657994708/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.084448",
    "end": "2020-11-06 10:44:16.259990",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:16.175542",
    "stderr": "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem: No such file or directory\ncat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem: No such file or directory",
        "cat: ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659456.3255491-2384-52040070809687 `" && echo ansible-tmp-1604659456.3255491-2384-52040070809687="` echo /root/.ansible/tmp/ansible-tmp-1604659456.3255491-2384-52040070809687 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpyfj570hd TO /root/.ansible/tmp/ansible-tmp-1604659456.3255491-2384-52040070809687/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659456.3255491-2384-52040070809687/ /root/.ansible/tmp/ansible-tmp-1604659456.3255491-2384-52040070809687/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659456.3255491-2384-52040070809687/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659456.3255491-2384-52040070809687/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659456.9483583-2412-87337238421279 `" && echo ansible-tmp-1604659456.9483583-2412-87337238421279="` echo /root/.ansible/tmp/ansible-tmp-1604659456.9483583-2412-87337238421279 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmps9cvplkh TO /root/.ansible/tmp/ansible-tmp-1604659456.9483583-2412-87337238421279/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659456.9483583-2412-87337238421279/ /root/.ansible/tmp/ansible-tmp-1604659456.9483583-2412-87337238421279/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659456.9483583-2412-87337238421279/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659456.9483583-2412-87337238421279/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659457.5647585-2440-13772186378602 `" && echo ansible-tmp-1604659457.5647585-2440-13772186378602="` echo /root/.ansible/tmp/ansible-tmp-1604659457.5647585-2440-13772186378602 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmphpwqokre TO /root/.ansible/tmp/ansible-tmp-1604659457.5647585-2440-13772186378602/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659457.5647585-2440-13772186378602/ /root/.ansible/tmp/ansible-tmp-1604659457.5647585-2440-13772186378602/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659457.5647585-2440-13772186378602/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659457.5647585-2440-13772186378602/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.056640",
    "end": "2020-11-06 10:44:17.756157",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:17.699517",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "data:\n  certificate: |-\n    -----BEGIN CERTIFICATE-----\n    MIICPTCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTA0NDE1WhcNMjMwODAzMTA0\n    NDE1WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG\n    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww\n    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\n    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5VpMvblWvDYV1kE1UjP0hiAbTdDA\n    wl+0zYaCnKEHG7ZDQx4+D/FuKYbCnjxGYU1oLTp6oPcPc7ftVVn9FVi2baNvMG0w\n    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFEqJ99BE\n    Bs/Qfgtr5WIo5WDckW3XMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0\n    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0cAMEQCIAln/jQT2nLymQUNKWYsSMZV\n    sXvo3zWKnCBsnXkAOk1eAiAzD6nk0rN5NaflShsWUqSmm4Tch404orQQ7ThlLh7S\n    MQ==\n    -----END CERTIFICATE-----\n    -----BEGIN CERTIFICATE-----\n    MIIB8TCCAZagAwIBAgIUSJ5204yE+EsyggLp9SgdcYLoE6swCgYIKoZIzj0EAwIw\n    VjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\n    MRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYDVQQDDApjYS5jYXJyaWVyMB4XDTIwMTEw\n    NjEwMzQ0NVoXDTIzMDgyNzEwMzQ0NVowVjELMAkGA1UEBhMCR0IxDzANBgNVBAgM\n    BkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9uMRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYD\n    VQQDDApjYS5jYXJyaWVyMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9LgJLUZF\n    PN1psfgX4QRTbMmvAv/1ftRS5ZkERux8Y93vQz0DUkwpggLdld5MW+4VTWqrifi4\n    NgkHFbSY1ZshpqNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYw\n    HQYDVR0OBBYEFIIdwQiCX8E7q8SuTrrCnpqEAXDtMAoGCCqGSM49BAMCA0kAMEYC\n    IQCc77Ju36zpiSp1jvOLeCib2NBxYS/uqMX1IumiWG0GWgIhANqTtg23kjoQ+FAH\n    tz+8u9sH/Pby28xvbOOQhaF8Hc3y\n    -----END CERTIFICATE-----\n  clientcert: |-\n    -----BEGIN CERTIFICATE-----\n    MIICPTCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTA0NDE1WhcNMjMwODAzMTA0\n    NDE1WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG\n    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww\n    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv\n    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5VpMvblWvDYV1kE1UjP0hiAbTdDA\n    wl+0zYaCnKEHG7ZDQx4+D/FuKYbCnjxGYU1oLTp6oPcPc7ftVVn9FVi2baNvMG0w\n    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFEqJ99BE\n    Bs/Qfgtr5WIo5WDckW3XMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0\n    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0cAMEQCIAln/jQT2nLymQUNKWYsSMZV\n    sXvo3zWKnCBsnXkAOk1eAiAzD6nk0rN5NaflShsWUqSmm4Tch404orQQ7ThlLh7S\n    MQ==\n    -----END CERTIFICATE-----\n  key: |-\n    -----BEGIN EC PRIVATE KEY-----\n    MHcCAQEEIHshWHeZbFR/kipm/h+wyK+vVu8l7Kq1ORG+8s4VuLBvoAoGCCqGSM49\n    AwEHoUQDQgAE5VpMvblWvDYV1kE1UjP0hiAbTdDAwl+0zYaCnKEHG7ZDQx4+D/Fu\n    KYbCnjxGYU1oLTp6oPcPc7ftVVn9FVi2bQ==\n    -----END EC PRIVATE KEY-----\nlease_duration: 2764800\nlease_id: \"\"\nrenewable: false\nrequest_id: 5ce880a3-50de-bedc-c6b1-f12cfe0a8d6e\nwarnings: null",
    "stdout_lines": [
        "data:",
        "  certificate: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICPTCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTA0NDE1WhcNMjMwODAzMTA0",
        "    NDE1WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG",
        "    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww",
        "    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv",
        "    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5VpMvblWvDYV1kE1UjP0hiAbTdDA",
        "    wl+0zYaCnKEHG7ZDQx4+D/FuKYbCnjxGYU1oLTp6oPcPc7ftVVn9FVi2baNvMG0w",
        "    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFEqJ99BE",
        "    Bs/Qfgtr5WIo5WDckW3XMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0",
        "    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0cAMEQCIAln/jQT2nLymQUNKWYsSMZV",
        "    sXvo3zWKnCBsnXkAOk1eAiAzD6nk0rN5NaflShsWUqSmm4Tch404orQQ7ThlLh7S",
        "    MQ==",
        "    -----END CERTIFICATE-----",
        "    -----BEGIN CERTIFICATE-----",
        "    MIIB8TCCAZagAwIBAgIUSJ5204yE+EsyggLp9SgdcYLoE6swCgYIKoZIzj0EAwIw",
        "    VjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u",
        "    MRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYDVQQDDApjYS5jYXJyaWVyMB4XDTIwMTEw",
        "    NjEwMzQ0NVoXDTIzMDgyNzEwMzQ0NVowVjELMAkGA1UEBhMCR0IxDzANBgNVBAgM",
        "    BkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9uMRAwDgYDVQQKDAdDYXJyaWVyMRMwEQYD",
        "    VQQDDApjYS5jYXJyaWVyMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9LgJLUZF",
        "    PN1psfgX4QRTbMmvAv/1ftRS5ZkERux8Y93vQz0DUkwpggLdld5MW+4VTWqrifi4",
        "    NgkHFbSY1ZshpqNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYw",
        "    HQYDVR0OBBYEFIIdwQiCX8E7q8SuTrrCnpqEAXDtMAoGCCqGSM49BAMCA0kAMEYC",
        "    IQCc77Ju36zpiSp1jvOLeCib2NBxYS/uqMX1IumiWG0GWgIhANqTtg23kjoQ+FAH",
        "    tz+8u9sH/Pby28xvbOOQhaF8Hc3y",
        "    -----END CERTIFICATE-----",
        "  clientcert: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICPTCCAeSgAwIBAgIBATAKBggqhkjOPQQDAjBWMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    EzARBgNVBAMMCmNhLmNhcnJpZXIwHhcNMjAxMTA2MTA0NDE1WhcNMjMwODAzMTA0",
        "    NDE1WjCBiTEQMA4GA1UECgwHQ2FycmllcjEQMA4GA1UECwwHQ2FycmllcjEbMBkG",
        "    A1UEBwwSNTEuNTAsLTAuMTMsTG9uZG9uMQswCQYDVQQGEwJHQjE5MDcGA1UEAwww",
        "    cGVlcjAuY2Fycmllci1uZXQuY2Fycmllci5zdW5lZWwucHZ0LndtdGJhZi5pbmZv",
        "    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5VpMvblWvDYV1kE1UjP0hiAbTdDA",
        "    wl+0zYaCnKEHG7ZDQx4+D/FuKYbCnjxGYU1oLTp6oPcPc7ftVVn9FVi2baNvMG0w",
        "    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAaYwHQYDVR0OBBYEFEqJ99BE",
        "    Bs/Qfgtr5WIo5WDckW3XMCsGA1UdEQQkMCKCICouY2Fycmllci5zdW5lZWwucHZ0",
        "    LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0cAMEQCIAln/jQT2nLymQUNKWYsSMZV",
        "    sXvo3zWKnCBsnXkAOk1eAiAzD6nk0rN5NaflShsWUqSmm4Tch404orQQ7ThlLh7S",
        "    MQ==",
        "    -----END CERTIFICATE-----",
        "  key: |-",
        "    -----BEGIN EC PRIVATE KEY-----",
        "    MHcCAQEEIHshWHeZbFR/kipm/h+wyK+vVu8l7Kq1ORG+8s4VuLBvoAoGCCqGSM49",
        "    AwEHoUQDQgAE5VpMvblWvDYV1kE1UjP0hiAbTdDAwl+0zYaCnKEHG7ZDQx4+D/Fu",
        "    KYbCnjxGYU1oLTp6oPcPc7ftVVn9FVi2bQ==",
        "    -----END EC PRIVATE KEY-----",
        "lease_duration: 2764800",
        "lease_id: \"\"",
        "renewable: false",
        "request_id: 5ce880a3-50de-bedc-c6b1-f12cfe0a8d6e",
        "warnings: null"
    ]
}

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:19
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659457.985271-2484-147882509695518 `" && echo ansible-tmp-1604659457.985271-2484-147882509695518="` echo /root/.ansible/tmp/ansible-tmp-1604659457.985271-2484-147882509695518 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp73_0iftj TO /root/.ansible/tmp/ansible-tmp-1604659457.985271-2484-147882509695518/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659457.985271-2484-147882509695518/ /root/.ansible/tmp/ansible-tmp-1604659457.985271-2484-147882509695518/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659457.985271-2484-147882509695518/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659457.985271-2484-147882509695518/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802 `" && echo ansible-tmp-1604659458.2026715-2511-25613247392802="` echo /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpm8g2_k6j TO /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/ /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpauo7h0jf TO /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/ /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpyc9n4x66 TO /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/ /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "295ff1c0a05dcf0afe974412d46578c52c10d2f7",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpauo7h0jf",
            "attributes": null,
            "backup": false,
            "checksum": "295ff1c0a05dcf0afe974412d46578c52c10d2f7",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "6b5da300e4af18e21e62fd68c7436b04",
    "mode": "0644",
    "owner": "root",
    "size": 226,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659458.2026715-2511-25613247392802/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194 `" && echo ansible-tmp-1604659458.574495-2551-90459406088194="` echo /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp4ct2tnww TO /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/ /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpjazhgsi3 TO /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/ /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpa8ot2ipu TO /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/ /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "005c74fbb005b6912c38e60a826374b44544cbfa",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpjazhgsi3",
            "attributes": null,
            "backup": false,
            "checksum": "005c74fbb005b6912c38e60a826374b44544cbfa",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "207fca3b3d28bfa753fdf5f59c467668",
    "mode": "0644",
    "owner": "root",
    "size": 1571,
    "src": "/root/.ansible/tmp/ansible-tmp-1604659458.574495-2551-90459406088194/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659458.9247057-2591-117164726802252 `" && echo ansible-tmp-1604659458.9247057-2591-117164726802252="` echo /root/.ansible/tmp/ansible-tmp-1604659458.9247057-2591-117164726802252 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpg6pplpkj TO /root/.ansible/tmp/ansible-tmp-1604659458.9247057-2591-117164726802252/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659458.9247057-2591-117164726802252/ /root/.ansible/tmp/ansible-tmp-1604659458.9247057-2591-117164726802252/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659458.9247057-2591-117164726802252/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659458.9247057-2591-117164726802252/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "atime": 1604659455.0631454,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "848b3d233e45dabc2118fe3297a4eaf10965f180",
        "ctime": 1604659454.6711395,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3199,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604659454.6711395,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 265,
        "uid": 0,
        "version": "1002684843",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659459.2005193-2622-196665246169495 `" && echo ansible-tmp-1604659459.2005193-2622-196665246169495="` echo /root/.ansible/tmp/ansible-tmp-1604659459.2005193-2622-196665246169495 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp8f_2awv8 TO /root/.ansible/tmp/ansible-tmp-1604659459.2005193-2622-196665246169495/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659459.2005193-2622-196665246169495/ /root/.ansible/tmp/ansible-tmp-1604659459.2005193-2622-196665246169495/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659459.2005193-2622-196665246169495/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659459.2005193-2622-196665246169495/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key"
        }
    },
    "stat": {
        "atime": 1604659458.471197,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "295ff1c0a05dcf0afe974412d46578c52c10d2f7",
        "ctime": 1604659458.471197,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3204,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604659458.3351948,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 226,
        "uid": 0,
        "version": "1565890393",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the MSP config.yaml exist or not] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659459.5575962-2658-219206540702827 `" && echo ansible-tmp-1604659459.5575962-2658-219206540702827="` echo /root/.ansible/tmp/ansible-tmp-1604659459.5575962-2658-219206540702827 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpktmg5g2e TO /root/.ansible/tmp/ansible-tmp-1604659459.5575962-2658-219206540702827/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659459.5575962-2658-219206540702827/ /root/.ansible/tmp/ansible-tmp-1604659459.5575962-2658-219206540702827/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659459.5575962-2658-219206540702827/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659459.5575962-2658-219206540702827/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp/config.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Create the msp directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659459.7633111-2684-11946658272706 `" && echo ansible-tmp-1604659459.7633111-2684-11946658272706="` echo /root/.ansible/tmp/ansible-tmp-1604659459.7633111-2684-11946658272706 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmptlzd8053 TO /root/.ansible/tmp/ansible-tmp-1604659459.7633111-2684-11946658272706/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659459.7633111-2684-11946658272706/ /root/.ansible/tmp/ansible-tmp-1604659459.7633111-2684-11946658272706/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659459.7633111-2684-11946658272706/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659459.7633111-2684-11946658272706/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Create the MSP config.yaml file for orgs] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:79
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659459.9685612-2710-198841590941974 `" && echo ansible-tmp-1604659459.9685612-2710-198841590941974="` echo /root/.ansible/tmp/ansible-tmp-1604659459.9685612-2710-198841590941974 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxtp4iy4z TO /root/.ansible/tmp/ansible-tmp-1604659459.9685612-2710-198841590941974/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659459.9685612-2710-198841590941974/ /root/.ansible/tmp/ansible-tmp-1604659459.9685612-2710-198841590941974/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659459.9685612-2710-198841590941974/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659459.9685612-2710-198841590941974/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
    "delta": "0:00:00.002324",
    "end": "2020-11-06 10:44:20.102675",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-06 10:44:20.100351",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check that orderer-certificate file exists] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:96
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659460.2123387-2738-217213717312814 `" && echo ansible-tmp-1604659460.2123387-2738-217213717312814="` echo /root/.ansible/tmp/ansible-tmp-1604659460.2123387-2738-217213717312814 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp17o7ctpr TO /root/.ansible/tmp/ansible-tmp-1604659460.2123387-2738-217213717312814/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659460.2123387-2738-217213717312814/ /root/.ansible/tmp/ansible-tmp-1604659460.2123387-2738-217213717312814/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659460.2123387-2738-217213717312814/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659460.2123387-2738-217213717312814/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.orderer.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659460.3784008-2738-37443293480770 `" && echo ansible-tmp-1604659460.3784008-2738-37443293480770="` echo /root/.ansible/tmp/ansible-tmp-1604659460.3784008-2738-37443293480770 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmph0n6k2q0 TO /root/.ansible/tmp/ansible-tmp-1604659460.3784008-2738-37443293480770/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659460.3784008-2738-37443293480770/ /root/.ansible/tmp/ansible-tmp-1604659460.3784008-2738-37443293480770/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659460.3784008-2738-37443293480770/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659460.3784008-2738-37443293480770/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.orderer.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659460.5467834-2738-245456819240087 `" && echo ansible-tmp-1604659460.5467834-2738-245456819240087="` echo /root/.ansible/tmp/ansible-tmp-1604659460.5467834-2738-245456819240087 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpp5y52tfm TO /root/.ansible/tmp/ansible-tmp-1604659460.5467834-2738-245456819240087/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659460.5467834-2738-245456819240087/ /root/.ansible/tmp/ansible-tmp-1604659460.5467834-2738-245456819240087/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659460.5467834-2738-245456819240087/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659460.5467834-2738-245456819240087/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.orderer.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Ensure orderer tls cert directory exists] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:108
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659460.742194-2812-199571113912251 `" && echo ansible-tmp-1604659460.742194-2812-199571113912251="` echo /root/.ansible/tmp/ansible-tmp-1604659460.742194-2812-199571113912251 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpnli1wz25 TO /root/.ansible/tmp/ansible-tmp-1604659460.742194-2812-199571113912251/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659460.742194-2812-199571113912251/ /root/.ansible/tmp/ansible-tmp-1604659460.742194-2812-199571113912251/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659460.742194-2812-199571113912251/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659460.742194-2812-199571113912251/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.orderer.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659460.9192789-2812-148348718282522 `" && echo ansible-tmp-1604659460.9192789-2812-148348718282522="` echo /root/.ansible/tmp/ansible-tmp-1604659460.9192789-2812-148348718282522 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmpxkch3p00 TO /root/.ansible/tmp/ansible-tmp-1604659460.9192789-2812-148348718282522/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659460.9192789-2812-148348718282522/ /root/.ansible/tmp/ansible-tmp-1604659460.9192789-2812-148348718282522/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659460.9192789-2812-148348718282522/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659460.9192789-2812-148348718282522/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.orderer.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659461.1434155-2812-275897921035313 `" && echo ansible-tmp-1604659461.1434155-2812-275897921035313="` echo /root/.ansible/tmp/ansible-tmp-1604659461.1434155-2812-275897921035313 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-25324xgi2362n/tmp7wjomg82 TO /root/.ansible/tmp/ansible-tmp-1604659461.1434155-2812-275897921035313/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604659461.1434155-2812-275897921035313/ /root/.ansible/tmp/ansible-tmp-1604659461.1434155-2812-275897921035313/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604659461.1434155-2812-275897921035313/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659461.1434155-2812-275897921035313/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.orderer.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Copy tls ca.crt from auto-generated path to given path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:120
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659461.3471043-2886-74117843255685 `" && echo ansible-tmp-1604659461.3471043-2886-74117843255685="` echo /root/.ansible/tmp/ansible-tmp-1604659461.3471043-2886-74117843255685 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659461.3471043-2886-74117843255685/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.orderer.suneel.pvt.wmtbaf.info:8443"
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659461.3845637-2886-161304101852143 `" && echo ansible-tmp-1604659461.3845637-2886-161304101852143="` echo /root/.ansible/tmp/ansible-tmp-1604659461.3845637-2886-161304101852143 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659461.3845637-2886-161304101852143/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.orderer.suneel.pvt.wmtbaf.info:8443"
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604659461.4189742-2886-123964946336737 `" && echo ansible-tmp-1604659461.4189742-2886-123964946336737="` echo /root/.ansible/tmp/ansible-tmp-1604659461.4189742-2886-123964946336737 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604659461.4189742-2886-123964946336737/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/copy.py", line 466, in run
    source = self._find_needle('files', source)
  File "/usr/local/lib/python3.6/dist-packages/ansible/plugins/action/__init__.py", line 1232, in _find_needle
    return self._loader.path_dwim_relative_stack(path_stack, dirname, needle)
  File "/usr/local/lib/python3.6/dist-packages/ansible/parsing/dataloader.py", line 327, in path_dwim_relative_stack
    raise AnsibleFileNotFound(file_name=source, paths=[to_native(p) for p in search])
ansible.errors.AnsibleFileNotFound: Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt'
Searched in:
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt
	/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.orderer.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "invocation": {
        "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "follow": false,
        "force": true,
        "module_args": {
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
            "follow": false,
            "force": true,
            "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt"
        },
        "src": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt"
    },
    "msg": "Could not find or access './build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt'\nSearched in:\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/files/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n\t/Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../hyperledger-fabric/configuration/./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.orderer.suneel.pvt.wmtbaf.info:8443"
    }
}

PLAY RECAP *********************************************************************
localhost                  : ok=300  changed=115  unreachable=0    failed=1    skipped=291  rescued=0    ignored=20  

