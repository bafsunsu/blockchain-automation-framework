ansible-playbook 2.10.2
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/dist-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
No config file found; using defaults
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Parsed /etc/ansible/hosts inventory source with ini plugin

PLAYBOOK: site.yaml ************************************************************
16 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725490.057333-5502-193910260053305 `" && echo ansible-tmp-1604725490.057333-5502-193910260053305="` echo /root/.ansible/tmp/ansible-tmp-1604725490.057333-5502-193910260053305 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpu3_ho0ey TO /root/.ansible/tmp/ansible-tmp-1604725490.057333-5502-193910260053305/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725490.057333-5502-193910260053305/ /root/.ansible/tmp/ansible-tmp-1604725490.057333-5502-193910260053305/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725490.057333-5502-193910260053305/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725490.057333-5502-193910260053305/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:10

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725490.992598-5554-44443456268557 `" && echo ansible-tmp-1604725490.992598-5554-44443456268557="` echo /root/.ansible/tmp/ansible-tmp-1604725490.992598-5554-44443456268557 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpjux6ngn0 TO /root/.ansible/tmp/ansible-tmp-1604725490.992598-5554-44443456268557/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725490.992598-5554-44443456268557/ /root/.ansible/tmp/ansible-tmp-1604725490.992598-5554-44443456268557/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725490.992598-5554-44443456268557/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725490.992598-5554-44443456268557/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.x71yx0un",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725491.3160474-5580-280131852046051 `" && echo ansible-tmp-1604725491.3160474-5580-280131852046051="` echo /root/.ansible/tmp/ansible-tmp-1604725491.3160474-5580-280131852046051 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj_n7q0nq TO /root/.ansible/tmp/ansible-tmp-1604725491.3160474-5580-280131852046051/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725491.3160474-5580-280131852046051/ /root/.ansible/tmp/ansible-tmp-1604725491.3160474-5580-280131852046051/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725491.3160474-5580-280131852046051/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725491.3160474-5580-280131852046051/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725491.7995934-5616-6459711319460 `" && echo ansible-tmp-1604725491.7995934-5616-6459711319460="` echo /root/.ansible/tmp/ansible-tmp-1604725491.7995934-5616-6459711319460 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpw1_l2i1z TO /root/.ansible/tmp/ansible-tmp-1604725491.7995934-5616-6459711319460/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725491.7995934-5616-6459711319460/ /root/.ansible/tmp/ansible-tmp-1604725491.7995934-5616-6459711319460/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725491.7995934-5616-6459711319460/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725491.7995934-5616-6459711319460/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.049602",
    "end": "2020-11-07 05:04:52.122702",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:04:52.073100",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725492.1694462-5647-152811015953597 `" && echo ansible-tmp-1604725492.1694462-5647-152811015953597="` echo /root/.ansible/tmp/ansible-tmp-1604725492.1694462-5647-152811015953597 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpnrl1gjl6 TO /root/.ansible/tmp/ansible-tmp-1604725492.1694462-5647-152811015953597/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725492.1694462-5647-152811015953597/ /root/.ansible/tmp/ansible-tmp-1604725492.1694462-5647-152811015953597/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725492.1694462-5647-152811015953597/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725492.1694462-5647-152811015953597/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.t0za_pev",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725492.346509-5673-232008036656689 `" && echo ansible-tmp-1604725492.346509-5673-232008036656689="` echo /root/.ansible/tmp/ansible-tmp-1604725492.346509-5673-232008036656689 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp36wwkmzs TO /root/.ansible/tmp/ansible-tmp-1604725492.346509-5673-232008036656689/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725492.346509-5673-232008036656689/ /root/.ansible/tmp/ansible-tmp-1604725492.346509-5673-232008036656689/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725492.346509-5673-232008036656689/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725492.346509-5673-232008036656689/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725492.698289-5709-48919648852403 `" && echo ansible-tmp-1604725492.698289-5709-48919648852403="` echo /root/.ansible/tmp/ansible-tmp-1604725492.698289-5709-48919648852403 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1ygs4c5k TO /root/.ansible/tmp/ansible-tmp-1604725492.698289-5709-48919648852403/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725492.698289-5709-48919648852403/ /root/.ansible/tmp/ansible-tmp-1604725492.698289-5709-48919648852403/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725492.698289-5709-48919648852403/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725492.698289-5709-48919648852403/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.048104",
    "end": "2020-11-07 05:04:52.875208",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:04:52.827104",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [include_role : setup/helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:20

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725493.0104203-5742-209572227885434 `" && echo ansible-tmp-1604725493.0104203-5742-209572227885434="` echo /root/.ansible/tmp/ansible-tmp-1604725493.0104203-5742-209572227885434 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpecfqz2f8 TO /root/.ansible/tmp/ansible-tmp-1604725493.0104203-5742-209572227885434/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725493.0104203-5742-209572227885434/ /root/.ansible/tmp/ansible-tmp-1604725493.0104203-5742-209572227885434/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725493.0104203-5742-209572227885434/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725493.0104203-5742-209572227885434/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.jklnri17",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725493.188168-5768-254968858738338 `" && echo ansible-tmp-1604725493.188168-5768-254968858738338="` echo /root/.ansible/tmp/ansible-tmp-1604725493.188168-5768-254968858738338 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpafx65mfy TO /root/.ansible/tmp/ansible-tmp-1604725493.188168-5768-254968858738338/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725493.188168-5768-254968858738338/ /root/.ansible/tmp/ansible-tmp-1604725493.188168-5768-254968858738338/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725493.188168-5768-254968858738338/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725493.188168-5768-254968858738338/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725493.527074-5804-105046457968286 `" && echo ansible-tmp-1604725493.527074-5804-105046457968286="` echo /root/.ansible/tmp/ansible-tmp-1604725493.527074-5804-105046457968286 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpvknuyzoa TO /root/.ansible/tmp/ansible-tmp-1604725493.527074-5804-105046457968286/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725493.527074-5804-105046457968286/ /root/.ansible/tmp/ansible-tmp-1604725493.527074-5804-105046457968286/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725493.527074-5804-105046457968286/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725493.527074-5804-105046457968286/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.055280",
    "end": "2020-11-07 05:04:53.711416",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:04:53.656136",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725493.7650406-5835-273796819636185 `" && echo ansible-tmp-1604725493.7650406-5835-273796819636185="` echo /root/.ansible/tmp/ansible-tmp-1604725493.7650406-5835-273796819636185 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7ghwaefa TO /root/.ansible/tmp/ansible-tmp-1604725493.7650406-5835-273796819636185/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725493.7650406-5835-273796819636185/ /root/.ansible/tmp/ansible-tmp-1604725493.7650406-5835-273796819636185/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725493.7650406-5835-273796819636185/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725493.7650406-5835-273796819636185/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.jzt2663a",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725493.9442155-5861-66222839220340 `" && echo ansible-tmp-1604725493.9442155-5861-66222839220340="` echo /root/.ansible/tmp/ansible-tmp-1604725493.9442155-5861-66222839220340 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpyuyy44dl TO /root/.ansible/tmp/ansible-tmp-1604725493.9442155-5861-66222839220340/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725493.9442155-5861-66222839220340/ /root/.ansible/tmp/ansible-tmp-1604725493.9442155-5861-66222839220340/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725493.9442155-5861-66222839220340/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725493.9442155-5861-66222839220340/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725494.2857015-5897-168486604920347 `" && echo ansible-tmp-1604725494.2857015-5897-168486604920347="` echo /root/.ansible/tmp/ansible-tmp-1604725494.2857015-5897-168486604920347 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpg8cn8w2g TO /root/.ansible/tmp/ansible-tmp-1604725494.2857015-5897-168486604920347/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725494.2857015-5897-168486604920347/ /root/.ansible/tmp/ansible-tmp-1604725494.2857015-5897-168486604920347/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725494.2857015-5897-168486604920347/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725494.2857015-5897-168486604920347/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051853",
    "end": "2020-11-07 05:04:54.468064",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:04:54.416211",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [include_role : setup/vault] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:30

TASK [setup/vault : register temporary directory] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725494.5693824-5930-200879809195691 `" && echo ansible-tmp-1604725494.5693824-5930-200879809195691="` echo /root/.ansible/tmp/ansible-tmp-1604725494.5693824-5930-200879809195691 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpml_dplg6 TO /root/.ansible/tmp/ansible-tmp-1604725494.5693824-5930-200879809195691/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725494.5693824-5930-200879809195691/ /root/.ansible/tmp/ansible-tmp-1604725494.5693824-5930-200879809195691/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725494.5693824-5930-200879809195691/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725494.5693824-5930-200879809195691/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ev8h0lb7",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725494.7468112-5956-100389797319759 `" && echo ansible-tmp-1604725494.7468112-5956-100389797319759="` echo /root/.ansible/tmp/ansible-tmp-1604725494.7468112-5956-100389797319759 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfou3es52 TO /root/.ansible/tmp/ansible-tmp-1604725494.7468112-5956-100389797319759/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725494.7468112-5956-100389797319759/ /root/.ansible/tmp/ansible-tmp-1604725494.7468112-5956-100389797319759/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725494.7468112-5956-100389797319759/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725494.7468112-5956-100389797319759/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1603618466.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 270632,
        "charset": "binary",
        "checksum": "b1cacaa735c4406d1f47a6937e9329a38a842ede",
        "ctime": 1604239660.105088,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126520,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618466.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 138561023,
        "uid": 0,
        "version": "2790310722",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:34
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725495.203958-5990-162832577364393 `" && echo ansible-tmp-1604725495.203958-5990-162832577364393="` echo /root/.ansible/tmp/ansible-tmp-1604725495.203958-5990-162832577364393 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfnp0ghbt TO /root/.ansible/tmp/ansible-tmp-1604725495.203958-5990-162832577364393/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725495.203958-5990-162832577364393/ /root/.ansible/tmp/ansible-tmp-1604725495.203958-5990-162832577364393/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725495.203958-5990-162832577364393/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725495.203958-5990-162832577364393/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.034550",
    "end": "2020-11-07 05:04:55.371716",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:04:55.337166",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)",
    "stdout_lines": [
        "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)"
    ]
}

TASK [include_role : setup/aws-cli] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:63
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725495.6305995-6031-5060790461144 `" && echo ansible-tmp-1604725495.6305995-6031-5060790461144="` echo /root/.ansible/tmp/ansible-tmp-1604725495.6305995-6031-5060790461144 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgn3yzazq TO /root/.ansible/tmp/ansible-tmp-1604725495.6305995-6031-5060790461144/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725495.6305995-6031-5060790461144/ /root/.ansible/tmp/ansible-tmp-1604725495.6305995-6031-5060790461144/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725495.6305995-6031-5060790461144/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725495.6305995-6031-5060790461144/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725496.6427324-6071-220054454640557 `" && echo ansible-tmp-1604725496.6427324-6071-220054454640557="` echo /root/.ansible/tmp/ansible-tmp-1604725496.6427324-6071-220054454640557 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpynq2ml9a TO /root/.ansible/tmp/ansible-tmp-1604725496.6427324-6071-220054454640557/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725496.6427324-6071-220054454640557/ /root/.ansible/tmp/ansible-tmp-1604725496.6427324-6071-220054454640557/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725496.6427324-6071-220054454640557/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725496.6427324-6071-220054454640557/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725497.271426-6099-281343220865017 `" && echo ansible-tmp-1604725497.271426-6099-281343220865017="` echo /root/.ansible/tmp/ansible-tmp-1604725497.271426-6099-281343220865017 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpydl029tn TO /root/.ansible/tmp/ansible-tmp-1604725497.271426-6099-281343220865017/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725497.271426-6099-281343220865017/ /root/.ansible/tmp/ansible-tmp-1604725497.271426-6099-281343220865017/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725497.271426-6099-281343220865017/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725497.271426-6099-281343220865017/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725498.0663476-6139-212750913777400 `" && echo ansible-tmp-1604725498.0663476-6139-212750913777400="` echo /root/.ansible/tmp/ansible-tmp-1604725498.0663476-6139-212750913777400 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpe2xdmkjy TO /root/.ansible/tmp/ansible-tmp-1604725498.0663476-6139-212750913777400/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725498.0663476-6139-212750913777400/ /root/.ansible/tmp/ansible-tmp-1604725498.0663476-6139-212750913777400/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725498.0663476-6139-212750913777400/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725498.0663476-6139-212750913777400/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725499.1260657-6195-235040858990157 `" && echo ansible-tmp-1604725499.1260657-6195-235040858990157="` echo /root/.ansible/tmp/ansible-tmp-1604725499.1260657-6195-235040858990157 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8uwrtxuo TO /root/.ansible/tmp/ansible-tmp-1604725499.1260657-6195-235040858990157/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725499.1260657-6195-235040858990157/ /root/.ansible/tmp/ansible-tmp-1604725499.1260657-6195-235040858990157/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725499.1260657-6195-235040858990157/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725499.1260657-6195-235040858990157/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.pvrbp10i",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725499.3126078-6221-210026161119317 `" && echo ansible-tmp-1604725499.3126078-6221-210026161119317="` echo /root/.ansible/tmp/ansible-tmp-1604725499.3126078-6221-210026161119317 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfudt8_5j TO /root/.ansible/tmp/ansible-tmp-1604725499.3126078-6221-210026161119317/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725499.3126078-6221-210026161119317/ /root/.ansible/tmp/ansible-tmp-1604725499.3126078-6221-210026161119317/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725499.3126078-6221-210026161119317/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725499.3126078-6221-210026161119317/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725499.6670828-6257-146999318977296 `" && echo ansible-tmp-1604725499.6670828-6257-146999318977296="` echo /root/.ansible/tmp/ansible-tmp-1604725499.6670828-6257-146999318977296 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8k1pl1gh TO /root/.ansible/tmp/ansible-tmp-1604725499.6670828-6257-146999318977296/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725499.6670828-6257-146999318977296/ /root/.ansible/tmp/ansible-tmp-1604725499.6670828-6257-146999318977296/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725499.6670828-6257-146999318977296/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725499.6670828-6257-146999318977296/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.053268",
    "end": "2020-11-07 05:04:59.850332",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:04:59.797064",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725499.903208-6288-151297555987454 `" && echo ansible-tmp-1604725499.903208-6288-151297555987454="` echo /root/.ansible/tmp/ansible-tmp-1604725499.903208-6288-151297555987454 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3fq70bzg TO /root/.ansible/tmp/ansible-tmp-1604725499.903208-6288-151297555987454/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725499.903208-6288-151297555987454/ /root/.ansible/tmp/ansible-tmp-1604725499.903208-6288-151297555987454/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725499.903208-6288-151297555987454/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725499.903208-6288-151297555987454/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.sc350y81",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725500.0822387-6314-2681885345785 `" && echo ansible-tmp-1604725500.0822387-6314-2681885345785="` echo /root/.ansible/tmp/ansible-tmp-1604725500.0822387-6314-2681885345785 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpat4qzpif TO /root/.ansible/tmp/ansible-tmp-1604725500.0822387-6314-2681885345785/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725500.0822387-6314-2681885345785/ /root/.ansible/tmp/ansible-tmp-1604725500.0822387-6314-2681885345785/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725500.0822387-6314-2681885345785/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725500.0822387-6314-2681885345785/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725500.4649854-6350-68283686890848 `" && echo ansible-tmp-1604725500.4649854-6350-68283686890848="` echo /root/.ansible/tmp/ansible-tmp-1604725500.4649854-6350-68283686890848 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptm42ozo6 TO /root/.ansible/tmp/ansible-tmp-1604725500.4649854-6350-68283686890848/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725500.4649854-6350-68283686890848/ /root/.ansible/tmp/ansible-tmp-1604725500.4649854-6350-68283686890848/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725500.4649854-6350-68283686890848/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725500.4649854-6350-68283686890848/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050141",
    "end": "2020-11-07 05:05:00.644061",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:00.593920",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725500.701774-6381-103042518913103 `" && echo ansible-tmp-1604725500.701774-6381-103042518913103="` echo /root/.ansible/tmp/ansible-tmp-1604725500.701774-6381-103042518913103 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0iektaxj TO /root/.ansible/tmp/ansible-tmp-1604725500.701774-6381-103042518913103/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725500.701774-6381-103042518913103/ /root/.ansible/tmp/ansible-tmp-1604725500.701774-6381-103042518913103/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725500.701774-6381-103042518913103/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725500.701774-6381-103042518913103/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725501.51405-6421-76890058879203 `" && echo ansible-tmp-1604725501.51405-6421-76890058879203="` echo /root/.ansible/tmp/ansible-tmp-1604725501.51405-6421-76890058879203 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpn67w_3a3 TO /root/.ansible/tmp/ansible-tmp-1604725501.51405-6421-76890058879203/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725501.51405-6421-76890058879203/ /root/.ansible/tmp/ansible-tmp-1604725501.51405-6421-76890058879203/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725501.51405-6421-76890058879203/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725501.51405-6421-76890058879203/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725502.1497226-6449-269182598515433 `" && echo ansible-tmp-1604725502.1497226-6449-269182598515433="` echo /root/.ansible/tmp/ansible-tmp-1604725502.1497226-6449-269182598515433 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqw_r7zcm TO /root/.ansible/tmp/ansible-tmp-1604725502.1497226-6449-269182598515433/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725502.1497226-6449-269182598515433/ /root/.ansible/tmp/ansible-tmp-1604725502.1497226-6449-269182598515433/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725502.1497226-6449-269182598515433/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725502.1497226-6449-269182598515433/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725502.7660136-6477-241498376594078 `" && echo ansible-tmp-1604725502.7660136-6477-241498376594078="` echo /root/.ansible/tmp/ansible-tmp-1604725502.7660136-6477-241498376594078 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzvj47uaj TO /root/.ansible/tmp/ansible-tmp-1604725502.7660136-6477-241498376594078/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725502.7660136-6477-241498376594078/ /root/.ansible/tmp/ansible-tmp-1604725502.7660136-6477-241498376594078/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725502.7660136-6477-241498376594078/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725502.7660136-6477-241498376594078/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
    "delta": "0:00:00.373831",
    "end": "2020-11-07 05:05:03.270437",
    "invocation": {
        "module_args": {
            "_raw_params": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:02.896606",
    "stderr": "# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725503.3261945-6506-116601041384174 `" && echo ansible-tmp-1604725503.3261945-6506-116601041384174="` echo /root/.ansible/tmp/ansible-tmp-1604725503.3261945-6506-116601041384174 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqktyw1jt TO /root/.ansible/tmp/ansible-tmp-1604725503.3261945-6506-116601041384174/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725503.3261945-6506-116601041384174/ /root/.ansible/tmp/ansible-tmp-1604725503.3261945-6506-116601041384174/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725503.3261945-6506-116601041384174/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725503.3261945-6506-116601041384174/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
    "delta": "0:00:00.290649",
    "end": "2020-11-07 05:05:03.747591",
    "invocation": {
        "module_args": {
            "_raw_params": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:03.456942",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "$HELM_HOME has been configured at /root/.helm.\nNot installing Tiller due to 'client-only' flag having been set\n\"fluxcd\" has been added to your repositories",
    "stdout_lines": [
        "$HELM_HOME has been configured at /root/.helm.",
        "Not installing Tiller due to 'client-only' flag having been set",
        "\"fluxcd\" has been added to your repositories"
    ]
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725503.8164713-6543-10882278582302 `" && echo ansible-tmp-1604725503.8164713-6543-10882278582302="` echo /root/.ansible/tmp/ansible-tmp-1604725503.8164713-6543-10882278582302 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphevjovfh TO /root/.ansible/tmp/ansible-tmp-1604725503.8164713-6543-10882278582302/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725503.8164713-6543-10882278582302/ /root/.ansible/tmp/ansible-tmp-1604725503.8164713-6543-10882278582302/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725503.8164713-6543-10882278582302/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725503.8164713-6543-10882278582302/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
    "delta": "0:00:03.364483",
    "end": "2020-11-07 05:05:07.309930",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:03.945447",
    "stderr": "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists",
    "stderr_lines": [
        "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists"
    ],
    "stdout": "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged\nRelease \"flux-dev\" does not exist. Installing it now.\nNAME:   flux-dev\nLAST DEPLOYED: Sat Nov  7 05:05:05 2020\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME                  DATA  AGE\nflux-dev-kube-config  1     1s\nflux-dev-ssh-config   1     1s\n\n==> v1/Deployment\nNAME                    READY  UP-TO-DATE  AVAILABLE  AGE\nflux-dev                0/1    1           0          1s\nflux-dev-helm-operator  0/1    1           0          1s\nflux-dev-memcached      0/1    1           0          1s\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS             RESTARTS  AGE\nflux-dev-794c97d9cc-kv5md                0/1    ContainerCreating  0         0s\nflux-dev-helm-operator-745dc7fb99-jkrsg  0/1    ContainerCreating  0         0s\nflux-dev-memcached-5f689bfdb9-zdjbm      0/1    ContainerCreating  0         0s\n\n==> v1/Service\nNAME                TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE\nflux-dev            ClusterIP  10.0.196.246  <none>       3030/TCP   1s\nflux-dev-memcached  ClusterIP  10.0.129.7    <none>       11211/TCP  1s\n\n==> v1/ServiceAccount\nNAME      SECRETS  AGE\nflux-dev  1        1s\n\n==> v1beta1/ClusterRole\nNAME      AGE\nflux-dev  1s\n\n==> v1beta1/ClusterRoleBinding\nNAME      AGE\nflux-dev  1s\n\n\nNOTES:\nGet the Git deploy key by either (a) running\n\n  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n\nor by (b) installing fluxctl through\nhttps://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl\nand running:\n\n  fluxctl identity --k8s-fwd-ns default",
    "stdout_lines": [
        "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged",
        "Release \"flux-dev\" does not exist. Installing it now.",
        "NAME:   flux-dev",
        "LAST DEPLOYED: Sat Nov  7 05:05:05 2020",
        "NAMESPACE: default",
        "STATUS: DEPLOYED",
        "",
        "RESOURCES:",
        "==> v1/ConfigMap",
        "NAME                  DATA  AGE",
        "flux-dev-kube-config  1     1s",
        "flux-dev-ssh-config   1     1s",
        "",
        "==> v1/Deployment",
        "NAME                    READY  UP-TO-DATE  AVAILABLE  AGE",
        "flux-dev                0/1    1           0          1s",
        "flux-dev-helm-operator  0/1    1           0          1s",
        "flux-dev-memcached      0/1    1           0          1s",
        "",
        "==> v1/Pod(related)",
        "NAME                                     READY  STATUS             RESTARTS  AGE",
        "flux-dev-794c97d9cc-kv5md                0/1    ContainerCreating  0         0s",
        "flux-dev-helm-operator-745dc7fb99-jkrsg  0/1    ContainerCreating  0         0s",
        "flux-dev-memcached-5f689bfdb9-zdjbm      0/1    ContainerCreating  0         0s",
        "",
        "==> v1/Service",
        "NAME                TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE",
        "flux-dev            ClusterIP  10.0.196.246  <none>       3030/TCP   1s",
        "flux-dev-memcached  ClusterIP  10.0.129.7    <none>       11211/TCP  1s",
        "",
        "==> v1/ServiceAccount",
        "NAME      SECRETS  AGE",
        "flux-dev  1        1s",
        "",
        "==> v1beta1/ClusterRole",
        "NAME      AGE",
        "flux-dev  1s",
        "",
        "==> v1beta1/ClusterRoleBinding",
        "NAME      AGE",
        "flux-dev  1s",
        "",
        "",
        "NOTES:",
        "Get the Git deploy key by either (a) running",
        "",
        "  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2",
        "",
        "or by (b) installing fluxctl through",
        "https://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl",
        "and running:",
        "",
        "  fluxctl identity --k8s-fwd-ns default"
    ]
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725507.498164-6591-152326399768254 `" && echo ansible-tmp-1604725507.498164-6591-152326399768254="` echo /root/.ansible/tmp/ansible-tmp-1604725507.498164-6591-152326399768254 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptrx18fpj TO /root/.ansible/tmp/ansible-tmp-1604725507.498164-6591-152326399768254/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725507.498164-6591-152326399768254/ /root/.ansible/tmp/ansible-tmp-1604725507.498164-6591-152326399768254/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725507.498164-6591-152326399768254/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725507.498164-6591-152326399768254/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod flux in default (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725538.213916-6591-55542091278408 `" && echo ansible-tmp-1604725538.213916-6591-55542091278408="` echo /root/.ansible/tmp/ansible-tmp-1604725538.213916-6591-55542091278408 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpm6wde_dy TO /root/.ansible/tmp/ansible-tmp-1604725538.213916-6591-55542091278408/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725538.213916-6591-55542091278408/ /root/.ansible/tmp/ansible-tmp-1604725538.213916-6591-55542091278408/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725538.213916-6591-55542091278408/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725538.213916-6591-55542091278408/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-07T05:05:07Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-kv5md",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "44f62462-57e1-4f72-a6b4-5773053c59ba"
                    }
                ],
                "resourceVersion": "2605490",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-kv5md",
                "uid": "9f9f614f-6359-4d46-9af4-811cfe9f0d90"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-n2cgk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-n2cgk",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-n2cgk"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:05:07Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:05:21Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:05:21Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:05:07Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e473f85446e54e4c0a658d03e3dcc8f7c7a715fbd5fad0a997e07bfbc66bbb58",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-07T05:05:08Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.17",
                "podIPs": [
                    {
                        "ip": "10.1.0.17"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-07T05:05:07Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725538.896541-6645-9379184010207 `" && echo ansible-tmp-1604725538.896541-6645-9379184010207="` echo /root/.ansible/tmp/ansible-tmp-1604725538.896541-6645-9379184010207 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_aduoev2 TO /root/.ansible/tmp/ansible-tmp-1604725538.896541-6645-9379184010207/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725538.896541-6645-9379184010207/ /root/.ansible/tmp/ansible-tmp-1604725538.896541-6645-9379184010207/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725538.896541-6645-9379184010207/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725538.896541-6645-9379184010207/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.406425",
    "end": "2020-11-07 05:05:39.436057",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:39.029632",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725539.8824594-6706-687429629894 `" && echo ansible-tmp-1604725539.8824594-6706-687429629894="` echo /root/.ansible/tmp/ansible-tmp-1604725539.8824594-6706-687429629894 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9tx6ycb1 TO /root/.ansible/tmp/ansible-tmp-1604725539.8824594-6706-687429629894/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725539.8824594-6706-687429629894/ /root/.ansible/tmp/ansible-tmp-1604725539.8824594-6706-687429629894/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725539.8824594-6706-687429629894/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725539.8824594-6706-687429629894/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.xl2ss9qf",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725540.0772536-6732-126063241059566 `" && echo ansible-tmp-1604725540.0772536-6732-126063241059566="` echo /root/.ansible/tmp/ansible-tmp-1604725540.0772536-6732-126063241059566 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpn5e26nzy TO /root/.ansible/tmp/ansible-tmp-1604725540.0772536-6732-126063241059566/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725540.0772536-6732-126063241059566/ /root/.ansible/tmp/ansible-tmp-1604725540.0772536-6732-126063241059566/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725540.0772536-6732-126063241059566/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725540.0772536-6732-126063241059566/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725540.4896574-6768-96315459111734 `" && echo ansible-tmp-1604725540.4896574-6768-96315459111734="` echo /root/.ansible/tmp/ansible-tmp-1604725540.4896574-6768-96315459111734 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp47c71bpf TO /root/.ansible/tmp/ansible-tmp-1604725540.4896574-6768-96315459111734/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725540.4896574-6768-96315459111734/ /root/.ansible/tmp/ansible-tmp-1604725540.4896574-6768-96315459111734/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725540.4896574-6768-96315459111734/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725540.4896574-6768-96315459111734/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.061821",
    "end": "2020-11-07 05:05:40.685578",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:40.623757",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725540.750207-6800-51113536465022 `" && echo ansible-tmp-1604725540.750207-6800-51113536465022="` echo /root/.ansible/tmp/ansible-tmp-1604725540.750207-6800-51113536465022 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpw814o2g2 TO /root/.ansible/tmp/ansible-tmp-1604725540.750207-6800-51113536465022/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725540.750207-6800-51113536465022/ /root/.ansible/tmp/ansible-tmp-1604725540.750207-6800-51113536465022/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725540.750207-6800-51113536465022/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725540.750207-6800-51113536465022/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ejzit60z",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725540.948778-6826-21212139303425 `" && echo ansible-tmp-1604725540.948778-6826-21212139303425="` echo /root/.ansible/tmp/ansible-tmp-1604725540.948778-6826-21212139303425 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1r48g_il TO /root/.ansible/tmp/ansible-tmp-1604725540.948778-6826-21212139303425/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725540.948778-6826-21212139303425/ /root/.ansible/tmp/ansible-tmp-1604725540.948778-6826-21212139303425/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725540.948778-6826-21212139303425/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725540.948778-6826-21212139303425/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725541.386611-6862-82804684845063 `" && echo ansible-tmp-1604725541.386611-6862-82804684845063="` echo /root/.ansible/tmp/ansible-tmp-1604725541.386611-6862-82804684845063 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphnxn_t5e TO /root/.ansible/tmp/ansible-tmp-1604725541.386611-6862-82804684845063/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725541.386611-6862-82804684845063/ /root/.ansible/tmp/ansible-tmp-1604725541.386611-6862-82804684845063/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725541.386611-6862-82804684845063/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725541.386611-6862-82804684845063/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.056013",
    "end": "2020-11-07 05:05:41.582944",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:41.526931",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725541.6471076-6894-166017735805431 `" && echo ansible-tmp-1604725541.6471076-6894-166017735805431="` echo /root/.ansible/tmp/ansible-tmp-1604725541.6471076-6894-166017735805431 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0ckzruv_ TO /root/.ansible/tmp/ansible-tmp-1604725541.6471076-6894-166017735805431/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725541.6471076-6894-166017735805431/ /root/.ansible/tmp/ansible-tmp-1604725541.6471076-6894-166017735805431/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725541.6471076-6894-166017735805431/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725541.6471076-6894-166017735805431/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725542.7270663-6935-68492788989462 `" && echo ansible-tmp-1604725542.7270663-6935-68492788989462="` echo /root/.ansible/tmp/ansible-tmp-1604725542.7270663-6935-68492788989462 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpxu0z80r6 TO /root/.ansible/tmp/ansible-tmp-1604725542.7270663-6935-68492788989462/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725542.7270663-6935-68492788989462/ /root/.ansible/tmp/ansible-tmp-1604725542.7270663-6935-68492788989462/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725542.7270663-6935-68492788989462/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725542.7270663-6935-68492788989462/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725543.462306-6963-242259581801574 `" && echo ansible-tmp-1604725543.462306-6963-242259581801574="` echo /root/.ansible/tmp/ansible-tmp-1604725543.462306-6963-242259581801574 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3jfe4mrb TO /root/.ansible/tmp/ansible-tmp-1604725543.462306-6963-242259581801574/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725543.462306-6963-242259581801574/ /root/.ansible/tmp/ansible-tmp-1604725543.462306-6963-242259581801574/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725543.462306-6963-242259581801574/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725543.462306-6963-242259581801574/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-07T05:05:07Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-kv5md",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "44f62462-57e1-4f72-a6b4-5773053c59ba"
                    }
                ],
                "resourceVersion": "2605490",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-kv5md",
                "uid": "9f9f614f-6359-4d46-9af4-811cfe9f0d90"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-n2cgk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-n2cgk",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-n2cgk"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:05:07Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:05:21Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:05:21Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:05:07Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e473f85446e54e4c0a658d03e3dcc8f7c7a715fbd5fad0a997e07bfbc66bbb58",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-07T05:05:08Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.17",
                "podIPs": [
                    {
                        "ip": "10.1.0.17"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-07T05:05:07Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725544.305173-6999-206715022343047 `" && echo ansible-tmp-1604725544.305173-6999-206715022343047="` echo /root/.ansible/tmp/ansible-tmp-1604725544.305173-6999-206715022343047 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpt7ug_mla TO /root/.ansible/tmp/ansible-tmp-1604725544.305173-6999-206715022343047/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725544.305173-6999-206715022343047/ /root/.ansible/tmp/ansible-tmp-1604725544.305173-6999-206715022343047/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725544.305173-6999-206715022343047/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725544.305173-6999-206715022343047/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.180653",
    "end": "2020-11-07 05:05:44.623711",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:44.443058",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:22
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:31
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725545.3017764-7066-72708732364005 `" && echo ansible-tmp-1604725545.3017764-7066-72708732364005="` echo /root/.ansible/tmp/ansible-tmp-1604725545.3017764-7066-72708732364005 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpb6cgusi5 TO /root/.ansible/tmp/ansible-tmp-1604725545.3017764-7066-72708732364005/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725545.3017764-7066-72708732364005/ /root/.ansible/tmp/ansible-tmp-1604725545.3017764-7066-72708732364005/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725545.3017764-7066-72708732364005/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725545.3017764-7066-72708732364005/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.g_e1_52f",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725545.4798436-7092-13917039393635 `" && echo ansible-tmp-1604725545.4798436-7092-13917039393635="` echo /root/.ansible/tmp/ansible-tmp-1604725545.4798436-7092-13917039393635 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmplkz6domi TO /root/.ansible/tmp/ansible-tmp-1604725545.4798436-7092-13917039393635/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725545.4798436-7092-13917039393635/ /root/.ansible/tmp/ansible-tmp-1604725545.4798436-7092-13917039393635/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725545.4798436-7092-13917039393635/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725545.4798436-7092-13917039393635/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725545.8426569-7128-127218172801463 `" && echo ansible-tmp-1604725545.8426569-7128-127218172801463="` echo /root/.ansible/tmp/ansible-tmp-1604725545.8426569-7128-127218172801463 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3vp571g4 TO /root/.ansible/tmp/ansible-tmp-1604725545.8426569-7128-127218172801463/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725545.8426569-7128-127218172801463/ /root/.ansible/tmp/ansible-tmp-1604725545.8426569-7128-127218172801463/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725545.8426569-7128-127218172801463/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725545.8426569-7128-127218172801463/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.054025",
    "end": "2020-11-07 05:05:46.026042",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:45.972017",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725546.0834877-7159-195306570378050 `" && echo ansible-tmp-1604725546.0834877-7159-195306570378050="` echo /root/.ansible/tmp/ansible-tmp-1604725546.0834877-7159-195306570378050 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpp4_vxrij TO /root/.ansible/tmp/ansible-tmp-1604725546.0834877-7159-195306570378050/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725546.0834877-7159-195306570378050/ /root/.ansible/tmp/ansible-tmp-1604725546.0834877-7159-195306570378050/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725546.0834877-7159-195306570378050/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725546.0834877-7159-195306570378050/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725546.9478838-7200-255564497186320 `" && echo ansible-tmp-1604725546.9478838-7200-255564497186320="` echo /root/.ansible/tmp/ansible-tmp-1604725546.9478838-7200-255564497186320 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpnjvbcge6 TO /root/.ansible/tmp/ansible-tmp-1604725546.9478838-7200-255564497186320/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725546.9478838-7200-255564497186320/ /root/.ansible/tmp/ansible-tmp-1604725546.9478838-7200-255564497186320/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725546.9478838-7200-255564497186320/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725546.9478838-7200-255564497186320/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725547.5837383-7228-116718535326147 `" && echo ansible-tmp-1604725547.5837383-7228-116718535326147="` echo /root/.ansible/tmp/ansible-tmp-1604725547.5837383-7228-116718535326147 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphbvbgcw3 TO /root/.ansible/tmp/ansible-tmp-1604725547.5837383-7228-116718535326147/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725547.5837383-7228-116718535326147/ /root/.ansible/tmp/ansible-tmp-1604725547.5837383-7228-116718535326147/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725547.5837383-7228-116718535326147/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725547.5837383-7228-116718535326147/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725548.4133155-7268-236200745907970 `" && echo ansible-tmp-1604725548.4133155-7268-236200745907970="` echo /root/.ansible/tmp/ansible-tmp-1604725548.4133155-7268-236200745907970 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmplm9ldnmw TO /root/.ansible/tmp/ansible-tmp-1604725548.4133155-7268-236200745907970/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725548.4133155-7268-236200745907970/ /root/.ansible/tmp/ansible-tmp-1604725548.4133155-7268-236200745907970/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725548.4133155-7268-236200745907970/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725548.4133155-7268-236200745907970/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725549.372723-7320-88432080439243 `" && echo ansible-tmp-1604725549.372723-7320-88432080439243="` echo /root/.ansible/tmp/ansible-tmp-1604725549.372723-7320-88432080439243 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpou5oo03m TO /root/.ansible/tmp/ansible-tmp-1604725549.372723-7320-88432080439243/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725549.372723-7320-88432080439243/ /root/.ansible/tmp/ansible-tmp-1604725549.372723-7320-88432080439243/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725549.372723-7320-88432080439243/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725549.372723-7320-88432080439243/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.dtks5a0p",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725549.554026-7346-213126720732641 `" && echo ansible-tmp-1604725549.554026-7346-213126720732641="` echo /root/.ansible/tmp/ansible-tmp-1604725549.554026-7346-213126720732641 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzaxzph7a TO /root/.ansible/tmp/ansible-tmp-1604725549.554026-7346-213126720732641/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725549.554026-7346-213126720732641/ /root/.ansible/tmp/ansible-tmp-1604725549.554026-7346-213126720732641/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725549.554026-7346-213126720732641/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725549.554026-7346-213126720732641/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725549.9124045-7382-79727163536165 `" && echo ansible-tmp-1604725549.9124045-7382-79727163536165="` echo /root/.ansible/tmp/ansible-tmp-1604725549.9124045-7382-79727163536165 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpd1gdjdbp TO /root/.ansible/tmp/ansible-tmp-1604725549.9124045-7382-79727163536165/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725549.9124045-7382-79727163536165/ /root/.ansible/tmp/ansible-tmp-1604725549.9124045-7382-79727163536165/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725549.9124045-7382-79727163536165/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725549.9124045-7382-79727163536165/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.056736",
    "end": "2020-11-07 05:05:50.100235",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:50.043499",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725550.162705-7413-112060575459058 `" && echo ansible-tmp-1604725550.162705-7413-112060575459058="` echo /root/.ansible/tmp/ansible-tmp-1604725550.162705-7413-112060575459058 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzk0xu2gp TO /root/.ansible/tmp/ansible-tmp-1604725550.162705-7413-112060575459058/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725550.162705-7413-112060575459058/ /root/.ansible/tmp/ansible-tmp-1604725550.162705-7413-112060575459058/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725550.162705-7413-112060575459058/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725550.162705-7413-112060575459058/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725550.9836717-7453-167095865233272 `" && echo ansible-tmp-1604725550.9836717-7453-167095865233272="` echo /root/.ansible/tmp/ansible-tmp-1604725550.9836717-7453-167095865233272 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppvkbr4at TO /root/.ansible/tmp/ansible-tmp-1604725550.9836717-7453-167095865233272/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725550.9836717-7453-167095865233272/ /root/.ansible/tmp/ansible-tmp-1604725550.9836717-7453-167095865233272/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725550.9836717-7453-167095865233272/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725550.9836717-7453-167095865233272/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725551.6109157-7481-55175233316242 `" && echo ansible-tmp-1604725551.6109157-7481-55175233316242="` echo /root/.ansible/tmp/ansible-tmp-1604725551.6109157-7481-55175233316242 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpn2zk0s4y TO /root/.ansible/tmp/ansible-tmp-1604725551.6109157-7481-55175233316242/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725551.6109157-7481-55175233316242/ /root/.ansible/tmp/ansible-tmp-1604725551.6109157-7481-55175233316242/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725551.6109157-7481-55175233316242/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725551.6109157-7481-55175233316242/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725552.4723797-7521-28071605265963 `" && echo ansible-tmp-1604725552.4723797-7521-28071605265963="` echo /root/.ansible/tmp/ansible-tmp-1604725552.4723797-7521-28071605265963 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptjgzf_qt TO /root/.ansible/tmp/ansible-tmp-1604725552.4723797-7521-28071605265963/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725552.4723797-7521-28071605265963/ /root/.ansible/tmp/ansible-tmp-1604725552.4723797-7521-28071605265963/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725552.4723797-7521-28071605265963/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725552.4723797-7521-28071605265963/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725553.1304235-7550-143802792467073 `" && echo ansible-tmp-1604725553.1304235-7550-143802792467073="` echo /root/.ansible/tmp/ansible-tmp-1604725553.1304235-7550-143802792467073 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1csr901k TO /root/.ansible/tmp/ansible-tmp-1604725553.1304235-7550-143802792467073/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725553.1304235-7550-143802792467073/ /root/.ansible/tmp/ansible-tmp-1604725553.1304235-7550-143802792467073/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725553.1304235-7550-143802792467073/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725553.1304235-7550-143802792467073/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [include_role : create/namespace_vaultauth] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:22

TASK [Checking if the namespace walmart-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725553.682457-7580-34147379219493 `" && echo ansible-tmp-1604725553.682457-7580-34147379219493="` echo /root/.ansible/tmp/ansible-tmp-1604725553.682457-7580-34147379219493 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0hiwa4pc TO /root/.ansible/tmp/ansible-tmp-1604725553.682457-7580-34147379219493/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725553.682457-7580-34147379219493/ /root/.ansible/tmp/ansible-tmp-1604725553.682457-7580-34147379219493/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725553.682457-7580-34147379219493/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725553.682457-7580-34147379219493/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725554.473247-7618-27357982937907 `" && echo ansible-tmp-1604725554.473247-7618-27357982937907="` echo /root/.ansible/tmp/ansible-tmp-1604725554.473247-7618-27357982937907 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0k73wssa TO /root/.ansible/tmp/ansible-tmp-1604725554.473247-7618-27357982937907/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725554.473247-7618-27357982937907/ /root/.ansible/tmp/ansible-tmp-1604725554.473247-7618-27357982937907/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725554.473247-7618-27357982937907/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725554.473247-7618-27357982937907/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304 `" && echo ansible-tmp-1604725554.6787612-7644-198690264889304="` echo /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp57h1_x9c TO /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/ /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpetqugbwn/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/ /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpii8j09he TO /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/ /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4d93c9ae989d8757fd969fecf14722d7",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725554.6787612-7644-198690264889304/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725555.3475513-7686-43988207860100 `" && echo ansible-tmp-1604725555.3475513-7686-43988207860100="` echo /root/.ansible/tmp/ansible-tmp-1604725555.3475513-7686-43988207860100 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpcsek8sto TO /root/.ansible/tmp/ansible-tmp-1604725555.3475513-7686-43988207860100/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725555.3475513-7686-43988207860100/ /root/.ansible/tmp/ansible-tmp-1604725555.3475513-7686-43988207860100/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725555.3475513-7686-43988207860100/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725555.3475513-7686-43988207860100/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for orderer] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107 `" && echo ansible-tmp-1604725555.5506585-7712-110586626393107="` echo /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj7lhczwu TO /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/ /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpxsdhmvr9/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/ /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3yrwebvh TO /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/ /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b1e902eb27343ada17df0d459fa5440c",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725555.5506585-7712-110586626393107/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725555.9486723-7754-152082914404891 `" && echo ansible-tmp-1604725555.9486723-7754-152082914404891="` echo /root/.ansible/tmp/ansible-tmp-1604725555.9486723-7754-152082914404891 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpnj4yr4sf TO /root/.ansible/tmp/ansible-tmp-1604725555.9486723-7754-152082914404891/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725555.9486723-7754-152082914404891/ /root/.ansible/tmp/ansible-tmp-1604725555.9486723-7754-152082914404891/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725555.9486723-7754-152082914404891/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725555.9486723-7754-152082914404891/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483 `" && echo ansible-tmp-1604725556.1509237-7780-3488641329483="` echo /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4iv766ud TO /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/ /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp64awgy6u/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/ /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpbiij0l4h TO /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/ /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "707b3f479630c38f6e663c6c7306b4d0",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725556.1509237-7780-3488641329483/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725556.558965-7822-19008171652104 `" && echo ansible-tmp-1604725556.558965-7822-19008171652104="` echo /root/.ansible/tmp/ansible-tmp-1604725556.558965-7822-19008171652104 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp57v9uapo TO /root/.ansible/tmp/ansible-tmp-1604725556.558965-7822-19008171652104/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725556.558965-7822-19008171652104/ /root/.ansible/tmp/ansible-tmp-1604725556.558965-7822-19008171652104/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725556.558965-7822-19008171652104/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725556.558965-7822-19008171652104/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for orderer] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378 `" && echo ansible-tmp-1604725556.7610044-7848-180783037063378="` echo /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpvwmrulrc TO /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/ /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmps1meto43/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/ /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1hkw7rr1 TO /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/ /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "48ca9ca3bda6a4d4373d83682874e266",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725556.7610044-7848-180783037063378/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725557.1586843-7890-41753062819790 `" && echo ansible-tmp-1604725557.1586843-7890-41753062819790="` echo /root/.ansible/tmp/ansible-tmp-1604725557.1586843-7890-41753062819790 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3c826e3r TO /root/.ansible/tmp/ansible-tmp-1604725557.1586843-7890-41753062819790/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725557.1586843-7890-41753062819790/ /root/.ansible/tmp/ansible-tmp-1604725557.1586843-7890-41753062819790/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725557.1586843-7890-41753062819790/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725557.1586843-7890-41753062819790/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725557.3927689-7916-202294725892089 `" && echo ansible-tmp-1604725557.3927689-7916-202294725892089="` echo /root/.ansible/tmp/ansible-tmp-1604725557.3927689-7916-202294725892089 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1qshrr53 TO /root/.ansible/tmp/ansible-tmp-1604725557.3927689-7916-202294725892089/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725557.3927689-7916-202294725892089/ /root/.ansible/tmp/ansible-tmp-1604725557.3927689-7916-202294725892089/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725557.3927689-7916-202294725892089/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725557.3927689-7916-202294725892089/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:09.189203",
    "end": "2020-11-07 05:06:06.712710",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:05:57.523507",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   e2486efd..3b72047d  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   e2486efd..3b72047d  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 3b72047d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 11231 insertions(+)\n create mode 100644 console.out\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 3b72047d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+)",
        " create mode 100644 console.out",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 3b72047d] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+)",
        " create mode 100644 console.out",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   e2486efd..3b72047d  HEAD -> gorilla"
    ]
}

TASK [Checking for the walmart-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding walmart-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725566.9531655-7968-135095046044117 `" && echo ansible-tmp-1604725566.9531655-7968-135095046044117="` echo /root/.ansible/tmp/ansible-tmp-1604725566.9531655-7968-135095046044117 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprug_thyw TO /root/.ansible/tmp/ansible-tmp-1604725566.9531655-7968-135095046044117/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725566.9531655-7968-135095046044117/ /root/.ansible/tmp/ansible-tmp-1604725566.9531655-7968-135095046044117/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725566.9531655-7968-135095046044117/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725566.9531655-7968-135095046044117/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "2ac106c4abd83ffb52d3a8e3b910c95c18efa038",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"2ac106c4abd83ffb52d3a8e3b910c95c18efa038\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78\"},\"name\":\"walmart-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}]}\n"
                },
                "creationTimestamp": "2020-11-06T07:10:22Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78"
                },
                "name": "walmart-net-role-tokenreview-binding",
                "resourceVersion": "2396289",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/walmart-net-role-tokenreview-binding",
                "uid": "27e7b4f4-321f-4fde-8504-e817937d7507"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "walmart-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in walmart-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725567.8248892-8008-51494284422711 `" && echo ansible-tmp-1604725567.8248892-8008-51494284422711="` echo /root/.ansible/tmp/ansible-tmp-1604725567.8248892-8008-51494284422711 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4uib53fm TO /root/.ansible/tmp/ansible-tmp-1604725567.8248892-8008-51494284422711/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725567.8248892-8008-51494284422711/ /root/.ansible/tmp/ansible-tmp-1604725567.8248892-8008-51494284422711/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725567.8248892-8008-51494284422711/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725567.8248892-8008-51494284422711/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725603.429316-8008-184485641301949 `" && echo ansible-tmp-1604725603.429316-8008-184485641301949="` echo /root/.ansible/tmp/ansible-tmp-1604725603.429316-8008-184485641301949 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpx_s91qzl TO /root/.ansible/tmp/ansible-tmp-1604725603.429316-8008-184485641301949/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725603.429316-8008-184485641301949/ /root/.ansible/tmp/ansible-tmp-1604725603.429316-8008-184485641301949/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725603.429316-8008-184485641301949/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725603.429316-8008-184485641301949/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725639.080508-8008-96703405931025 `" && echo ansible-tmp-1604725639.080508-8008-96703405931025="` echo /root/.ansible/tmp/ansible-tmp-1604725639.080508-8008-96703405931025 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpyp11agy0 TO /root/.ansible/tmp/ansible-tmp-1604725639.080508-8008-96703405931025/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725639.080508-8008-96703405931025/ /root/.ansible/tmp/ansible-tmp-1604725639.080508-8008-96703405931025/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725639.080508-8008-96703405931025/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725639.080508-8008-96703405931025/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725674.714043-8008-231391122709397 `" && echo ansible-tmp-1604725674.714043-8008-231391122709397="` echo /root/.ansible/tmp/ansible-tmp-1604725674.714043-8008-231391122709397 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqib07xli TO /root/.ansible/tmp/ansible-tmp-1604725674.714043-8008-231391122709397/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725674.714043-8008-231391122709397/ /root/.ansible/tmp/ansible-tmp-1604725674.714043-8008-231391122709397/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725674.714043-8008-231391122709397/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725674.714043-8008-231391122709397/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "586eac56c69c15efee4d4ceb86bb2999c96a56c2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"586eac56c69c15efee4d4ceb86bb2999c96a56c2\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA\"},\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-07T05:07:27Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA"
                },
                "name": "vault-reviewer",
                "namespace": "walmart-net",
                "resourceVersion": "2605822",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-reviewer",
                "uid": "a078acde-a918-4f7f-91be-8c2726bd0e0a"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-pmrr2"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in walmart-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725675.5581589-8122-146371077413430 `" && echo ansible-tmp-1604725675.5581589-8122-146371077413430="` echo /root/.ansible/tmp/ansible-tmp-1604725675.5581589-8122-146371077413430 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp2quru0vc TO /root/.ansible/tmp/ansible-tmp-1604725675.5581589-8122-146371077413430/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725675.5581589-8122-146371077413430/ /root/.ansible/tmp/ansible-tmp-1604725675.5581589-8122-146371077413430/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725675.5581589-8122-146371077413430/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725675.5581589-8122-146371077413430/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b527239518c6f14365e0009e83a7965e765a8dc3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b527239518c6f14365e0009e83a7965e765a8dc3\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0\"},\"name\":\"vault-auth\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-07T05:07:27Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0"
                },
                "name": "vault-auth",
                "namespace": "walmart-net",
                "resourceVersion": "2605820",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-auth",
                "uid": "37b1dbd5-7894-4345-a779-7864245a3091"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-5dblk"
                }
            ]
        }
    ]
}

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725676.2686713-8153-68606600693165 `" && echo ansible-tmp-1604725676.2686713-8153-68606600693165="` echo /root/.ansible/tmp/ansible-tmp-1604725676.2686713-8153-68606600693165 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpg5t7bk1u TO /root/.ansible/tmp/ansible-tmp-1604725676.2686713-8153-68606600693165/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725676.2686713-8153-68606600693165/ /root/.ansible/tmp/ansible-tmp-1604725676.2686713-8153-68606600693165/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725676.2686713-8153-68606600693165/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725676.2686713-8153-68606600693165/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725677.0708187-8191-195199154576237 `" && echo ansible-tmp-1604725677.0708187-8191-195199154576237="` echo /root/.ansible/tmp/ansible-tmp-1604725677.0708187-8191-195199154576237 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1q314z8v TO /root/.ansible/tmp/ansible-tmp-1604725677.0708187-8191-195199154576237/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725677.0708187-8191-195199154576237/ /root/.ansible/tmp/ansible-tmp-1604725677.0708187-8191-195199154576237/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725677.0708187-8191-195199154576237/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725677.0708187-8191-195199154576237/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557 `" && echo ansible-tmp-1604725677.2868311-8217-153322504765557="` echo /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpuzr_hipb TO /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/ /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp2h2vb6qe/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/ /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpvpivqby6 TO /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/ /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "87aff577d25e325fac79903302d07758",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725677.2868311-8217-153322504765557/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725677.6794686-8259-67717502507472 `" && echo ansible-tmp-1604725677.6794686-8259-67717502507472="` echo /root/.ansible/tmp/ansible-tmp-1604725677.6794686-8259-67717502507472 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj45rsl4s TO /root/.ansible/tmp/ansible-tmp-1604725677.6794686-8259-67717502507472/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725677.6794686-8259-67717502507472/ /root/.ansible/tmp/ansible-tmp-1604725677.6794686-8259-67717502507472/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725677.6794686-8259-67717502507472/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725677.6794686-8259-67717502507472/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for peer] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385 `" && echo ansible-tmp-1604725677.8822463-8285-244228970840385="` echo /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0cb0y_gi TO /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/ /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp10qcl7fv/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/ /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4py70oq2 TO /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/ /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "9749a00045b3fd05c025cc29e7eabfb1",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725677.8822463-8285-244228970840385/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725678.2777977-8327-26228003976901 `" && echo ansible-tmp-1604725678.2777977-8327-26228003976901="` echo /root/.ansible/tmp/ansible-tmp-1604725678.2777977-8327-26228003976901 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8sxhkzyc TO /root/.ansible/tmp/ansible-tmp-1604725678.2777977-8327-26228003976901/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725678.2777977-8327-26228003976901/ /root/.ansible/tmp/ansible-tmp-1604725678.2777977-8327-26228003976901/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725678.2777977-8327-26228003976901/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725678.2777977-8327-26228003976901/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920 `" && echo ansible-tmp-1604725678.5146797-8353-274344238813920="` echo /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpt5pwina9 TO /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/ /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpk_clql0g/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/ /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp228xcn3r TO /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/ /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d39874ba996a2494812a782b78453e995845be6b",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "d39874ba996a2494812a782b78453e995845be6b",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "603f99cf710abd04581efdc563a6074a",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725678.5146797-8353-274344238813920/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725678.9130898-8395-240808075993375 `" && echo ansible-tmp-1604725678.9130898-8395-240808075993375="` echo /root/.ansible/tmp/ansible-tmp-1604725678.9130898-8395-240808075993375 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9337udge TO /root/.ansible/tmp/ansible-tmp-1604725678.9130898-8395-240808075993375/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725678.9130898-8395-240808075993375/ /root/.ansible/tmp/ansible-tmp-1604725678.9130898-8395-240808075993375/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725678.9130898-8395-240808075993375/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725678.9130898-8395-240808075993375/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647 `" && echo ansible-tmp-1604725679.120809-8421-40178618159647="` echo /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpmudykzwc TO /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/ /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp2klruofo/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/ /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpi4wonx0c TO /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/ /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdea783ba12108f490d72ae42abb8b05",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725679.120809-8421-40178618159647/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725679.5213258-8463-5519848817817 `" && echo ansible-tmp-1604725679.5213258-8463-5519848817817="` echo /root/.ansible/tmp/ansible-tmp-1604725679.5213258-8463-5519848817817 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzax0qx7v TO /root/.ansible/tmp/ansible-tmp-1604725679.5213258-8463-5519848817817/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725679.5213258-8463-5519848817817/ /root/.ansible/tmp/ansible-tmp-1604725679.5213258-8463-5519848817817/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725679.5213258-8463-5519848817817/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725679.5213258-8463-5519848817817/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725679.72065-8489-147227885257800 `" && echo ansible-tmp-1604725679.72065-8489-147227885257800="` echo /root/.ansible/tmp/ansible-tmp-1604725679.72065-8489-147227885257800 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9odopp72 TO /root/.ansible/tmp/ansible-tmp-1604725679.72065-8489-147227885257800/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725679.72065-8489-147227885257800/ /root/.ansible/tmp/ansible-tmp-1604725679.72065-8489-147227885257800/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725679.72065-8489-147227885257800/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725679.72065-8489-147227885257800/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.132689",
    "end": "2020-11-07 05:08:02.984670",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:07:59.851981",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   3b72047d..e47ccebc  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   3b72047d..e47ccebc  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla e47ccebc] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 1162 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla e47ccebc] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla e47ccebc] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   3b72047d..e47ccebc  HEAD -> gorilla"
    ]
}

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding carrier-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725683.2290199-8541-215777250509365 `" && echo ansible-tmp-1604725683.2290199-8541-215777250509365="` echo /root/.ansible/tmp/ansible-tmp-1604725683.2290199-8541-215777250509365 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8zbsnnkm TO /root/.ansible/tmp/ansible-tmp-1604725683.2290199-8541-215777250509365/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725683.2290199-8541-215777250509365/ /root/.ansible/tmp/ansible-tmp-1604725683.2290199-8541-215777250509365/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725683.2290199-8541-215777250509365/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725683.2290199-8541-215777250509365/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "ebf39e3d696d21f8f7b231cc1556e148d9bc32ca",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"ebf39e3d696d21f8f7b231cc1556e148d9bc32ca\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E\"},\"name\":\"carrier-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T09:21:48Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E"
                },
                "name": "carrier-net-role-tokenreview-binding",
                "resourceVersion": "2396603",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/carrier-net-role-tokenreview-binding",
                "uid": "595b15f6-118b-4cc4-8d71-d2e003a9ffc1"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "carrier-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725684.0865347-8581-20481959856942 `" && echo ansible-tmp-1604725684.0865347-8581-20481959856942="` echo /root/.ansible/tmp/ansible-tmp-1604725684.0865347-8581-20481959856942 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpp1ksp2yb TO /root/.ansible/tmp/ansible-tmp-1604725684.0865347-8581-20481959856942/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725684.0865347-8581-20481959856942/ /root/.ansible/tmp/ansible-tmp-1604725684.0865347-8581-20481959856942/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725684.0865347-8581-20481959856942/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725684.0865347-8581-20481959856942/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725719.7274542-8581-53090826278604 `" && echo ansible-tmp-1604725719.7274542-8581-53090826278604="` echo /root/.ansible/tmp/ansible-tmp-1604725719.7274542-8581-53090826278604 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwi91m826 TO /root/.ansible/tmp/ansible-tmp-1604725719.7274542-8581-53090826278604/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725719.7274542-8581-53090826278604/ /root/.ansible/tmp/ansible-tmp-1604725719.7274542-8581-53090826278604/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725719.7274542-8581-53090826278604/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725719.7274542-8581-53090826278604/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725755.3653717-8581-174620997947839 `" && echo ansible-tmp-1604725755.3653717-8581-174620997947839="` echo /root/.ansible/tmp/ansible-tmp-1604725755.3653717-8581-174620997947839 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpernv2_dq TO /root/.ansible/tmp/ansible-tmp-1604725755.3653717-8581-174620997947839/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725755.3653717-8581-174620997947839/ /root/.ansible/tmp/ansible-tmp-1604725755.3653717-8581-174620997947839/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725755.3653717-8581-174620997947839/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725755.3653717-8581-174620997947839/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725791.0275977-8581-98971586923592 `" && echo ansible-tmp-1604725791.0275977-8581-98971586923592="` echo /root/.ansible/tmp/ansible-tmp-1604725791.0275977-8581-98971586923592 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_5mdca4d TO /root/.ansible/tmp/ansible-tmp-1604725791.0275977-8581-98971586923592/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725791.0275977-8581-98971586923592/ /root/.ansible/tmp/ansible-tmp-1604725791.0275977-8581-98971586923592/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725791.0275977-8581-98971586923592/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725791.0275977-8581-98971586923592/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-07T05:09:29Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM"
                },
                "name": "vault-reviewer",
                "namespace": "carrier-net",
                "resourceVersion": "2606136",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-reviewer",
                "uid": "0fc7654c-d8c8-4a21-aee0-75d4fc81ece3"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-qfk87"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725791.8247738-8695-188134566861652 `" && echo ansible-tmp-1604725791.8247738-8695-188134566861652="` echo /root/.ansible/tmp/ansible-tmp-1604725791.8247738-8695-188134566861652 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1shpi64t TO /root/.ansible/tmp/ansible-tmp-1604725791.8247738-8695-188134566861652/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725791.8247738-8695-188134566861652/ /root/.ansible/tmp/ansible-tmp-1604725791.8247738-8695-188134566861652/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725791.8247738-8695-188134566861652/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725791.8247738-8695-188134566861652/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-07T05:09:29Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4"
                },
                "name": "vault-auth",
                "namespace": "carrier-net",
                "resourceVersion": "2606134",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-auth",
                "uid": "76677347-9533-46e7-b54c-cf38042b2389"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-l5v78"
                }
            ]
        }
    ]
}

TASK [include_role : setup/vault_kubernetes] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:32

TASK [Waiting for the namespace walmart-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725792.7473476-8729-95031645299367 `" && echo ansible-tmp-1604725792.7473476-8729-95031645299367="` echo /root/.ansible/tmp/ansible-tmp-1604725792.7473476-8729-95031645299367 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpcgkoc26x TO /root/.ansible/tmp/ansible-tmp-1604725792.7473476-8729-95031645299367/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725792.7473476-8729-95031645299367/ /root/.ansible/tmp/ansible-tmp-1604725792.7473476-8729-95031645299367/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725792.7473476-8729-95031645299367/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725792.7473476-8729-95031645299367/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "42333c092f583cd8c9e567f7c9309cf9b1a19a7a",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"42333c092f583cd8c9e567f7c9309cf9b1a19a7a\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0\"},\"name\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-07T05:07:27Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0"
                },
                "name": "walmart-net",
                "resourceVersion": "2605813",
                "selfLink": "/api/v1/namespaces/walmart-net",
                "uid": "7932bac2-e9ae-4906-b53a-5e89aadf0c89"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725793.5282917-8764-116118843146370 `" && echo ansible-tmp-1604725793.5282917-8764-116118843146370="` echo /root/.ansible/tmp/ansible-tmp-1604725793.5282917-8764-116118843146370 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwh44mkbr TO /root/.ansible/tmp/ansible-tmp-1604725793.5282917-8764-116118843146370/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725793.5282917-8764-116118843146370/ /root/.ansible/tmp/ansible-tmp-1604725793.5282917-8764-116118843146370/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725793.5282917-8764-116118843146370/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725793.5282917-8764-116118843146370/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725793.71365-8790-195198464788327 `" && echo ansible-tmp-1604725793.71365-8790-195198464788327="` echo /root/.ansible/tmp/ansible-tmp-1604725793.71365-8790-195198464788327 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpks7dxn9d TO /root/.ansible/tmp/ansible-tmp-1604725793.71365-8790-195198464788327/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725793.71365-8790-195198464788327/ /root/.ansible/tmp/ansible-tmp-1604725793.71365-8790-195198464788327/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725793.71365-8790-195198464788327/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725793.71365-8790-195198464788327/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725794.122226-8828-227467385613646 `" && echo ansible-tmp-1604725794.122226-8828-227467385613646="` echo /root/.ansible/tmp/ansible-tmp-1604725794.122226-8828-227467385613646 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5800mf3w TO /root/.ansible/tmp/ansible-tmp-1604725794.122226-8828-227467385613646/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725794.122226-8828-227467385613646/ /root/.ansible/tmp/ansible-tmp-1604725794.122226-8828-227467385613646/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725794.122226-8828-227467385613646/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725794.122226-8828-227467385613646/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.051966",
    "end": "2020-11-07 05:09:54.304451",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:54.252485",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"",
    "stdout_lines": [
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.051966",
            "end": "2020-11-07 05:09:54.304451",
            "failed": false,
            "rc": 0,
            "start": "2020-11-07 05:09:54.252485",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"",
            "stdout_lines": [
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"walmart-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725794.524197-8875-61306460164417 `" && echo ansible-tmp-1604725794.524197-8875-61306460164417="` echo /root/.ansible/tmp/ansible-tmp-1604725794.524197-8875-61306460164417 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj3_0j30a TO /root/.ansible/tmp/ansible-tmp-1604725794.524197-8875-61306460164417/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725794.524197-8875-61306460164417/ /root/.ansible/tmp/ansible-tmp-1604725794.524197-8875-61306460164417/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725794.524197-8875-61306460164417/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725794.524197-8875-61306460164417/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
    "delta": "0:00:00.051840",
    "end": "2020-11-07 05:09:54.706518",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:54.654678",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: walmart-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: walmart-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725794.768348-8911-152956830813059 `" && echo ansible-tmp-1604725794.768348-8911-152956830813059="` echo /root/.ansible/tmp/ansible-tmp-1604725794.768348-8911-152956830813059 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0fi856uj TO /root/.ansible/tmp/ansible-tmp-1604725794.768348-8911-152956830813059/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725794.768348-8911-152956830813059/ /root/.ansible/tmp/ansible-tmp-1604725794.768348-8911-152956830813059/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725794.768348-8911-152956830813059/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725794.768348-8911-152956830813059/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.200213",
    "end": "2020-11-07 05:09:55.101711",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:54.901498",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725795.1741564-8952-194622471618563 `" && echo ansible-tmp-1604725795.1741564-8952-194622471618563="` echo /root/.ansible/tmp/ansible-tmp-1604725795.1741564-8952-194622471618563 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmph_2pi5lc TO /root/.ansible/tmp/ansible-tmp-1604725795.1741564-8952-194622471618563/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725795.1741564-8952-194622471618563/ /root/.ansible/tmp/ansible-tmp-1604725795.1741564-8952-194622471618563/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725795.1741564-8952-194622471618563/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725795.1741564-8952-194622471618563/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.299639",
    "end": "2020-11-07 05:09:55.604614",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:55.304975",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725795.8192773-9013-234656779782896 `" && echo ansible-tmp-1604725795.8192773-9013-234656779782896="` echo /root/.ansible/tmp/ansible-tmp-1604725795.8192773-9013-234656779782896 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptaxao_aa TO /root/.ansible/tmp/ansible-tmp-1604725795.8192773-9013-234656779782896/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725795.8192773-9013-234656779782896/ /root/.ansible/tmp/ansible-tmp-1604725795.8192773-9013-234656779782896/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725795.8192773-9013-234656779782896/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725795.8192773-9013-234656779782896/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
    "delta": "0:00:00.046454",
    "end": "2020-11-07 05:09:55.996256",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:09:55.949802",
    "stderr": "No policy named: vault-crypto-orderer-walmart-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-orderer-walmart-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226 `" && echo ansible-tmp-1604725796.0884397-9051-191555975122226="` echo /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpryt0sc6q TO /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/ /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp65nfl640/orderer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/ /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4vz19t13 TO /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/ /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
    "dest": "./build/vault-crypto-walmart-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
            "content": null,
            "dest": "./build/vault-crypto-walmart-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8e853417c42460b613805d59c18a9b53",
    "mode": "0644",
    "owner": "root",
    "size": 297,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725796.0884397-9051-191555975122226/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725796.4754293-9093-258148011120219 `" && echo ansible-tmp-1604725796.4754293-9093-258148011120219="` echo /root/.ansible/tmp/ansible-tmp-1604725796.4754293-9093-258148011120219 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7wjo8t28 TO /root/.ansible/tmp/ansible-tmp-1604725796.4754293-9093-258148011120219/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725796.4754293-9093-258148011120219/ /root/.ansible/tmp/ansible-tmp-1604725796.4754293-9093-258148011120219/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725796.4754293-9093-258148011120219/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725796.4754293-9093-258148011120219/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
    "delta": "0:00:00.046935",
    "end": "2020-11-07 05:09:56.652819",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:56.605884",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725796.7218027-9129-156318915802926 `" && echo ansible-tmp-1604725796.7218027-9129-156318915802926="` echo /root/.ansible/tmp/ansible-tmp-1604725796.7218027-9129-156318915802926 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgpnycq3d TO /root/.ansible/tmp/ansible-tmp-1604725796.7218027-9129-156318915802926/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725796.7218027-9129-156318915802926/ /root/.ansible/tmp/ansible-tmp-1604725796.7218027-9129-156318915802926/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725796.7218027-9129-156318915802926/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725796.7218027-9129-156318915802926/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.046927",
    "end": "2020-11-07 05:09:56.901411",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:56.854484",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725797.1526523-9174-118454828139439 `" && echo ansible-tmp-1604725797.1526523-9174-118454828139439="` echo /root/.ansible/tmp/ansible-tmp-1604725797.1526523-9174-118454828139439 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj0af23va TO /root/.ansible/tmp/ansible-tmp-1604725797.1526523-9174-118454828139439/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725797.1526523-9174-118454828139439/ /root/.ansible/tmp/ansible-tmp-1604725797.1526523-9174-118454828139439/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725797.1526523-9174-118454828139439/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725797.1526523-9174-118454828139439/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725797.764503-9202-32169031149168 `" && echo ansible-tmp-1604725797.764503-9202-32169031149168="` echo /root/.ansible/tmp/ansible-tmp-1604725797.764503-9202-32169031149168 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpe52um6sy TO /root/.ansible/tmp/ansible-tmp-1604725797.764503-9202-32169031149168/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725797.764503-9202-32169031149168/ /root/.ansible/tmp/ansible-tmp-1604725797.764503-9202-32169031149168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725797.764503-9202-32169031149168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725797.764503-9202-32169031149168/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.104680",
    "end": "2020-11-07 05:09:58.001763",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:57.897083",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725798.1654959-9238-170639101368138 `" && echo ansible-tmp-1604725798.1654959-9238-170639101368138="` echo /root/.ansible/tmp/ansible-tmp-1604725798.1654959-9238-170639101368138 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwc03eba3 TO /root/.ansible/tmp/ansible-tmp-1604725798.1654959-9238-170639101368138/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725798.1654959-9238-170639101368138/ /root/.ansible/tmp/ansible-tmp-1604725798.1654959-9238-170639101368138/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725798.1654959-9238-170639101368138/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725798.1654959-9238-170639101368138/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI\"},\"name\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-07T05:09:29Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI"
                },
                "name": "carrier-net",
                "resourceVersion": "2606127",
                "selfLink": "/api/v1/namespaces/carrier-net",
                "uid": "dff0d487-eea7-4c58-bd3a-175928fcdf0f"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725798.9143639-9272-103526523770766 `" && echo ansible-tmp-1604725798.9143639-9272-103526523770766="` echo /root/.ansible/tmp/ansible-tmp-1604725798.9143639-9272-103526523770766 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_bj5t6in TO /root/.ansible/tmp/ansible-tmp-1604725798.9143639-9272-103526523770766/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725798.9143639-9272-103526523770766/ /root/.ansible/tmp/ansible-tmp-1604725798.9143639-9272-103526523770766/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725798.9143639-9272-103526523770766/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725798.9143639-9272-103526523770766/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "atime": 1604725793.8577087,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604725796.3737466,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3275,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604725796.3737466,
        "nlink": 2,
        "path": "./build",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1825672509",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725799.332748-9314-144565515422456 `" && echo ansible-tmp-1604725799.332748-9314-144565515422456="` echo /root/.ansible/tmp/ansible-tmp-1604725799.332748-9314-144565515422456 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp37hmx4ys TO /root/.ansible/tmp/ansible-tmp-1604725799.332748-9314-144565515422456/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725799.332748-9314-144565515422456/ /root/.ansible/tmp/ansible-tmp-1604725799.332748-9314-144565515422456/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725799.332748-9314-144565515422456/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725799.332748-9314-144565515422456/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.049990",
    "end": "2020-11-07 05:09:59.513820",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:59.463830",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"\n\"walmart-net-auth/\"",
    "stdout_lines": [
        "\"token/\"",
        "\"walmart-net-auth/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.049990",
            "end": "2020-11-07 05:09:59.513820",
            "failed": false,
            "rc": 0,
            "start": "2020-11-07 05:09:59.463830",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"\n\"walmart-net-auth/\"",
            "stdout_lines": [
                "\"token/\"",
                "\"walmart-net-auth/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"carrier-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item="walmart-net-auth/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"walmart-net-auth/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725799.7378573-9360-163812904661963 `" && echo ansible-tmp-1604725799.7378573-9360-163812904661963="` echo /root/.ansible/tmp/ansible-tmp-1604725799.7378573-9360-163812904661963 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpt491f4a4 TO /root/.ansible/tmp/ansible-tmp-1604725799.7378573-9360-163812904661963/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725799.7378573-9360-163812904661963/ /root/.ansible/tmp/ansible-tmp-1604725799.7378573-9360-163812904661963/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725799.7378573-9360-163812904661963/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725799.7378573-9360-163812904661963/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
    "delta": "0:00:00.047084",
    "end": "2020-11-07 05:09:59.917416",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:09:59.870332",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: carrier-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: carrier-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725799.9783776-9395-139803106979059 `" && echo ansible-tmp-1604725799.9783776-9395-139803106979059="` echo /root/.ansible/tmp/ansible-tmp-1604725799.9783776-9395-139803106979059 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3_m6_jre TO /root/.ansible/tmp/ansible-tmp-1604725799.9783776-9395-139803106979059/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725799.9783776-9395-139803106979059/ /root/.ansible/tmp/ansible-tmp-1604725799.9783776-9395-139803106979059/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725799.9783776-9395-139803106979059/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725799.9783776-9395-139803106979059/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.211192",
    "end": "2020-11-07 05:10:00.319876",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:00.108684",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725800.4028633-9436-130659188473365 `" && echo ansible-tmp-1604725800.4028633-9436-130659188473365="` echo /root/.ansible/tmp/ansible-tmp-1604725800.4028633-9436-130659188473365 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4ozi7hf1 TO /root/.ansible/tmp/ansible-tmp-1604725800.4028633-9436-130659188473365/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725800.4028633-9436-130659188473365/ /root/.ansible/tmp/ansible-tmp-1604725800.4028633-9436-130659188473365/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725800.4028633-9436-130659188473365/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725800.4028633-9436-130659188473365/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.304428",
    "end": "2020-11-07 05:10:00.837689",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:00.533261",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725801.0484083-9497-131800996579395 `" && echo ansible-tmp-1604725801.0484083-9497-131800996579395="` echo /root/.ansible/tmp/ansible-tmp-1604725801.0484083-9497-131800996579395 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgppf_yc9 TO /root/.ansible/tmp/ansible-tmp-1604725801.0484083-9497-131800996579395/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725801.0484083-9497-131800996579395/ /root/.ansible/tmp/ansible-tmp-1604725801.0484083-9497-131800996579395/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725801.0484083-9497-131800996579395/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725801.0484083-9497-131800996579395/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-peer-carrier-net-ro\n",
    "delta": "0:00:00.044334",
    "end": "2020-11-07 05:10:01.239999",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-peer-carrier-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:10:01.195665",
    "stderr": "No policy named: vault-crypto-peer-carrier-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-peer-carrier-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879 `" && echo ansible-tmp-1604725801.3651805-9535-212113222609879="` echo /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp58j7ji2i TO /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/ /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9szsgb8e/peer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/ /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9nbxsntb TO /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/ /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
    "dest": "./build/vault-crypto-carrier-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "peer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
            "content": null,
            "dest": "./build/vault-crypto-carrier-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a9752761bec6323a75d51e7a8cef75ea",
    "mode": "0644",
    "owner": "root",
    "size": 433,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725801.3651805-9535-212113222609879/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725801.7272813-9575-77138493290945 `" && echo ansible-tmp-1604725801.7272813-9575-77138493290945="` echo /root/.ansible/tmp/ansible-tmp-1604725801.7272813-9575-77138493290945 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_rgc_jg9 TO /root/.ansible/tmp/ansible-tmp-1604725801.7272813-9575-77138493290945/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725801.7272813-9575-77138493290945/ /root/.ansible/tmp/ansible-tmp-1604725801.7272813-9575-77138493290945/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725801.7272813-9575-77138493290945/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725801.7272813-9575-77138493290945/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
    "delta": "0:00:00.045319",
    "end": "2020-11-07 05:10:01.904036",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:01.858717",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725801.9742117-9611-40278290126070 `" && echo ansible-tmp-1604725801.9742117-9611-40278290126070="` echo /root/.ansible/tmp/ansible-tmp-1604725801.9742117-9611-40278290126070 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpnd3o25ii TO /root/.ansible/tmp/ansible-tmp-1604725801.9742117-9611-40278290126070/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725801.9742117-9611-40278290126070/ /root/.ansible/tmp/ansible-tmp-1604725801.9742117-9611-40278290126070/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725801.9742117-9611-40278290126070/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725801.9742117-9611-40278290126070/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.045845",
    "end": "2020-11-07 05:10:02.150840",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:02.104995",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725802.3987103-9656-77063813823279 `" && echo ansible-tmp-1604725802.3987103-9656-77063813823279="` echo /root/.ansible/tmp/ansible-tmp-1604725802.3987103-9656-77063813823279 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptkqyceh0 TO /root/.ansible/tmp/ansible-tmp-1604725802.3987103-9656-77063813823279/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725802.3987103-9656-77063813823279/ /root/.ansible/tmp/ansible-tmp-1604725802.3987103-9656-77063813823279/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725802.3987103-9656-77063813823279/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725802.3987103-9656-77063813823279/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725803.0124192-9684-69478882483520 `" && echo ansible-tmp-1604725803.0124192-9684-69478882483520="` echo /root/.ansible/tmp/ansible-tmp-1604725803.0124192-9684-69478882483520 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpm7s___vq TO /root/.ansible/tmp/ansible-tmp-1604725803.0124192-9684-69478882483520/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725803.0124192-9684-69478882483520/ /root/.ansible/tmp/ansible-tmp-1604725803.0124192-9684-69478882483520/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725803.0124192-9684-69478882483520/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725803.0124192-9684-69478882483520/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.109105",
    "end": "2020-11-07 05:10:03.252584",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:03.143479",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [include_role : create/storageclass] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:43

TASK [Checking if the storage class walmartsc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass walmartsc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725803.5449996-9720-149439815219083 `" && echo ansible-tmp-1604725803.5449996-9720-149439815219083="` echo /root/.ansible/tmp/ansible-tmp-1604725803.5449996-9720-149439815219083 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpf441dy4m TO /root/.ansible/tmp/ansible-tmp-1604725803.5449996-9720-149439815219083/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725803.5449996-9720-149439815219083/ /root/.ansible/tmp/ansible-tmp-1604725803.5449996-9720-149439815219083/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725803.5449996-9720-149439815219083/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725803.5449996-9720-149439815219083/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmartsc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-11-06T08:18:49Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                },
                "name": "walmartsc",
                "resourceVersion": "2406961",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-11-06T08:18:49Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                        },
                        "name": "walmartsc",
                        "resourceVersion": "2406961",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                        "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of walmartsc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the storage class carriersc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725804.5107126-9768-185149603974567 `" && echo ansible-tmp-1604725804.5107126-9768-185149603974567="` echo /root/.ansible/tmp/ansible-tmp-1604725804.5107126-9768-185149603974567 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpju82jq1x TO /root/.ansible/tmp/ansible-tmp-1604725804.5107126-9768-185149603974567/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725804.5107126-9768-185149603974567/ /root/.ansible/tmp/ansible-tmp-1604725804.5107126-9768-185149603974567/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725804.5107126-9768-185149603974567/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725804.5107126-9768-185149603974567/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carriersc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:44:35Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                },
                "name": "carriersc",
                "resourceVersion": "378759",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:44:35Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                        },
                        "name": "carriersc",
                        "resourceVersion": "378759",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                        "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/ca-server] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725805.5859137-9816-24397190089785 `" && echo ansible-tmp-1604725805.5859137-9816-24397190089785="` echo /root/.ansible/tmp/ansible-tmp-1604725805.5859137-9816-24397190089785 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpm1vqz5b9 TO /root/.ansible/tmp/ansible-tmp-1604725805.5859137-9816-24397190089785/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725805.5859137-9816-24397190089785/ /root/.ansible/tmp/ansible-tmp-1604725805.5859137-9816-24397190089785/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725805.5859137-9816-24397190089785/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725805.5859137-9816-24397190089785/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
    "delta": "0:00:00.089839",
    "end": "2020-11-07 05:10:05.806331",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:10:05.716492",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/ordererOrganizations/walmart-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725805.927308-9852-111091097801723 `" && echo ansible-tmp-1604725805.927308-9852-111091097801723="` echo /root/.ansible/tmp/ansible-tmp-1604725805.927308-9852-111091097801723 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpnc5txuo2 TO /root/.ansible/tmp/ansible-tmp-1604725805.927308-9852-111091097801723/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725805.927308-9852-111091097801723/ /root/.ansible/tmp/ansible-tmp-1604725805.927308-9852-111091097801723/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725805.927308-9852-111091097801723/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725805.927308-9852-111091097801723/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725806.1203-9878-101213217929938 `" && echo ansible-tmp-1604725806.1203-9878-101213217929938="` echo /root/.ansible/tmp/ansible-tmp-1604725806.1203-9878-101213217929938 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpma5hn6v6 TO /root/.ansible/tmp/ansible-tmp-1604725806.1203-9878-101213217929938/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725806.1203-9878-101213217929938/ /root/.ansible/tmp/ansible-tmp-1604725806.1203-9878-101213217929938/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725806.1203-9878-101213217929938/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725806.1203-9878-101213217929938/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725806.4292254-9912-216825064083432 `" && echo ansible-tmp-1604725806.4292254-9912-216825064083432="` echo /root/.ansible/tmp/ansible-tmp-1604725806.4292254-9912-216825064083432 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5jqc0npz TO /root/.ansible/tmp/ansible-tmp-1604725806.4292254-9912-216825064083432/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725806.4292254-9912-216825064083432/ /root/.ansible/tmp/ansible-tmp-1604725806.4292254-9912-216825064083432/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725806.4292254-9912-216825064083432/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725806.4292254-9912-216825064083432/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725806.6188548-9938-245615533110221 `" && echo ansible-tmp-1604725806.6188548-9938-245615533110221="` echo /root/.ansible/tmp/ansible-tmp-1604725806.6188548-9938-245615533110221 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpat_b92ml TO /root/.ansible/tmp/ansible-tmp-1604725806.6188548-9938-245615533110221/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725806.6188548-9938-245615533110221/ /root/.ansible/tmp/ansible-tmp-1604725806.6188548-9938-245615533110221/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725806.6188548-9938-245615533110221/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725806.6188548-9938-245615533110221/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net\"\n",
    "delta": "0:00:00.008681",
    "end": "2020-11-07 05:10:06.758640",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:06.749959",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725806.8247616-9967-39538916306002 `" && echo ansible-tmp-1604725806.8247616-9967-39538916306002="` echo /root/.ansible/tmp/ansible-tmp-1604725806.8247616-9967-39538916306002 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppwzj0agf TO /root/.ansible/tmp/ansible-tmp-1604725806.8247616-9967-39538916306002/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725806.8247616-9967-39538916306002/ /root/.ansible/tmp/ansible-tmp-1604725806.8247616-9967-39538916306002/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725806.8247616-9967-39538916306002/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725806.8247616-9967-39538916306002/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
    "delta": "0:00:00.050376",
    "end": "2020-11-07 05:10:07.007386",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:06.957010",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725807.0706158-10005-114210644041197 `" && echo ansible-tmp-1604725807.0706158-10005-114210644041197="` echo /root/.ansible/tmp/ansible-tmp-1604725807.0706158-10005-114210644041197 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqnrm5cnk TO /root/.ansible/tmp/ansible-tmp-1604725807.0706158-10005-114210644041197/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725807.0706158-10005-114210644041197/ /root/.ansible/tmp/ansible-tmp-1604725807.0706158-10005-114210644041197/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725807.0706158-10005-114210644041197/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725807.0706158-10005-114210644041197/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
    "delta": "0:00:00.055350",
    "end": "2020-11-07 05:10:07.257649",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:10:07.202299",
    "stderr": "No value found at secret/credentials/walmart-net/ca/walmart",
    "stderr_lines": [
        "No value found at secret/credentials/walmart-net/ca/walmart"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725807.3282802-10039-143067195215439 `" && echo ansible-tmp-1604725807.3282802-10039-143067195215439="` echo /root/.ansible/tmp/ansible-tmp-1604725807.3282802-10039-143067195215439 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7gehafrc TO /root/.ansible/tmp/ansible-tmp-1604725807.3282802-10039-143067195215439/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725807.3282802-10039-143067195215439/ /root/.ansible/tmp/ansible-tmp-1604725807.3282802-10039-143067195215439/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725807.3282802-10039-143067195215439/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725807.3282802-10039-143067195215439/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
    "delta": "0:00:00.048393",
    "end": "2020-11-07 05:10:07.508614",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:07.460221",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/walmart-net/ca/walmart",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/walmart-net/ca/walmart"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725807.5726066-10075-234843836630496 `" && echo ansible-tmp-1604725807.5726066-10075-234843836630496="` echo /root/.ansible/tmp/ansible-tmp-1604725807.5726066-10075-234843836630496 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5xlvzoo6 TO /root/.ansible/tmp/ansible-tmp-1604725807.5726066-10075-234843836630496/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725807.5726066-10075-234843836630496/ /root/.ansible/tmp/ansible-tmp-1604725807.5726066-10075-234843836630496/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725807.5726066-10075-234843836630496/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725807.5726066-10075-234843836630496/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725808.242615-10103-263621937381381 `" && echo ansible-tmp-1604725808.242615-10103-263621937381381="` echo /root/.ansible/tmp/ansible-tmp-1604725808.242615-10103-263621937381381 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp16l764az TO /root/.ansible/tmp/ansible-tmp-1604725808.242615-10103-263621937381381/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725808.242615-10103-263621937381381/ /root/.ansible/tmp/ansible-tmp-1604725808.242615-10103-263621937381381/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725808.242615-10103-263621937381381/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725808.242615-10103-263621937381381/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
    "delta": "0:00:00.114940",
    "end": "2020-11-07 05:10:08.491197",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:08.376257",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-walmart-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-walmart-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725808.657263-10137-137426891411210 `" && echo ansible-tmp-1604725808.657263-10137-137426891411210="` echo /root/.ansible/tmp/ansible-tmp-1604725808.657263-10137-137426891411210 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpylv4n1d0 TO /root/.ansible/tmp/ansible-tmp-1604725808.657263-10137-137426891411210/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725808.657263-10137-137426891411210/ /root/.ansible/tmp/ansible-tmp-1604725808.657263-10137-137426891411210/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725808.657263-10137-137426891411210/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725808.657263-10137-137426891411210/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725808.861843-10163-270307562052827 `" && echo ansible-tmp-1604725808.861843-10163-270307562052827="` echo /root/.ansible/tmp/ansible-tmp-1604725808.861843-10163-270307562052827 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpdn_vmow3 TO /root/.ansible/tmp/ansible-tmp-1604725808.861843-10163-270307562052827/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725808.861843-10163-270307562052827/ /root/.ansible/tmp/ansible-tmp-1604725808.861843-10163-270307562052827/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725808.861843-10163-270307562052827/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725808.861843-10163-270307562052827/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292 `" && echo ansible-tmp-1604725809.0716698-10189-197504446493292="` echo /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9hco_t0f TO /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/ /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptbas4g26/ca-orderer.tpl TO /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/ /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpizpc2698 TO /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/ /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-orderer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "98a580d5a06a395442faeb695bf50cc0",
    "mode": "0644",
    "owner": "root",
    "size": 1272,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725809.0716698-10189-197504446493292/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725809.5139012-10231-115913324769876 `" && echo ansible-tmp-1604725809.5139012-10231-115913324769876="` echo /root/.ansible/tmp/ansible-tmp-1604725809.5139012-10231-115913324769876 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpboianfhp TO /root/.ansible/tmp/ansible-tmp-1604725809.5139012-10231-115913324769876/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725809.5139012-10231-115913324769876/ /root/.ansible/tmp/ansible-tmp-1604725809.5139012-10231-115913324769876/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725809.5139012-10231-115913324769876/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725809.5139012-10231-115913324769876/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604725809.3899434,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
        "ctime": 1604725809.3899434,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3308,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604725809.2459412,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1272,
        "uid": 0,
        "version": "180773146",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725809.7710893-10261-168042091615987 `" && echo ansible-tmp-1604725809.7710893-10261-168042091615987="` echo /root/.ansible/tmp/ansible-tmp-1604725809.7710893-10261-168042091615987 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp108j51d1 TO /root/.ansible/tmp/ansible-tmp-1604725809.7710893-10261-168042091615987/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725809.7710893-10261-168042091615987/ /root/.ansible/tmp/ansible-tmp-1604725809.7710893-10261-168042091615987/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725809.7710893-10261-168042091615987/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725809.7710893-10261-168042091615987/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725809.9602118-10287-15973437314341 `" && echo ansible-tmp-1604725809.9602118-10287-15973437314341="` echo /root/.ansible/tmp/ansible-tmp-1604725809.9602118-10287-15973437314341 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpr7enaw4f TO /root/.ansible/tmp/ansible-tmp-1604725809.9602118-10287-15973437314341/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725809.9602118-10287-15973437314341/ /root/.ansible/tmp/ansible-tmp-1604725809.9602118-10287-15973437314341/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725809.9602118-10287-15973437314341/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725809.9602118-10287-15973437314341/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/test",
            "state": "directory"
        },
        "before": {
            "path": "./build/test",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/test",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/test",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "walmart-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "orderer"
                },
                "server": {
                    "admin": "walmart-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/walmart-net/ca/walmart?user",
                    "secretcert": "secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem",
                    "secretkey": "secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648 `" && echo ansible-tmp-1604725810.3149474-10321-156938244684648="` echo /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmph96guj6q TO /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/ /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0rfmht1w TO /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/ /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp772_xeex TO /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/ /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
    "dest": "./build/test/walmart-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp0rfmht1w",
            "attributes": null,
            "backup": false,
            "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
            "content": null,
            "dest": "./build/test/walmart-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d6c44224a3b7e1ecf5d32e6ff6e2bb00",
    "mode": "0644",
    "owner": "root",
    "size": 843,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725810.3149474-10321-156938244684648/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725810.6579285-10361-61957135656870 `" && echo ansible-tmp-1604725810.6579285-10361-61957135656870="` echo /root/.ansible/tmp/ansible-tmp-1604725810.6579285-10361-61957135656870 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9wn7jwvo TO /root/.ansible/tmp/ansible-tmp-1604725810.6579285-10361-61957135656870/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725810.6579285-10361-61957135656870/ /root/.ansible/tmp/ansible-tmp-1604725810.6579285-10361-61957135656870/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725810.6579285-10361-61957135656870/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725810.6579285-10361-61957135656870/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.060417",
    "end": "2020-11-07 05:10:10.849615",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:10.789198",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725811.0052798-10397-263104948613919 `" && echo ansible-tmp-1604725811.0052798-10397-263104948613919="` echo /root/.ansible/tmp/ansible-tmp-1604725811.0052798-10397-263104948613919 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8y6g18lr TO /root/.ansible/tmp/ansible-tmp-1604725811.0052798-10397-263104948613919/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725811.0052798-10397-263104948613919/ /root/.ansible/tmp/ansible-tmp-1604725811.0052798-10397-263104948613919/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725811.0052798-10397-263104948613919/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725811.0052798-10397-263104948613919/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725811.214814-10423-67798641969669 `" && echo ansible-tmp-1604725811.214814-10423-67798641969669="` echo /root/.ansible/tmp/ansible-tmp-1604725811.214814-10423-67798641969669 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7tpgagrh TO /root/.ansible/tmp/ansible-tmp-1604725811.214814-10423-67798641969669/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725811.214814-10423-67798641969669/ /root/.ansible/tmp/ansible-tmp-1604725811.214814-10423-67798641969669/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725811.214814-10423-67798641969669/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725811.214814-10423-67798641969669/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.141731",
    "end": "2020-11-07 05:10:14.519076",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:11.377345",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   e47ccebc..8ca5470d  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   e47ccebc..8ca5470d  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 8ca5470d] [ci skip] Pushing CA server files\n 2 files changed, 3447 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 8ca5470d] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 8ca5470d] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   e47ccebc..8ca5470d  HEAD -> gorilla"
    ]
}

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725814.6691287-10471-6667003649969 `" && echo ansible-tmp-1604725814.6691287-10471-6667003649969="` echo /root/.ansible/tmp/ansible-tmp-1604725814.6691287-10471-6667003649969 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwfyhqq11 TO /root/.ansible/tmp/ansible-tmp-1604725814.6691287-10471-6667003649969/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725814.6691287-10471-6667003649969/ /root/.ansible/tmp/ansible-tmp-1604725814.6691287-10471-6667003649969/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725814.6691287-10471-6667003649969/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725814.6691287-10471-6667003649969/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
    "delta": "0:00:00.053592",
    "end": "2020-11-07 05:10:14.868810",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:10:14.815218",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/peerOrganizations/carrier-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725814.9890816-10507-101864845064914 `" && echo ansible-tmp-1604725814.9890816-10507-101864845064914="` echo /root/.ansible/tmp/ansible-tmp-1604725814.9890816-10507-101864845064914 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpm9uuezee TO /root/.ansible/tmp/ansible-tmp-1604725814.9890816-10507-101864845064914/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725814.9890816-10507-101864845064914/ /root/.ansible/tmp/ansible-tmp-1604725814.9890816-10507-101864845064914/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725814.9890816-10507-101864845064914/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725814.9890816-10507-101864845064914/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725815.1809661-10533-217969426623898 `" && echo ansible-tmp-1604725815.1809661-10533-217969426623898="` echo /root/.ansible/tmp/ansible-tmp-1604725815.1809661-10533-217969426623898 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5owjsieh TO /root/.ansible/tmp/ansible-tmp-1604725815.1809661-10533-217969426623898/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725815.1809661-10533-217969426623898/ /root/.ansible/tmp/ansible-tmp-1604725815.1809661-10533-217969426623898/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725815.1809661-10533-217969426623898/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725815.1809661-10533-217969426623898/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725815.504634-10567-38228961581472 `" && echo ansible-tmp-1604725815.504634-10567-38228961581472="` echo /root/.ansible/tmp/ansible-tmp-1604725815.504634-10567-38228961581472 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0mv6qjsc TO /root/.ansible/tmp/ansible-tmp-1604725815.504634-10567-38228961581472/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725815.504634-10567-38228961581472/ /root/.ansible/tmp/ansible-tmp-1604725815.504634-10567-38228961581472/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725815.504634-10567-38228961581472/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725815.504634-10567-38228961581472/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725815.694491-10593-28732722825054 `" && echo ansible-tmp-1604725815.694491-10593-28732722825054="` echo /root/.ansible/tmp/ansible-tmp-1604725815.694491-10593-28732722825054 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpnm216f_f TO /root/.ansible/tmp/ansible-tmp-1604725815.694491-10593-28732722825054/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725815.694491-10593-28732722825054/ /root/.ansible/tmp/ansible-tmp-1604725815.694491-10593-28732722825054/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725815.694491-10593-28732722825054/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725815.694491-10593-28732722825054/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net\"\n",
    "delta": "0:00:00.008875",
    "end": "2020-11-07 05:10:15.834077",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:15.825202",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725815.936585-10622-132195816568309 `" && echo ansible-tmp-1604725815.936585-10622-132195816568309="` echo /root/.ansible/tmp/ansible-tmp-1604725815.936585-10622-132195816568309 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1i5mzp3f TO /root/.ansible/tmp/ansible-tmp-1604725815.936585-10622-132195816568309/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725815.936585-10622-132195816568309/ /root/.ansible/tmp/ansible-tmp-1604725815.936585-10622-132195816568309/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725815.936585-10622-132195816568309/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725815.936585-10622-132195816568309/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
    "delta": "0:00:00.061705",
    "end": "2020-11-07 05:10:16.128781",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:16.067076",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725816.197439-10660-246573318116731 `" && echo ansible-tmp-1604725816.197439-10660-246573318116731="` echo /root/.ansible/tmp/ansible-tmp-1604725816.197439-10660-246573318116731 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprpgakdgx TO /root/.ansible/tmp/ansible-tmp-1604725816.197439-10660-246573318116731/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725816.197439-10660-246573318116731/ /root/.ansible/tmp/ansible-tmp-1604725816.197439-10660-246573318116731/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725816.197439-10660-246573318116731/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725816.197439-10660-246573318116731/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
    "delta": "0:00:00.090221",
    "end": "2020-11-07 05:10:16.420572",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:10:16.330351",
    "stderr": "No value found at secret/credentials/carrier-net/ca/carrier",
    "stderr_lines": [
        "No value found at secret/credentials/carrier-net/ca/carrier"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725816.4888122-10695-55110821384010 `" && echo ansible-tmp-1604725816.4888122-10695-55110821384010="` echo /root/.ansible/tmp/ansible-tmp-1604725816.4888122-10695-55110821384010 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpcq8l0j3v TO /root/.ansible/tmp/ansible-tmp-1604725816.4888122-10695-55110821384010/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725816.4888122-10695-55110821384010/ /root/.ansible/tmp/ansible-tmp-1604725816.4888122-10695-55110821384010/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725816.4888122-10695-55110821384010/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725816.4888122-10695-55110821384010/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
    "delta": "0:00:00.045632",
    "end": "2020-11-07 05:10:16.665317",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:16.619685",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/ca/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/ca/carrier"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725816.7301445-10730-276540605968045 `" && echo ansible-tmp-1604725816.7301445-10730-276540605968045="` echo /root/.ansible/tmp/ansible-tmp-1604725816.7301445-10730-276540605968045 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfiulz968 TO /root/.ansible/tmp/ansible-tmp-1604725816.7301445-10730-276540605968045/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725816.7301445-10730-276540605968045/ /root/.ansible/tmp/ansible-tmp-1604725816.7301445-10730-276540605968045/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725816.7301445-10730-276540605968045/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725816.7301445-10730-276540605968045/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725817.3564277-10758-103139864304527 `" && echo ansible-tmp-1604725817.3564277-10758-103139864304527="` echo /root/.ansible/tmp/ansible-tmp-1604725817.3564277-10758-103139864304527 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp2darqh21 TO /root/.ansible/tmp/ansible-tmp-1604725817.3564277-10758-103139864304527/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725817.3564277-10758-103139864304527/ /root/.ansible/tmp/ansible-tmp-1604725817.3564277-10758-103139864304527/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725817.3564277-10758-103139864304527/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725817.3564277-10758-103139864304527/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
    "delta": "0:00:00.147359",
    "end": "2020-11-07 05:10:17.634776",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:17.487417",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-carrier-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725817.794012-10794-272203896803474 `" && echo ansible-tmp-1604725817.794012-10794-272203896803474="` echo /root/.ansible/tmp/ansible-tmp-1604725817.794012-10794-272203896803474 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpcfz5s0uu TO /root/.ansible/tmp/ansible-tmp-1604725817.794012-10794-272203896803474/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725817.794012-10794-272203896803474/ /root/.ansible/tmp/ansible-tmp-1604725817.794012-10794-272203896803474/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725817.794012-10794-272203896803474/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725817.794012-10794-272203896803474/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725817.9959204-10820-253590846002694 `" && echo ansible-tmp-1604725817.9959204-10820-253590846002694="` echo /root/.ansible/tmp/ansible-tmp-1604725817.9959204-10820-253590846002694 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3lz3zz5s TO /root/.ansible/tmp/ansible-tmp-1604725817.9959204-10820-253590846002694/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725817.9959204-10820-253590846002694/ /root/.ansible/tmp/ansible-tmp-1604725817.9959204-10820-253590846002694/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725817.9959204-10820-253590846002694/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725817.9959204-10820-253590846002694/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299 `" && echo ansible-tmp-1604725818.197035-10846-178291769286299="` echo /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpkxfzxam7 TO /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/ /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpiqqmdyf6/ca-peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/ /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5fm5lwne TO /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/ /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "7d8e039d61ac8a6ff961573116ce20ca",
    "mode": "0644",
    "owner": "root",
    "size": 1262,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725818.197035-10846-178291769286299/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725818.6087139-10888-120523841599351 `" && echo ansible-tmp-1604725818.6087139-10888-120523841599351="` echo /root/.ansible/tmp/ansible-tmp-1604725818.6087139-10888-120523841599351 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpv2bj1hx5 TO /root/.ansible/tmp/ansible-tmp-1604725818.6087139-10888-120523841599351/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725818.6087139-10888-120523841599351/ /root/.ansible/tmp/ansible-tmp-1604725818.6087139-10888-120523841599351/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725818.6087139-10888-120523841599351/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725818.6087139-10888-120523841599351/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604725818.4940808,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
        "ctime": 1604725818.4940808,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3320,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604725818.3620787,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1262,
        "uid": 0,
        "version": "1828233359",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725818.8490186-10918-193519131949000 `" && echo ansible-tmp-1604725818.8490186-10918-193519131949000="` echo /root/.ansible/tmp/ansible-tmp-1604725818.8490186-10918-193519131949000 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5z527ck2 TO /root/.ansible/tmp/ansible-tmp-1604725818.8490186-10918-193519131949000/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725818.8490186-10918-193519131949000/ /root/.ansible/tmp/ansible-tmp-1604725818.8490186-10918-193519131949000/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725818.8490186-10918-193519131949000/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725818.8490186-10918-193519131949000/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604725810.0939538,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604725810.5859613,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3309,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604725810.5859613,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "391631264",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "carrier-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "peer"
                },
                "server": {
                    "admin": "carrier-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/carrier-net/ca/carrier?user",
                    "secretcert": "secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem",
                    "secretkey": "secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320 `" && echo ansible-tmp-1604725819.2191753-10956-209623062943320="` echo /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpvqfkny1q TO /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/ /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphke92qwn TO /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/ /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_ji_7dmm TO /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/ /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
    "dest": "./build/test/carrier-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmphke92qwn",
            "attributes": null,
            "backup": false,
            "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
            "content": null,
            "dest": "./build/test/carrier-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea14e4e12c26cbb2cb9ee3a173335ca1",
    "mode": "0644",
    "owner": "root",
    "size": 834,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725819.2191753-10956-209623062943320/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725819.5571997-10996-196165953892326 `" && echo ansible-tmp-1604725819.5571997-10996-196165953892326="` echo /root/.ansible/tmp/ansible-tmp-1604725819.5571997-10996-196165953892326 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpoldlik_n TO /root/.ansible/tmp/ansible-tmp-1604725819.5571997-10996-196165953892326/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725819.5571997-10996-196165953892326/ /root/.ansible/tmp/ansible-tmp-1604725819.5571997-10996-196165953892326/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725819.5571997-10996-196165953892326/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725819.5571997-10996-196165953892326/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.059365",
    "end": "2020-11-07 05:10:19.747798",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:19.688433",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725819.8629239-11030-140048626564893 `" && echo ansible-tmp-1604725819.8629239-11030-140048626564893="` echo /root/.ansible/tmp/ansible-tmp-1604725819.8629239-11030-140048626564893 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqoaofmlu TO /root/.ansible/tmp/ansible-tmp-1604725819.8629239-11030-140048626564893/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725819.8629239-11030-140048626564893/ /root/.ansible/tmp/ansible-tmp-1604725819.8629239-11030-140048626564893/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725819.8629239-11030-140048626564893/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725819.8629239-11030-140048626564893/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725820.0635786-11056-30834412363414 `" && echo ansible-tmp-1604725820.0635786-11056-30834412363414="` echo /root/.ansible/tmp/ansible-tmp-1604725820.0635786-11056-30834412363414 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1h1w1bj7 TO /root/.ansible/tmp/ansible-tmp-1604725820.0635786-11056-30834412363414/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725820.0635786-11056-30834412363414/ /root/.ansible/tmp/ansible-tmp-1604725820.0635786-11056-30834412363414/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725820.0635786-11056-30834412363414/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725820.0635786-11056-30834412363414/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.078125",
    "end": "2020-11-07 05:10:23.271565",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:10:20.193440",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   8ca5470d..0859d16f  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   8ca5470d..0859d16f  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 0859d16f] [ci skip] Pushing CA server files\n 2 files changed, 1142 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 0859d16f] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 0859d16f] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   8ca5470d..0859d16f  HEAD -> gorilla"
    ]
}

TASK [include_role : create/ca-tools] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:70

TASK [waiting for the CA server to be created in walmart-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725823.7229326-11112-210541841469265 `" && echo ansible-tmp-1604725823.7229326-11112-210541841469265="` echo /root/.ansible/tmp/ansible-tmp-1604725823.7229326-11112-210541841469265 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphqtgvc0h TO /root/.ansible/tmp/ansible-tmp-1604725823.7229326-11112-210541841469265/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725823.7229326-11112-210541841469265/ /root/.ansible/tmp/ansible-tmp-1604725823.7229326-11112-210541841469265/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725823.7229326-11112-210541841469265/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725823.7229326-11112-210541841469265/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725854.3481545-11112-25475110505228 `" && echo ansible-tmp-1604725854.3481545-11112-25475110505228="` echo /root/.ansible/tmp/ansible-tmp-1604725854.3481545-11112-25475110505228 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpw1kkx55x TO /root/.ansible/tmp/ansible-tmp-1604725854.3481545-11112-25475110505228/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725854.3481545-11112-25475110505228/ /root/.ansible/tmp/ansible-tmp-1604725854.3481545-11112-25475110505228/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725854.3481545-11112-25475110505228/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725854.3481545-11112-25475110505228/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725885.0086074-11112-166466384739582 `" && echo ansible-tmp-1604725885.0086074-11112-166466384739582="` echo /root/.ansible/tmp/ansible-tmp-1604725885.0086074-11112-166466384739582 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpno0jei0m TO /root/.ansible/tmp/ansible-tmp-1604725885.0086074-11112-166466384739582/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725885.0086074-11112-166466384739582/ /root/.ansible/tmp/ansible-tmp-1604725885.0086074-11112-166466384739582/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725885.0086074-11112-166466384739582/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725885.0086074-11112-166466384739582/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725915.6581225-11112-154177723257247 `" && echo ansible-tmp-1604725915.6581225-11112-154177723257247="` echo /root/.ansible/tmp/ansible-tmp-1604725915.6581225-11112-154177723257247 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpk7uqgci4 TO /root/.ansible/tmp/ansible-tmp-1604725915.6581225-11112-154177723257247/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725915.6581225-11112-154177723257247/ /root/.ansible/tmp/ansible-tmp-1604725915.6581225-11112-154177723257247/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725915.6581225-11112-154177723257247/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725915.6581225-11112-154177723257247/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (17 retries left).Result was: {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725946.3015049-11112-30075025570048 `" && echo ansible-tmp-1604725946.3015049-11112-30075025570048="` echo /root/.ansible/tmp/ansible-tmp-1604725946.3015049-11112-30075025570048 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpupx6rq2l TO /root/.ansible/tmp/ansible-tmp-1604725946.3015049-11112-30075025570048/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725946.3015049-11112-30075025570048/ /root/.ansible/tmp/ansible-tmp-1604725946.3015049-11112-30075025570048/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725946.3015049-11112-30075025570048/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725946.3015049-11112-30075025570048/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 5,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-07T05:11:39Z",
                "generateName": "ca-876984656-",
                "labels": {
                    "app.kubernetes.io/instance": "walmart-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "876984656"
                },
                "name": "ca-876984656-jlb7z",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-876984656",
                        "uid": "50500e97-a45e-48e0-a21a-81171f8f445d"
                    }
                ],
                "resourceVersion": "2606689",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-876984656-jlb7z",
                "uid": "e3bb458b-ad87-4083-b26e-2a8e4a1cd683"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b walmart-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.walmart-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-5dblk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/walmart-net/ca/walmart?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-5dblk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-5dblk",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-5dblk"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:12:16Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:12:17Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:12:17Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:11:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://d002afcf9c424c7dda547281089c6681298ae154b96cdd1b6b6a46dbf00afc69",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-07T05:12:17Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://bbf3b0687b9c9fadc6ba860c8a627bbdaac578521b997b3469493d8d296e18e0",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://bbf3b0687b9c9fadc6ba860c8a627bbdaac578521b997b3469493d8d296e18e0",
                                "exitCode": 0,
                                "finishedAt": "2020-11-07T05:12:16Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-07T05:12:15Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.38",
                "podIPs": [
                    {
                        "ip": "10.1.0.38"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-07T05:11:54Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725946.9996982-11247-238012433412559 `" && echo ansible-tmp-1604725946.9996982-11247-238012433412559="` echo /root/.ansible/tmp/ansible-tmp-1604725946.9996982-11247-238012433412559 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7hwopuvd TO /root/.ansible/tmp/ansible-tmp-1604725946.9996982-11247-238012433412559/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725946.9996982-11247-238012433412559/ /root/.ansible/tmp/ansible-tmp-1604725946.9996982-11247-238012433412559/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725946.9996982-11247-238012433412559/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725946.9996982-11247-238012433412559/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725947.2026672-11273-2538304518845 `" && echo ansible-tmp-1604725947.2026672-11273-2538304518845="` echo /root/.ansible/tmp/ansible-tmp-1604725947.2026672-11273-2538304518845 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9vjr80zq TO /root/.ansible/tmp/ansible-tmp-1604725947.2026672-11273-2538304518845/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725947.2026672-11273-2538304518845/ /root/.ansible/tmp/ansible-tmp-1604725947.2026672-11273-2538304518845/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725947.2026672-11273-2538304518845/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725947.2026672-11273-2538304518845/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356 `" && echo ansible-tmp-1604725947.4073954-11299-29686193937356="` echo /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj11utsmr TO /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/ /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp76_f49gq/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/ /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzn5bl285 TO /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/ /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "22eb57fc62c4c46e12211ccc6f0ae59e",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725947.4073954-11299-29686193937356/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725947.815976-11341-94556247376858 `" && echo ansible-tmp-1604725947.815976-11341-94556247376858="` echo /root/.ansible/tmp/ansible-tmp-1604725947.815976-11341-94556247376858 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9ls1fc_a TO /root/.ansible/tmp/ansible-tmp-1604725947.815976-11341-94556247376858/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725947.815976-11341-94556247376858/ /root/.ansible/tmp/ansible-tmp-1604725947.815976-11341-94556247376858/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725947.815976-11341-94556247376858/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725947.815976-11341-94556247376858/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604725947.696032,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
        "ctime": 1604725947.696032,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3325,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604725947.56403,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "770000811",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725948.0608463-11371-100279838231908 `" && echo ansible-tmp-1604725948.0608463-11371-100279838231908="` echo /root/.ansible/tmp/ansible-tmp-1604725948.0608463-11371-100279838231908 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpudq5wnn6 TO /root/.ansible/tmp/ansible-tmp-1604725948.0608463-11371-100279838231908/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725948.0608463-11371-100279838231908/ /root/.ansible/tmp/ansible-tmp-1604725948.0608463-11371-100279838231908/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725948.0608463-11371-100279838231908/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725948.0608463-11371-100279838231908/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604725810.0939538,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604725819.4860957,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3309,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604725819.4860957,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "391631264",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca-tools",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "walmart-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882 `" && echo ansible-tmp-1604725948.4373915-11409-252279627570882="` echo /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpq3v7nmmh TO /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/ /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpsco9_xff TO /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/ /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppzuxcci2 TO /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/ /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
    "dest": "./build/test/walmart-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpsco9_xff",
            "attributes": null,
            "backup": false,
            "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
            "content": null,
            "dest": "./build/test/walmart-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "590790aef7bb9a4128b32a0352fb27f4",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725948.4373915-11409-252279627570882/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725948.7814865-11449-98321697137499 `" && echo ansible-tmp-1604725948.7814865-11449-98321697137499="` echo /root/.ansible/tmp/ansible-tmp-1604725948.7814865-11449-98321697137499 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpvwg97_k4 TO /root/.ansible/tmp/ansible-tmp-1604725948.7814865-11449-98321697137499/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725948.7814865-11449-98321697137499/ /root/.ansible/tmp/ansible-tmp-1604725948.7814865-11449-98321697137499/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725948.7814865-11449-98321697137499/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725948.7814865-11449-98321697137499/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.057800",
    "end": "2020-11-07 05:12:28.973276",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:12:28.915476",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725949.0849445-11483-155904534990781 `" && echo ansible-tmp-1604725949.0849445-11483-155904534990781="` echo /root/.ansible/tmp/ansible-tmp-1604725949.0849445-11483-155904534990781 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfhkwlaxv TO /root/.ansible/tmp/ansible-tmp-1604725949.0849445-11483-155904534990781/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725949.0849445-11483-155904534990781/ /root/.ansible/tmp/ansible-tmp-1604725949.0849445-11483-155904534990781/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725949.0849445-11483-155904534990781/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725949.0849445-11483-155904534990781/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725949.339308-11509-7583185550052 `" && echo ansible-tmp-1604725949.339308-11509-7583185550052="` echo /root/.ansible/tmp/ansible-tmp-1604725949.339308-11509-7583185550052 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5fvzuvl6 TO /root/.ansible/tmp/ansible-tmp-1604725949.339308-11509-7583185550052/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725949.339308-11509-7583185550052/ /root/.ansible/tmp/ansible-tmp-1604725949.339308-11509-7583185550052/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725949.339308-11509-7583185550052/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725949.339308-11509-7583185550052/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.263257",
    "end": "2020-11-07 05:12:32.734910",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:12:29.471653",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   0859d16f..dc9e38c9  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   0859d16f..dc9e38c9  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla dc9e38c9] [ci skip] Pushing CA-tools files\n 2 files changed, 1193 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla dc9e38c9] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla dc9e38c9] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   0859d16f..dc9e38c9  HEAD -> gorilla"
    ]
}

TASK [waiting for the CA server to be created in carrier-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725953.0049129-11563-140506212934312 `" && echo ansible-tmp-1604725953.0049129-11563-140506212934312="` echo /root/.ansible/tmp/ansible-tmp-1604725953.0049129-11563-140506212934312 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpsc981fr4 TO /root/.ansible/tmp/ansible-tmp-1604725953.0049129-11563-140506212934312/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725953.0049129-11563-140506212934312/ /root/.ansible/tmp/ansible-tmp-1604725953.0049129-11563-140506212934312/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725953.0049129-11563-140506212934312/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725953.0049129-11563-140506212934312/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-07T05:11:38Z",
                "generateName": "ca-645c757f7d-",
                "labels": {
                    "app.kubernetes.io/instance": "carrier-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "645c757f7d"
                },
                "name": "ca-645c757f7d-mgkvb",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-645c757f7d",
                        "uid": "a0095cb5-436d-4830-8f99-794d4866d4e1"
                    }
                ],
                "resourceVersion": "2606683",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-645c757f7d-mgkvb",
                "uid": "c97a650d-f438-40bd-92f4-8f44b79480c4"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b carrier-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.carrier-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-l5v78",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/carrier-net/ca/carrier?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-l5v78",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-l5v78",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-l5v78"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:12:16Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:12:17Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:12:17Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:11:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c65f356a4c50fe175ec5ae286e1ab75d400596740f38e3f3e4b46acd7a416b5a",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-07T05:12:16Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://df8ae677b0fdca488a06060ff591603dcd7fddfd28d8c1ca80e2ae087cb8ecd8",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://df8ae677b0fdca488a06060ff591603dcd7fddfd28d8c1ca80e2ae087cb8ecd8",
                                "exitCode": 0,
                                "finishedAt": "2020-11-07T05:12:16Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-07T05:12:16Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.13",
                "podIPs": [
                    {
                        "ip": "10.1.0.13"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-07T05:11:54Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725953.7192233-11593-75877660133991 `" && echo ansible-tmp-1604725953.7192233-11593-75877660133991="` echo /root/.ansible/tmp/ansible-tmp-1604725953.7192233-11593-75877660133991 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpehlu66_z TO /root/.ansible/tmp/ansible-tmp-1604725953.7192233-11593-75877660133991/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725953.7192233-11593-75877660133991/ /root/.ansible/tmp/ansible-tmp-1604725953.7192233-11593-75877660133991/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725953.7192233-11593-75877660133991/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725953.7192233-11593-75877660133991/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725953.924268-11619-23544691168010 `" && echo ansible-tmp-1604725953.924268-11619-23544691168010="` echo /root/.ansible/tmp/ansible-tmp-1604725953.924268-11619-23544691168010 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9cquksc7 TO /root/.ansible/tmp/ansible-tmp-1604725953.924268-11619-23544691168010/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725953.924268-11619-23544691168010/ /root/.ansible/tmp/ansible-tmp-1604725953.924268-11619-23544691168010/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725953.924268-11619-23544691168010/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725953.924268-11619-23544691168010/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381 `" && echo ansible-tmp-1604725954.1239328-11645-170800937495381="` echo /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7zouzoes TO /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/ /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpg3hvoh0t/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/ /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgr4mapzo TO /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/ /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "31ce48ae00d8d8ffe510b3550432011b",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725954.1239328-11645-170800937495381/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725954.5260305-11687-87126208537581 `" && echo ansible-tmp-1604725954.5260305-11687-87126208537581="` echo /root/.ansible/tmp/ansible-tmp-1604725954.5260305-11687-87126208537581 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpv23hsv6s TO /root/.ansible/tmp/ansible-tmp-1604725954.5260305-11687-87126208537581/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725954.5260305-11687-87126208537581/ /root/.ansible/tmp/ansible-tmp-1604725954.5260305-11687-87126208537581/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725954.5260305-11687-87126208537581/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725954.5260305-11687-87126208537581/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604725954.4121335,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
        "ctime": 1604725954.4121335,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3331,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604725954.2801313,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "3043255719",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725954.7765987-11717-222198962079788 `" && echo ansible-tmp-1604725954.7765987-11717-222198962079788="` echo /root/.ansible/tmp/ansible-tmp-1604725954.7765987-11717-222198962079788 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgr33bf1u TO /root/.ansible/tmp/ansible-tmp-1604725954.7765987-11717-222198962079788/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725954.7765987-11717-222198962079788/ /root/.ansible/tmp/ansible-tmp-1604725954.7765987-11717-222198962079788/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725954.7765987-11717-222198962079788/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725954.7765987-11717-222198962079788/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604725810.0939538,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604725948.7080474,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3309,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604725948.7080474,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "391631264",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca-tools",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "carrier-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367 `" && echo ansible-tmp-1604725955.1538153-11755-226399451095367="` echo /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpy3kpazhy TO /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/ /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp13kf5m63 TO /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/ /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfoe6g9_s TO /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/ /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
    "dest": "./build/test/carrier-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp13kf5m63",
            "attributes": null,
            "backup": false,
            "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
            "content": null,
            "dest": "./build/test/carrier-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "1e84a94c7e9daff778218b24a27091ea",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725955.1538153-11755-226399451095367/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725955.493539-11795-105906674579327 `" && echo ansible-tmp-1604725955.493539-11795-105906674579327="` echo /root/.ansible/tmp/ansible-tmp-1604725955.493539-11795-105906674579327 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpx0omtrqo TO /root/.ansible/tmp/ansible-tmp-1604725955.493539-11795-105906674579327/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725955.493539-11795-105906674579327/ /root/.ansible/tmp/ansible-tmp-1604725955.493539-11795-105906674579327/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725955.493539-11795-105906674579327/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725955.493539-11795-105906674579327/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.067246",
    "end": "2020-11-07 05:12:35.690884",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:12:35.623638",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725955.8012652-11829-199465274999855 `" && echo ansible-tmp-1604725955.8012652-11829-199465274999855="` echo /root/.ansible/tmp/ansible-tmp-1604725955.8012652-11829-199465274999855 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpyvyl7d8d TO /root/.ansible/tmp/ansible-tmp-1604725955.8012652-11829-199465274999855/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725955.8012652-11829-199465274999855/ /root/.ansible/tmp/ansible-tmp-1604725955.8012652-11829-199465274999855/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725955.8012652-11829-199465274999855/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725955.8012652-11829-199465274999855/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725956.0016375-11855-248881996767677 `" && echo ansible-tmp-1604725956.0016375-11855-248881996767677="` echo /root/.ansible/tmp/ansible-tmp-1604725956.0016375-11855-248881996767677 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0x_vuwg0 TO /root/.ansible/tmp/ansible-tmp-1604725956.0016375-11855-248881996767677/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725956.0016375-11855-248881996767677/ /root/.ansible/tmp/ansible-tmp-1604725956.0016375-11855-248881996767677/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725956.0016375-11855-248881996767677/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725956.0016375-11855-248881996767677/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.336080",
    "end": "2020-11-07 05:12:44.467662",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:12:36.131582",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   dc9e38c9..8d0207df  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   dc9e38c9..8d0207df  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 8d0207df] [ci skip] Pushing CA-tools files\n 2 files changed, 1011 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 8d0207df] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 8d0207df] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   dc9e38c9..8d0207df  HEAD -> gorilla"
    ]
}

TASK [include_role : create/crypto_script] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:85

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725964.7688484-11905-185474246094897 `" && echo ansible-tmp-1604725964.7688484-11905-185474246094897="` echo /root/.ansible/tmp/ansible-tmp-1604725964.7688484-11905-185474246094897 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5xyu2d6p TO /root/.ansible/tmp/ansible-tmp-1604725964.7688484-11905-185474246094897/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725964.7688484-11905-185474246094897/ /root/.ansible/tmp/ansible-tmp-1604725964.7688484-11905-185474246094897/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725964.7688484-11905-185474246094897/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725964.7688484-11905-185474246094897/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397 `" && echo ansible-tmp-1604725964.9736476-11931-9480342274397="` echo /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpct6hkxqi TO /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/ /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgt3ivknc/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/ /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpu6vikgp7 TO /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/ /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "480d289ef6662bbab578be328654f6561843b88a",
    "dest": "./build/generate-crypto-walmart-orderer1.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "480d289ef6662bbab578be328654f6561843b88a",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer1.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "44f5848d8eb1f30ca687b6194b06faa5",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer1",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725964.9736476-11931-9480342274397/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202 `" && echo ansible-tmp-1604725965.3090663-11931-155618740244202="` echo /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp6amz8v0z TO /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/ /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphsh7ztd7/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/ /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj7juasjd TO /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/ /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "878c1a8c631020f3e5356765f191403e5fcd824d",
    "dest": "./build/generate-crypto-walmart-orderer2.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "878c1a8c631020f3e5356765f191403e5fcd824d",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer2.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a0bf25fd9770ac7e0da9684c08a133da",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer2",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725965.3090663-11931-155618740244202/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578 `" && echo ansible-tmp-1604725965.6450157-11931-122394897553578="` echo /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpv67t_3zs TO /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/ /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprbubnlng/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/ /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzqduy371 TO /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/ /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "e01c7b0f6bd46487011f462aa2ab5c1f51bd1fb2",
    "dest": "./build/generate-crypto-walmart-orderer3.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "e01c7b0f6bd46487011f462aa2ab5c1f51bd1fb2",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer3.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2594a73061c3bc6598466f5435e1492c",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer3",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725965.6450157-11931-122394897553578/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958 `" && echo ansible-tmp-1604725966.0031571-12047-45230455139958="` echo /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpmsii2ni2 TO /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/ /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3gss0n4v/orderer_organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/ /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpa32jt2r8 TO /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/ /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "64df30f5e30a0b5059f87dfe7e3e175f3f37f0a1",
    "dest": "./build/generate-crypto-walmart.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "64df30f5e30a0b5059f87dfe7e3e175f3f37f0a1",
            "content": null,
            "dest": "./build/generate-crypto-walmart.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ed7b38ef30a5d84380fe1096ab91459f",
    "mode": "0644",
    "owner": "root",
    "size": 2912,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725966.0031571-12047-45230455139958/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725966.378615-12089-221053628630082 `" && echo ansible-tmp-1604725966.378615-12089-221053628630082="` echo /root/.ansible/tmp/ansible-tmp-1604725966.378615-12089-221053628630082 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpznzwkgqp TO /root/.ansible/tmp/ansible-tmp-1604725966.378615-12089-221053628630082/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725966.378615-12089-221053628630082/ /root/.ansible/tmp/ansible-tmp-1604725966.378615-12089-221053628630082/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725966.378615-12089-221053628630082/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725966.378615-12089-221053628630082/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123 `" && echo ansible-tmp-1604725966.640724-12119-1398892244123="` echo /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppo5r7h04 TO /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/ /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3bzxrq8c/organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/ /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpkm5eeohk TO /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/ /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "75274d7dcfb5fdf1db32693302b1095b589ef47e",
    "dest": "./build/generate-crypto-carrier.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "75274d7dcfb5fdf1db32693302b1095b589ef47e",
            "content": null,
            "dest": "./build/generate-crypto-carrier.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d84067ed5e5c66cd0b6cacb3bab1d4ac",
    "mode": "0644",
    "owner": "root",
    "size": 5182,
    "src": "/root/.ansible/tmp/ansible-tmp-1604725966.640724-12119-1398892244123/source",
    "state": "file",
    "uid": 0
}

TASK [pause] *******************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:94
Pausing for 360 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[pause]
Sleeping... so that the client certificates are valid:
ok: [localhost] => {
    "changed": false,
    "delta": 360,
    "echo": true,
    "rc": 0,
    "start": "2020-11-07 05:12:46.993616",
    "stderr": "",
    "stdout": "Paused for 6.0 minutes",
    "stop": "2020-11-07 05:18:46.993888",
    "user_input": ""
}

TASK [include_role : create/crypto/orderer] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:99
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726327.1669707-12163-265725124907652 `" && echo ansible-tmp-1604726327.1669707-12163-265725124907652="` echo /root/.ansible/tmp/ansible-tmp-1604726327.1669707-12163-265725124907652 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpxdsskrky TO /root/.ansible/tmp/ansible-tmp-1604726327.1669707-12163-265725124907652/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726327.1669707-12163-265725124907652/ /root/.ansible/tmp/ansible-tmp-1604726327.1669707-12163-265725124907652/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726327.1669707-12163-265725124907652/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726327.1669707-12163-265725124907652/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.107089",
    "end": "2020-11-07 05:18:47.407620",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:18:47.300531",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Call orderercheck.yaml for orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:16
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml for localhost

TASK [Waiting for CA-tool in walmart-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:2
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726327.696748-12206-249846194518013 `" && echo ansible-tmp-1604726327.696748-12206-249846194518013="` echo /root/.ansible/tmp/ansible-tmp-1604726327.696748-12206-249846194518013 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpyqarittt TO /root/.ansible/tmp/ansible-tmp-1604726327.696748-12206-249846194518013/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726327.696748-12206-249846194518013/ /root/.ansible/tmp/ansible-tmp-1604726327.696748-12206-249846194518013/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726327.696748-12206-249846194518013/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726327.696748-12206-249846194518013/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-07T05:13:39Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-jxqz5",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "4e91568a-bc46-4436-8adb-dd49d27bef60"
                    }
                ],
                "resourceVersion": "2607134",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-tools-69d7885f86-jxqz5",
                "uid": "cb7f2581-0f00-436e-9c4c-9e362eb7ab38"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-9nxn5",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-9nxn5",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-9nxn5"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:13:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:14:30Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:14:30Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:13:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://3aabece268b996e27571d22f8eecb578f18d60cb673a782145024d082be5ca49",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-07T05:14:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.81",
                "podIPs": [
                    {
                        "ip": "10.1.0.81"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-07T05:13:54Z"
            }
        }
    ]
}

TASK [include_role : {{ playbook_dir }}/../../shared/configuration/roles/check/setup] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:15
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726328.3731995-12236-122698563666043 `" && echo ansible-tmp-1604726328.3731995-12236-122698563666043="` echo /root/.ansible/tmp/ansible-tmp-1604726328.3731995-12236-122698563666043 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1t__2mks TO /root/.ansible/tmp/ansible-tmp-1604726328.3731995-12236-122698563666043/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726328.3731995-12236-122698563666043/ /root/.ansible/tmp/ansible-tmp-1604726328.3731995-12236-122698563666043/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726328.3731995-12236-122698563666043/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726328.3731995-12236-122698563666043/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "atime": 1604725806.253896,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604725806.7579036,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3302,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604725806.7579036,
        "nlink": 2,
        "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1607455530",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if ca certs already created] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726328.6849418-12272-10876493484253 `" && echo ansible-tmp-1604726328.6849418-12272-10876493484253="` echo /root/.ansible/tmp/ansible-tmp-1604726328.6849418-12272-10876493484253 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpjsd5_k0_ TO /root/.ansible/tmp/ansible-tmp-1604726328.6849418-12272-10876493484253/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726328.6849418-12272-10876493484253/ /root/.ansible/tmp/ansible-tmp-1604726328.6849418-12272-10876493484253/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726328.6849418-12272-10876493484253/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726328.6849418-12272-10876493484253/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.057940",
    "end": "2020-11-07 05:18:48.873759",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:18:48.815819",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Check if ca key already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726328.9386683-12309-203397982655674 `" && echo ansible-tmp-1604726328.9386683-12309-203397982655674="` echo /root/.ansible/tmp/ansible-tmp-1604726328.9386683-12309-203397982655674 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphbctlx94 TO /root/.ansible/tmp/ansible-tmp-1604726328.9386683-12309-203397982655674/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726328.9386683-12309-203397982655674/ /root/.ansible/tmp/ansible-tmp-1604726328.9386683-12309-203397982655674/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726328.9386683-12309-203397982655674/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726328.9386683-12309-203397982655674/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.053511",
    "end": "2020-11-07 05:18:49.123470",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:18:49.069959",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call common.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:19
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml for localhost

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726329.2384746-12348-209677030087492 `" && echo ansible-tmp-1604726329.2384746-12348-209677030087492="` echo /root/.ansible/tmp/ansible-tmp-1604726329.2384746-12348-209677030087492 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpagi7e4p8 TO /root/.ansible/tmp/ansible-tmp-1604726329.2384746-12348-209677030087492/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726329.2384746-12348-209677030087492/ /root/.ansible/tmp/ansible-tmp-1604726329.2384746-12348-209677030087492/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726329.2384746-12348-209677030087492/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726329.2384746-12348-209677030087492/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:02.071356",
    "end": "2020-11-07 05:18:51.445072",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:18:49.373716",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Changing the permissions for generate-crypto script] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726331.5125968-12393-278082267326190 `" && echo ansible-tmp-1604726331.5125968-12393-278082267326190="` echo /root/.ansible/tmp/ansible-tmp-1604726331.5125968-12393-278082267326190 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7u1i4kaq TO /root/.ansible/tmp/ansible-tmp-1604726331.5125968-12393-278082267326190/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726331.5125968-12393-278082267326190/ /root/.ansible/tmp/ansible-tmp-1604726331.5125968-12393-278082267326190/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726331.5125968-12393-278082267326190/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726331.5125968-12393-278082267326190/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart.sh"
        }
    },
    "files": "generate-crypto-walmart.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart.sh",
    "size": 2912,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726331.7204123-12419-180739555578025 `" && echo ansible-tmp-1604726331.7204123-12419-180739555578025="` echo /root/.ansible/tmp/ansible-tmp-1604726331.7204123-12419-180739555578025 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwqk14cqo TO /root/.ansible/tmp/ansible-tmp-1604726331.7204123-12419-180739555578025/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726331.7204123-12419-180739555578025/ /root/.ansible/tmp/ansible-tmp-1604726331.7204123-12419-180739555578025/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726331.7204123-12419-180739555578025/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726331.7204123-12419-180739555578025/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:02.594254",
    "end": "2020-11-07 05:18:54.445030",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:18:51.850776",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726334.5122616-12465-245007624413191 `" && echo ansible-tmp-1604726334.5122616-12465-245007624413191="` echo /root/.ansible/tmp/ansible-tmp-1604726334.5122616-12465-245007624413191 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp70tepwq8 TO /root/.ansible/tmp/ansible-tmp-1604726334.5122616-12465-245007624413191/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726334.5122616-12465-245007624413191/ /root/.ansible/tmp/ansible-tmp-1604726334.5122616-12465-245007624413191/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726334.5122616-12465-245007624413191/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726334.5122616-12465-245007624413191/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
    "delta": "0:00:01.503933",
    "end": "2020-11-07 05:18:56.146034",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:18:54.642101",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:18:55 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/07 05:18:55 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420284870}\n2020/11/07 05:18:55 [DEBUG] Entered runEnroll\n2020/11/07 05:18:55 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420284870}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4202848d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42029a6a0 DummyKeystore:<nil>}\n2020/11/07 05:18:55 [INFO] TLS Enabled\n2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:18:55 [DEBUG] Client Cert File: \n2020/11/07 05:18:55 [DEBUG] Client Key File: \n2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:18:55 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:18:55 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:18:55 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:18:55 [INFO] encoded CSR\n2020/11/07 05:18:55 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAECUGIxYlza5wmqgF5oEpAxlfNf/cz\\nws4Qi9HPDiMhRt9VQ+i1d2EnQRKB0IKLCtn4KU/QB6AjK35fpYQ9vvgR56A3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1q\\neHF6NTAKBggqhkjOPQQDAgNHADBEAiBonv9zT5vCvrlabNgOS5Ti7nD55nBTZN6f\\nK5Kg8ycq2QIgQP4wBspfDAEx6sWCmX3F1AieKumvSiJdhfD61QAabHU=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:18:55 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:18:55 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTVENDQWUrZ0F3SUJBZ0lVVnQwMEZkak91a0FMQmdMNE1yYlE0UXlRMW5Jd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OZDJGc2JXRnlkQzFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCQWxCaU1XSmMydWNKcW9CZWFCS1FNWlh6WC8zTThMT0VJdlJ6dzRqSVViZlZVUG8KdFhkaEowRVNnZENDaXdyWitDbFAwQWVnSXl0K1g2V0VQYjc0RWVlamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSU5haW9KMC9QcStyUnhnUEpMRGY0SnpXWkNUCk1COEdBMVVkSXdRWU1CYUFGUDgyVHNRVDJ2UmhUOUltL0hVb3ZhNzh2bDduTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YW5oeGVqVXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBUDI2YzJrcgp4UmdIYkVjZTFoVVJ6dDVSY3cwck5GQmZqVW9EaUtZcmxxamhBaUFNK2pTODRrMVYxR2d4SElXUGdYVmhNdWdEClhMQnk5LzZoeExqdnNsaExJdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/07 05:18:55 [DEBUG] newEnrollmentResponse walmart-admin\n2020/11/07 05:18:55 [INFO] Stored client certificate at /root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/07 05:18:55 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-walmart/msp/cacerts/ca-walmart-net-7054.pem\n+ fabric-ca-client getcacert -d -u https://ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp\n2020/11/07 05:18:55 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:18:55 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/07 05:18:55 [DEBUG] Entered runGetCACert\n2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c40a0 DummyKeystore:<nil>}\n2020/11/07 05:18:55 [INFO] TLS Enabled\n2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:18:55 [DEBUG] Client Cert File: \n2020/11/07 05:18:55 [DEBUG] Client Key File: \n2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:18:55 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/cainfo\n{}\n2020/11/07 05:18:55 [DEBUG] Received response\nstatusCode=200 (200 OK)\n2020/11/07 05:18:55 [DEBUG] Response body result: map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5 CAName:ca.walmart-net]\n2020/11/07 05:18:55 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/07 05:18:55 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/07 05:18:55 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/07 05:18:55 [DEBUG] Checking for enrollment\n2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392690}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203926f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420399bb0 DummyKeystore:<nil>}\n2020/11/07 05:18:55 [INFO] TLS Enabled\n2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:18:55 [DEBUG] Client Cert File: \n2020/11/07 05:18:55 [DEBUG] Client Key File: \n2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392690}\n2020/11/07 05:18:55 [DEBUG] Entered runRegister\n2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392690}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203926f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420399bb0 DummyKeystore:<nil>}\n2020/11/07 05:18:55 [INFO] TLS Enabled\n2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:18:55 [DEBUG] Client Cert File: \n2020/11/07 05:18:55 [DEBUG] Client Key File: \n2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:18:55 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/07 05:18:55 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:18:55 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/07 05:18:55 [DEBUG] Register { Name:Admin@walmart-net Type:client Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true} {abac.init true true} {hf.Registrar.Roles client false} {hf.Registrar.Attributes * false}] CAName:  }\n2020/11/07 05:18:55 [DEBUG] Adding token-based authorization header\n2020/11/07 05:18:55 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"Admin@walmart-net\",\"type\":\"client\",\"secret\":\"Admin@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true},{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true},{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"}]}\n2020/11/07 05:18:55 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:18:55 [DEBUG] Response body result: map[secret:Admin@walmart-net-pw]\n2020/11/07 05:18:55 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:18:55 [DEBUG] Home directory: /root/ca-tools/walmart/admin\n2020/11/07 05:18:55 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml\n2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420060810}\n2020/11/07 05:18:55 [DEBUG] Entered runEnroll\n2020/11/07 05:18:55 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420060810}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420060870 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a6220 DummyKeystore:<nil>}\n2020/11/07 05:18:55 [INFO] TLS Enabled\n2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:18:55 [DEBUG] Client Cert File: \n2020/11/07 05:18:55 [DEBUG] Client Key File: \n2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:18:55 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:18:55 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:18:55 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:18:55 [INFO] encoded CSR\n2020/11/07 05:18:55 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJm0aTE8ycP3orJ/Tja2YyCq\\nMhrV6NkeqkQLAhNDvvHDTzRLeom7H+jhnj5KOP9iCYHlSbWHoaAkHn5b88dVnDCg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgPc1ujME9CJiqzMUCIE4z/GHD73zg\\nKf1XE6jiptNy8CMCIDqyuubpaPB0PDaDpSwlE3j2SHOdKPRi1OkSihpggbxP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:18:55 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:18:55 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMxekNDQW42Z0F3SUJBZ0lVRzhxdURXOEZkS0pvT1pHZDhIOHNCeXFtam40d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFTWnRHa3hQTW5EOTZLeWYwNDJ0bU1ncWpJYTFlalpIcXBFQ3dJVFE3N3gKdzA4MFMzcUp1eC9vNFo0K1Nqai9ZZ21CNVVtMWg2R2dKQjUrVy9QSFZad3dvNElCRVRDQ0FRMHdEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZFMGViYjVoMStxT21tTituWnFmCnRVS00rdUIrTUI4R0ExVWRJd1FZTUJhQUZQODJUc1FUMnZSaFQ5SW0vSFVvdmE3OHZsN25NQ1FHQTFVZEVRUWQKTUJ1Q0dXTmhMWFJ2YjJ4ekxUWTVaRGM0T0RWbU9EWXRhbmh4ZWpVd2dZWUdDQ29EQkFVR0J3Z0JCSHA3SW1GMApkSEp6SWpwN0ltRmlZV011YVc1cGRDSTZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1VpTENKb1ppNUJabVpwCmJHbGhkR2x2YmlJNklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFIZGhiRzFoY25RdGJtVjAKSWl3aWFHWXVWSGx3WlNJNkltTnNhV1Z1ZENKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQS81d3V0dWdibgpnaTRvSXM0c1R6cTM3eHRMUktBQmtPdUdOVkI3WnFFUy9RSWdLVFQ3aFNCRUR0STIxcGx2Y05VOGlzT2JLcDlpCjNVVThPV2lMRmZPRTN1TT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:18:55 [DEBUG] newEnrollmentResponse Admin@walmart-net\n2020/11/07 05:18:55 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/msp/signcerts/cert.pem\n2020/11/07 05:18:55 [INFO] Stored root CA certificate at /root/ca-tools/walmart/admin/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts\n+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem\n+ mkdir /root/ca-tools/walmart/admin/msp/admincerts\n+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:18:55 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:18:55 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8720}\n2020/11/07 05:18:55 [DEBUG] Entered runEnroll\n2020/11/07 05:18:55 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8720}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b8780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c36e0 DummyKeystore:<nil>}\n2020/11/07 05:18:55 [INFO] TLS Enabled\n2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:18:55 [DEBUG] Client Cert File: \n2020/11/07 05:18:55 [DEBUG] Client Key File: \n2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:18:55 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:18:55 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:18:55 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:18:55 [INFO] encoded CSR\n2020/11/07 05:18:55 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEv3sXK181TjMhUogLD0OMdu\\nvlBTW61ceI5qMbQNayB6a84FBuAnQh0eiHcWgk/Aw3dh9kJ2JiLCJN6LAfHSPu+g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgE0oTZdybpJjmmkPFs87BhjGvAywA\\nkeFIR/thkrgtz9kCIGLdTbGDjOJ20EhrW2LyMqrCVIxK7hBAwalkC0k/Mcfr\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:18:56 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:18:56 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5akNDQXAyZ0F3SUJBZ0lVQm11ekpxMHJrY2hsWHpZTUVyS3lMVm1DdklZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFSTDk3Rnl0Zk5VNHpJVktJQ3c5RGpIYnI1UVUxdXRYSGlPYWpHMERXc2cKZW12T0JRYmdKMElkSG9oM0ZvSlB3TU4zWWZaQ2RpWWl3aVRlaXdIeDBqN3ZvNElCTURDQ0FTd3dEZ1lEVlIwUApBUUgvQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CCkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRM3VLb1h3UmpPWlRUOGJNYS8zc1phVFYrUEFUQWZCZ05WSFNNRUdEQVcKZ0JUL05rN0VFOXIwWVUvU0p2eDFLTDJ1L0w1ZTV6QWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRMwpPRGcxWmpnMkxXcDRjWG8xTUlHR0JnZ3FBd1FGQmdjSUFRUjZleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpCk9pSjBjblZsSWl3aVlXUnRhVzRpT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1ppNUYKYm5KdmJHeHRaVzUwU1VRaU9pSkJaRzFwYmtCM1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbApiblFpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0lXTlgrUWwrdnFQNjdDOG5TSHR0MXRsc2Q2UmRmMTBwCk91Y0NZQUNzUmRRQ0lGRXhabnQ0SCtMMEZwNWRYRXlUSVpPSis1cHZhbDVvYzJBREZWN0IyU1lICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/07 05:18:56 [DEBUG] newEnrollmentResponse Admin@walmart-net\n2020/11/07 05:18:56 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/tls/signcerts/cert.pem\n2020/11/07 05:18:56 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls\n+ cp /root/ca-tools/walmart/admin/tls/keystore/625a3275f7d4ee2a29dff745db5a013816869f4236207c7b3964c2e1bcda4473_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key\n+ cp /root/ca-tools/walmart/admin/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:18:55 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:18:55 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420284870}",
        "2020/11/07 05:18:55 [DEBUG] Entered runEnroll",
        "2020/11/07 05:18:55 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420284870}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4202848d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42029a6a0 DummyKeystore:<nil>}",
        "2020/11/07 05:18:55 [INFO] TLS Enabled",
        "2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:18:55 [DEBUG] Client Cert File: ",
        "2020/11/07 05:18:55 [DEBUG] Client Key File: ",
        "2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:18:55 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:18:55 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:18:55 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:18:55 [INFO] encoded CSR",
        "2020/11/07 05:18:55 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAECUGIxYlza5wmqgF5oEpAxlfNf/cz\\nws4Qi9HPDiMhRt9VQ+i1d2EnQRKB0IKLCtn4KU/QB6AjK35fpYQ9vvgR56A3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1q\\neHF6NTAKBggqhkjOPQQDAgNHADBEAiBonv9zT5vCvrlabNgOS5Ti7nD55nBTZN6f\\nK5Kg8ycq2QIgQP4wBspfDAEx6sWCmX3F1AieKumvSiJdhfD61QAabHU=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:18:55 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:18:55 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTVENDQWUrZ0F3SUJBZ0lVVnQwMEZkak91a0FMQmdMNE1yYlE0UXlRMW5Jd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OZDJGc2JXRnlkQzFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCQWxCaU1XSmMydWNKcW9CZWFCS1FNWlh6WC8zTThMT0VJdlJ6dzRqSVViZlZVUG8KdFhkaEowRVNnZENDaXdyWitDbFAwQWVnSXl0K1g2V0VQYjc0RWVlamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSU5haW9KMC9QcStyUnhnUEpMRGY0SnpXWkNUCk1COEdBMVVkSXdRWU1CYUFGUDgyVHNRVDJ2UmhUOUltL0hVb3ZhNzh2bDduTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YW5oeGVqVXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBUDI2YzJrcgp4UmdIYkVjZTFoVVJ6dDVSY3cwck5GQmZqVW9EaUtZcmxxamhBaUFNK2pTODRrMVYxR2d4SElXUGdYVmhNdWdEClhMQnk5LzZoeExqdnNsaExJdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/07 05:18:55 [DEBUG] newEnrollmentResponse walmart-admin",
        "2020/11/07 05:18:55 [INFO] Stored client certificate at /root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/07 05:18:55 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-walmart/msp/cacerts/ca-walmart-net-7054.pem",
        "+ fabric-ca-client getcacert -d -u https://ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp",
        "2020/11/07 05:18:55 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:18:55 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/07 05:18:55 [DEBUG] Entered runGetCACert",
        "2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c40a0 DummyKeystore:<nil>}",
        "2020/11/07 05:18:55 [INFO] TLS Enabled",
        "2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:18:55 [DEBUG] Client Cert File: ",
        "2020/11/07 05:18:55 [DEBUG] Client Key File: ",
        "2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:18:55 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/cainfo",
        "{}",
        "2020/11/07 05:18:55 [DEBUG] Received response",
        "statusCode=200 (200 OK)",
        "2020/11/07 05:18:55 [DEBUG] Response body result: map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5 CAName:ca.walmart-net]",
        "2020/11/07 05:18:55 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:18:55 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:18:55 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/07 05:18:55 [DEBUG] Checking for enrollment",
        "2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392690}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203926f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420399bb0 DummyKeystore:<nil>}",
        "2020/11/07 05:18:55 [INFO] TLS Enabled",
        "2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:18:55 [DEBUG] Client Cert File: ",
        "2020/11/07 05:18:55 [DEBUG] Client Key File: ",
        "2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392690}",
        "2020/11/07 05:18:55 [DEBUG] Entered runRegister",
        "2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392690}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203926f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420399bb0 DummyKeystore:<nil>}",
        "2020/11/07 05:18:55 [INFO] TLS Enabled",
        "2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:18:55 [DEBUG] Client Cert File: ",
        "2020/11/07 05:18:55 [DEBUG] Client Key File: ",
        "2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:18:55 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/07 05:18:55 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:18:55 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/07 05:18:55 [DEBUG] Register { Name:Admin@walmart-net Type:client Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true} {abac.init true true} {hf.Registrar.Roles client false} {hf.Registrar.Attributes * false}] CAName:  }",
        "2020/11/07 05:18:55 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:18:55 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"Admin@walmart-net\",\"type\":\"client\",\"secret\":\"Admin@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true},{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true},{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"}]}",
        "2020/11/07 05:18:55 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:18:55 [DEBUG] Response body result: map[secret:Admin@walmart-net-pw]",
        "2020/11/07 05:18:55 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:18:55 [DEBUG] Home directory: /root/ca-tools/walmart/admin",
        "2020/11/07 05:18:55 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml",
        "2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420060810}",
        "2020/11/07 05:18:55 [DEBUG] Entered runEnroll",
        "2020/11/07 05:18:55 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420060810}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420060870 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a6220 DummyKeystore:<nil>}",
        "2020/11/07 05:18:55 [INFO] TLS Enabled",
        "2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:18:55 [DEBUG] Client Cert File: ",
        "2020/11/07 05:18:55 [DEBUG] Client Key File: ",
        "2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:18:55 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:18:55 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:18:55 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:18:55 [INFO] encoded CSR",
        "2020/11/07 05:18:55 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJm0aTE8ycP3orJ/Tja2YyCq\\nMhrV6NkeqkQLAhNDvvHDTzRLeom7H+jhnj5KOP9iCYHlSbWHoaAkHn5b88dVnDCg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgPc1ujME9CJiqzMUCIE4z/GHD73zg\\nKf1XE6jiptNy8CMCIDqyuubpaPB0PDaDpSwlE3j2SHOdKPRi1OkSihpggbxP\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:18:55 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:18:55 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMxekNDQW42Z0F3SUJBZ0lVRzhxdURXOEZkS0pvT1pHZDhIOHNCeXFtam40d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFTWnRHa3hQTW5EOTZLeWYwNDJ0bU1ncWpJYTFlalpIcXBFQ3dJVFE3N3gKdzA4MFMzcUp1eC9vNFo0K1Nqai9ZZ21CNVVtMWg2R2dKQjUrVy9QSFZad3dvNElCRVRDQ0FRMHdEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZFMGViYjVoMStxT21tTituWnFmCnRVS00rdUIrTUI4R0ExVWRJd1FZTUJhQUZQODJUc1FUMnZSaFQ5SW0vSFVvdmE3OHZsN25NQ1FHQTFVZEVRUWQKTUJ1Q0dXTmhMWFJ2YjJ4ekxUWTVaRGM0T0RWbU9EWXRhbmh4ZWpVd2dZWUdDQ29EQkFVR0J3Z0JCSHA3SW1GMApkSEp6SWpwN0ltRmlZV011YVc1cGRDSTZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1VpTENKb1ppNUJabVpwCmJHbGhkR2x2YmlJNklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFIZGhiRzFoY25RdGJtVjAKSWl3aWFHWXVWSGx3WlNJNkltTnNhV1Z1ZENKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQS81d3V0dWdibgpnaTRvSXM0c1R6cTM3eHRMUktBQmtPdUdOVkI3WnFFUy9RSWdLVFQ3aFNCRUR0STIxcGx2Y05VOGlzT2JLcDlpCjNVVThPV2lMRmZPRTN1TT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:18:55 [DEBUG] newEnrollmentResponse Admin@walmart-net",
        "2020/11/07 05:18:55 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/msp/signcerts/cert.pem",
        "2020/11/07 05:18:55 [INFO] Stored root CA certificate at /root/ca-tools/walmart/admin/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts",
        "+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem",
        "+ mkdir /root/ca-tools/walmart/admin/msp/admincerts",
        "+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:18:55 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:18:55 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/07 05:18:55 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8720}",
        "2020/11/07 05:18:55 [DEBUG] Entered runEnroll",
        "2020/11/07 05:18:55 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:18:55 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8720}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b8780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:18:55 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c36e0 DummyKeystore:<nil>}",
        "2020/11/07 05:18:55 [INFO] TLS Enabled",
        "2020/11/07 05:18:55 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:18:55 [DEBUG] Client Cert File: ",
        "2020/11/07 05:18:55 [DEBUG] Client Key File: ",
        "2020/11/07 05:18:55 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:18:55 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:18:55 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:18:55 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:18:55 [INFO] encoded CSR",
        "2020/11/07 05:18:55 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEv3sXK181TjMhUogLD0OMdu\\nvlBTW61ceI5qMbQNayB6a84FBuAnQh0eiHcWgk/Aw3dh9kJ2JiLCJN6LAfHSPu+g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgE0oTZdybpJjmmkPFs87BhjGvAywA\\nkeFIR/thkrgtz9kCIGLdTbGDjOJ20EhrW2LyMqrCVIxK7hBAwalkC0k/Mcfr\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:18:56 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:18:56 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5akNDQXAyZ0F3SUJBZ0lVQm11ekpxMHJrY2hsWHpZTUVyS3lMVm1DdklZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFSTDk3Rnl0Zk5VNHpJVktJQ3c5RGpIYnI1UVUxdXRYSGlPYWpHMERXc2cKZW12T0JRYmdKMElkSG9oM0ZvSlB3TU4zWWZaQ2RpWWl3aVRlaXdIeDBqN3ZvNElCTURDQ0FTd3dEZ1lEVlIwUApBUUgvQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CCkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRM3VLb1h3UmpPWlRUOGJNYS8zc1phVFYrUEFUQWZCZ05WSFNNRUdEQVcKZ0JUL05rN0VFOXIwWVUvU0p2eDFLTDJ1L0w1ZTV6QWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRMwpPRGcxWmpnMkxXcDRjWG8xTUlHR0JnZ3FBd1FGQmdjSUFRUjZleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpCk9pSjBjblZsSWl3aVlXUnRhVzRpT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1ppNUYKYm5KdmJHeHRaVzUwU1VRaU9pSkJaRzFwYmtCM1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbApiblFpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0lXTlgrUWwrdnFQNjdDOG5TSHR0MXRsc2Q2UmRmMTBwCk91Y0NZQUNzUmRRQ0lGRXhabnQ0SCtMMEZwNWRYRXlUSVpPSis1cHZhbDVvYzJBREZWN0IyU1lICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/07 05:18:56 [DEBUG] newEnrollmentResponse Admin@walmart-net",
        "2020/11/07 05:18:56 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/tls/signcerts/cert.pem",
        "2020/11/07 05:18:56 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/admin/tls/keystore/625a3275f7d4ee2a29dff745db5a013816869f4236207c7b3964c2e1bcda4473_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key",
        "+ cp /root/ca-tools/walmart/admin/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt",
        "+ cd /"
    ],
    "stdout": "Password: Admin@walmart-net-pw",
    "stdout_lines": [
        "Password: Admin@walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:48
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726336.2179303-12505-149678885522108 `" && echo ansible-tmp-1604726336.2179303-12505-149678885522108="` echo /root/.ansible/tmp/ansible-tmp-1604726336.2179303-12505-149678885522108 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8zb67pde TO /root/.ansible/tmp/ansible-tmp-1604726336.2179303-12505-149678885522108/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726336.2179303-12505-149678885522108/ /root/.ansible/tmp/ansible-tmp-1604726336.2179303-12505-149678885522108/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726336.2179303-12505-149678885522108/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726336.2179303-12505-149678885522108/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.743503",
    "end": "2020-11-07 05:18:57.091927",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:18:56.348424",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call orderer.yaml for each orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726337.286051-12547-171401963161329 `" && echo ansible-tmp-1604726337.286051-12547-171401963161329="` echo /root/.ansible/tmp/ansible-tmp-1604726337.286051-12547-171401963161329 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5kxs1hah TO /root/.ansible/tmp/ansible-tmp-1604726337.286051-12547-171401963161329/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726337.286051-12547-171401963161329/ /root/.ansible/tmp/ansible-tmp-1604726337.286051-12547-171401963161329/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726337.286051-12547-171401963161329/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726337.286051-12547-171401963161329/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
    "delta": "0:00:00.066448",
    "end": "2020-11-07 05:18:57.485464",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:18:57.419016",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726337.5794759-12583-216223287164646 `" && echo ansible-tmp-1604726337.5794759-12583-216223287164646="` echo /root/.ansible/tmp/ansible-tmp-1604726337.5794759-12583-216223287164646 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgvfgz589 TO /root/.ansible/tmp/ansible-tmp-1604726337.5794759-12583-216223287164646/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726337.5794759-12583-216223287164646/ /root/.ansible/tmp/ansible-tmp-1604726337.5794759-12583-216223287164646/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726337.5794759-12583-216223287164646/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726337.5794759-12583-216223287164646/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
    "delta": "0:00:00.089308",
    "end": "2020-11-07 05:18:57.803168",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:18:57.713860",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726337.927421-12621-177598598123005 `" && echo ansible-tmp-1604726337.927421-12621-177598598123005="` echo /root/.ansible/tmp/ansible-tmp-1604726337.927421-12621-177598598123005 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpcyfd3j5u TO /root/.ansible/tmp/ansible-tmp-1604726337.927421-12621-177598598123005/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726337.927421-12621-177598598123005/ /root/.ansible/tmp/ansible-tmp-1604726337.927421-12621-177598598123005/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726337.927421-12621-177598598123005/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726337.927421-12621-177598598123005/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.222942",
    "end": "2020-11-07 05:18:59.281389",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:18:58.058447",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726339.3487396-12666-281005401195193 `" && echo ansible-tmp-1604726339.3487396-12666-281005401195193="` echo /root/.ansible/tmp/ansible-tmp-1604726339.3487396-12666-281005401195193 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9svd9hc5 TO /root/.ansible/tmp/ansible-tmp-1604726339.3487396-12666-281005401195193/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726339.3487396-12666-281005401195193/ /root/.ansible/tmp/ansible-tmp-1604726339.3487396-12666-281005401195193/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726339.3487396-12666-281005401195193/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726339.3487396-12666-281005401195193/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726339.559568-12694-240071406837097 `" && echo ansible-tmp-1604726339.559568-12694-240071406837097="` echo /root/.ansible/tmp/ansible-tmp-1604726339.559568-12694-240071406837097 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8hem56cs TO /root/.ansible/tmp/ansible-tmp-1604726339.559568-12694-240071406837097/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726339.559568-12694-240071406837097/ /root/.ansible/tmp/ansible-tmp-1604726339.559568-12694-240071406837097/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726339.559568-12694-240071406837097/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726339.559568-12694-240071406837097/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer1.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer1.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer1.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer1.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726339.729602-12694-230968249205335 `" && echo ansible-tmp-1604726339.729602-12694-230968249205335="` echo /root/.ansible/tmp/ansible-tmp-1604726339.729602-12694-230968249205335 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp86aytxcg TO /root/.ansible/tmp/ansible-tmp-1604726339.729602-12694-230968249205335/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726339.729602-12694-230968249205335/ /root/.ansible/tmp/ansible-tmp-1604726339.729602-12694-230968249205335/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726339.729602-12694-230968249205335/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726339.729602-12694-230968249205335/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726339.9318388-12744-168637956453160 `" && echo ansible-tmp-1604726339.9318388-12744-168637956453160="` echo /root/.ansible/tmp/ansible-tmp-1604726339.9318388-12744-168637956453160 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpum84xt4k TO /root/.ansible/tmp/ansible-tmp-1604726339.9318388-12744-168637956453160/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726339.9318388-12744-168637956453160/ /root/.ansible/tmp/ansible-tmp-1604726339.9318388-12744-168637956453160/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726339.9318388-12744-168637956453160/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726339.9318388-12744-168637956453160/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.747211",
    "end": "2020-11-07 05:19:03.808709",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:00.061498",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726343.8757808-12795-58310291258849 `" && echo ansible-tmp-1604726343.8757808-12795-58310291258849="` echo /root/.ansible/tmp/ansible-tmp-1604726343.8757808-12795-58310291258849 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpbehoajtv TO /root/.ansible/tmp/ansible-tmp-1604726343.8757808-12795-58310291258849/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726343.8757808-12795-58310291258849/ /root/.ansible/tmp/ansible-tmp-1604726343.8757808-12795-58310291258849/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726343.8757808-12795-58310291258849/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726343.8757808-12795-58310291258849/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.295674",
    "end": "2020-11-07 05:19:06.301252",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:04.005578",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer1.walmart-net\n+ CSR_HOSTS=orderer1.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:04 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:04 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/07 05:19:04 [DEBUG] Checking for enrollment\n2020/11/07 05:19:04 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc5d0}\n2020/11/07 05:19:04 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200bc630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:04 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395390 DummyKeystore:<nil>}\n2020/11/07 05:19:04 [INFO] TLS Enabled\n2020/11/07 05:19:04 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:04 [DEBUG] Client Cert File: \n2020/11/07 05:19:04 [DEBUG] Client Key File: \n2020/11/07 05:19:04 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:04 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc5d0}\n2020/11/07 05:19:04 [DEBUG] Entered runRegister\n2020/11/07 05:19:04 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc5d0}\n2020/11/07 05:19:04 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200bc630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:04 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395390 DummyKeystore:<nil>}\n2020/11/07 05:19:04 [INFO] TLS Enabled\n2020/11/07 05:19:04 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:04 [DEBUG] Client Cert File: \n2020/11/07 05:19:04 [DEBUG] Client Key File: \n2020/11/07 05:19:04 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:04 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/07 05:19:04 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:04 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/07 05:19:04 [DEBUG] Register { Name:orderer1.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/07 05:19:04 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:04 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer1.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer1.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/07 05:19:04 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:04 [DEBUG] Response body result: map[secret:orderer1.walmart-net-pw]\n2020/11/07 05:19:04 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:04 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:04 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8600}\n2020/11/07 05:19:04 [DEBUG] Entered runEnroll\n2020/11/07 05:19:04 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:04 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8600}\n2020/11/07 05:19:04 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b8660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:04 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bd2a0 DummyKeystore:<nil>}\n2020/11/07 05:19:04 [INFO] TLS Enabled\n2020/11/07 05:19:04 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:04 [DEBUG] Client Cert File: \n2020/11/07 05:19:04 [DEBUG] Client Key File: \n2020/11/07 05:19:04 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:04 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:04 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:04 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:04 [INFO] encoded CSR\n2020/11/07 05:19:04 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASbIihh9J6uaLAeMFcv\\nT3+N5THDcSJVECrYzriA6DHdEfDGS1tsDoIj79L4ajpVENcPaXYbdIc1MaaXSWz6\\nsx3moF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEA+gauFzRNBUydsNi4Y38dmhqhpSABc7pX\\nIH14C6U4QS4CIC0dOggOtZU89GF3nTndJuyME9pulhM01542nKRXdcX0\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:04 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:04 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVRmNiY1hYSkNkTmRXaGVkek5hOTRmeDJ5TE9Zd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRW15SW9ZZlNlcm1pd0hqQlhMMDkvamVVeHczRWlWUkFxMk02NGdPZ3gKM1JId3hrdGJiQTZDSSsvUytHbzZWUkRYRDJsMkczU0hOVEdtbDBscytyTWQ1cU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWZTV051RThZQ1JTN2hCdXFXcDVkdmtHVlozZ3dId1lEVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUhTZmE0a3VCWkg1bHFtdXRsUjdOeFMwCkVKREpMREJGUVZveUJMckNmaDRoQWlCQ0lCcmxReXhiTVZMUndsaHRGeUVUY0w2ZXJLenJITStYWDRpTW5nTHYKK3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ]]\n2020/11/07 05:19:04 [DEBUG] newEnrollmentResponse orderer1.walmart-net\n2020/11/07 05:19:04 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/07 05:19:04 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/45cea45a496eb39cdf27954c5d40fedd7ddbd6e35f1555b38d5e6ab4bc87017d_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:05 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:05 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce6c0}\n2020/11/07 05:19:05 [DEBUG] Entered runEnroll\n2020/11/07 05:19:05 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:05 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce6c0}\n2020/11/07 05:19:05 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ce720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:05 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203d1a80 DummyKeystore:<nil>}\n2020/11/07 05:19:05 [INFO] TLS Enabled\n2020/11/07 05:19:05 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:05 [DEBUG] Client Cert File: \n2020/11/07 05:19:05 [DEBUG] Client Key File: \n2020/11/07 05:19:05 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:05 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:05 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:05 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:05 [INFO] encoded CSR\n2020/11/07 05:19:05 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLC4eNWag8alSH+BMVL4\\nFd4r0Jfd8qYgUkQ3FG0iV33em8K8sXs438E6Q5qbh5r/aGcKGTj5LJNuAYM3aY0o\\ncZOgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhANur0/p56LDpoim+Rqj6uQLy\\ntxGrWOIizIxx63k/AbtKAiAT0sdovcTbD1UKzWHNVqW0bwKo+Wpn7HeNcdezJubB\\nEg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:05 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:05 [DEBUG] Response body result: map[ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVVEhGVE1heFBodWIyYk45TWhtbFZLeUFBdUNBd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRXNMaDQxWnFEeHFWSWY0RXhVdmdWM2l2UWw5M3lwaUJTUkRjVWJTSlgKZmQ2YndyeXhlempmd1RwRG1wdUhtdjlvWndvWk9Qa3NrMjRCZ3pkcGpTaHhrNk9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVhZYXk0SUpVSnVvZ24xY283ckFaClBCWDhIRGN3SHdZRFZSMGpCQmd3Rm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXFlSEY2TlRCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXhMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBSVFJbVpweEJNNXNJdDJVSG1hckpRNXMzNEJEWHgvRWk1ZitpKy9PNmFlSUFpQTRqZVNhV3NPawoxNmNiS0VicFdwSWY0dmxMNDZ5bm1teWNmejNDdFVURERnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=]\n2020/11/07 05:19:05 [DEBUG] newEnrollmentResponse orderer1.walmart-net\n2020/11/07 05:19:05 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem\n2020/11/07 05:19:05 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer1s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer1 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer1 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:05 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:05 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/07 05:19:05 [DEBUG] Checking for enrollment\n2020/11/07 05:19:05 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}\n2020/11/07 05:19:05 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:05 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420460bd0 DummyKeystore:<nil>}\n2020/11/07 05:19:05 [INFO] TLS Enabled\n2020/11/07 05:19:05 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:05 [DEBUG] Client Cert File: \n2020/11/07 05:19:05 [DEBUG] Client Key File: \n2020/11/07 05:19:05 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:05 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}\n2020/11/07 05:19:05 [DEBUG] Entered runRegister\n2020/11/07 05:19:05 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}\n2020/11/07 05:19:05 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:05 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420460bd0 DummyKeystore:<nil>}\n2020/11/07 05:19:05 [INFO] TLS Enabled\n2020/11/07 05:19:05 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:05 [DEBUG] Client Cert File: \n2020/11/07 05:19:05 [DEBUG] Client Key File: \n2020/11/07 05:19:05 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:05 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/07 05:19:05 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:05 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/07 05:19:05 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/07 05:19:05 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:05 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/07 05:19:05 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:05 [DEBUG] Response body result: map[secret:User1@walmart-net-pw]\n2020/11/07 05:19:05 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/07 05:19:05 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/07 05:19:05 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml\n2020/11/07 05:19:05 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce810}\n2020/11/07 05:19:05 [DEBUG] Entered runEnroll\n2020/11/07 05:19:05 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:05 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce810}\n2020/11/07 05:19:05 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ce870 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:05 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203e26a0 DummyKeystore:<nil>}\n2020/11/07 05:19:05 [INFO] TLS Enabled\n2020/11/07 05:19:05 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:05 [DEBUG] Client Cert File: \n2020/11/07 05:19:05 [DEBUG] Client Key File: \n2020/11/07 05:19:05 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:05 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:05 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:05 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:05 [INFO] encoded CSR\n2020/11/07 05:19:05 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABBBdK7yrMfI/EFOgeuE7GdzH\\nOJGE1yWiOlm36yUx/xIxr9QBzPhmG4shGVgk/QZ8OAX+IMFS/n/tGZ3OrQrn2bCg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhAOCHoXLo8iHV7twUVbeeCWGA3vgv\\nXlArQlbht1gT9IxgAiAORjKbN0mZ2RNuW5az1M+suhQ9JHpKhC0M/3zBz3UHPQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:06 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:06 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVUkwweWd1RXNCd1lBRzBUSTRKN0tQSEhpSXNvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFRUYwcnZLc3g4ajhRVTZCNjRUc1ozTWM0a1lUWEphSTZXYmZySlRIL0VqR3YKMUFITStHWWJpeUVaV0NUOUJudzRCZjRnd1ZMK2YrMFpuYzZ0Q3VmWnNLT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbFY1NjBYd0dYMjhEdXFmV2NMQStuNmc0CkJGSXdId1lEVlIwakJCZ3dGb0FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKTmprTnRtWmcrR3FLd3R1bFZzTmFtTjYyS2hFTUFYZ3lhM1kwdzQxSmhzY0NJRFY5dnBpMGRGWkc5bUljdjUyZgpwL25haGhqQ3lhN29XaHllTWRFeFZueE0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:06 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/07 05:19:06 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/07 05:19:06 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/07 05:19:06 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:06 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a6c0}\n2020/11/07 05:19:06 [DEBUG] Entered runEnroll\n2020/11/07 05:19:06 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:06 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a6c0}\n2020/11/07 05:19:06 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:06 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b7d00 DummyKeystore:<nil>}\n2020/11/07 05:19:06 [INFO] TLS Enabled\n2020/11/07 05:19:06 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:06 [DEBUG] Client Cert File: \n2020/11/07 05:19:06 [DEBUG] Client Key File: \n2020/11/07 05:19:06 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:06 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:06 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:06 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:06 [INFO] encoded CSR\n2020/11/07 05:19:06 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBOXkAXDO1EIux2ancVOoPmJQ9Xx1yc6+67+UW/QsI/BBaoLWAbzhPh5pr91KIwij\\nZxNxnwUGxx8m6S1MKGPpKC+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhAPuF\\nZ/g8UEl2y4J5UnGEGu7xXT3ARemiEBiPGXhyPeocAiBfcHzo0kBFIbDir18/vOku\\n/9HV/dFC8ET5sdZKtZexrQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:06 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:06 [DEBUG] Response body result: map[ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVT1hKc1g4Z2I5UVVFM2MwTEZYejl2b2xNVEs4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFNWVRQmNNN1VRaTdIWnFkeFU2ZytZbEQxZkhYSnpyN3J2NVJiOUN3ajhFRnEKZ3RZQnZPRStIbW12M1VvakNLTm5FM0dmQlFiSEh5YnBMVXdvWStrb0w2T0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVSEFPbDRuN2k0N1FvVlhjRlFVU0FUTmFJTXZVd0h3WURWUjBqQkJnd0ZvQVUKL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXNrOTRVYWdhWFhXbDZUZEluTAplQ2xkSmRmVlB1REJBL2lEYnNUclNrNmRBaUJtREl4Y05QeDAzNXdwSk9ucHBvbDZFOWM1MmR1V3ZGOFBpcTdWCjRNQ1BTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K]\n2020/11/07 05:19:06 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/07 05:19:06 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/07 05:19:06 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/b2841412cf1b2d21045947faa306f4e7211fb8cdb95859c7b41da22228a8b8a9_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer1.walmart-net",
        "+ CSR_HOSTS=orderer1.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:04 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:04 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:04 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:04 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc5d0}",
        "2020/11/07 05:19:04 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200bc630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:04 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395390 DummyKeystore:<nil>}",
        "2020/11/07 05:19:04 [INFO] TLS Enabled",
        "2020/11/07 05:19:04 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:04 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:04 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:04 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:04 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc5d0}",
        "2020/11/07 05:19:04 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:04 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200bc5d0}",
        "2020/11/07 05:19:04 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200bc630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:04 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395390 DummyKeystore:<nil>}",
        "2020/11/07 05:19:04 [INFO] TLS Enabled",
        "2020/11/07 05:19:04 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:04 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:04 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:04 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:04 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/07 05:19:04 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:04 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/07 05:19:04 [DEBUG] Register { Name:orderer1.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/07 05:19:04 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:04 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer1.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer1.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/07 05:19:04 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:04 [DEBUG] Response body result: map[secret:orderer1.walmart-net-pw]",
        "2020/11/07 05:19:04 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:04 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:04 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8600}",
        "2020/11/07 05:19:04 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:04 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:04 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b8600}",
        "2020/11/07 05:19:04 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b8660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:04 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bd2a0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:04 [INFO] TLS Enabled",
        "2020/11/07 05:19:04 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:04 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:04 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:04 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:04 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:04 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:04 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:04 [INFO] encoded CSR",
        "2020/11/07 05:19:04 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASbIihh9J6uaLAeMFcv\\nT3+N5THDcSJVECrYzriA6DHdEfDGS1tsDoIj79L4ajpVENcPaXYbdIc1MaaXSWz6\\nsx3moF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEA+gauFzRNBUydsNi4Y38dmhqhpSABc7pX\\nIH14C6U4QS4CIC0dOggOtZU89GF3nTndJuyME9pulhM01542nKRXdcX0\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:04 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:04 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVRmNiY1hYSkNkTmRXaGVkek5hOTRmeDJ5TE9Zd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRW15SW9ZZlNlcm1pd0hqQlhMMDkvamVVeHczRWlWUkFxMk02NGdPZ3gKM1JId3hrdGJiQTZDSSsvUytHbzZWUkRYRDJsMkczU0hOVEdtbDBscytyTWQ1cU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWZTV051RThZQ1JTN2hCdXFXcDVkdmtHVlozZ3dId1lEVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUhTZmE0a3VCWkg1bHFtdXRsUjdOeFMwCkVKREpMREJGUVZveUJMckNmaDRoQWlCQ0lCcmxReXhiTVZMUndsaHRGeUVUY0w2ZXJLenJITStYWDRpTW5nTHYKK3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ]]",
        "2020/11/07 05:19:04 [DEBUG] newEnrollmentResponse orderer1.walmart-net",
        "2020/11/07 05:19:04 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/07 05:19:04 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/45cea45a496eb39cdf27954c5d40fedd7ddbd6e35f1555b38d5e6ab4bc87017d_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:05 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:05 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce6c0}",
        "2020/11/07 05:19:05 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:05 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:05 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce6c0}",
        "2020/11/07 05:19:05 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ce720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:05 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203d1a80 DummyKeystore:<nil>}",
        "2020/11/07 05:19:05 [INFO] TLS Enabled",
        "2020/11/07 05:19:05 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:05 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:05 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:05 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:05 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:05 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:05 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:05 [INFO] encoded CSR",
        "2020/11/07 05:19:05 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLC4eNWag8alSH+BMVL4\\nFd4r0Jfd8qYgUkQ3FG0iV33em8K8sXs438E6Q5qbh5r/aGcKGTj5LJNuAYM3aY0o\\ncZOgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhANur0/p56LDpoim+Rqj6uQLy\\ntxGrWOIizIxx63k/AbtKAiAT0sdovcTbD1UKzWHNVqW0bwKo+Wpn7HeNcdezJubB\\nEg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:05 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:05 [DEBUG] Response body result: map[ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVVEhGVE1heFBodWIyYk45TWhtbFZLeUFBdUNBd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRXNMaDQxWnFEeHFWSWY0RXhVdmdWM2l2UWw5M3lwaUJTUkRjVWJTSlgKZmQ2YndyeXhlempmd1RwRG1wdUhtdjlvWndvWk9Qa3NrMjRCZ3pkcGpTaHhrNk9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVhZYXk0SUpVSnVvZ24xY283ckFaClBCWDhIRGN3SHdZRFZSMGpCQmd3Rm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXFlSEY2TlRCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXhMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBSVFJbVpweEJNNXNJdDJVSG1hckpRNXMzNEJEWHgvRWk1ZitpKy9PNmFlSUFpQTRqZVNhV3NPawoxNmNiS0VicFdwSWY0dmxMNDZ5bm1teWNmejNDdFVURERnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=]",
        "2020/11/07 05:19:05 [DEBUG] newEnrollmentResponse orderer1.walmart-net",
        "2020/11/07 05:19:05 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem",
        "2020/11/07 05:19:05 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer1s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer1 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer1 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:05 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:05 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:05 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:05 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}",
        "2020/11/07 05:19:05 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:05 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420460bd0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:05 [INFO] TLS Enabled",
        "2020/11/07 05:19:05 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:05 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:05 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:05 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:05 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}",
        "2020/11/07 05:19:05 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:05 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420380510}",
        "2020/11/07 05:19:05 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420380570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:05 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420460bd0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:05 [INFO] TLS Enabled",
        "2020/11/07 05:19:05 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:05 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:05 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:05 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:05 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/07 05:19:05 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:05 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/07 05:19:05 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/07 05:19:05 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:05 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/07 05:19:05 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:05 [DEBUG] Response body result: map[secret:User1@walmart-net-pw]",
        "2020/11/07 05:19:05 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/07 05:19:05 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/07 05:19:05 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:05 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce810}",
        "2020/11/07 05:19:05 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:05 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:05 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ce810}",
        "2020/11/07 05:19:05 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ce870 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:05 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203e26a0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:05 [INFO] TLS Enabled",
        "2020/11/07 05:19:05 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:05 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:05 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:05 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:05 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:05 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:05 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:05 [INFO] encoded CSR",
        "2020/11/07 05:19:05 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABBBdK7yrMfI/EFOgeuE7GdzH\\nOJGE1yWiOlm36yUx/xIxr9QBzPhmG4shGVgk/QZ8OAX+IMFS/n/tGZ3OrQrn2bCg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhAOCHoXLo8iHV7twUVbeeCWGA3vgv\\nXlArQlbht1gT9IxgAiAORjKbN0mZ2RNuW5az1M+suhQ9JHpKhC0M/3zBz3UHPQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:06 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:06 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVUkwweWd1RXNCd1lBRzBUSTRKN0tQSEhpSXNvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFRUYwcnZLc3g4ajhRVTZCNjRUc1ozTWM0a1lUWEphSTZXYmZySlRIL0VqR3YKMUFITStHWWJpeUVaV0NUOUJudzRCZjRnd1ZMK2YrMFpuYzZ0Q3VmWnNLT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbFY1NjBYd0dYMjhEdXFmV2NMQStuNmc0CkJGSXdId1lEVlIwakJCZ3dGb0FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKTmprTnRtWmcrR3FLd3R1bFZzTmFtTjYyS2hFTUFYZ3lhM1kwdzQxSmhzY0NJRFY5dnBpMGRGWkc5bUljdjUyZgpwL25haGhqQ3lhN29XaHllTWRFeFZueE0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:06 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/07 05:19:06 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/07 05:19:06 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/07 05:19:06 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:06 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a6c0}",
        "2020/11/07 05:19:06 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:06 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:06 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a6c0}",
        "2020/11/07 05:19:06 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:06 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b7d00 DummyKeystore:<nil>}",
        "2020/11/07 05:19:06 [INFO] TLS Enabled",
        "2020/11/07 05:19:06 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:06 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:06 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:06 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:06 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:06 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:06 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:06 [INFO] encoded CSR",
        "2020/11/07 05:19:06 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBOXkAXDO1EIux2ancVOoPmJQ9Xx1yc6+67+UW/QsI/BBaoLWAbzhPh5pr91KIwij\\nZxNxnwUGxx8m6S1MKGPpKC+gNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhAPuF\\nZ/g8UEl2y4J5UnGEGu7xXT3ARemiEBiPGXhyPeocAiBfcHzo0kBFIbDir18/vOku\\n/9HV/dFC8ET5sdZKtZexrQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:06 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:06 [DEBUG] Response body result: map[ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVT1hKc1g4Z2I5UVVFM2MwTEZYejl2b2xNVEs4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFNWVRQmNNN1VRaTdIWnFkeFU2ZytZbEQxZkhYSnpyN3J2NVJiOUN3ajhFRnEKZ3RZQnZPRStIbW12M1VvakNLTm5FM0dmQlFiSEh5YnBMVXdvWStrb0w2T0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVSEFPbDRuN2k0N1FvVlhjRlFVU0FUTmFJTXZVd0h3WURWUjBqQkJnd0ZvQVUKL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXNrOTRVYWdhWFhXbDZUZEluTAplQ2xkSmRmVlB1REJBL2lEYnNUclNrNmRBaUJtREl4Y05QeDAzNXdwSk9ucHBvbDZFOWM1MmR1V3ZGOFBpcTdWCjRNQ1BTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K]",
        "2020/11/07 05:19:06 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/07 05:19:06 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/07 05:19:06 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/b2841412cf1b2d21045947faa306f4e7211fb8cdb95859c7b41da22228a8b8a9_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer1.walmart-net-pw\nPassword: User1@walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer1.walmart-net-pw",
        "Password: User1@walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726346.3754838-12840-17457464158728 `" && echo ansible-tmp-1604726346.3754838-12840-17457464158728="` echo /root/.ansible/tmp/ansible-tmp-1604726346.3754838-12840-17457464158728 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpyou4825x TO /root/.ansible/tmp/ansible-tmp-1604726346.3754838-12840-17457464158728/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726346.3754838-12840-17457464158728/ /root/.ansible/tmp/ansible-tmp-1604726346.3754838-12840-17457464158728/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726346.3754838-12840-17457464158728/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726346.3754838-12840-17457464158728/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.701050",
    "end": "2020-11-07 05:19:07.207382",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:06.506332",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726347.2851305-12880-258776683035046 `" && echo ansible-tmp-1604726347.2851305-12880-258776683035046="` echo /root/.ansible/tmp/ansible-tmp-1604726347.2851305-12880-258776683035046 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpvuk31nai TO /root/.ansible/tmp/ansible-tmp-1604726347.2851305-12880-258776683035046/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726347.2851305-12880-258776683035046/ /root/.ansible/tmp/ansible-tmp-1604726347.2851305-12880-258776683035046/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726347.2851305-12880-258776683035046/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726347.2851305-12880-258776683035046/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.098402",
    "end": "2020-11-07 05:19:07.513360",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:07.414958",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726347.5807202-12933-33873670072011 `" && echo ansible-tmp-1604726347.5807202-12933-33873670072011="` echo /root/.ansible/tmp/ansible-tmp-1604726347.5807202-12933-33873670072011 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprkat9oko TO /root/.ansible/tmp/ansible-tmp-1604726347.5807202-12933-33873670072011/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726347.5807202-12933-33873670072011/ /root/.ansible/tmp/ansible-tmp-1604726347.5807202-12933-33873670072011/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726347.5807202-12933-33873670072011/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726347.5807202-12933-33873670072011/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer1-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5RENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9EUTVXaGNOTWpNd09EQXpNRGd5Ck9EUTVXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TVM1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFkCmFncTQ3ZjdueVp6eHZRVnM5UjRoV0VQeHVpZk1HZEttRVFveW52NVUrWDNlRndLYytQSkZPekJKNnlQMVBlRXIKbENGWHR2ZmxTYzYzb1dXOHpqMGhvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVVJqNWFNMDRUd3dCSk43SG9oWjhpbmpQcDdWNHdDZ1lJS29aSXpqMEVBd0lEClJ3QXdSQUlnUVVtNmRUNG41VlErT0I3TXMxckFtNVV6ZzNwS1hzNmlicnBJbUVTWkU2OENJQWw2d3I4enUrMFEKT011VTBTREZVMjhKamZjSnFQb1hBLzc3ZFlTRHhHNWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjhEQ0NBWmFnQXdJQkFnSVVNemhzd2VRL1l4R1RBbHFkUDFpdmtNWXg4NzB3Q2dZSUtvWkl6ajBFQXdJdwpWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEVlFRRERBcGpZUzUzWVd4dFlYSjBNQjRYRFRJd01URXcKTmpBNE1Ua3hObG9YRFRJek1EZ3lOekE0TVRreE5sb3dWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTQpCa3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEClZRUUREQXBqWVM1M1lXeHRZWEowTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFeG9JdDhlWisKOVhHQ0M3VzdMbEdVK2lVUTV2bmFxem1PczF0Snc2anZMYm40ZDlLTk56NHVuclg1LzViM3E0WWtMeEpZT3poTQpYYzd3N3JwbXFLV0VzcU5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBYVl3CkhRWURWUjBPQkJZRUZKNGlUblB4dk1wbVNLSXFkN2ZmaG5tQzhNOEFNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUMKSVFEZ3dQZlFZTVBDYjJiaXdma09UNVZkVnVFUkh2SWdidGxrdHpWVkZCTjl0Z0lnTmw0T3AyVEdIT1kwcXRoRAp2dENDMUNvMGhEbHZKTGVyYUxwYlYxdGtHVGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVjRXFDbXgycWJFcnQyZmd0ODZhR2ZGWVdZcGx2Z2pQK00yREpqL2pwdnlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSFdvS3VPMys1OG1jOGIwRmJQVWVJVmhEOGJvbnpCblNwaEVLTXA3K1ZQbDkzaGNDblBqeQpSVHN3U2VzajlUM2hLNVFoVjdiMzVVbk90NkZsdk00OUlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:28:49Z",
                "name": "orderer1-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408734",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer1-walmart-net-ambassador-certs",
                "uid": "a5a7499f-2fa9-4ba5-9662-97fa6bef6281"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726348.194384-12961-237817139323128 `" && echo ansible-tmp-1604726348.194384-12961-237817139323128="` echo /root/.ansible/tmp/ansible-tmp-1604726348.194384-12961-237817139323128 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9gnm7bb2 TO /root/.ansible/tmp/ansible-tmp-1604726348.194384-12961-237817139323128/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726348.194384-12961-237817139323128/ /root/.ansible/tmp/ansible-tmp-1604726348.194384-12961-237817139323128/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726348.194384-12961-237817139323128/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726348.194384-12961-237817139323128/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
    "delta": "0:00:00.072362",
    "end": "2020-11-07 05:19:08.396817",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:08.324455",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726348.5617807-13002-187571963830453 `" && echo ansible-tmp-1604726348.5617807-13002-187571963830453="` echo /root/.ansible/tmp/ansible-tmp-1604726348.5617807-13002-187571963830453 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpu6sc95zw TO /root/.ansible/tmp/ansible-tmp-1604726348.5617807-13002-187571963830453/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726348.5617807-13002-187571963830453/ /root/.ansible/tmp/ansible-tmp-1604726348.5617807-13002-187571963830453/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726348.5617807-13002-187571963830453/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726348.5617807-13002-187571963830453/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
    "delta": "0:00:00.047203",
    "end": "2020-11-07 05:19:08.740418",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:08.693215",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726348.804319-13039-185937746315427 `" && echo ansible-tmp-1604726348.804319-13039-185937746315427="` echo /root/.ansible/tmp/ansible-tmp-1604726348.804319-13039-185937746315427 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0hcde4yz TO /root/.ansible/tmp/ansible-tmp-1604726348.804319-13039-185937746315427/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726348.804319-13039-185937746315427/ /root/.ansible/tmp/ansible-tmp-1604726348.804319-13039-185937746315427/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726348.804319-13039-185937746315427/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726348.804319-13039-185937746315427/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
    "delta": "0:00:00.052491",
    "end": "2020-11-07 05:19:08.993544",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:08.941053",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726349.1038685-13075-150247611172411 `" && echo ansible-tmp-1604726349.1038685-13075-150247611172411="` echo /root/.ansible/tmp/ansible-tmp-1604726349.1038685-13075-150247611172411 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpkn_etsdh TO /root/.ansible/tmp/ansible-tmp-1604726349.1038685-13075-150247611172411/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726349.1038685-13075-150247611172411/ /root/.ansible/tmp/ansible-tmp-1604726349.1038685-13075-150247611172411/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726349.1038685-13075-150247611172411/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726349.1038685-13075-150247611172411/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
    "delta": "0:00:00.063195",
    "end": "2020-11-07 05:19:09.304519",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:09.241324",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726349.4633982-13113-178393748139885 `" && echo ansible-tmp-1604726349.4633982-13113-178393748139885="` echo /root/.ansible/tmp/ansible-tmp-1604726349.4633982-13113-178393748139885 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpjwehr0yc TO /root/.ansible/tmp/ansible-tmp-1604726349.4633982-13113-178393748139885/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726349.4633982-13113-178393748139885/ /root/.ansible/tmp/ansible-tmp-1604726349.4633982-13113-178393748139885/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726349.4633982-13113-178393748139885/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726349.4633982-13113-178393748139885/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.397637",
    "end": "2020-11-07 05:19:11.036145",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:09.638508",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726351.1047275-13158-190776618655509 `" && echo ansible-tmp-1604726351.1047275-13158-190776618655509="` echo /root/.ansible/tmp/ansible-tmp-1604726351.1047275-13158-190776618655509 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqhw30w2z TO /root/.ansible/tmp/ansible-tmp-1604726351.1047275-13158-190776618655509/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726351.1047275-13158-190776618655509/ /root/.ansible/tmp/ansible-tmp-1604726351.1047275-13158-190776618655509/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726351.1047275-13158-190776618655509/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726351.1047275-13158-190776618655509/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726351.3175607-13184-144152095628985 `" && echo ansible-tmp-1604726351.3175607-13184-144152095628985="` echo /root/.ansible/tmp/ansible-tmp-1604726351.3175607-13184-144152095628985 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwum87x4o TO /root/.ansible/tmp/ansible-tmp-1604726351.3175607-13184-144152095628985/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726351.3175607-13184-144152095628985/ /root/.ansible/tmp/ansible-tmp-1604726351.3175607-13184-144152095628985/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726351.3175607-13184-144152095628985/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726351.3175607-13184-144152095628985/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer2.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer2.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer2.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer2.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726351.4959605-13184-249425770519249 `" && echo ansible-tmp-1604726351.4959605-13184-249425770519249="` echo /root/.ansible/tmp/ansible-tmp-1604726351.4959605-13184-249425770519249 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpyxi0bwad TO /root/.ansible/tmp/ansible-tmp-1604726351.4959605-13184-249425770519249/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726351.4959605-13184-249425770519249/ /root/.ansible/tmp/ansible-tmp-1604726351.4959605-13184-249425770519249/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726351.4959605-13184-249425770519249/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726351.4959605-13184-249425770519249/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726351.7520816-13234-111657697695462 `" && echo ansible-tmp-1604726351.7520816-13234-111657697695462="` echo /root/.ansible/tmp/ansible-tmp-1604726351.7520816-13234-111657697695462 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpiwc3xba9 TO /root/.ansible/tmp/ansible-tmp-1604726351.7520816-13234-111657697695462/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726351.7520816-13234-111657697695462/ /root/.ansible/tmp/ansible-tmp-1604726351.7520816-13234-111657697695462/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726351.7520816-13234-111657697695462/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726351.7520816-13234-111657697695462/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.823759",
    "end": "2020-11-07 05:19:15.708388",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:11.884629",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726355.7798934-13284-141296731080273 `" && echo ansible-tmp-1604726355.7798934-13284-141296731080273="` echo /root/.ansible/tmp/ansible-tmp-1604726355.7798934-13284-141296731080273 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpjdfwabzq TO /root/.ansible/tmp/ansible-tmp-1604726355.7798934-13284-141296731080273/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726355.7798934-13284-141296731080273/ /root/.ansible/tmp/ansible-tmp-1604726355.7798934-13284-141296731080273/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726355.7798934-13284-141296731080273/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726355.7798934-13284-141296731080273/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.189036",
    "end": "2020-11-07 05:19:18.100717",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:15.911681",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer2.walmart-net\n+ CSR_HOSTS=orderer2.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:16 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:16 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/07 05:19:16 [DEBUG] Checking for enrollment\n2020/11/07 05:19:16 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c05d0}\n2020/11/07 05:19:16 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:16 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395100 DummyKeystore:<nil>}\n2020/11/07 05:19:16 [INFO] TLS Enabled\n2020/11/07 05:19:16 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:16 [DEBUG] Client Cert File: \n2020/11/07 05:19:16 [DEBUG] Client Key File: \n2020/11/07 05:19:16 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:16 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c05d0}\n2020/11/07 05:19:16 [DEBUG] Entered runRegister\n2020/11/07 05:19:16 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c05d0}\n2020/11/07 05:19:16 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:16 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395100 DummyKeystore:<nil>}\n2020/11/07 05:19:16 [INFO] TLS Enabled\n2020/11/07 05:19:16 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:16 [DEBUG] Client Cert File: \n2020/11/07 05:19:16 [DEBUG] Client Key File: \n2020/11/07 05:19:16 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:16 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/07 05:19:16 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:16 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/07 05:19:16 [DEBUG] Register { Name:orderer2.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/07 05:19:16 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:16 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer2.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer2.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/07 05:19:16 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:16 [DEBUG] Response body result: map[secret:orderer2.walmart-net-pw]\n2020/11/07 05:19:16 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:16 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:16 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4690}\n2020/11/07 05:19:16 [DEBUG] Entered runEnroll\n2020/11/07 05:19:16 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:16 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4690}\n2020/11/07 05:19:16 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c46f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:16 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397580 DummyKeystore:<nil>}\n2020/11/07 05:19:16 [INFO] TLS Enabled\n2020/11/07 05:19:16 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:16 [DEBUG] Client Cert File: \n2020/11/07 05:19:16 [DEBUG] Client Key File: \n2020/11/07 05:19:16 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:16 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:16 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:16 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:16 [INFO] encoded CSR\n2020/11/07 05:19:16 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdTCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASDcX5FDA7laaDB8YWk\\nPe2Bhirt5ITo54i5x81tXXdnm+SyyVrcFSWXTSBj4Ss3niQNXAEGim7xYuYC+6Ub\\no0F2oF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNHADBEAiBtAaOYFphpXboLwVp0AIYLWQ0ihLkWJx84\\nV1KIyb/NtgIgKpBN1T+uWd3IUAUWTQEfipLBrbJ5BLNvawIcAkGS3D8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:16 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:16 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVQW1BLytCNmF4b25tRldURUN1VVpJMml4UGxVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWczRitSUXdPNVdtZ3dmR0ZwRDN0Z1lZcTdlU0U2T2VJdWNmTmJWMTMKWjV2a3NzbGEzQlVsbDAwZ1krRXJONTRrRFZ3QkJvcHU4V0xtQXZ1bEc2TkJkcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVW03bGNuY0x1SHdISDZ5RFJISXNFU1NLRTZFY3dId1lEVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUFKcHRPKzRzT3N5ay93WGdsZFNUbElDCkc4TEZLQmlDZzE0dGJtcUZ6V2l5QWlBNnN1K2t3WWNPM2p1L2ZBaTNKWTNaaHZER05EbkxLSlF5R1lsQUg5TmsKZHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:16 [DEBUG] newEnrollmentResponse orderer2.walmart-net\n2020/11/07 05:19:16 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/07 05:19:16 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/08fba398049919732b6b8348e83f53f00e3179db855c41fcc0c2f52b1ac80b53_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:16 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:16 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188750}\n2020/11/07 05:19:16 [DEBUG] Entered runEnroll\n2020/11/07 05:19:16 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:16 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188750}\n2020/11/07 05:19:16 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201887b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:16 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c4590 DummyKeystore:<nil>}\n2020/11/07 05:19:16 [INFO] TLS Enabled\n2020/11/07 05:19:16 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:16 [DEBUG] Client Cert File: \n2020/11/07 05:19:16 [DEBUG] Client Key File: \n2020/11/07 05:19:16 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:16 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:16 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:16 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:16 [INFO] encoded CSR\n2020/11/07 05:19:16 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABIKseUXfDz8wG2x9eXrQ\\n5mxDRzKGhQ4qkomEgj76i8uHQs60GMCph3qZy4HnNLLkedT7ksuOWzm8k/cAVFd5\\nH4GgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhAJyf9wgXJLtrwuavXRXd3kgB\\naASclTIxAd0DFzhwQnevAiBPAvSSGYEdHsI5MDOZMbVPJ8ZARjRw9MycYSTXBgdQ\\nPw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:17 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:17 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0RENDQWx1Z0F3SUJBZ0lVYjNySDdidXBwVlNPazg5OFJPU0NIUi9mRlg0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWdxeDVSZDhQUHpBYmJIMTVldERtYkVOSE1vYUZEaXFTaVlTQ1B2cUwKeTRkQ3pyUVl3S21IZXBuTGdlYzBzdVI1MVB1U3k0NWJPYnlUOXdCVVYza2ZnYU9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVU5CdjBYa2h1cDJDUFU2dWdpcHo1CnZIR0owOTh3SHdZRFZSMGpCQmd3Rm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXFlSEY2TlRCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXlMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKUndBd1JBSWdJL25HVUpPZ1RFUEdLRUQzZUpHanF3ZDlsbXN6TlE3b1VwNi9ieUR0Ym9RQ0lCdTlHS3NMMmpjdApySnU1YkYrVC9GdUd4NnBBWThNT3BrdndTTUdFM0I1bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:17 [DEBUG] newEnrollmentResponse orderer2.walmart-net\n2020/11/07 05:19:17 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem\n2020/11/07 05:19:17 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer2s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer2 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer2 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:17 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:17 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/07 05:19:17 [DEBUG] Checking for enrollment\n2020/11/07 05:19:17 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}\n2020/11/07 05:19:17 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:17 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b7780 DummyKeystore:<nil>}\n2020/11/07 05:19:17 [INFO] TLS Enabled\n2020/11/07 05:19:17 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:17 [DEBUG] Client Cert File: \n2020/11/07 05:19:17 [DEBUG] Client Key File: \n2020/11/07 05:19:17 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:17 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}\n2020/11/07 05:19:17 [DEBUG] Entered runRegister\n2020/11/07 05:19:17 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}\n2020/11/07 05:19:17 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:17 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b7780 DummyKeystore:<nil>}\n2020/11/07 05:19:17 [INFO] TLS Enabled\n2020/11/07 05:19:17 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:17 [DEBUG] Client Cert File: \n2020/11/07 05:19:17 [DEBUG] Client Key File: \n2020/11/07 05:19:17 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:17 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/07 05:19:17 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:17 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/07 05:19:17 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/07 05:19:17 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:17 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/07 05:19:17 [DEBUG] Received response\nstatusCode=500 (500 Internal Server Error)\nError: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered\n\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/07 05:19:17 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/07 05:19:17 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205f65d0}\n2020/11/07 05:19:17 [DEBUG] Entered runEnroll\n2020/11/07 05:19:17 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:17 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205f65d0}\n2020/11/07 05:19:17 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205f6630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:17 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420192850 DummyKeystore:<nil>}\n2020/11/07 05:19:17 [INFO] TLS Enabled\n2020/11/07 05:19:17 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:17 [DEBUG] Client Cert File: \n2020/11/07 05:19:17 [DEBUG] Client Key File: \n2020/11/07 05:19:17 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:17 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:17 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:17 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:17 [INFO] encoded CSR\n2020/11/07 05:19:17 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEgQrXrvMUwuKiJmaAGS3H0t\\nmKOEb3YL/mSIzeOzh3j9LDtfMbt/GDzpsszr1vvG7grLkrp78DvNx/IaLg3YJz2g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgccvwDEZuyuYOUqRmTDo74t0hg0ZA\\nMbHA7cXj1e0W3D0CIH7MZvPRnCrvrjcu37KighWRxcYkbVIGBeiLp+KeVs6v\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:17 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:17 [DEBUG] Response body result: map[ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVRGJnYkVUSGVUWTIwNDdRVHVlSmEzdS9FTlRjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFU0JDdGV1OHhUQzRxSW1ab0FaTGNmUzJZbzRSdmRnditaSWpONDdPSGVQMHMKTzE4eHUzOFlQT215ek92Vys4YnVDc3VTdW52d084M0g4aG91RGRnblBhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVc05oblhTbTRXV3FpZWlzUlh3ZHBuSmNvCmQxUXdId1lEVlIwakJCZ3dGb0FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKZkxSMnErZ2lpQ09KNmZqOTBPZkcwOHRTek56a1BkYVlYcm11ZjRqc0REQUNJQTEyQzZGSUVYY2cyc2ZYQWd6VwpmWlNwY3FYWHo4MEtDQ1JtblVxVkRUamcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=]\n2020/11/07 05:19:17 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/07 05:19:17 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/07 05:19:17 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/07 05:19:17 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:17 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c660}\n2020/11/07 05:19:17 [DEBUG] Entered runEnroll\n2020/11/07 05:19:17 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:17 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c660}\n2020/11/07 05:19:17 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:17 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42045e050 DummyKeystore:<nil>}\n2020/11/07 05:19:17 [INFO] TLS Enabled\n2020/11/07 05:19:17 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:17 [DEBUG] Client Cert File: \n2020/11/07 05:19:17 [DEBUG] Client Key File: \n2020/11/07 05:19:17 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:17 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:17 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:17 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:17 [INFO] encoded CSR\n2020/11/07 05:19:17 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBJfmc/Skw0QLT2dHyORYYmxYThb9Zjgm2Kfk0wYPOZfqrJhK6SfuLiO0VGTFq86+\\n6XolkbDJwhDAGIfIA8OY6oWgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgR3ui\\nMfjoVhyw2lW7LbfRtc0+jarRbd1mUKZXum2MnycCIEL1KiLytBaRAQ6XhxlNzct9\\nlhPf6wNkhPjBCX0Ph6dB\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:18 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:18 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVSFdtV21PMThtK01hY3NHMzIyWUlqRm0vNXFRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbCtaejlLVERSQXRQWjBmSTVGaGliRmhPRnYxbU9DYllwK1RUQmc4NWwrcXMKbUVycEorNHVJN1JVWk1XcnpyN3BlaVdSc01uQ0VNQVloOGdEdzVqcWhhT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVVVh0TG5qYVVuaXl3bmgrQ2IxSnlNUVlmTjZvd0h3WURWUjBqQkJnd0ZvQVUKL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBUGdVM1JOZG14NWsxNE13N0lnVwozNDhHV1B5UzQ2aXJQdWxLSmoxS3h1KzFBaUJUQ0k4UDRxZTlKQUUyTEUyMU5SL0lIVG1RYWVHSkhYUGxDdndOClVUUVdlZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:18 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/07 05:19:18 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/07 05:19:18 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/b2841412cf1b2d21045947faa306f4e7211fb8cdb95859c7b41da22228a8b8a9_sk /root/ca-tools/walmart/client1/tls/keystore/ef4751590df80e9cb5ddffda7355025c8549602911548d82b044b98a369b667e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer2.walmart-net",
        "+ CSR_HOSTS=orderer2.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:16 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:16 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:16 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:16 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c05d0}",
        "2020/11/07 05:19:16 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:16 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395100 DummyKeystore:<nil>}",
        "2020/11/07 05:19:16 [INFO] TLS Enabled",
        "2020/11/07 05:19:16 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:16 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:16 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:16 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:16 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c05d0}",
        "2020/11/07 05:19:16 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:16 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c05d0}",
        "2020/11/07 05:19:16 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:16 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420395100 DummyKeystore:<nil>}",
        "2020/11/07 05:19:16 [INFO] TLS Enabled",
        "2020/11/07 05:19:16 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:16 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:16 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:16 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:16 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/07 05:19:16 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:16 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/07 05:19:16 [DEBUG] Register { Name:orderer2.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/07 05:19:16 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:16 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer2.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer2.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/07 05:19:16 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:16 [DEBUG] Response body result: map[secret:orderer2.walmart-net-pw]",
        "2020/11/07 05:19:16 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:16 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:16 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4690}",
        "2020/11/07 05:19:16 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:16 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:16 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4690}",
        "2020/11/07 05:19:16 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c46f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:16 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397580 DummyKeystore:<nil>}",
        "2020/11/07 05:19:16 [INFO] TLS Enabled",
        "2020/11/07 05:19:16 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:16 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:16 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:16 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:16 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:16 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:16 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:16 [INFO] encoded CSR",
        "2020/11/07 05:19:16 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdTCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASDcX5FDA7laaDB8YWk\\nPe2Bhirt5ITo54i5x81tXXdnm+SyyVrcFSWXTSBj4Ss3niQNXAEGim7xYuYC+6Ub\\no0F2oF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNHADBEAiBtAaOYFphpXboLwVp0AIYLWQ0ihLkWJx84\\nV1KIyb/NtgIgKpBN1T+uWd3IUAUWTQEfipLBrbJ5BLNvawIcAkGS3D8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:16 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:16 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVQW1BLytCNmF4b25tRldURUN1VVpJMml4UGxVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWczRitSUXdPNVdtZ3dmR0ZwRDN0Z1lZcTdlU0U2T2VJdWNmTmJWMTMKWjV2a3NzbGEzQlVsbDAwZ1krRXJONTRrRFZ3QkJvcHU4V0xtQXZ1bEc2TkJkcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVW03bGNuY0x1SHdISDZ5RFJISXNFU1NLRTZFY3dId1lEVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUFKcHRPKzRzT3N5ay93WGdsZFNUbElDCkc4TEZLQmlDZzE0dGJtcUZ6V2l5QWlBNnN1K2t3WWNPM2p1L2ZBaTNKWTNaaHZER05EbkxLSlF5R1lsQUg5TmsKZHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:16 [DEBUG] newEnrollmentResponse orderer2.walmart-net",
        "2020/11/07 05:19:16 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/07 05:19:16 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/08fba398049919732b6b8348e83f53f00e3179db855c41fcc0c2f52b1ac80b53_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:16 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:16 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188750}",
        "2020/11/07 05:19:16 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:16 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:16 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420188750}",
        "2020/11/07 05:19:16 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201887b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:16 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c4590 DummyKeystore:<nil>}",
        "2020/11/07 05:19:16 [INFO] TLS Enabled",
        "2020/11/07 05:19:16 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:16 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:16 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:16 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:16 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:16 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:16 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:16 [INFO] encoded CSR",
        "2020/11/07 05:19:16 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABIKseUXfDz8wG2x9eXrQ\\n5mxDRzKGhQ4qkomEgj76i8uHQs60GMCph3qZy4HnNLLkedT7ksuOWzm8k/cAVFd5\\nH4GgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhAJyf9wgXJLtrwuavXRXd3kgB\\naASclTIxAd0DFzhwQnevAiBPAvSSGYEdHsI5MDOZMbVPJ8ZARjRw9MycYSTXBgdQ\\nPw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:17 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:17 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0RENDQWx1Z0F3SUJBZ0lVYjNySDdidXBwVlNPazg5OFJPU0NIUi9mRlg0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWdxeDVSZDhQUHpBYmJIMTVldERtYkVOSE1vYUZEaXFTaVlTQ1B2cUwKeTRkQ3pyUVl3S21IZXBuTGdlYzBzdVI1MVB1U3k0NWJPYnlUOXdCVVYza2ZnYU9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVU5CdjBYa2h1cDJDUFU2dWdpcHo1CnZIR0owOTh3SHdZRFZSMGpCQmd3Rm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXFlSEY2TlRCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXlMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKUndBd1JBSWdJL25HVUpPZ1RFUEdLRUQzZUpHanF3ZDlsbXN6TlE3b1VwNi9ieUR0Ym9RQ0lCdTlHS3NMMmpjdApySnU1YkYrVC9GdUd4NnBBWThNT3BrdndTTUdFM0I1bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:17 [DEBUG] newEnrollmentResponse orderer2.walmart-net",
        "2020/11/07 05:19:17 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem",
        "2020/11/07 05:19:17 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer2s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer2 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer2 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:17 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:17 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:17 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:17 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}",
        "2020/11/07 05:19:17 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:17 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b7780 DummyKeystore:<nil>}",
        "2020/11/07 05:19:17 [INFO] TLS Enabled",
        "2020/11/07 05:19:17 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:17 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:17 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:17 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:17 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}",
        "2020/11/07 05:19:17 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:17 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c630}",
        "2020/11/07 05:19:17 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:17 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b7780 DummyKeystore:<nil>}",
        "2020/11/07 05:19:17 [INFO] TLS Enabled",
        "2020/11/07 05:19:17 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:17 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:17 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:17 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:17 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/07 05:19:17 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:17 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/07 05:19:17 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/07 05:19:17 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:17 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/07 05:19:17 [DEBUG] Received response",
        "statusCode=500 (500 Internal Server Error)",
        "Error: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered",
        "",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/07 05:19:17 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/07 05:19:17 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205f65d0}",
        "2020/11/07 05:19:17 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:17 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:17 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205f65d0}",
        "2020/11/07 05:19:17 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205f6630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:17 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420192850 DummyKeystore:<nil>}",
        "2020/11/07 05:19:17 [INFO] TLS Enabled",
        "2020/11/07 05:19:17 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:17 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:17 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:17 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:17 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:17 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:17 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:17 [INFO] encoded CSR",
        "2020/11/07 05:19:17 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEgQrXrvMUwuKiJmaAGS3H0t\\nmKOEb3YL/mSIzeOzh3j9LDtfMbt/GDzpsszr1vvG7grLkrp78DvNx/IaLg3YJz2g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgccvwDEZuyuYOUqRmTDo74t0hg0ZA\\nMbHA7cXj1e0W3D0CIH7MZvPRnCrvrjcu37KighWRxcYkbVIGBeiLp+KeVs6v\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:17 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:17 [DEBUG] Response body result: map[ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVRGJnYkVUSGVUWTIwNDdRVHVlSmEzdS9FTlRjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFU0JDdGV1OHhUQzRxSW1ab0FaTGNmUzJZbzRSdmRnditaSWpONDdPSGVQMHMKTzE4eHUzOFlQT215ek92Vys4YnVDc3VTdW52d084M0g4aG91RGRnblBhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVc05oblhTbTRXV3FpZWlzUlh3ZHBuSmNvCmQxUXdId1lEVlIwakJCZ3dGb0FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKZkxSMnErZ2lpQ09KNmZqOTBPZkcwOHRTek56a1BkYVlYcm11ZjRqc0REQUNJQTEyQzZGSUVYY2cyc2ZYQWd6VwpmWlNwY3FYWHo4MEtDQ1JtblVxVkRUamcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=]",
        "2020/11/07 05:19:17 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/07 05:19:17 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/07 05:19:17 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/07 05:19:17 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:17 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c660}",
        "2020/11/07 05:19:17 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:17 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:17 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c660}",
        "2020/11/07 05:19:17 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:17 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42045e050 DummyKeystore:<nil>}",
        "2020/11/07 05:19:17 [INFO] TLS Enabled",
        "2020/11/07 05:19:17 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:17 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:17 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:17 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:17 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:17 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:17 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:17 [INFO] encoded CSR",
        "2020/11/07 05:19:17 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBJfmc/Skw0QLT2dHyORYYmxYThb9Zjgm2Kfk0wYPOZfqrJhK6SfuLiO0VGTFq86+\\n6XolkbDJwhDAGIfIA8OY6oWgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgR3ui\\nMfjoVhyw2lW7LbfRtc0+jarRbd1mUKZXum2MnycCIEL1KiLytBaRAQ6XhxlNzct9\\nlhPf6wNkhPjBCX0Ph6dB\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:18 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:18 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVSFdtV21PMThtK01hY3NHMzIyWUlqRm0vNXFRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbCtaejlLVERSQXRQWjBmSTVGaGliRmhPRnYxbU9DYllwK1RUQmc4NWwrcXMKbUVycEorNHVJN1JVWk1XcnpyN3BlaVdSc01uQ0VNQVloOGdEdzVqcWhhT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVVVh0TG5qYVVuaXl3bmgrQ2IxSnlNUVlmTjZvd0h3WURWUjBqQkJnd0ZvQVUKL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBUGdVM1JOZG14NWsxNE13N0lnVwozNDhHV1B5UzQ2aXJQdWxLSmoxS3h1KzFBaUJUQ0k4UDRxZTlKQUUyTEUyMU5SL0lIVG1RYWVHSkhYUGxDdndOClVUUVdlZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:18 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/07 05:19:18 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/07 05:19:18 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/b2841412cf1b2d21045947faa306f4e7211fb8cdb95859c7b41da22228a8b8a9_sk /root/ca-tools/walmart/client1/tls/keystore/ef4751590df80e9cb5ddffda7355025c8549602911548d82b044b98a369b667e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer2.walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer2.walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726358.1728518-13330-115235245131332 `" && echo ansible-tmp-1604726358.1728518-13330-115235245131332="` echo /root/.ansible/tmp/ansible-tmp-1604726358.1728518-13330-115235245131332 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpo7_4po1m TO /root/.ansible/tmp/ansible-tmp-1604726358.1728518-13330-115235245131332/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726358.1728518-13330-115235245131332/ /root/.ansible/tmp/ansible-tmp-1604726358.1728518-13330-115235245131332/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726358.1728518-13330-115235245131332/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726358.1728518-13330-115235245131332/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.756244",
    "end": "2020-11-07 05:19:19.059976",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:18.303732",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726359.1329796-13370-32187264872374 `" && echo ansible-tmp-1604726359.1329796-13370-32187264872374="` echo /root/.ansible/tmp/ansible-tmp-1604726359.1329796-13370-32187264872374 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpt1mi0jd5 TO /root/.ansible/tmp/ansible-tmp-1604726359.1329796-13370-32187264872374/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726359.1329796-13370-32187264872374/ /root/.ansible/tmp/ansible-tmp-1604726359.1329796-13370-32187264872374/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726359.1329796-13370-32187264872374/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726359.1329796-13370-32187264872374/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.127301",
    "end": "2020-11-07 05:19:19.396089",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:19.268788",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726359.46406-13422-176682502239172 `" && echo ansible-tmp-1604726359.46406-13422-176682502239172="` echo /root/.ansible/tmp/ansible-tmp-1604726359.46406-13422-176682502239172 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgpw8p1_r TO /root/.ansible/tmp/ansible-tmp-1604726359.46406-13422-176682502239172/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726359.46406-13422-176682502239172/ /root/.ansible/tmp/ansible-tmp-1604726359.46406-13422-176682502239172/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726359.46406-13422-176682502239172/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726359.46406-13422-176682502239172/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer2-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5VENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9UQXdXaGNOTWpNd09EQXpNRGd5Ck9UQXdXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TWk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRQCkVnSmR2S1BGc0RoNno2MitGKzB4Nk8wa3JlNXJmTE5Kb0ppSVNBamprU0dCQ2N6MWhOR1FuWHZvbU5iMnJacC8KcCtzMDBIWXI3bllHQmhDVHNsTXFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVU40a1J1cDBMNXlVNVNab1dMbVc3NkFpK0d4OHdDZ1lJS29aSXpqMEVBd0lEClNBQXdSUUloQUlQR1FpRWFEWkJJYnhxT0pBdWVNMTNqNkpENktlY1A0dXVSWEczTm1YVU9BaUI5WU5RR1pZOWQKSWp3bWZVdENrR3drNytCalNsSmVBWTlzalBWM2ZuZmJwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUY5SERaSWExVE5TZkY3bmVRYVdFTzkyOVNnMVBKUXl4YTUvVmJXTzV0ZGNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFenhJQ1hieWp4YkE0ZXMrdHZoZnRNZWp0SkszdWEzeXpTYUNZaUVnSTQ1RWhnUW5NOVlUUgprSjE3NkpqVzlxMmFmNmZyTk5CMksrNTJCZ1lRazdKVEtnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:00Z",
                "name": "orderer2-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408765",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer2-walmart-net-ambassador-certs",
                "uid": "3a84af21-a525-4755-8465-cda893746ea9"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726360.0830448-13450-192040998686613 `" && echo ansible-tmp-1604726360.0830448-13450-192040998686613="` echo /root/.ansible/tmp/ansible-tmp-1604726360.0830448-13450-192040998686613 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpkh975atb TO /root/.ansible/tmp/ansible-tmp-1604726360.0830448-13450-192040998686613/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726360.0830448-13450-192040998686613/ /root/.ansible/tmp/ansible-tmp-1604726360.0830448-13450-192040998686613/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726360.0830448-13450-192040998686613/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726360.0830448-13450-192040998686613/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
    "delta": "0:00:00.055840",
    "end": "2020-11-07 05:19:20.269966",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:20.214126",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726360.4334252-13491-129888890171454 `" && echo ansible-tmp-1604726360.4334252-13491-129888890171454="` echo /root/.ansible/tmp/ansible-tmp-1604726360.4334252-13491-129888890171454 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwtgcp1cw TO /root/.ansible/tmp/ansible-tmp-1604726360.4334252-13491-129888890171454/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726360.4334252-13491-129888890171454/ /root/.ansible/tmp/ansible-tmp-1604726360.4334252-13491-129888890171454/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726360.4334252-13491-129888890171454/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726360.4334252-13491-129888890171454/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
    "delta": "0:00:00.048640",
    "end": "2020-11-07 05:19:20.613677",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:20.565037",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726360.6773303-13529-209081803928605 `" && echo ansible-tmp-1604726360.6773303-13529-209081803928605="` echo /root/.ansible/tmp/ansible-tmp-1604726360.6773303-13529-209081803928605 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpi9lz8aqj TO /root/.ansible/tmp/ansible-tmp-1604726360.6773303-13529-209081803928605/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726360.6773303-13529-209081803928605/ /root/.ansible/tmp/ansible-tmp-1604726360.6773303-13529-209081803928605/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726360.6773303-13529-209081803928605/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726360.6773303-13529-209081803928605/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
    "delta": "0:00:00.058126",
    "end": "2020-11-07 05:19:20.868743",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:20.810617",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726360.9628367-13566-258813271973133 `" && echo ansible-tmp-1604726360.9628367-13566-258813271973133="` echo /root/.ansible/tmp/ansible-tmp-1604726360.9628367-13566-258813271973133 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpq0gg8yqv TO /root/.ansible/tmp/ansible-tmp-1604726360.9628367-13566-258813271973133/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726360.9628367-13566-258813271973133/ /root/.ansible/tmp/ansible-tmp-1604726360.9628367-13566-258813271973133/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726360.9628367-13566-258813271973133/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726360.9628367-13566-258813271973133/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
    "delta": "0:00:00.055285",
    "end": "2020-11-07 05:19:21.148412",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:21.093127",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726361.2851279-13605-4736973051483 `" && echo ansible-tmp-1604726361.2851279-13605-4736973051483="` echo /root/.ansible/tmp/ansible-tmp-1604726361.2851279-13605-4736973051483 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpm8p3stfq TO /root/.ansible/tmp/ansible-tmp-1604726361.2851279-13605-4736973051483/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726361.2851279-13605-4736973051483/ /root/.ansible/tmp/ansible-tmp-1604726361.2851279-13605-4736973051483/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726361.2851279-13605-4736973051483/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726361.2851279-13605-4736973051483/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.224249",
    "end": "2020-11-07 05:19:22.640804",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:21.416555",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726362.707132-13650-107231800667239 `" && echo ansible-tmp-1604726362.707132-13650-107231800667239="` echo /root/.ansible/tmp/ansible-tmp-1604726362.707132-13650-107231800667239 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpf2tdmx35 TO /root/.ansible/tmp/ansible-tmp-1604726362.707132-13650-107231800667239/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726362.707132-13650-107231800667239/ /root/.ansible/tmp/ansible-tmp-1604726362.707132-13650-107231800667239/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726362.707132-13650-107231800667239/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726362.707132-13650-107231800667239/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726362.913248-13676-253498306864688 `" && echo ansible-tmp-1604726362.913248-13676-253498306864688="` echo /root/.ansible/tmp/ansible-tmp-1604726362.913248-13676-253498306864688 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpiopiwa36 TO /root/.ansible/tmp/ansible-tmp-1604726362.913248-13676-253498306864688/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726362.913248-13676-253498306864688/ /root/.ansible/tmp/ansible-tmp-1604726362.913248-13676-253498306864688/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726362.913248-13676-253498306864688/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726362.913248-13676-253498306864688/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer3.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer3.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer3.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer3.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726363.0846367-13676-20691063045883 `" && echo ansible-tmp-1604726363.0846367-13676-20691063045883="` echo /root/.ansible/tmp/ansible-tmp-1604726363.0846367-13676-20691063045883 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfsteuh8r TO /root/.ansible/tmp/ansible-tmp-1604726363.0846367-13676-20691063045883/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726363.0846367-13676-20691063045883/ /root/.ansible/tmp/ansible-tmp-1604726363.0846367-13676-20691063045883/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726363.0846367-13676-20691063045883/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726363.0846367-13676-20691063045883/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726363.2911546-13726-184759718694833 `" && echo ansible-tmp-1604726363.2911546-13726-184759718694833="` echo /root/.ansible/tmp/ansible-tmp-1604726363.2911546-13726-184759718694833 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwir_6n4o TO /root/.ansible/tmp/ansible-tmp-1604726363.2911546-13726-184759718694833/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726363.2911546-13726-184759718694833/ /root/.ansible/tmp/ansible-tmp-1604726363.2911546-13726-184759718694833/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726363.2911546-13726-184759718694833/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726363.2911546-13726-184759718694833/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.795999",
    "end": "2020-11-07 05:19:27.217131",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:23.421132",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726367.286908-13777-260451279783591 `" && echo ansible-tmp-1604726367.286908-13777-260451279783591="` echo /root/.ansible/tmp/ansible-tmp-1604726367.286908-13777-260451279783591 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpvvmoby0w TO /root/.ansible/tmp/ansible-tmp-1604726367.286908-13777-260451279783591/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726367.286908-13777-260451279783591/ /root/.ansible/tmp/ansible-tmp-1604726367.286908-13777-260451279783591/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726367.286908-13777-260451279783591/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726367.286908-13777-260451279783591/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.176237",
    "end": "2020-11-07 05:19:29.594634",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:27.418397",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer3.walmart-net\n+ CSR_HOSTS=orderer3.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:28 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:28 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/07 05:19:28 [DEBUG] Checking for enrollment\n2020/11/07 05:19:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}\n2020/11/07 05:19:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fef0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ead0 DummyKeystore:<nil>}\n2020/11/07 05:19:28 [INFO] TLS Enabled\n2020/11/07 05:19:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:28 [DEBUG] Client Cert File: \n2020/11/07 05:19:28 [DEBUG] Client Key File: \n2020/11/07 05:19:28 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:28 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}\n2020/11/07 05:19:28 [DEBUG] Entered runRegister\n2020/11/07 05:19:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}\n2020/11/07 05:19:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fef0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ead0 DummyKeystore:<nil>}\n2020/11/07 05:19:28 [INFO] TLS Enabled\n2020/11/07 05:19:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:28 [DEBUG] Client Cert File: \n2020/11/07 05:19:28 [DEBUG] Client Key File: \n2020/11/07 05:19:28 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:28 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/07 05:19:28 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:28 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/07 05:19:28 [DEBUG] Register { Name:orderer3.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/07 05:19:28 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:28 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer3.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer3.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/07 05:19:28 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:28 [DEBUG] Response body result: map[secret:orderer3.walmart-net-pw]\n2020/11/07 05:19:28 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:28 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:28 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392600}\n2020/11/07 05:19:28 [DEBUG] Entered runEnroll\n2020/11/07 05:19:28 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392600}\n2020/11/07 05:19:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420392660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b170 DummyKeystore:<nil>}\n2020/11/07 05:19:28 [INFO] TLS Enabled\n2020/11/07 05:19:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:28 [DEBUG] Client Cert File: \n2020/11/07 05:19:28 [DEBUG] Client Key File: \n2020/11/07 05:19:28 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:28 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:28 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:28 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:28 [INFO] encoded CSR\n2020/11/07 05:19:28 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdTCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQT3gAqtM6jNCiANsaR\\nU/oLfT1rvxDu+XhtxkLnATNi+O4aKDWomjBPlfM5AJF4WGwy6L1WZ0MTEMDpVtnw\\nRKvIoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNHADBEAiA28ru2iKYlYhHJv44gnpafW+HS6fbEj5UU\\nBJAeiAPinwIgFtBxmngLK1RHuAFbgIXR3ugeAq1x2c/8NZTnRR7dDN4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:28 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:28 [DEBUG] Response body result: map[ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVUHZVRk1JN0dLdmVwaFBQWDQ1T1F0dVJ4dGlFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUU5NEFLclRPb3pRb2dEYkdrVlA2QzMwOWE3OFE3dmw0YmNaQzV3RXoKWXZqdUdpZzFxSm93VDVYek9RQ1JlRmhzTXVpOVZtZERFeERBNlZiWjhFU3J5S09DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUpabnpJWmw4WXNrRm9HNmFTTG5TSGpGb09KNHdId1lEVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUJOd2ZXT1o1bjAvMlM2YTBzQmRpN0NxCjlFYnpNQ0xIUndKWFJtQVBIeVlMQWlCTlI4a1VBVnFYZGpBYVhYZG9tT2pIcENtUE85QzkrVkE5NTgvMENYWUYKZWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]\n2020/11/07 05:19:28 [DEBUG] newEnrollmentResponse orderer3.walmart-net\n2020/11/07 05:19:28 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/07 05:19:28 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/2832c763a4dd263a0f881fc051d1caaaeca2f8fc51c87beb1a9087c59b75330e_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:28 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:28 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c46c0}\n2020/11/07 05:19:28 [DEBUG] Entered runEnroll\n2020/11/07 05:19:28 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c46c0}\n2020/11/07 05:19:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397c90 DummyKeystore:<nil>}\n2020/11/07 05:19:28 [INFO] TLS Enabled\n2020/11/07 05:19:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:28 [DEBUG] Client Cert File: \n2020/11/07 05:19:28 [DEBUG] Client Key File: \n2020/11/07 05:19:28 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:28 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:28 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:28 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:28 [INFO] encoded CSR\n2020/11/07 05:19:28 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPKpZbCphzAOe6yufXi/\\naQNn972GaisJkumIjpB4pds7Vh7rJ2vqHmUjP1hU4947bWiW6jx+Z0jyPNJWZBbF\\n0wygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgOkzKpepANmEeYrt0LvORDSKg\\nCj1CC95YzVu5hHfHV2ECIAn+VHuYOdcmAeRWqXge2iLL0Fp1HOpy/Yq/mlYxdrEZ\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:28 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:28 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVSndYNGM4Y1hNN3U1YkR4K1hxaXVrZzZuTG1Jd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThxbGxzS21ITUE1N3JLNTllTDlwQTJmM3ZZWnFLd21TNllpT2tIaWwKMnp0V0h1c25hK29lWlNNL1dGVGozanR0YUpicVBINW5TUEk4MGxaa0ZzWFRES09CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUE3YWh4R0ZRSWh4MW55RWF0UmIyCmlWYTBXd0V3SHdZRFZSMGpCQmd3Rm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXFlSEY2TlRCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXpMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBTUxRc0FMQTUybVEwWUNUa3UybEpHYlJ0Z1dxVjNqc3ZXN1o1c3oyK0RVN0FpQWMzeEg3ZmF4eQo2SzF3ajdFVW9ySldTQ21LVVJId3podHkxOUFEOVNoUEJBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]]\n2020/11/07 05:19:28 [DEBUG] newEnrollmentResponse orderer3.walmart-net\n2020/11/07 05:19:28 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem\n2020/11/07 05:19:28 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer3s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer3 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer3 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:29 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/07 05:19:29 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/07 05:19:29 [DEBUG] Checking for enrollment\n2020/11/07 05:19:29 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ac600}\n2020/11/07 05:19:29 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ac660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:29 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203b3080 DummyKeystore:<nil>}\n2020/11/07 05:19:29 [INFO] TLS Enabled\n2020/11/07 05:19:29 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:29 [DEBUG] Client Cert File: \n2020/11/07 05:19:29 [DEBUG] Client Key File: \n2020/11/07 05:19:29 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:29 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ac600}\n2020/11/07 05:19:29 [DEBUG] Entered runRegister\n2020/11/07 05:19:29 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ac600}\n2020/11/07 05:19:29 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ac660 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:29 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203b3080 DummyKeystore:<nil>}\n2020/11/07 05:19:29 [INFO] TLS Enabled\n2020/11/07 05:19:29 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:29 [DEBUG] Client Cert File: \n2020/11/07 05:19:29 [DEBUG] Client Key File: \n2020/11/07 05:19:29 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:29 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/07 05:19:29 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:29 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/07 05:19:29 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/07 05:19:29 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:29 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/07 05:19:29 [DEBUG] Received response\nstatusCode=500 (500 Internal Server Error)\nError: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered\n\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/07 05:19:29 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/07 05:19:29 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394780}\n2020/11/07 05:19:29 [DEBUG] Entered runEnroll\n2020/11/07 05:19:29 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:29 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394780}\n2020/11/07 05:19:29 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203947e0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:29 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203d6540 DummyKeystore:<nil>}\n2020/11/07 05:19:29 [INFO] TLS Enabled\n2020/11/07 05:19:29 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:29 [DEBUG] Client Cert File: \n2020/11/07 05:19:29 [DEBUG] Client Key File: \n2020/11/07 05:19:29 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:29 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:29 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:29 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:29 [INFO] encoded CSR\n2020/11/07 05:19:29 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLTtQA4D+67u9aKPyilJmK2y\\nkcigXCVn9l4CV5Gpo5yDczkDPcBZQSNOKBzdI299PL2tzD4HGqT7qj9kIL9428+g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgfTt7R1Xx6wVx1vtVbAahO1LC6wFP\\ntOoB5kNfx4Z1bYgCIHvWgm+fWqIA921O2ZVFncPyo1YQ8p7q4akhYElTZQyn\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:29 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:29 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVTjY2eW1XVmhIYlJLMjJpUzVNRWlVb3pPUFZJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFdE8xQURnUDdydTcxb28vS0tVbVlyYktSeUtCY0pXZjJYZ0pYa2Ftam5JTnoKT1FNOXdGbEJJMDRvSE4wamIzMDh2YTNNUGdjYXBQdXFQMlFndjNqYno2T0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVZGhlejVtanJQd3hGYkloOVNtSFN2cWtRClI3a3dId1lEVlIwakJCZ3dGb0FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKWWZsdGZPblo2aDFJOUxrYWxYek1vTTdkeUdvV0FEcWtNZmF5azFmOER5NENJRUpaMUJyOUFBU2psV1hBclpGWQpnWm1LWDBUb3ZPSGY0dGhYS29LaUVlZVMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]]\n2020/11/07 05:19:29 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/07 05:19:29 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/07 05:19:29 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/07 05:19:29 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:29 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c660}\n2020/11/07 05:19:29 [DEBUG] Entered runEnroll\n2020/11/07 05:19:29 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:29 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c660}\n2020/11/07 05:19:29 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:29 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bf8e0 DummyKeystore:<nil>}\n2020/11/07 05:19:29 [INFO] TLS Enabled\n2020/11/07 05:19:29 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/07 05:19:29 [DEBUG] Client Cert File: \n2020/11/07 05:19:29 [DEBUG] Client Key File: \n2020/11/07 05:19:29 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:29 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:29 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:29 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:29 [INFO] encoded CSR\n2020/11/07 05:19:29 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBJ6y1KYTS75YcOLeoOx6xI6O/f240PgykOPtwNnR9JGsLQOUHAtyiYWUSKe458yS\\nCOyEQUyBVbQ/ozRy/nVQcWKgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhAMgF\\nkMnqbDKlwyLZCbapyI11ICmiWEOz3Yaz1cqp2bJtAiA5iEZPShVea5+dMzytR+wM\\nFLLhuoaD3CIkvcMAOcYLBw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:29 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:29 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6ekNDQW5hZ0F3SUJBZ0lVUDdkMmx0M1VEOTdpNkQwZmRPNGNXRU80b0RRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbnJMVXBoTkx2bGh3NHQ2ZzdIckVqbzc5L2JqUStES1E0KzNBMmRIMGthd3QKQTVRY0MzS0poWlJJcDdqbnpKSUk3SVJCVElGVnREK2pOSEwrZFZCeFlxT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVeUY2UFBGR3RwTEM2bXJnenNub21MMGgwVE5zd0h3WURWUjBqQkJnd0ZvQVUKL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdVODR0Snk5Q3lMcVJxTHB4NzFEdApwcGcrU2p4Mlhsb0VOU3pnc0FsU3VEMENJRkFUckhONzJmQTR2RERWL1lSejZQaTdSVTNQMk91TjhRbjNuYVhOCkk1TlAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:29 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/07 05:19:29 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/07 05:19:29 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/8df26fa57cfb427da925e0841d166113a9a3a528f8fc4be822da8499506f2b9a_sk /root/ca-tools/walmart/client1/tls/keystore/b2841412cf1b2d21045947faa306f4e7211fb8cdb95859c7b41da22228a8b8a9_sk /root/ca-tools/walmart/client1/tls/keystore/ef4751590df80e9cb5ddffda7355025c8549602911548d82b044b98a369b667e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer3.walmart-net",
        "+ CSR_HOSTS=orderer3.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:28 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:28 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:28 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}",
        "2020/11/07 05:19:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fef0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ead0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:28 [INFO] TLS Enabled",
        "2020/11/07 05:19:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:28 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:28 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:28 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:28 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}",
        "2020/11/07 05:19:28 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fe90}",
        "2020/11/07 05:19:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fef0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039ead0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:28 [INFO] TLS Enabled",
        "2020/11/07 05:19:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:28 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:28 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:28 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:28 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/07 05:19:28 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:28 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/07 05:19:28 [DEBUG] Register { Name:orderer3.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/07 05:19:28 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:28 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer3.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer3.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/07 05:19:28 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:28 [DEBUG] Response body result: map[secret:orderer3.walmart-net-pw]",
        "2020/11/07 05:19:28 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:28 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:28 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392600}",
        "2020/11/07 05:19:28 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:28 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392600}",
        "2020/11/07 05:19:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420392660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b170 DummyKeystore:<nil>}",
        "2020/11/07 05:19:28 [INFO] TLS Enabled",
        "2020/11/07 05:19:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:28 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:28 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:28 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:28 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:28 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:28 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:28 [INFO] encoded CSR",
        "2020/11/07 05:19:28 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdTCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQT3gAqtM6jNCiANsaR\\nU/oLfT1rvxDu+XhtxkLnATNi+O4aKDWomjBPlfM5AJF4WGwy6L1WZ0MTEMDpVtnw\\nRKvIoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNHADBEAiA28ru2iKYlYhHJv44gnpafW+HS6fbEj5UU\\nBJAeiAPinwIgFtBxmngLK1RHuAFbgIXR3ugeAq1x2c/8NZTnRR7dDN4=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:28 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:28 [DEBUG] Response body result: map[ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVUHZVRk1JN0dLdmVwaFBQWDQ1T1F0dVJ4dGlFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUU5NEFLclRPb3pRb2dEYkdrVlA2QzMwOWE3OFE3dmw0YmNaQzV3RXoKWXZqdUdpZzFxSm93VDVYek9RQ1JlRmhzTXVpOVZtZERFeERBNlZiWjhFU3J5S09DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUpabnpJWmw4WXNrRm9HNmFTTG5TSGpGb09KNHdId1lEVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUJOd2ZXT1o1bjAvMlM2YTBzQmRpN0NxCjlFYnpNQ0xIUndKWFJtQVBIeVlMQWlCTlI4a1VBVnFYZGpBYVhYZG9tT2pIcENtUE85QzkrVkE5NTgvMENYWUYKZWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]",
        "2020/11/07 05:19:28 [DEBUG] newEnrollmentResponse orderer3.walmart-net",
        "2020/11/07 05:19:28 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/07 05:19:28 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/2832c763a4dd263a0f881fc051d1caaaeca2f8fc51c87beb1a9087c59b75330e_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:28 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:28 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c46c0}",
        "2020/11/07 05:19:28 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:28 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:28 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c46c0}",
        "2020/11/07 05:19:28 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:28 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397c90 DummyKeystore:<nil>}",
        "2020/11/07 05:19:28 [INFO] TLS Enabled",
        "2020/11/07 05:19:28 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:28 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:28 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:28 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:28 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:28 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:28 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:28 [INFO] encoded CSR",
        "2020/11/07 05:19:28 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPKpZbCphzAOe6yufXi/\\naQNn972GaisJkumIjpB4pds7Vh7rJ2vqHmUjP1hU4947bWiW6jx+Z0jyPNJWZBbF\\n0wygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgOkzKpepANmEeYrt0LvORDSKg\\nCj1CC95YzVu5hHfHV2ECIAn+VHuYOdcmAeRWqXge2iLL0Fp1HOpy/Yq/mlYxdrEZ\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:28 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:28 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVSndYNGM4Y1hNN3U1YkR4K1hxaXVrZzZuTG1Jd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThxbGxzS21ITUE1N3JLNTllTDlwQTJmM3ZZWnFLd21TNllpT2tIaWwKMnp0V0h1c25hK29lWlNNL1dGVGozanR0YUpicVBINW5TUEk4MGxaa0ZzWFRES09CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUE3YWh4R0ZRSWh4MW55RWF0UmIyCmlWYTBXd0V3SHdZRFZSMGpCQmd3Rm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXFlSEY2TlRCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXpMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBTUxRc0FMQTUybVEwWUNUa3UybEpHYlJ0Z1dxVjNqc3ZXN1o1c3oyK0RVN0FpQWMzeEg3ZmF4eQo2SzF3ajdFVW9ySldTQ21LVVJId3podHkxOUFEOVNoUEJBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]]",
        "2020/11/07 05:19:28 [DEBUG] newEnrollmentResponse orderer3.walmart-net",
        "2020/11/07 05:19:28 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem",
        "2020/11/07 05:19:28 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer3s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer3 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer3 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:29 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/07 05:19:29 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:29 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:29 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ac600}",
        "2020/11/07 05:19:29 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ac660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:29 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203b3080 DummyKeystore:<nil>}",
        "2020/11/07 05:19:29 [INFO] TLS Enabled",
        "2020/11/07 05:19:29 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:29 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:29 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:29 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:29 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ac600}",
        "2020/11/07 05:19:29 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:29 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203ac600}",
        "2020/11/07 05:19:29 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203ac660 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:29 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203b3080 DummyKeystore:<nil>}",
        "2020/11/07 05:19:29 [INFO] TLS Enabled",
        "2020/11/07 05:19:29 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:29 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:29 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:29 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:29 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/07 05:19:29 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:29 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/07 05:19:29 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/07 05:19:29 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:29 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/07 05:19:29 [DEBUG] Received response",
        "statusCode=500 (500 Internal Server Error)",
        "Error: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered",
        "",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/07 05:19:29 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/07 05:19:29 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394780}",
        "2020/11/07 05:19:29 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:29 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:29 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420394780}",
        "2020/11/07 05:19:29 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203947e0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:29 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203d6540 DummyKeystore:<nil>}",
        "2020/11/07 05:19:29 [INFO] TLS Enabled",
        "2020/11/07 05:19:29 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:29 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:29 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:29 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:29 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:29 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:29 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:29 [INFO] encoded CSR",
        "2020/11/07 05:19:29 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLTtQA4D+67u9aKPyilJmK2y\\nkcigXCVn9l4CV5Gpo5yDczkDPcBZQSNOKBzdI299PL2tzD4HGqT7qj9kIL9428+g\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtanhxejUwCgYIKoZIzj0EAwIDRwAwRAIgfTt7R1Xx6wVx1vtVbAahO1LC6wFP\\ntOoB5kNfx4Z1bYgCIHvWgm+fWqIA921O2ZVFncPyo1YQ8p7q4akhYElTZQyn\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:29 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:29 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVTjY2eW1XVmhIYlJLMjJpUzVNRWlVb3pPUFZJd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFdE8xQURnUDdydTcxb28vS0tVbVlyYktSeUtCY0pXZjJYZ0pYa2Ftam5JTnoKT1FNOXdGbEJJMDRvSE4wamIzMDh2YTNNUGdjYXBQdXFQMlFndjNqYno2T0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVZGhlejVtanJQd3hGYkloOVNtSFN2cWtRClI3a3dId1lEVlIwakJCZ3dGb0FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKWWZsdGZPblo2aDFJOUxrYWxYek1vTTdkeUdvV0FEcWtNZmF5azFmOER5NENJRUpaMUJyOUFBU2psV1hBclpGWQpnWm1LWDBUb3ZPSGY0dGhYS29LaUVlZVMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]]",
        "2020/11/07 05:19:29 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/07 05:19:29 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/07 05:19:29 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/07 05:19:29 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:29 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c660}",
        "2020/11/07 05:19:29 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:29 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:29 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-jxqz5] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c660}",
        "2020/11/07 05:19:29 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c6c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:29 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bf8e0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:29 [INFO] TLS Enabled",
        "2020/11/07 05:19:29 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/07 05:19:29 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:29 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:29 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:29 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-jxqz5] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:29 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:29 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:29 [INFO] encoded CSR",
        "2020/11/07 05:19:29 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-jxqz5\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBJ6y1KYTS75YcOLeoOx6xI6O/f240PgykOPtwNnR9JGsLQOUHAtyiYWUSKe458yS\\nCOyEQUyBVbQ/ozRy/nVQcWKgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtanhxejUwCgYIKoZIzj0EAwIDSAAwRQIhAMgF\\nkMnqbDKlwyLZCbapyI11ICmiWEOz3Yaz1cqp2bJtAiA5iEZPShVea5+dMzytR+wM\\nFLLhuoaD3CIkvcMAOcYLBw==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:29 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:29 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6ekNDQW5hZ0F3SUJBZ0lVUDdkMmx0M1VEOTdpNkQwZmRPNGNXRU80b0RRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbnJMVXBoTkx2bGh3NHQ2ZzdIckVqbzc5L2JqUStES1E0KzNBMmRIMGthd3QKQTVRY0MzS0poWlJJcDdqbnpKSUk3SVJCVElGVnREK2pOSEwrZFZCeFlxT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVeUY2UFBGR3RwTEM2bXJnenNub21MMGgwVE5zd0h3WURWUjBqQkJnd0ZvQVUKL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxcWVIRjZOVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdVODR0Snk5Q3lMcVJxTHB4NzFEdApwcGcrU2p4Mlhsb0VOU3pnc0FsU3VEMENJRkFUckhONzJmQTR2RERWL1lSejZQaTdSVTNQMk91TjhRbjNuYVhOCkk1TlAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVWmZCYU03NUxRaXAzdTA5QUZjSlRiUGhKTDJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01EWmFGdzB5TXpBNE1qZ3dOVEV3TURaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkJiemVEanEwSmVZWDVZa1dzTVRxVUo0czU4MVRPVjhJWmlHVVd4b1c2YVYyY0VlMUVmekFXZVNYQkNCeUYKSEpMaEJhRE1IbzdReXc1V1doRHZkTHZsbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMMGprNkNRd3lFZVh4clVuLzhlTnBrWlFOOXh3d3pxOHVwbnZrNWdYK09zQWlBbmFaNkYKc2NsODZiWU9KNGdydWRQVzl4eW5VVjY5dHU3eFJ6MkJkSElVdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEYxinGe9zw7qmjCYNbzK5tDmVk3i/+oM48brzT/h3BTEiB+5agwByK1oUrKXfXVbXe2PVv5i2XvTLJeAR6/PSUhTxpECiCEywmwRDPv8+VamIBv9W7P/EhQ1e0NGoo6GlICaIvTDhIgmAHZp9lrqIHDbgupu17MitX4ScEQtMjga8B+DDf6mrYiRAogjrmdYRf+EwIWShVBnq6Ip/5oGHpaI5lmq4mBk8+9eYkSILWajoOkipQgaqDUlSn7nA35TA2QPFCfE8HlrHuj73lUIkQKIDqBGM0shzItcLqMQ/Ym8Kpta/l6yVZnaXdS75GHXUxvEiAosLzEYoX0tYNI5BHyJ7qEo6gokJEaP5GPyur2hmUz3iJECiCu1v6uaX8jg9fmJM5Gm9xpcoalFcDUuECoAtTaQ6KKVBIg77ISMS3ddJvy+Kb+fXVrQOl9y3Yns5HfMyCmGqcHxLMiRAogH8FN3+DV21kJk+vpQHipJP0Dtx/serm+0XWCZA2pufQSINelk6kcMiTK9I+xPzltXTozY0gtfD0uEM0JXOByNecPKogBCiCMwt8EMqo3IYwntHnzg9dqTLKL0YZTKXNKYbGjv5uTshIgYUTZprqdK+MFGdhGcvlYg+Jb0atws9IetltQ7rHC9s8aIMdMxy+IuqtIh+KM8H0HTBNOHBOOaeAQnCZYgLaIxpzGIiCjcI4OgFXCXl+a20vPI+3V6SpUQrsGDrc0cBk24VSNZTJECiB9KbFtLavnITV0lC66ie7Pivi7gcUQQpc7RtZ821NfshIggrYmhHrj1hnrjeeWfgMW1lKaGuLOQgatKgP3kbeuvkY6RAogqzmgSdfuPv5y3YVgws59T3Z/+cdZswleLuec/R6IKtQSIILr74ArbQi4IGbm6y3n/FVehlYQ28ABhy+LxVxhXEt2QiAyDfyieDUXe21yRH0WOg1AVc3r1FoToTZK+V5BCnnp1kog1VYNOPsAR1msymp8bwtk3g0ieejYRmq6a8JfWghyCYRSICQJ451BcdA55/y+ojQ4VGnE2wtA5c6ZlrNKETBiCatQ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVlNk94NERENDRuYUNLYXBRUE9wRkRpcUFSNWQ5MWw4cgpHSkVEQnhMaWN4L29rN3RVMzAxK3VUNzVvSkE3Y08vUFBPa2JvOWZWb2lQVWhlclc1UjJFY3VQRUN6M1JHSmQ5Cm5KVlFBSHUrM2NSMGxVUDRDaitzSHl6UGF0VXFxVzZ2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:29 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/07 05:19:29 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/07 05:19:29 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/8df26fa57cfb427da925e0841d166113a9a3a528f8fc4be822da8499506f2b9a_sk /root/ca-tools/walmart/client1/tls/keystore/b2841412cf1b2d21045947faa306f4e7211fb8cdb95859c7b41da22228a8b8a9_sk /root/ca-tools/walmart/client1/tls/keystore/ef4751590df80e9cb5ddffda7355025c8549602911548d82b044b98a369b667e_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer3.walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer3.walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726369.6689503-13822-129933702018309 `" && echo ansible-tmp-1604726369.6689503-13822-129933702018309="` echo /root/.ansible/tmp/ansible-tmp-1604726369.6689503-13822-129933702018309 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqv7mgqq6 TO /root/.ansible/tmp/ansible-tmp-1604726369.6689503-13822-129933702018309/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726369.6689503-13822-129933702018309/ /root/.ansible/tmp/ansible-tmp-1604726369.6689503-13822-129933702018309/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726369.6689503-13822-129933702018309/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726369.6689503-13822-129933702018309/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.731298",
    "end": "2020-11-07 05:19:30.532221",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:29.800923",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726370.6087162-13862-245277586549338 `" && echo ansible-tmp-1604726370.6087162-13862-245277586549338="` echo /root/.ansible/tmp/ansible-tmp-1604726370.6087162-13862-245277586549338 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpiof2trsg TO /root/.ansible/tmp/ansible-tmp-1604726370.6087162-13862-245277586549338/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726370.6087162-13862-245277586549338/ /root/.ansible/tmp/ansible-tmp-1604726370.6087162-13862-245277586549338/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726370.6087162-13862-245277586549338/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726370.6087162-13862-245277586549338/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.127192",
    "end": "2020-11-07 05:19:30.867124",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:30.739932",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726370.9351661-13914-67437898433541 `" && echo ansible-tmp-1604726370.9351661-13914-67437898433541="` echo /root/.ansible/tmp/ansible-tmp-1604726370.9351661-13914-67437898433541 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7_a0z4y1 TO /root/.ansible/tmp/ansible-tmp-1604726370.9351661-13914-67437898433541/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726370.9351661-13914-67437898433541/ /root/.ansible/tmp/ansible-tmp-1604726370.9351661-13914-67437898433541/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726370.9351661-13914-67437898433541/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726370.9351661-13914-67437898433541/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer3-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5akNDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9URXhXaGNOTWpNd09EQXpNRGd5Ck9URXhXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TXk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFCCnlFK21McFhYUE9CZ2NFK3lKelRJZ3M2SGdGOHdwVWhIZDZveExYSjBIaC85NC9VWCtzTVY5TlpqclAvVktQL0MKVWdodytHMzRSL0hUbmFqalVnZ21vMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVXFINFJwbFZ3aENqNHE3cXROSmVPN1Z5SWRtb3dDZ1lJS29aSXpqMEVBd0lEClNRQXdSZ0loQU51TVYveDBvZ3lKekd3bXFhMDZIZWswY0NZckxvaytCUkRtaDZ3OGFDZEFBaUVBcGJ3Qi90QjcKQ2pBcDZ6emZPRmU3c25CUFE5WUl1ZmZiTnhzRTJrQ3Rzenc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUMzSks3ZzJKRVhxaGZLR3YyL2hheWlJRi9ndDNSazVBL0IySzNNdGNHOFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQWNoUHBpNlYxenpnWUhCUHNpYzB5SUxPaDRCZk1LVklSM2VxTVMxeWRCNGYvZVAxRi9yRApGZlRXWTZ6LzFTai93bElJY1BodCtFZngwNTJvNDFJSUpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:11Z",
                "name": "orderer3-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408791",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer3-walmart-net-ambassador-certs",
                "uid": "9c28f8f6-56fe-49c2-9cf9-f892bc7312b3"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726371.5525753-13942-268187264413553 `" && echo ansible-tmp-1604726371.5525753-13942-268187264413553="` echo /root/.ansible/tmp/ansible-tmp-1604726371.5525753-13942-268187264413553 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpdinmsse4 TO /root/.ansible/tmp/ansible-tmp-1604726371.5525753-13942-268187264413553/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726371.5525753-13942-268187264413553/ /root/.ansible/tmp/ansible-tmp-1604726371.5525753-13942-268187264413553/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726371.5525753-13942-268187264413553/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726371.5525753-13942-268187264413553/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
    "delta": "0:00:00.056504",
    "end": "2020-11-07 05:19:31.743573",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:31.687069",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726371.9065292-13983-171722833879375 `" && echo ansible-tmp-1604726371.9065292-13983-171722833879375="` echo /root/.ansible/tmp/ansible-tmp-1604726371.9065292-13983-171722833879375 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpt7xdjah_ TO /root/.ansible/tmp/ansible-tmp-1604726371.9065292-13983-171722833879375/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726371.9065292-13983-171722833879375/ /root/.ansible/tmp/ansible-tmp-1604726371.9065292-13983-171722833879375/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726371.9065292-13983-171722833879375/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726371.9065292-13983-171722833879375/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
    "delta": "0:00:00.046440",
    "end": "2020-11-07 05:19:32.085153",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:32.038713",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ]
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:31
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726372.1518428-14020-130205440451436 `" && echo ansible-tmp-1604726372.1518428-14020-130205440451436="` echo /root/.ansible/tmp/ansible-tmp-1604726372.1518428-14020-130205440451436 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzv8vejix TO /root/.ansible/tmp/ansible-tmp-1604726372.1518428-14020-130205440451436/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726372.1518428-14020-130205440451436/ /root/.ansible/tmp/ansible-tmp-1604726372.1518428-14020-130205440451436/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726372.1518428-14020-130205440451436/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726372.1518428-14020-130205440451436/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.055521",
    "end": "2020-11-07 05:19:32.341080",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:32.285559",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Copy organization level certificates for orgs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726372.4135926-14054-161107733615751 `" && echo ansible-tmp-1604726372.4135926-14054-161107733615751="` echo /root/.ansible/tmp/ansible-tmp-1604726372.4135926-14054-161107733615751 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1cakrsyk TO /root/.ansible/tmp/ansible-tmp-1604726372.4135926-14054-161107733615751/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726372.4135926-14054-161107733615751/ /root/.ansible/tmp/ansible-tmp-1604726372.4135926-14054-161107733615751/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726372.4135926-14054-161107733615751/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726372.4135926-14054-161107733615751/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.097527",
    "end": "2020-11-07 05:19:32.641438",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:32.543911",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ]
}

TASK [include_role : create/crypto/peer] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:114
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for CA-tool in carrier-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726373.081031-14114-89251102765704 `" && echo ansible-tmp-1604726373.081031-14114-89251102765704="` echo /root/.ansible/tmp/ansible-tmp-1604726373.081031-14114-89251102765704 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpt8qtlg78 TO /root/.ansible/tmp/ansible-tmp-1604726373.081031-14114-89251102765704/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726373.081031-14114-89251102765704/ /root/.ansible/tmp/ansible-tmp-1604726373.081031-14114-89251102765704/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726373.081031-14114-89251102765704/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726373.081031-14114-89251102765704/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-07T05:13:39Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-2cszs",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "9e58f4b1-291a-49fe-8c9c-c09edcbdba7e"
                    }
                ],
                "resourceVersion": "2607224",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-tools-69d7885f86-2cszs",
                "uid": "b5d5d63b-56e2-46b6-b703-72f7ab5ce717"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-m7brb",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-m7brb",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-m7brb"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:13:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:15:02Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:15:02Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-07T05:13:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://864de768fe1fe9f74bbac2b90f56fbd0f1d271041b780f2f40027ed7b175835f",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-07T05:15:01Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.83",
                "podIPs": [
                    {
                        "ip": "10.1.0.83"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-07T05:13:54Z"
            }
        }
    ]
}

TASK [create/crypto/peer : Ensure ca directory exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:21
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726373.7048264-14142-8692611393330 `" && echo ansible-tmp-1604726373.7048264-14142-8692611393330="` echo /root/.ansible/tmp/ansible-tmp-1604726373.7048264-14142-8692611393330 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpyr05vb_b TO /root/.ansible/tmp/ansible-tmp-1604726373.7048264-14142-8692611393330/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726373.7048264-14142-8692611393330/ /root/.ansible/tmp/ansible-tmp-1604726373.7048264-14142-8692611393330/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726373.7048264-14142-8692611393330/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726373.7048264-14142-8692611393330/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Check if ca certs already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726373.9037867-14168-127323462301171 `" && echo ansible-tmp-1604726373.9037867-14168-127323462301171="` echo /root/.ansible/tmp/ansible-tmp-1604726373.9037867-14168-127323462301171 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptr0cl_15 TO /root/.ansible/tmp/ansible-tmp-1604726373.9037867-14168-127323462301171/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726373.9037867-14168-127323462301171/ /root/.ansible/tmp/ansible-tmp-1604726373.9037867-14168-127323462301171/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726373.9037867-14168-127323462301171/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726373.9037867-14168-127323462301171/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.056909",
    "end": "2020-11-07 05:19:34.090345",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:34.033436",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if ca key already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:38
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726374.1558664-14204-187332863886448 `" && echo ansible-tmp-1604726374.1558664-14204-187332863886448="` echo /root/.ansible/tmp/ansible-tmp-1604726374.1558664-14204-187332863886448 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpoa_tlyg2 TO /root/.ansible/tmp/ansible-tmp-1604726374.1558664-14204-187332863886448/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726374.1558664-14204-187332863886448/ /root/.ansible/tmp/ansible-tmp-1604726374.1558664-14204-187332863886448/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726374.1558664-14204-187332863886448/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726374.1558664-14204-187332863886448/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.059503",
    "end": "2020-11-07 05:19:34.345312",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:34.285809",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peercheck.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:47
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726374.4766054-14243-160687628182659 `" && echo ansible-tmp-1604726374.4766054-14243-160687628182659="` echo /root/.ansible/tmp/ansible-tmp-1604726374.4766054-14243-160687628182659 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpdpiw0di0 TO /root/.ansible/tmp/ansible-tmp-1604726374.4766054-14243-160687628182659/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726374.4766054-14243-160687628182659/ /root/.ansible/tmp/ansible-tmp-1604726374.4766054-14243-160687628182659/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726374.4766054-14243-160687628182659/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726374.4766054-14243-160687628182659/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
    "delta": "0:00:00.061994",
    "end": "2020-11-07 05:19:34.670285",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:34.608291",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726374.767266-14279-83228855069064 `" && echo ansible-tmp-1604726374.767266-14279-83228855069064="` echo /root/.ansible/tmp/ansible-tmp-1604726374.767266-14279-83228855069064 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzlq6x5nd TO /root/.ansible/tmp/ansible-tmp-1604726374.767266-14279-83228855069064/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726374.767266-14279-83228855069064/ /root/.ansible/tmp/ansible-tmp-1604726374.767266-14279-83228855069064/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726374.767266-14279-83228855069064/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726374.767266-14279-83228855069064/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
    "delta": "0:00:00.057470",
    "end": "2020-11-07 05:19:34.955387",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:34.897917",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Call common.yaml for each peer] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:53
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml for localhost

TASK [create/crypto/peer : Create directory path on CA Tools] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726375.1058292-14317-88453898372712 `" && echo ansible-tmp-1604726375.1058292-14317-88453898372712="` echo /root/.ansible/tmp/ansible-tmp-1604726375.1058292-14317-88453898372712 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprl3gkoyo TO /root/.ansible/tmp/ansible-tmp-1604726375.1058292-14317-88453898372712/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726375.1058292-14317-88453898372712/ /root/.ansible/tmp/ansible-tmp-1604726375.1058292-14317-88453898372712/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726375.1058292-14317-88453898372712/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726375.1058292-14317-88453898372712/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
    "delta": "0:00:01.230751",
    "end": "2020-11-07 05:19:36.466760",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:35.236009",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726376.5327685-14363-2768822429178 `" && echo ansible-tmp-1604726376.5327685-14363-2768822429178="` echo /root/.ansible/tmp/ansible-tmp-1604726376.5327685-14363-2768822429178 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpe678ybv8 TO /root/.ansible/tmp/ansible-tmp-1604726376.5327685-14363-2768822429178/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726376.5327685-14363-2768822429178/ /root/.ansible/tmp/ansible-tmp-1604726376.5327685-14363-2768822429178/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726376.5327685-14363-2768822429178/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726376.5327685-14363-2768822429178/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Changing the permission of msp files] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726376.7389476-14389-215790995867880 `" && echo ansible-tmp-1604726376.7389476-14389-215790995867880="` echo /root/.ansible/tmp/ansible-tmp-1604726376.7389476-14389-215790995867880 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpr3ly6zkl TO /root/.ansible/tmp/ansible-tmp-1604726376.7389476-14389-215790995867880/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726376.7389476-14389-215790995867880/ /root/.ansible/tmp/ansible-tmp-1604726376.7389476-14389-215790995867880/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726376.7389476-14389-215790995867880/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726376.7389476-14389-215790995867880/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-carrier.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-carrier.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-carrier.sh"
        }
    },
    "files": "generate-crypto-carrier.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-carrier.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-carrier.sh",
    "size": 5182,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726376.9128025-14389-52357090570341 `" && echo ansible-tmp-1604726376.9128025-14389-52357090570341="` echo /root/.ansible/tmp/ansible-tmp-1604726376.9128025-14389-52357090570341 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpf4seymdz TO /root/.ansible/tmp/ansible-tmp-1604726376.9128025-14389-52357090570341/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726376.9128025-14389-52357090570341/ /root/.ansible/tmp/ansible-tmp-1604726376.9128025-14389-52357090570341/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726376.9128025-14389-52357090570341/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726376.9128025-14389-52357090570341/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:43
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726377.1166492-14439-22982373202354 `" && echo ansible-tmp-1604726377.1166492-14439-22982373202354="` echo /root/.ansible/tmp/ansible-tmp-1604726377.1166492-14439-22982373202354 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp2gx5hdzs TO /root/.ansible/tmp/ansible-tmp-1604726377.1166492-14439-22982373202354/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726377.1166492-14439-22982373202354/ /root/.ansible/tmp/ansible-tmp-1604726377.1166492-14439-22982373202354/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726377.1166492-14439-22982373202354/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726377.1166492-14439-22982373202354/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:03.750175",
    "end": "2020-11-07 05:19:40.997169",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:37.246994",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Generate crypto material for organization peers] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726381.0660505-14489-58156341718127 `" && echo ansible-tmp-1604726381.0660505-14489-58156341718127="` echo /root/.ansible/tmp/ansible-tmp-1604726381.0660505-14489-58156341718127 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpnc6czyvo TO /root/.ansible/tmp/ansible-tmp-1604726381.0660505-14489-58156341718127/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726381.0660505-14489-58156341718127/ /root/.ansible/tmp/ansible-tmp-1604726381.0660505-14489-58156341718127/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726381.0660505-14489-58156341718127/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726381.0660505-14489-58156341718127/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:03.605455",
    "end": "2020-11-07 05:19:44.802727",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:41.197272",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=carrier\n+ AFFILIATION=carrier\n+ SUBJECT=C=GB,ST=London,L=London,O=carrier\n+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ CA_ADMIN_USER=carrier-admin\n+ CA_ADMIN_PASS=carrier-adminpw\n+ ORG_ADMIN_USER=Admin@carrier-net\n+ ORG_ADMIN_PASS=Admin@carrier-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ NO_OF_PEERS=2\n+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:41 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:41 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/07 05:19:41 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062750}\n2020/11/07 05:19:41 [DEBUG] Entered runEnroll\n2020/11/07 05:19:41 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:41 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062750}\n2020/11/07 05:19:41 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200627b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:41 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201978e0 DummyKeystore:<nil>}\n2020/11/07 05:19:41 [INFO] TLS Enabled\n2020/11/07 05:19:41 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:41 [DEBUG] Client Cert File: \n2020/11/07 05:19:41 [DEBUG] Client Key File: \n2020/11/07 05:19:41 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:41 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:41 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:41 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:41 [INFO] encoded CSR\n2020/11/07 05:19:41 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWDCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEPc9o\\nO5tNQcsjH7xAgRTApFLmiNSOKGwJKOg0GmfvPo78pdUBgu3QW+mDISK3FE/XMKKN\\nwkPipakAg8IF5jNkhaA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni0yY3N6czAKBggqhkjOPQQDAgNIADBFAiEAmqSuRzS0\\n4cOuTd9zFYUE/o6X+yrHSh0iKI1E90JPmUECIA+83l9cfrlU2ZpQD3tqDMPEAEmX\\nceBmCm3o1n0VfYDj\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:42 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:42 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTVENDQWUrZ0F3SUJBZ0lVYUJqVVFsVFRqR3c3REJob2VOODI4cjhHVHZFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OWTJGeWNtbGxjaTFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCRDNQYUR1YlRVSExJeCs4UUlFVXdLUlM1b2pVamloc0NTam9OQnBuN3o2Ty9LWFYKQVlMdDBGdnBneUVpdHhSUDF6Q2lqY0pENHFXcEFJUENCZVl6WklXamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRWFJUURiU1NvOVIwRmpiV09mR3VKY0VZbEg5Ck1COEdBMVVkSXdRWU1CYUFGQ0NuTXBMdERWUjlHUURLSXFsTkI1MjBmME0yTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0TW1OemVuTXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBS0VKWWg2YQpUMHI3WVNWNmNIWnJqU0plTnFacFluT1ZOZzJMUkQxSnJvbElBaUF3ZnVkS1puNGh1N2JOMEd0cXVnNVk2OFJ2ClViYmFZUmxVSHlUZmJoT2loQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS]]\n2020/11/07 05:19:42 [DEBUG] newEnrollmentResponse carrier-admin\n2020/11/07 05:19:42 [INFO] Stored client certificate at /root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/07 05:19:42 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-carrier/msp/cacerts/ca-carrier-net-7054.pem\n+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp\n2020/11/07 05:19:42 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:42 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/07 05:19:42 [DEBUG] Entered runGetCACert\n2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016bec0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a1fc0 DummyKeystore:<nil>}\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:42 [DEBUG] Client Cert File: \n2020/11/07 05:19:42 [DEBUG] Client Key File: \n2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:42 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/cainfo\n{}\n2020/11/07 05:19:42 [DEBUG] Received response\nstatusCode=200 (200 OK)\n2020/11/07 05:19:42 [DEBUG] Response body result: map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5]\n2020/11/07 05:19:42 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:42 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [INFO] TLS Enabled\n+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:42 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:42 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/07 05:19:42 [DEBUG] Checking for enrollment\n2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398630}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039f7d0 DummyKeystore:<nil>}\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:42 [DEBUG] Client Cert File: \n2020/11/07 05:19:42 [DEBUG] Client Key File: \n2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398630}\n2020/11/07 05:19:42 [DEBUG] Entered runRegister\n2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398630}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039f7d0 DummyKeystore:<nil>}\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:42 [DEBUG] Client Cert File: \n2020/11/07 05:19:42 [DEBUG] Client Key File: \n2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:42 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/07 05:19:42 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:42 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/07 05:19:42 [DEBUG] Register { Name:Admin@carrier-net Type:client Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{hf.Registrar.Roles client false} {hf.Registrar.Attributes * false} {hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true} {abac.init true true}] CAName:  }\n2020/11/07 05:19:42 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:42 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"Admin@carrier-net\",\"type\":\"client\",\"secret\":\"Admin@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"},{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true},{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true}]}\n2020/11/07 05:19:42 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:42 [DEBUG] Response body result: map[secret:Admin@carrier-net-pw]\n2020/11/07 05:19:42 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:42 [DEBUG] Home directory: /root/ca-tools/carrier/admin\n2020/11/07 05:19:42 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml\n2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420177f20}\n2020/11/07 05:19:42 [DEBUG] Entered runEnroll\n2020/11/07 05:19:42 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420177f20}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420177f80 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019fd70 DummyKeystore:<nil>}\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:42 [DEBUG] Client Cert File: \n2020/11/07 05:19:42 [DEBUG] Client Key File: \n2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:42 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:42 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:42 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:42 [INFO] encoded CSR\n2020/11/07 05:19:42 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATwZWR6T+/7IdJq021xt4SVvYH806wt4YOBh6OqADhJ0+zKm9FXD0sMidB1E5ji\\ndKM6L0eW66QqZjnNZdabRvLloDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0gAMEUCIQDY\\no5wF5LG3fhwwDww4Ku4/kj/X0YGgygqiaomePTnHdAIgNAIseGvHApMv8BhRUVyl\\nRc2C17UyuMj/KP+PSI4Zj+w=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:42 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:42 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4RENDQXBhZ0F3SUJBZ0lVUkduS2RWc3V0Y1Z4eTdLQVZWeDNFZDMzYkJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFOEdWa2VrL3YreUhTYXROdGNiZUUKbGIyQi9OT3NMZUdEZ1llanFnQTRTZFBzeXB2UlZ3OUxESW5RZFJPWTRuU2pPaTlIbHV1a0ttWTV6V1hXbTBieQo1YU9DQVJrd2dnRVZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCUjNqeWp2S2xlc0xFN1ExQ2xWelBGLzFBeDd3REFmQmdOVkhTTUVHREFXZ0JRZ3B6S1M3UTFVZlJrQXlpS3AKVFFlZHRIOUROakFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxUSmpjM3B6TUlHTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwb2VnaHhQQXYxcTQ3bHdJRjdEakFGQ2pXT2tWNXhJM2gxZHRZa0xGCjJ6Y0NJRGVvb0d3ZVBIQjRra3dBK1E2bGlQUWtqSi9ycVREN0Y1OWs4eHU0amt3cgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net]]\n2020/11/07 05:19:42 [DEBUG] newEnrollmentResponse Admin@carrier-net\n2020/11/07 05:19:42 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/msp/signcerts/cert.pem\n2020/11/07 05:19:42 [INFO] Stored root CA certificate at /root/ca-tools/carrier/admin/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts\n+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem\n+ mkdir /root/ca-tools/carrier/admin/msp/admincerts\n+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:42 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:42 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420060720}\n2020/11/07 05:19:42 [DEBUG] Entered runEnroll\n2020/11/07 05:19:42 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420060720}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420060780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197f80 DummyKeystore:<nil>}\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:42 [DEBUG] Client Cert File: \n2020/11/07 05:19:42 [DEBUG] Client Key File: \n2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:42 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:42 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:42 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:42 [INFO] encoded CSR\n2020/11/07 05:19:42 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARtr5DZhCGM9g6W55aDDIbkFU2p1wbhgMkKPycTnFO0BZ9aEpnCpdeTw66hyYHn\\nq3sBVmGufw4/KxWh/48Ypij2oDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0gAMEUCIQCj\\npyInHnKOw0qdmTbmLMindHk8m7UynIncT9TwQVX2MAIgdxsvoiEy+Az2Ck1k+Fxf\\nQI9EcBU/ZuYnLod3PHtSH9c=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:42 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:42 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQXJXZ0F3SUJBZ0lVT2lWWDQxTkN2dVNlYVI2SjBnOUlGYkdKQjFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFYmErUTJZUWhqUFlPbHVlV2d3eUcKNUJWTnFkY0c0WURKQ2o4bkU1eFR0QVdmV2hLWndxWFhrOE91b2NtQjU2dDdBVlpocm44T1B5c1ZvZitQR0tZbwo5cU9DQVRnd2dnRTBNQTRHQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVYVdYNThXLzdKWDVOSTNMc3ZLRzMKN3VDSXdoWXdId1lEVlIwakJCZ3dGb0FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0pBWURWUjBSQkIwdwpHNElaWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkweVkzTjZjekNCamdZSUtnTUVCUVlIQ0FFRWdZRjdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENKaFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SW1OaGNuSnBaWElpTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKQlpHMXBia0JqWVhKeQphV1Z5TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbGJuUWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFKOVFpdnJJemNKcDljV2hMayt1WkQzaGdoTmVQeW82YmZwOTNGSFlERjhvQWlCeWFkSmVCUFNWY2hQbHRVc1oKdGpsd3ZXV2FmY3Buem02eThpUGgxbjNtNFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:42 [DEBUG] newEnrollmentResponse Admin@carrier-net\n2020/11/07 05:19:42 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/tls/signcerts/cert.pem\n2020/11/07 05:19:42 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls\n+ cp /root/ca-tools/carrier/admin/tls/keystore/44501b55595e83645522ca104f15505553eef359f6aa924ff5b14d4d08d96ab2_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key\n+ cp /root/ca-tools/carrier/admin/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt\n+ cp /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt\n+ COUNTER=0\n+ '[' 0 -lt 2 ']'\n+ PEER=peer0.carrier-net\n+ CSR_HOSTS=peer0.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:42 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:42 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/07 05:19:42 [DEBUG] Checking for enrollment\n2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fd70}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fdd0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039d310 DummyKeystore:<nil>}\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:42 [DEBUG] Client Cert File: \n2020/11/07 05:19:42 [DEBUG] Client Key File: \n2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fd70}\n2020/11/07 05:19:42 [DEBUG] Entered runRegister\n2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fd70}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fdd0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039d310 DummyKeystore:<nil>}\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:42 [DEBUG] Client Cert File: \n2020/11/07 05:19:42 [DEBUG] Client Key File: \n2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:42 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/07 05:19:42 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:42 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/07 05:19:42 [DEBUG] Register { Name:peer0.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/07 05:19:42 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:42 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"peer0.carrier-net\",\"type\":\"peer\",\"secret\":\"peer0.carrier-net-pw\",\"affiliation\":\"\"}\n2020/11/07 05:19:42 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:42 [DEBUG] Response body result: map[secret:peer0.carrier-net-pw]\n2020/11/07 05:19:42 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:42 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420137cb0}\n2020/11/07 05:19:42 [DEBUG] Entered runEnroll\n2020/11/07 05:19:42 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420137cb0}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420137d10 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42046d290 DummyKeystore:<nil>}\n2020/11/07 05:19:42 [INFO] TLS Enabled\n2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:42 [DEBUG] Client Cert File: \n2020/11/07 05:19:42 [DEBUG] Client Key File: \n2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:42 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:42 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:42 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:42 [INFO] encoded CSR\n2020/11/07 05:19:42 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIByTCCAXACAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATkU4JZ4Cyokfuhmk1PaKVgm7SVG/XxxWNW+Kh5RpFUYoEkv+Nj9EHzcvJ/wUu2\\nnWJ6/b9b+5b1UpuuErdnirmPoIGjMIGgBgkqhkiG9w0BCQ4xgZIwgY8wgYwGA1Ud\\nEQSBhDCBgYIRcGVlcjAuY2Fycmllci1uZXSCI3BlZXIwLmNhcnJpZXItbmV0LnN2\\nYy5jbHVzdGVyLmxvY2FsghFwZWVyMC5jYXJyaWVyLm5ldII0cGVlcjAuY2Fycmll\\nci1uZXQuY2Fycmllci1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjO\\nPQQDAgNHADBEAiBA3hNnkITk0v/mUD4Wqfem9MxFZEp87dsmTOdbfdx8WQIgYqt7\\nV3u8jvZtfmYb3bbtN15YakwmOnGTiFyKzgMtlXs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:43 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:43 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQXQrZ0F3SUJBZ0lVTnBaeFRQOVMzWTdwVFh5WVVBQ0M1bnFuZ2Njd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFNUZPQ1dlQXNxSkg3b1pwTlQyaWxZSnUwbFJ2MThjVmpWdmlvZVVhUlZHS0IKSkwvalkvUkI4M0x5ZjhGTHRwMWlldjIvVy91VzlWS2JyaEszWjRxNWo2T0NBWFF3Z2dGd01BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVZThabUsrL2ZCd3BZZUZicU1YSmxLSkp1UFRRd0h3WURWUjBqQkJnd0ZvQVUKSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd2dZd0dBMVVkRVFTQmhEQ0JnWUlSY0dWbGNqQXVZMkZ5Y21sbApjaTF1WlhTQ0kzQmxaWEl3TG1OaGNuSnBaWEl0Ym1WMExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2doRndaV1Z5Ck1DNWpZWEp5YVdWeUxtNWxkSUkwY0dWbGNqQXVZMkZ5Y21sbGNpMXVaWFF1WTJGeWNtbGxjaTF1WlhRdWMzVnUKWldWc0xuQjJkQzUzYlhSaVlXWXVhVzVtYnpCaUJnZ3FBd1FGQmdjSUFRUldleUpoZEhSeWN5STZleUpvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkluQmxaWEl3TG1OaGNuSnBaWEl0CmJtVjBJaXdpYUdZdVZIbHdaU0k2SW5CbFpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnVmRTeXN1MkMKc0ljK1RWZlg2dXVERzFuSkprWnQwMExmdmMzRUdVcVJkUjhDSUdiM1RFbkFHc2M5OFpqb3JaMG40MDZMaHU4Lwozd2t1Ym1CcjZtbmVsWVExCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/07 05:19:43 [DEBUG] newEnrollmentResponse peer0.carrier-net\n2020/11/07 05:19:43 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem\n2020/11/07 05:19:43 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/1ce5c95d817f2d4ad12d54b4c478aa2694c0fcd4963c62ed98c20cc05ed96692_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key\n+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt\n+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:43 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:43 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0750}\n2020/11/07 05:19:43 [DEBUG] Entered runEnroll\n2020/11/07 05:19:43 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0750}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a07b0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c0540 DummyKeystore:<nil>}\n2020/11/07 05:19:43 [INFO] TLS Enabled\n2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:43 [DEBUG] Client Cert File: \n2020/11/07 05:19:43 [DEBUG] Client Key File: \n2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:43 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:43 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:43 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:43 [INFO] encoded CSR\n2020/11/07 05:19:43 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQ70DwuF8Lifg7vdenuzyMhmdH3S7FMqmFp9U3eCR0mUgxFQ+Uw2YVAn1+ErTrN\\nfQzYLV3+CJZNzKEjpqsNe05foDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0cAMEQCIBjr\\nTHRgBhQ65pLRKDZbUCwy24Hod6Z6/o4bHDViSArcAiAgigiapVEAgVId7OkWKqja\\n69xdTZ2lG6QybwxCmKDeGg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:43 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:43 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVY3pxeWZra0IySnk4UTIwUnY0M2VEOFdjOVhZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFTzlBOExoZkM0bjRPNzNYcDdzOGpJWm5SOTB1eFRLcGhhZlZOM2drZEpsSU0KUlVQbE1ObUZRSjlmaEswNnpYME0yQzFkL2dpV1RjeWhJNmFyRFh0T1g2T0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVUHhSUFJ4bUM0UVhYYlJBaVJ0ZHcrNWRxCnY5OHdId1lEVlIwakJCZ3dGb0FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkweVkzTjZjekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXdMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKYTQ3VWtSRForQkVaZTRkN3lQSlNJWnNoTWc2TVRLc1N0clNJZnJzWmVHc0NJQU12YmsyMnZHeHkxZjdoTWVGawp3QTlIWm5DVHl1WDgxenRoODNxSUgxdzUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:43 [DEBUG] newEnrollmentResponse peer0.carrier-net\n2020/11/07 05:19:43 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem\n2020/11/07 05:19:43 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ let COUNTER=COUNTER+1\n+ '[' 1 -lt 2 ']'\n+ PEER=peer1.carrier-net\n+ CSR_HOSTS=peer1.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:43 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:43 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/07 05:19:43 [DEBUG] Checking for enrollment\n2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a570}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a0ee0 DummyKeystore:<nil>}\n2020/11/07 05:19:43 [INFO] TLS Enabled\n2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:43 [DEBUG] Client Cert File: \n2020/11/07 05:19:43 [DEBUG] Client Key File: \n2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:43 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a570}\n2020/11/07 05:19:43 [DEBUG] Entered runRegister\n2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a570}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a0ee0 DummyKeystore:<nil>}\n2020/11/07 05:19:43 [INFO] TLS Enabled\n2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:43 [DEBUG] Client Cert File: \n2020/11/07 05:19:43 [DEBUG] Client Key File: \n2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:43 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/07 05:19:43 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:43 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/07 05:19:43 [DEBUG] Register { Name:peer1.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/07 05:19:43 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:43 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"peer1.carrier-net\",\"type\":\"peer\",\"secret\":\"peer1.carrier-net-pw\",\"affiliation\":\"\"}\n2020/11/07 05:19:43 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:43 [DEBUG] Response body result: map[secret:peer1.carrier-net-pw]\n2020/11/07 05:19:43 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:43 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:43 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203985d0}\n2020/11/07 05:19:43 [DEBUG] Entered runEnroll\n2020/11/07 05:19:43 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203985d0}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039d390 DummyKeystore:<nil>}\n2020/11/07 05:19:43 [INFO] TLS Enabled\n2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:43 [DEBUG] Client Cert File: \n2020/11/07 05:19:43 [DEBUG] Client Key File: \n2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:43 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:43 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:43 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:43 [INFO] encoded CSR\n2020/11/07 05:19:43 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIByjCCAXACAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAT6u5lxhxv0VqEQx7TICDAzTNDkWwhzSU+GQFwYyjCeHR7lNGG/36heYyFjfrCq\\n/HLEJsxs1Bu/b5wDQOBASHq/oIGjMIGgBgkqhkiG9w0BCQ4xgZIwgY8wgYwGA1Ud\\nEQSBhDCBgYIRcGVlcjEuY2Fycmllci1uZXSCI3BlZXIxLmNhcnJpZXItbmV0LnN2\\nYy5jbHVzdGVyLmxvY2FsghFwZWVyMS5jYXJyaWVyLm5ldII0cGVlcjEuY2Fycmll\\nci1uZXQuY2Fycmllci1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjO\\nPQQDAgNIADBFAiEAoTCIQjOg+IHWofwaBi7SN+Sl93uiHlv2NR+48h3COG4CIDb4\\nUaG1NEMuHAkliEM86y2ithETSbl5neOMJknEvWCm\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:43 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:43 [DEBUG] Response body result: map[ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQXQrZ0F3SUJBZ0lVVUJWNEM2RzdKS0gyRFBpV1FuUGxJaWhXUWtzd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFK3J1WmNZY2I5RmFoRU1lMHlBZ3dNMHpRNUZzSWMwbFBoa0JjR01vd25oMGUKNVRSaHY5K29YbU1oWTM2d3F2eHl4Q2JNYk5RYnYyK2NBMERnUUVoNnY2T0NBWFF3Z2dGd01BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVNWNSSHZ2dGdMUE1OeTRtaVRkWUpWZGQwelpjd0h3WURWUjBqQkJnd0ZvQVUKSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd2dZd0dBMVVkRVFTQmhEQ0JnWUlSY0dWbGNqRXVZMkZ5Y21sbApjaTF1WlhTQ0kzQmxaWEl4TG1OaGNuSnBaWEl0Ym1WMExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2doRndaV1Z5Ck1TNWpZWEp5YVdWeUxtNWxkSUkwY0dWbGNqRXVZMkZ5Y21sbGNpMXVaWFF1WTJGeWNtbGxjaTF1WlhRdWMzVnUKWldWc0xuQjJkQzUzYlhSaVlXWXVhVzVtYnpCaUJnZ3FBd1FGQmdjSUFRUldleUpoZEhSeWN5STZleUpvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkluQmxaWEl4TG1OaGNuSnBaWEl0CmJtVjBJaXdpYUdZdVZIbHdaU0k2SW5CbFpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUpCaWpmVHAKU2czV0gxMFRnTFAyMW0zVlY2UTZxaHZHdit4cFUzZ29RMDRWQWlCNzgrZ1Zqck1aZGcrdS95NHROUVhGZTJacworQmNyYnl6NkR6QnlPUjB3MFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]\n2020/11/07 05:19:43 [DEBUG] newEnrollmentResponse peer1.carrier-net\n2020/11/07 05:19:43 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem\n2020/11/07 05:19:43 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/f36fd7e8b83aa5bbe07df0c0390e03cb8399f641321a26a6980c2c84ab462aa3_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key\n+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt\n+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/07 05:19:43 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:43 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398720}\n2020/11/07 05:19:43 [DEBUG] Entered runEnroll\n2020/11/07 05:19:43 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398720}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019a580 DummyKeystore:<nil>}\n2020/11/07 05:19:43 [INFO] TLS Enabled\n2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:43 [DEBUG] Client Cert File: \n2020/11/07 05:19:43 [DEBUG] Client Key File: \n2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:43 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:43 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:43 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:43 [INFO] encoded CSR\n2020/11/07 05:19:43 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARJA5ZakJSoYC6MzLiJ6LAPcmNtAon/kgNgvL+47Fqayu4XqVyRXPhuhiXFcGe+\\n8haV2CZ7lMKgjzPsv2ZdtQNroDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0gAMEUCIQDT\\nBRQyacMD4TLnQ4kucfNs+oq2brEQy6TwbnGOfL6cXgIgPlEsM/S1gRwaDnkk12O5\\n3Iulw+VaxTTWsme6UwYnH0Q=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:43 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:43 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyekNDQWxXZ0F3SUJBZ0lVSEJuMCtvNnFEbjJMU1RYVGl1MVhkb0s3dGRRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFU1FPV1dwQ1VxR0F1ak15NGllaXdEM0pqYlFLSi81SURZTHkvdU94YW1zcnUKRjZsY2tWejRib1lseFhCbnZ2SVdsZGdtZTVUQ29JOHo3TDltWGJVRGE2T0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVc1VmczQ2alovSnB5MGVNSEVKSytrOGF4CkZhRXdId1lEVlIwakJCZ3dGb0FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkweVkzTjZjekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXhMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWgKQU5hL3pYNHlaYjBaYktzR0hhL1ZhVW5EaEpXNndLZE9raEI3VGhFVmFPZ0ZBaUJmQlplb1l1RXRjWkdqcDNGcAorS2RPMFBXY0lBS2o0MGNOTDJnVHBUNTkwZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:43 [DEBUG] newEnrollmentResponse peer1.carrier-net\n2020/11/07 05:19:43 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem\n2020/11/07 05:19:43 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ let COUNTER=COUNTER+1\n+ '[' 2 -lt 2 ']'\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ORG_NAME=carrier\n+ TYPE_FOLDER=peers\n+ NO_OF_USERS=1\n+ AFFILIATION=carrier\n+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ '[' peer '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@carrier-net\n+ ORG_USERPASS=User1@carrier-net-pw\n+ '[' peer = peer ']'\n+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:44 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/07 05:19:44 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/07 05:19:44 [DEBUG] Checking for enrollment\n2020/11/07 05:19:44 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0540}\n2020/11/07 05:19:44 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c05a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:44 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398c80 DummyKeystore:<nil>}\n2020/11/07 05:19:44 [INFO] TLS Enabled\n2020/11/07 05:19:44 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:44 [DEBUG] Client Cert File: \n2020/11/07 05:19:44 [DEBUG] Client Key File: \n2020/11/07 05:19:44 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:44 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0540}\n2020/11/07 05:19:44 [DEBUG] Entered runRegister\n2020/11/07 05:19:44 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0540}\n2020/11/07 05:19:44 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c05a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:44 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398c80 DummyKeystore:<nil>}\n2020/11/07 05:19:44 [INFO] TLS Enabled\n2020/11/07 05:19:44 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:44 [DEBUG] Client Cert File: \n2020/11/07 05:19:44 [DEBUG] Client Key File: \n2020/11/07 05:19:44 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:44 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/07 05:19:44 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/07 05:19:44 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/07 05:19:44 [DEBUG] Register { Name:User1@carrier-net Type:user Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/07 05:19:44 [DEBUG] Adding token-based authorization header\n2020/11/07 05:19:44 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"User1@carrier-net\",\"type\":\"user\",\"secret\":\"User1@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/07 05:19:44 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:44 [DEBUG] Response body result: map[secret:User1@carrier-net-pw]\n2020/11/07 05:19:44 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1\n2020/11/07 05:19:44 [DEBUG] Home directory: /root/ca-tools/carrier/client1\n2020/11/07 05:19:44 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml\n2020/11/07 05:19:44 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201907e0}\n2020/11/07 05:19:44 [DEBUG] Entered runEnroll\n2020/11/07 05:19:44 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:44 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201907e0}\n2020/11/07 05:19:44 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420190840 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:44 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a46a0 DummyKeystore:<nil>}\n2020/11/07 05:19:44 [INFO] TLS Enabled\n2020/11/07 05:19:44 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:44 [DEBUG] Client Cert File: \n2020/11/07 05:19:44 [DEBUG] Client Key File: \n2020/11/07 05:19:44 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:44 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:44 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:44 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:44 [INFO] encoded CSR\n2020/11/07 05:19:44 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASMvBtzy0y/xC8YAHd8E7d3ZXCkmCXKWxJUvwkhDQtQmL9H5OwQjk0+F/OTyHGo\\nS2ZxWhH7wJQBB+Q0DPFz/C7FoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0gAMEUCIQC8\\nf0asS3Wxw5Hte9YujGelmweW1iTGk2OgAm1mOkr1EgIgW0FnUHoKQ/Hnc0jhAVnL\\nd1a+wHq4unItesUFHeTUnN8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:44 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:44 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN4akNDQW15Z0F3SUJBZ0lVTy9tODcxcDBzZUY5R01jZjNZRW5kZjVtdFBvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1IY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXk4RzNQTFRML0VMeGdBZDN3VHQzZGwKY0tTWUpjcGJFbFMvQ1NFTkMxQ1l2MGZrN0JDT1RUNFg4NVBJY2FoTFpuRmFFZnZBbEFFSDVEUU04WFA4THNXagpnZkl3Z2U4d0RnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRGZ3CmlqRmlRVmMwR2d2SHUzR2NJeTZ5S2lSOE1COEdBMVVkSXdRWU1CYUFGQ0NuTXBMdERWUjlHUURLSXFsTkI1MjAKZjBNMk1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0TW1OemVuTXdhUVlJS2dNRQpCUVlIQ0FFRVhYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1ClJXNXliMnhzYldWdWRFbEVJam9pVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmwKY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEwYnByZDdwT1NqRldTcStWMlBtSFE1ays0cG0vdFB0eAptTWxNR2hSV0lLd0NJSFRueDdzcnpXME9EbnRYcWVnVVdvSjI4dUVVbEZUaUc5aWdmWlZDQnMzMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/07 05:19:44 [DEBUG] newEnrollmentResponse User1@carrier-net\n2020/11/07 05:19:44 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/msp/signcerts/cert.pem\n2020/11/07 05:19:44 [INFO] Stored root CA certificate at /root/ca-tools/carrier/client1/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /root/ca-tools/carrier/client1/msp/admincerts\n+ cp /root/ca-tools/carrier/client1/msp/signcerts/cert.pem /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n2020/11/07 05:19:44 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/07 05:19:44 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c06c0}\n2020/11/07 05:19:44 [DEBUG] Entered runEnroll\n2020/11/07 05:19:44 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }\n2020/11/07 05:19:44 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c06c0}\n2020/11/07 05:19:44 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/07 05:19:44 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420393960 DummyKeystore:<nil>}\n2020/11/07 05:19:44 [INFO] TLS Enabled\n2020/11/07 05:19:44 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/07 05:19:44 [DEBUG] Client Cert File: \n2020/11/07 05:19:44 [DEBUG] Client Key File: \n2020/11/07 05:19:44 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/07 05:19:44 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/07 05:19:44 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/07 05:19:44 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/07 05:19:44 [INFO] encoded CSR\n2020/11/07 05:19:44 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBNpN5I/sgLXaR4LeT0uzjD7m+6z1t+L/EjRUTaEO6OIKiE51O+wuQCLFBjU9CIGV\\n+Xtbbn9+dXJ2/4o4LS3UXzegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtMmNzenMwCgYIKoZIzj0EAwIDRwAwRAIgbXmy\\nnMxgOsU9KZOmA2njYvYkWq7tDpAZTziooKmQ7kwCIB+sOGKUXtPMC8aHSDRfkE9r\\ncbXbLX9NacF6nz8LfDXK\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/07 05:19:44 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/07 05:19:44 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQW8yZ0F3SUJBZ0lVZmVJUU90WW56RTRRVSs5UkJEVFJwSC9hdHJBd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTnBONUkvc2dMWGFSNExlVDB1empEN20KKzZ6MXQrTC9FalJVVGFFTzZPSUtpRTUxTyt3dVFDTEZCalU5Q0lHVitYdGJibjkrZFhKMi80bzRMUzNVWHplagpnZ0VTTUlJQkRqQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRVFZL2kvODBpT3U2S3VxMW4xWVc3WVUKMms0MU1COEdBMVVkSXdRWU1CYUFGQ0NuTXBMdERWUjlHUURLSXFsTkI1MjBmME0yTUNRR0ExVWRFUVFkTUJ1QwpHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0TW1OemVuTXdhUVlJS2dNRUJRWUhDQUVFWFhzaVlYUjBjbk1pCk9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmxjaUo5ZlRBS0JnZ3Foa2pPUFFRRApBZ05IQURCRUFpQm9RNzE2ZUVoa1p0VS9HbFZ2RmdnWjVQblZkbjM3N2p3VVVEQ1VzdmpKcHdJZ09EdmxqdW9ICk1vcnZyeWhIeGk4VElEZkRXbURhNGw1TXB5cU5lWnU5WGJnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net]]\n2020/11/07 05:19:44 [DEBUG] newEnrollmentResponse User1@carrier-net\n2020/11/07 05:19:44 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/tls/signcerts/cert.pem\n2020/11/07 05:19:44 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls\n+ cp /root/ca-tools/carrier/client1/tls/keystore/4b177aa9cd475b8015488af20c6d839f7f3e4da70192ae3ed3546b90101bba53_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key\n+ cp /root/ca-tools/carrier/client1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt\n+ cp /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=carrier",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=C=GB,ST=London,L=London,O=carrier",
        "+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ CA_ADMIN_USER=carrier-admin",
        "+ CA_ADMIN_PASS=carrier-adminpw",
        "+ ORG_ADMIN_USER=Admin@carrier-net",
        "+ ORG_ADMIN_PASS=Admin@carrier-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ NO_OF_PEERS=2",
        "+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:41 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:41 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:41 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062750}",
        "2020/11/07 05:19:41 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:41 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:41 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420062750}",
        "2020/11/07 05:19:41 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200627b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:41 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201978e0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:41 [INFO] TLS Enabled",
        "2020/11/07 05:19:41 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:41 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:41 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:41 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:41 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:41 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:41 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:41 [INFO] encoded CSR",
        "2020/11/07 05:19:41 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWDCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEPc9o\\nO5tNQcsjH7xAgRTApFLmiNSOKGwJKOg0GmfvPo78pdUBgu3QW+mDISK3FE/XMKKN\\nwkPipakAg8IF5jNkhaA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni0yY3N6czAKBggqhkjOPQQDAgNIADBFAiEAmqSuRzS0\\n4cOuTd9zFYUE/o6X+yrHSh0iKI1E90JPmUECIA+83l9cfrlU2ZpQD3tqDMPEAEmX\\nceBmCm3o1n0VfYDj\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:42 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:42 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTVENDQWUrZ0F3SUJBZ0lVYUJqVVFsVFRqR3c3REJob2VOODI4cjhHVHZFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OWTJGeWNtbGxjaTFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCRDNQYUR1YlRVSExJeCs4UUlFVXdLUlM1b2pVamloc0NTam9OQnBuN3o2Ty9LWFYKQVlMdDBGdnBneUVpdHhSUDF6Q2lqY0pENHFXcEFJUENCZVl6WklXamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRWFJUURiU1NvOVIwRmpiV09mR3VKY0VZbEg5Ck1COEdBMVVkSXdRWU1CYUFGQ0NuTXBMdERWUjlHUURLSXFsTkI1MjBmME0yTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0TW1OemVuTXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBS0VKWWg2YQpUMHI3WVNWNmNIWnJqU0plTnFacFluT1ZOZzJMUkQxSnJvbElBaUF3ZnVkS1puNGh1N2JOMEd0cXVnNVk2OFJ2ClViYmFZUmxVSHlUZmJoT2loQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS]]",
        "2020/11/07 05:19:42 [DEBUG] newEnrollmentResponse carrier-admin",
        "2020/11/07 05:19:42 [INFO] Stored client certificate at /root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/07 05:19:42 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-carrier/msp/cacerts/ca-carrier-net-7054.pem",
        "+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp",
        "2020/11/07 05:19:42 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:42 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Entered runGetCACert",
        "2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016bec0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a1fc0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:42 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:42 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:42 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/cainfo",
        "{}",
        "2020/11/07 05:19:42 [DEBUG] Received response",
        "statusCode=200 (200 OK)",
        "2020/11/07 05:19:42 [DEBUG] Response body result: map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5]",
        "2020/11/07 05:19:42 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:42 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:42 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:42 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:42 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398630}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039f7d0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:42 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:42 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398630}",
        "2020/11/07 05:19:42 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398630}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039f7d0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:42 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:42 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:42 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/07 05:19:42 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:42 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/07 05:19:42 [DEBUG] Register { Name:Admin@carrier-net Type:client Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{hf.Registrar.Roles client false} {hf.Registrar.Attributes * false} {hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true} {abac.init true true}] CAName:  }",
        "2020/11/07 05:19:42 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:42 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"Admin@carrier-net\",\"type\":\"client\",\"secret\":\"Admin@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"},{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true},{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true}]}",
        "2020/11/07 05:19:42 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:42 [DEBUG] Response body result: map[secret:Admin@carrier-net-pw]",
        "2020/11/07 05:19:42 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:42 [DEBUG] Home directory: /root/ca-tools/carrier/admin",
        "2020/11/07 05:19:42 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420177f20}",
        "2020/11/07 05:19:42 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:42 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420177f20}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420177f80 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019fd70 DummyKeystore:<nil>}",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:42 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:42 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:42 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:42 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:42 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:42 [INFO] encoded CSR",
        "2020/11/07 05:19:42 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATwZWR6T+/7IdJq021xt4SVvYH806wt4YOBh6OqADhJ0+zKm9FXD0sMidB1E5ji\\ndKM6L0eW66QqZjnNZdabRvLloDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0gAMEUCIQDY\\no5wF5LG3fhwwDww4Ku4/kj/X0YGgygqiaomePTnHdAIgNAIseGvHApMv8BhRUVyl\\nRc2C17UyuMj/KP+PSI4Zj+w=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:42 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:42 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4RENDQXBhZ0F3SUJBZ0lVUkduS2RWc3V0Y1Z4eTdLQVZWeDNFZDMzYkJFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFOEdWa2VrL3YreUhTYXROdGNiZUUKbGIyQi9OT3NMZUdEZ1llanFnQTRTZFBzeXB2UlZ3OUxESW5RZFJPWTRuU2pPaTlIbHV1a0ttWTV6V1hXbTBieQo1YU9DQVJrd2dnRVZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCUjNqeWp2S2xlc0xFN1ExQ2xWelBGLzFBeDd3REFmQmdOVkhTTUVHREFXZ0JRZ3B6S1M3UTFVZlJrQXlpS3AKVFFlZHRIOUROakFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxUSmpjM3B6TUlHTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwb2VnaHhQQXYxcTQ3bHdJRjdEakFGQ2pXT2tWNXhJM2gxZHRZa0xGCjJ6Y0NJRGVvb0d3ZVBIQjRra3dBK1E2bGlQUWtqSi9ycVREN0Y1OWs4eHU0amt3cgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net]]",
        "2020/11/07 05:19:42 [DEBUG] newEnrollmentResponse Admin@carrier-net",
        "2020/11/07 05:19:42 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/msp/signcerts/cert.pem",
        "2020/11/07 05:19:42 [INFO] Stored root CA certificate at /root/ca-tools/carrier/admin/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts",
        "+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem",
        "+ mkdir /root/ca-tools/carrier/admin/msp/admincerts",
        "+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:42 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:42 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420060720}",
        "2020/11/07 05:19:42 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:42 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420060720}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420060780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197f80 DummyKeystore:<nil>}",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:42 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:42 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:42 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:42 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:42 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:42 [INFO] encoded CSR",
        "2020/11/07 05:19:42 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARtr5DZhCGM9g6W55aDDIbkFU2p1wbhgMkKPycTnFO0BZ9aEpnCpdeTw66hyYHn\\nq3sBVmGufw4/KxWh/48Ypij2oDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0gAMEUCIQCj\\npyInHnKOw0qdmTbmLMindHk8m7UynIncT9TwQVX2MAIgdxsvoiEy+Az2Ck1k+Fxf\\nQI9EcBU/ZuYnLod3PHtSH9c=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:42 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:42 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQXJXZ0F3SUJBZ0lVT2lWWDQxTkN2dVNlYVI2SjBnOUlGYkdKQjFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFYmErUTJZUWhqUFlPbHVlV2d3eUcKNUJWTnFkY0c0WURKQ2o4bkU1eFR0QVdmV2hLWndxWFhrOE91b2NtQjU2dDdBVlpocm44T1B5c1ZvZitQR0tZbwo5cU9DQVRnd2dnRTBNQTRHQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVYVdYNThXLzdKWDVOSTNMc3ZLRzMKN3VDSXdoWXdId1lEVlIwakJCZ3dGb0FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0pBWURWUjBSQkIwdwpHNElaWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkweVkzTjZjekNCamdZSUtnTUVCUVlIQ0FFRWdZRjdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENKaFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SW1OaGNuSnBaWElpTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKQlpHMXBia0JqWVhKeQphV1Z5TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbGJuUWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFKOVFpdnJJemNKcDljV2hMayt1WkQzaGdoTmVQeW82YmZwOTNGSFlERjhvQWlCeWFkSmVCUFNWY2hQbHRVc1oKdGpsd3ZXV2FmY3Buem02eThpUGgxbjNtNFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:42 [DEBUG] newEnrollmentResponse Admin@carrier-net",
        "2020/11/07 05:19:42 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/tls/signcerts/cert.pem",
        "2020/11/07 05:19:42 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/admin/tls/keystore/44501b55595e83645522ca104f15505553eef359f6aa924ff5b14d4d08d96ab2_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key",
        "+ cp /root/ca-tools/carrier/admin/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt",
        "+ cp /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt",
        "+ COUNTER=0",
        "+ '[' 0 -lt 2 ']'",
        "+ PEER=peer0.carrier-net",
        "+ CSR_HOSTS=peer0.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:42 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:42 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:42 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fd70}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fdd0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039d310 DummyKeystore:<nil>}",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:42 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:42 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fd70}",
        "2020/11/07 05:19:42 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42006fd70}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42006fdd0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039d310 DummyKeystore:<nil>}",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:42 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:42 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:42 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/07 05:19:42 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:42 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/07 05:19:42 [DEBUG] Register { Name:peer0.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/07 05:19:42 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:42 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"peer0.carrier-net\",\"type\":\"peer\",\"secret\":\"peer0.carrier-net-pw\",\"affiliation\":\"\"}",
        "2020/11/07 05:19:42 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:42 [DEBUG] Response body result: map[secret:peer0.carrier-net-pw]",
        "2020/11/07 05:19:42 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:42 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:42 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420137cb0}",
        "2020/11/07 05:19:42 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:42 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:42 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420137cb0}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420137d10 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:42 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42046d290 DummyKeystore:<nil>}",
        "2020/11/07 05:19:42 [INFO] TLS Enabled",
        "2020/11/07 05:19:42 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:42 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:42 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:42 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:42 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:42 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:42 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:42 [INFO] encoded CSR",
        "2020/11/07 05:19:42 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIByTCCAXACAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATkU4JZ4Cyokfuhmk1PaKVgm7SVG/XxxWNW+Kh5RpFUYoEkv+Nj9EHzcvJ/wUu2\\nnWJ6/b9b+5b1UpuuErdnirmPoIGjMIGgBgkqhkiG9w0BCQ4xgZIwgY8wgYwGA1Ud\\nEQSBhDCBgYIRcGVlcjAuY2Fycmllci1uZXSCI3BlZXIwLmNhcnJpZXItbmV0LnN2\\nYy5jbHVzdGVyLmxvY2FsghFwZWVyMC5jYXJyaWVyLm5ldII0cGVlcjAuY2Fycmll\\nci1uZXQuY2Fycmllci1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjO\\nPQQDAgNHADBEAiBA3hNnkITk0v/mUD4Wqfem9MxFZEp87dsmTOdbfdx8WQIgYqt7\\nV3u8jvZtfmYb3bbtN15YakwmOnGTiFyKzgMtlXs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:43 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:43 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQXQrZ0F3SUJBZ0lVTnBaeFRQOVMzWTdwVFh5WVVBQ0M1bnFuZ2Njd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFNUZPQ1dlQXNxSkg3b1pwTlQyaWxZSnUwbFJ2MThjVmpWdmlvZVVhUlZHS0IKSkwvalkvUkI4M0x5ZjhGTHRwMWlldjIvVy91VzlWS2JyaEszWjRxNWo2T0NBWFF3Z2dGd01BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVZThabUsrL2ZCd3BZZUZicU1YSmxLSkp1UFRRd0h3WURWUjBqQkJnd0ZvQVUKSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd2dZd0dBMVVkRVFTQmhEQ0JnWUlSY0dWbGNqQXVZMkZ5Y21sbApjaTF1WlhTQ0kzQmxaWEl3TG1OaGNuSnBaWEl0Ym1WMExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2doRndaV1Z5Ck1DNWpZWEp5YVdWeUxtNWxkSUkwY0dWbGNqQXVZMkZ5Y21sbGNpMXVaWFF1WTJGeWNtbGxjaTF1WlhRdWMzVnUKWldWc0xuQjJkQzUzYlhSaVlXWXVhVzVtYnpCaUJnZ3FBd1FGQmdjSUFRUldleUpoZEhSeWN5STZleUpvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkluQmxaWEl3TG1OaGNuSnBaWEl0CmJtVjBJaXdpYUdZdVZIbHdaU0k2SW5CbFpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnVmRTeXN1MkMKc0ljK1RWZlg2dXVERzFuSkprWnQwMExmdmMzRUdVcVJkUjhDSUdiM1RFbkFHc2M5OFpqb3JaMG40MDZMaHU4Lwozd2t1Ym1CcjZtbmVsWVExCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/07 05:19:43 [DEBUG] newEnrollmentResponse peer0.carrier-net",
        "2020/11/07 05:19:43 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem",
        "2020/11/07 05:19:43 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/1ce5c95d817f2d4ad12d54b4c478aa2694c0fcd4963c62ed98c20cc05ed96692_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:43 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:43 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0750}",
        "2020/11/07 05:19:43 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:43 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0750}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a07b0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c0540 DummyKeystore:<nil>}",
        "2020/11/07 05:19:43 [INFO] TLS Enabled",
        "2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:43 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:43 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:43 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:43 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:43 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:43 [INFO] encoded CSR",
        "2020/11/07 05:19:43 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQ70DwuF8Lifg7vdenuzyMhmdH3S7FMqmFp9U3eCR0mUgxFQ+Uw2YVAn1+ErTrN\\nfQzYLV3+CJZNzKEjpqsNe05foDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0cAMEQCIBjr\\nTHRgBhQ65pLRKDZbUCwy24Hod6Z6/o4bHDViSArcAiAgigiapVEAgVId7OkWKqja\\n69xdTZ2lG6QybwxCmKDeGg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:43 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:43 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVY3pxeWZra0IySnk4UTIwUnY0M2VEOFdjOVhZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFTzlBOExoZkM0bjRPNzNYcDdzOGpJWm5SOTB1eFRLcGhhZlZOM2drZEpsSU0KUlVQbE1ObUZRSjlmaEswNnpYME0yQzFkL2dpV1RjeWhJNmFyRFh0T1g2T0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVUHhSUFJ4bUM0UVhYYlJBaVJ0ZHcrNWRxCnY5OHdId1lEVlIwakJCZ3dGb0FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkweVkzTjZjekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXdMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKYTQ3VWtSRForQkVaZTRkN3lQSlNJWnNoTWc2TVRLc1N0clNJZnJzWmVHc0NJQU12YmsyMnZHeHkxZjdoTWVGawp3QTlIWm5DVHl1WDgxenRoODNxSUgxdzUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:43 [DEBUG] newEnrollmentResponse peer0.carrier-net",
        "2020/11/07 05:19:43 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem",
        "2020/11/07 05:19:43 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 1 -lt 2 ']'",
        "+ PEER=peer1.carrier-net",
        "+ CSR_HOSTS=peer1.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:43 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:43 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:43 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a570}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a0ee0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:43 [INFO] TLS Enabled",
        "2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:43 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:43 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:43 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a570}",
        "2020/11/07 05:19:43 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039a570}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039a5d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a0ee0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:43 [INFO] TLS Enabled",
        "2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:43 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:43 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:43 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/07 05:19:43 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:43 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/07 05:19:43 [DEBUG] Register { Name:peer1.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/07 05:19:43 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:43 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"peer1.carrier-net\",\"type\":\"peer\",\"secret\":\"peer1.carrier-net-pw\",\"affiliation\":\"\"}",
        "2020/11/07 05:19:43 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:43 [DEBUG] Response body result: map[secret:peer1.carrier-net-pw]",
        "2020/11/07 05:19:43 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:43 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:43 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203985d0}",
        "2020/11/07 05:19:43 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:43 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203985d0}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039d390 DummyKeystore:<nil>}",
        "2020/11/07 05:19:43 [INFO] TLS Enabled",
        "2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:43 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:43 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:43 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:43 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:43 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:43 [INFO] encoded CSR",
        "2020/11/07 05:19:43 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIByjCCAXACAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAT6u5lxhxv0VqEQx7TICDAzTNDkWwhzSU+GQFwYyjCeHR7lNGG/36heYyFjfrCq\\n/HLEJsxs1Bu/b5wDQOBASHq/oIGjMIGgBgkqhkiG9w0BCQ4xgZIwgY8wgYwGA1Ud\\nEQSBhDCBgYIRcGVlcjEuY2Fycmllci1uZXSCI3BlZXIxLmNhcnJpZXItbmV0LnN2\\nYy5jbHVzdGVyLmxvY2FsghFwZWVyMS5jYXJyaWVyLm5ldII0cGVlcjEuY2Fycmll\\nci1uZXQuY2Fycmllci1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjO\\nPQQDAgNIADBFAiEAoTCIQjOg+IHWofwaBi7SN+Sl93uiHlv2NR+48h3COG4CIDb4\\nUaG1NEMuHAkliEM86y2ithETSbl5neOMJknEvWCm\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:43 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:43 [DEBUG] Response body result: map[ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQXQrZ0F3SUJBZ0lVVUJWNEM2RzdKS0gyRFBpV1FuUGxJaWhXUWtzd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFK3J1WmNZY2I5RmFoRU1lMHlBZ3dNMHpRNUZzSWMwbFBoa0JjR01vd25oMGUKNVRSaHY5K29YbU1oWTM2d3F2eHl4Q2JNYk5RYnYyK2NBMERnUUVoNnY2T0NBWFF3Z2dGd01BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVNWNSSHZ2dGdMUE1OeTRtaVRkWUpWZGQwelpjd0h3WURWUjBqQkJnd0ZvQVUKSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd2dZd0dBMVVkRVFTQmhEQ0JnWUlSY0dWbGNqRXVZMkZ5Y21sbApjaTF1WlhTQ0kzQmxaWEl4TG1OaGNuSnBaWEl0Ym1WMExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2doRndaV1Z5Ck1TNWpZWEp5YVdWeUxtNWxkSUkwY0dWbGNqRXVZMkZ5Y21sbGNpMXVaWFF1WTJGeWNtbGxjaTF1WlhRdWMzVnUKWldWc0xuQjJkQzUzYlhSaVlXWXVhVzVtYnpCaUJnZ3FBd1FGQmdjSUFRUldleUpoZEhSeWN5STZleUpvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkluQmxaWEl4TG1OaGNuSnBaWEl0CmJtVjBJaXdpYUdZdVZIbHdaU0k2SW5CbFpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUpCaWpmVHAKU2czV0gxMFRnTFAyMW0zVlY2UTZxaHZHdit4cFUzZ29RMDRWQWlCNzgrZ1Zqck1aZGcrdS95NHROUVhGZTJacworQmNyYnl6NkR6QnlPUjB3MFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]",
        "2020/11/07 05:19:43 [DEBUG] newEnrollmentResponse peer1.carrier-net",
        "2020/11/07 05:19:43 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem",
        "2020/11/07 05:19:43 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/f36fd7e8b83aa5bbe07df0c0390e03cb8399f641321a26a6980c2c84ab462aa3_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/07 05:19:43 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:43 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398720}",
        "2020/11/07 05:19:43 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:43 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:43 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420398720}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420398780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:43 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019a580 DummyKeystore:<nil>}",
        "2020/11/07 05:19:43 [INFO] TLS Enabled",
        "2020/11/07 05:19:43 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:43 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:43 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:43 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:43 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:43 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:43 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:43 [INFO] encoded CSR",
        "2020/11/07 05:19:43 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARJA5ZakJSoYC6MzLiJ6LAPcmNtAon/kgNgvL+47Fqayu4XqVyRXPhuhiXFcGe+\\n8haV2CZ7lMKgjzPsv2ZdtQNroDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0gAMEUCIQDT\\nBRQyacMD4TLnQ4kucfNs+oq2brEQy6TwbnGOfL6cXgIgPlEsM/S1gRwaDnkk12O5\\n3Iulw+VaxTTWsme6UwYnH0Q=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:43 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:43 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyekNDQWxXZ0F3SUJBZ0lVSEJuMCtvNnFEbjJMU1RYVGl1MVhkb0s3dGRRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFU1FPV1dwQ1VxR0F1ak15NGllaXdEM0pqYlFLSi81SURZTHkvdU94YW1zcnUKRjZsY2tWejRib1lseFhCbnZ2SVdsZGdtZTVUQ29JOHo3TDltWGJVRGE2T0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVc1VmczQ2alovSnB5MGVNSEVKSytrOGF4CkZhRXdId1lEVlIwakJCZ3dGb0FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkweVkzTjZjekJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXhMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWgKQU5hL3pYNHlaYjBaYktzR0hhL1ZhVW5EaEpXNndLZE9raEI3VGhFVmFPZ0ZBaUJmQlplb1l1RXRjWkdqcDNGcAorS2RPMFBXY0lBS2o0MGNOTDJnVHBUNTkwZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:43 [DEBUG] newEnrollmentResponse peer1.carrier-net",
        "2020/11/07 05:19:43 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem",
        "2020/11/07 05:19:43 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 2 -lt 2 ']'",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ORG_NAME=carrier",
        "+ TYPE_FOLDER=peers",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ '[' peer '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@carrier-net",
        "+ ORG_USERPASS=User1@carrier-net-pw",
        "+ '[' peer = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:44 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/07 05:19:44 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:44 [DEBUG] Checking for enrollment",
        "2020/11/07 05:19:44 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0540}",
        "2020/11/07 05:19:44 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c05a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:44 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398c80 DummyKeystore:<nil>}",
        "2020/11/07 05:19:44 [INFO] TLS Enabled",
        "2020/11/07 05:19:44 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:44 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:44 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:44 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:44 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0540}",
        "2020/11/07 05:19:44 [DEBUG] Entered runRegister",
        "2020/11/07 05:19:44 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c0540}",
        "2020/11/07 05:19:44 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c05a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:44 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398c80 DummyKeystore:<nil>}",
        "2020/11/07 05:19:44 [INFO] TLS Enabled",
        "2020/11/07 05:19:44 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:44 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:44 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:44 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:44 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/07 05:19:44 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/07 05:19:44 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/07 05:19:44 [DEBUG] Register { Name:User1@carrier-net Type:user Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/07 05:19:44 [DEBUG] Adding token-based authorization header",
        "2020/11/07 05:19:44 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"User1@carrier-net\",\"type\":\"user\",\"secret\":\"User1@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/07 05:19:44 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:44 [DEBUG] Response body result: map[secret:User1@carrier-net-pw]",
        "2020/11/07 05:19:44 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1",
        "2020/11/07 05:19:44 [DEBUG] Home directory: /root/ca-tools/carrier/client1",
        "2020/11/07 05:19:44 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml",
        "2020/11/07 05:19:44 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201907e0}",
        "2020/11/07 05:19:44 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:44 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:44 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201907e0}",
        "2020/11/07 05:19:44 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420190840 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:44 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a46a0 DummyKeystore:<nil>}",
        "2020/11/07 05:19:44 [INFO] TLS Enabled",
        "2020/11/07 05:19:44 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:44 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:44 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:44 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:44 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:44 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:44 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:44 [INFO] encoded CSR",
        "2020/11/07 05:19:44 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASMvBtzy0y/xC8YAHd8E7d3ZXCkmCXKWxJUvwkhDQtQmL9H5OwQjk0+F/OTyHGo\\nS2ZxWhH7wJQBB+Q0DPFz/C7FoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LTJjc3pzMAoGCCqGSM49BAMCA0gAMEUCIQC8\\nf0asS3Wxw5Hte9YujGelmweW1iTGk2OgAm1mOkr1EgIgW0FnUHoKQ/Hnc0jhAVnL\\nd1a+wHq4unItesUFHeTUnN8=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:44 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:44 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN4akNDQW15Z0F3SUJBZ0lVTy9tODcxcDBzZUY5R01jZjNZRW5kZjVtdFBvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1IY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXk4RzNQTFRML0VMeGdBZDN3VHQzZGwKY0tTWUpjcGJFbFMvQ1NFTkMxQ1l2MGZrN0JDT1RUNFg4NVBJY2FoTFpuRmFFZnZBbEFFSDVEUU04WFA4THNXagpnZkl3Z2U4d0RnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRGZ3CmlqRmlRVmMwR2d2SHUzR2NJeTZ5S2lSOE1COEdBMVVkSXdRWU1CYUFGQ0NuTXBMdERWUjlHUURLSXFsTkI1MjAKZjBNMk1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0TW1OemVuTXdhUVlJS2dNRQpCUVlIQ0FFRVhYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1ClJXNXliMnhzYldWdWRFbEVJam9pVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmwKY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEwYnByZDdwT1NqRldTcStWMlBtSFE1ays0cG0vdFB0eAptTWxNR2hSV0lLd0NJSFRueDdzcnpXME9EbnRYcWVnVVdvSjI4dUVVbEZUaUc5aWdmWlZDQnMzMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/07 05:19:44 [DEBUG] newEnrollmentResponse User1@carrier-net",
        "2020/11/07 05:19:44 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/msp/signcerts/cert.pem",
        "2020/11/07 05:19:44 [INFO] Stored root CA certificate at /root/ca-tools/carrier/client1/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /root/ca-tools/carrier/client1/msp/admincerts",
        "+ cp /root/ca-tools/carrier/client1/msp/signcerts/cert.pem /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "2020/11/07 05:19:44 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/07 05:19:44 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c06c0}",
        "2020/11/07 05:19:44 [DEBUG] Entered runEnroll",
        "2020/11/07 05:19:44 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  }",
        "2020/11/07 05:19:44 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-2cszs] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c06c0}",
        "2020/11/07 05:19:44 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/07 05:19:44 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420393960 DummyKeystore:<nil>}",
        "2020/11/07 05:19:44 [INFO] TLS Enabled",
        "2020/11/07 05:19:44 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/07 05:19:44 [DEBUG] Client Cert File: ",
        "2020/11/07 05:19:44 [DEBUG] Client Key File: ",
        "2020/11/07 05:19:44 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/07 05:19:44 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-2cszs] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/07 05:19:44 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/07 05:19:44 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/07 05:19:44 [INFO] encoded CSR",
        "2020/11/07 05:19:44 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-2cszs\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBNpN5I/sgLXaR4LeT0uzjD7m+6z1t+L/EjRUTaEO6OIKiE51O+wuQCLFBjU9CIGV\\n+Xtbbn9+dXJ2/4o4LS3UXzegNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtMmNzenMwCgYIKoZIzj0EAwIDRwAwRAIgbXmy\\nnMxgOsU9KZOmA2njYvYkWq7tDpAZTziooKmQ7kwCIB+sOGKUXtPMC8aHSDRfkE9r\\ncbXbLX9NacF6nz8LfDXK\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/07 05:19:44 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/07 05:19:44 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQW8yZ0F3SUJBZ0lVZmVJUU90WW56RTRRVSs5UkJEVFJwSC9hdHJBd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFMU1EQmFGdzB5TVRFeE1EY3dOVEl3TURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTnBONUkvc2dMWGFSNExlVDB1empEN20KKzZ6MXQrTC9FalJVVGFFTzZPSUtpRTUxTyt3dVFDTEZCalU5Q0lHVitYdGJibjkrZFhKMi80bzRMUzNVWHplagpnZ0VTTUlJQkRqQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRVFZL2kvODBpT3U2S3VxMW4xWVc3WVUKMms0MU1COEdBMVVkSXdRWU1CYUFGQ0NuTXBMdERWUjlHUURLSXFsTkI1MjBmME0yTUNRR0ExVWRFUVFkTUJ1QwpHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0TW1OemVuTXdhUVlJS2dNRUJRWUhDQUVFWFhzaVlYUjBjbk1pCk9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmxjaUo5ZlRBS0JnZ3Foa2pPUFFRRApBZ05IQURCRUFpQm9RNzE2ZUVoa1p0VS9HbFZ2RmdnWjVQblZkbjM3N2p3VVVEQ1VzdmpKcHdJZ09EdmxqdW9ICk1vcnZyeWhIeGk4VElEZkRXbURhNGw1TXB5cU5lWnU5WGJnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVSkpzYWhwMldYYkVNWEVMNmJHQ2lNMVdsUEFVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGN3TlRFd01UVmFGdzB5TXpBNE1qZ3dOVEV3TVRWYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjhRU1VjZXJrQ3pjLy9XdGpoMkRUZENEcm1YenRIcjlVOHJwOGlkRW1GUG1WMk4rR1p1RkdSaDQwaHEzcG8KSkxMWVZHdWFpaWhTQ2NBWGMxUTVKaWlTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVJS2N5a3UwTlZIMFpBTW9pcVUwSG5iUi9Rell3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQYlhFUU5ZZ24vVitEMms1cEdzVzFleGlxU0FLSW9SV2dWcklxL0luNjByQWlFQWxCdGsKWkhsZm5WTFNzUGJaNS9QSUFycjBRZjFVcXlmaU9pcmlDcU10MU5FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIKddN8OhJ+i71FA03fUFx6cY7+TwX5GvJvFASFza/il4EiCasXVaO1qtwxw2P9x2AcKY9jMklEf5RH+Wb4CUbexFkBpECiCY8d6o0w7p+vb5N2abAdGajRvBH+b/jn761hE8zQs9MxIgTvx5OaRqLV7ze9odV3xyRlGNd4xiQWK1sDIi/3f1EKQiRAogRSyhAMS/xY4kgsWts+k9w5qK4bWWV0PKU8a+Rv0p3wASII9P9R8SJ7Vij2kGTSxY/vEbVIxZ3EMH5X1RoT+2sjA/IkQKIGVgsxdJTTqmU8PgrCWOQ3X6weAXlrcN/p57kwveO9QxEiCOi0cjN409W0fWLL891xoHAEGRKif+5BDxvwg5TiOAqSJECiA46RfYhbDvHtRZnLvSOPzqNRqtDOIA+1ck0hVr1qRkgxIguO+QZrZDVdTV962nxXOu64O5ZtSe0qlOzLO2YSulrT4iRAogDbIfGOo36703X2HX1kSDekjt1rF91ZLppzUXS0YDKngSIOwE27JOGe9OKmzewVBDgYh/4GPruQvvXGG9WArAOSxoKogBCiCsQRKswNFlQIwpB0dyzHKWaDS/rSxHUB5UUhuUz2KYVRIgYof0sYUUSPy3Jc9jKl4lB92HDSK11MtU9wMgDOzaFxQaIORPWsQR7s3FnaKX90gaN9Mm2OJ+UvckbflpvrcMvcJfIiBfK+IRphkDW40GNH2kmAyvnBVdbafbk6rDBp2BlaX/FTJECiAxIiyLk9KVpZJHdzm434h8px3plfkxUuyySRLEGT6DCRIg7UPzyHYBnNg+ypmozmQY1cqJHXapS8T+z1gC7TH2E186RAogvg4+2D26YdW6AFgBJXaIxGrAmj1e5nau4tOvAo169+4SIHOyYAthx+PTyibQAiLQO63+Flxv/vn6jw1173Nuui1dQiA5L7H2ZTAM84obS0eA3Wqsug4OPvxcQTTWq40NhAC32kogdYdxva03ssvOm4M6+CdGaPbHYrjlyg9HXOo+5yEfzo5SIIhbf5lsgmLsuQeJOpDNYhE/lzeggW0h9Bx9tlnhtOAS IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVrU2R3bkU0SnZrQWRqaHVLSlhtQ0xTbVRibU1aQWdOOQpmRExiT0gwOGhlUlhGclZCa1ZnVHk1bEdVeVAySHNkYW1DWHVUOGVxUEFXTndPUTdXU1YxT2w3NkNsWEFtWEhFCi9KSFpqeFJoZ090ejhSdnZnV0JGenBoUUowVGlUd0ZxCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net]]",
        "2020/11/07 05:19:44 [DEBUG] newEnrollmentResponse User1@carrier-net",
        "2020/11/07 05:19:44 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/tls/signcerts/cert.pem",
        "2020/11/07 05:19:44 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/client1/tls/keystore/4b177aa9cd475b8015488af20c6d839f7f3e4da70192ae3ed3546b90101bba53_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key",
        "+ cp /root/ca-tools/carrier/client1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt",
        "+ cp /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Successfully added affiliation: carrier\nPassword: Admin@carrier-net-pw\nRegistering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\nPassword: peer0.carrier-net-pw\nRegistering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\nPassword: peer1.carrier-net-pw\nPassword: User1@carrier-net-pw",
    "stdout_lines": [
        "Successfully added affiliation: carrier",
        "Password: Admin@carrier-net-pw",
        "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "Password: peer0.carrier-net-pw",
        "Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "Password: peer1.carrier-net-pw",
        "Password: User1@carrier-net-pw"
    ]
}

TASK [create/crypto/peer : Copy the crypto config folder from the ca tools] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726384.8776782-14534-72943205272969 `" && echo ansible-tmp-1604726384.8776782-14534-72943205272969="` echo /root/.ansible/tmp/ansible-tmp-1604726384.8776782-14534-72943205272969 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0fnhtmim TO /root/.ansible/tmp/ansible-tmp-1604726384.8776782-14534-72943205272969/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726384.8776782-14534-72943205272969/ /root/.ansible/tmp/ansible-tmp-1604726384.8776782-14534-72943205272969/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726384.8776782-14534-72943205272969/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726384.8776782-14534-72943205272969/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.769110",
    "end": "2020-11-07 05:19:45.778270",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:45.009160",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peer.yaml for each peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:58
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726385.949216-14576-255480767944806 `" && echo ansible-tmp-1604726385.949216-14576-255480767944806="` echo /root/.ansible/tmp/ansible-tmp-1604726385.949216-14576-255480767944806 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpyc83fjlc TO /root/.ansible/tmp/ansible-tmp-1604726385.949216-14576-255480767944806/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726385.949216-14576-255480767944806/ /root/.ansible/tmp/ansible-tmp-1604726385.949216-14576-255480767944806/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726385.949216-14576-255480767944806/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726385.949216-14576-255480767944806/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.100331",
    "end": "2020-11-07 05:19:46.180743",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:46.080412",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726386.2501793-14627-208554374227950 `" && echo ansible-tmp-1604726386.2501793-14627-208554374227950="` echo /root/.ansible/tmp/ansible-tmp-1604726386.2501793-14627-208554374227950 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprw66zh9a TO /root/.ansible/tmp/ansible-tmp-1604726386.2501793-14627-208554374227950/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726386.2501793-14627-208554374227950/ /root/.ansible/tmp/ansible-tmp-1604726386.2501793-14627-208554374227950/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726386.2501793-14627-208554374227950/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726386.2501793-14627-208554374227950/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726386.8647346-14655-37759934785740 `" && echo ansible-tmp-1604726386.8647346-14655-37759934785740="` echo /root/.ansible/tmp/ansible-tmp-1604726386.8647346-14655-37759934785740 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgry902yv TO /root/.ansible/tmp/ansible-tmp-1604726386.8647346-14655-37759934785740/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726386.8647346-14655-37759934785740/ /root/.ansible/tmp/ansible-tmp-1604726386.8647346-14655-37759934785740/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726386.8647346-14655-37759934785740/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726386.8647346-14655-37759934785740/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726387.4902148-14683-146982329422831 `" && echo ansible-tmp-1604726387.4902148-14683-146982329422831="` echo /root/.ansible/tmp/ansible-tmp-1604726387.4902148-14683-146982329422831 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp91u5n9op TO /root/.ansible/tmp/ansible-tmp-1604726387.4902148-14683-146982329422831/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726387.4902148-14683-146982329422831/ /root/.ansible/tmp/ansible-tmp-1604726387.4902148-14683-146982329422831/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726387.4902148-14683-146982329422831/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726387.4902148-14683-146982329422831/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.060629",
    "end": "2020-11-07 05:19:47.682236",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:47.621607",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726387.7730603-14720-62837757247436 `" && echo ansible-tmp-1604726387.7730603-14720-62837757247436="` echo /root/.ansible/tmp/ansible-tmp-1604726387.7730603-14720-62837757247436 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_rqeajgj TO /root/.ansible/tmp/ansible-tmp-1604726387.7730603-14720-62837757247436/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726387.7730603-14720-62837757247436/ /root/.ansible/tmp/ansible-tmp-1604726387.7730603-14720-62837757247436/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726387.7730603-14720-62837757247436/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726387.7730603-14720-62837757247436/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726387.960321-14746-58791379006155 `" && echo ansible-tmp-1604726387.960321-14746-58791379006155="` echo /root/.ansible/tmp/ansible-tmp-1604726387.960321-14746-58791379006155 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4ahujqqw TO /root/.ansible/tmp/ansible-tmp-1604726387.960321-14746-58791379006155/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726387.960321-14746-58791379006155/ /root/.ansible/tmp/ansible-tmp-1604726387.960321-14746-58791379006155/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726387.960321-14746-58791379006155/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726387.960321-14746-58791379006155/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier-net.suneel.pvt.wmtbaf.info\nEOF\n",
    "delta": "0:00:00.002455",
    "end": "2020-11-07 05:19:48.093919",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier-net.suneel.pvt.wmtbaf.info\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:48.091464",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726388.1538692-14774-204870616352727 `" && echo ansible-tmp-1604726388.1538692-14774-204870616352727="` echo /root/.ansible/tmp/ansible-tmp-1604726388.1538692-14774-204870616352727 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4l1n5r42 TO /root/.ansible/tmp/ansible-tmp-1604726388.1538692-14774-204870616352727/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726388.1538692-14774-204870616352727/ /root/.ansible/tmp/ansible-tmp-1604726388.1538692-14774-204870616352727/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726388.1538692-14774-204870616352727/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726388.1538692-14774-204870616352727/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726388.346624-14800-17086464186973 `" && echo ansible-tmp-1604726388.346624-14800-17086464186973="` echo /root/.ansible/tmp/ansible-tmp-1604726388.346624-14800-17086464186973 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpmbniqvah TO /root/.ansible/tmp/ansible-tmp-1604726388.346624-14800-17086464186973/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726388.346624-14800-17086464186973/ /root/.ansible/tmp/ansible-tmp-1604726388.346624-14800-17086464186973/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726388.346624-14800-17086464186973/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726388.346624-14800-17086464186973/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
    "delta": "0:00:00.013039",
    "end": "2020-11-07 05:19:48.491650",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:48.478611",
    "stderr": "Ignoring -days; not generating a certificate\nSignature ok\nsubject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\nGetting CA Private Key",
    "stderr_lines": [
        "Ignoring -days; not generating a certificate",
        "Signature ok",
        "subject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "Getting CA Private Key"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726388.5572886-14832-154957455320698 `" && echo ansible-tmp-1604726388.5572886-14832-154957455320698="` echo /root/.ansible/tmp/ansible-tmp-1604726388.5572886-14832-154957455320698 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprgdz8c0d TO /root/.ansible/tmp/ansible-tmp-1604726388.5572886-14832-154957455320698/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726388.5572886-14832-154957455320698/ /root/.ansible/tmp/ansible-tmp-1604726388.5572886-14832-154957455320698/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726388.5572886-14832-154957455320698/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726388.5572886-14832-154957455320698/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
    "delta": "0:00:00.117846",
    "end": "2020-11-07 05:19:48.806117",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:48.688271",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726388.8726442-14864-251276496344119 `" && echo ansible-tmp-1604726388.8726442-14864-251276496344119="` echo /root/.ansible/tmp/ansible-tmp-1604726388.8726442-14864-251276496344119 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7hb2hu2m TO /root/.ansible/tmp/ansible-tmp-1604726388.8726442-14864-251276496344119/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726388.8726442-14864-251276496344119/ /root/.ansible/tmp/ansible-tmp-1604726388.8726442-14864-251276496344119/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726388.8726442-14864-251276496344119/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726388.8726442-14864-251276496344119/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
    "delta": "0:00:00.116749",
    "end": "2020-11-07 05:19:49.119972",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:49.003223",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726389.1927438-14896-42746770048900 `" && echo ansible-tmp-1604726389.1927438-14896-42746770048900="` echo /root/.ansible/tmp/ansible-tmp-1604726389.1927438-14896-42746770048900 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwiuhorjn TO /root/.ansible/tmp/ansible-tmp-1604726389.1927438-14896-42746770048900/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726389.1927438-14896-42746770048900/ /root/.ansible/tmp/ansible-tmp-1604726389.1927438-14896-42746770048900/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726389.1927438-14896-42746770048900/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726389.1927438-14896-42746770048900/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
    "delta": "0:00:00.052428",
    "end": "2020-11-07 05:19:49.385469",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:49.333041",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador"
    ]
}

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726389.454946-14935-225411297254116 `" && echo ansible-tmp-1604726389.454946-14935-225411297254116="` echo /root/.ansible/tmp/ansible-tmp-1604726389.454946-14935-225411297254116 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpsqemskf9 TO /root/.ansible/tmp/ansible-tmp-1604726389.454946-14935-225411297254116/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726389.454946-14935-225411297254116/ /root/.ansible/tmp/ansible-tmp-1604726389.454946-14935-225411297254116/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726389.454946-14935-225411297254116/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726389.454946-14935-225411297254116/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.092427",
    "end": "2020-11-07 05:19:49.677486",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:49.585059",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726389.7467754-14988-78621271411762 `" && echo ansible-tmp-1604726389.7467754-14988-78621271411762="` echo /root/.ansible/tmp/ansible-tmp-1604726389.7467754-14988-78621271411762 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgrd13sak TO /root/.ansible/tmp/ansible-tmp-1604726389.7467754-14988-78621271411762/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726389.7467754-14988-78621271411762/ /root/.ansible/tmp/ansible-tmp-1604726389.7467754-14988-78621271411762/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726389.7467754-14988-78621271411762/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726389.7467754-14988-78621271411762/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726390.3683677-15016-68613657335655 `" && echo ansible-tmp-1604726390.3683677-15016-68613657335655="` echo /root/.ansible/tmp/ansible-tmp-1604726390.3683677-15016-68613657335655 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_ph69zai TO /root/.ansible/tmp/ansible-tmp-1604726390.3683677-15016-68613657335655/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726390.3683677-15016-68613657335655/ /root/.ansible/tmp/ansible-tmp-1604726390.3683677-15016-68613657335655/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726390.3683677-15016-68613657335655/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726390.3683677-15016-68613657335655/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726390.9809883-15044-31829107926395 `" && echo ansible-tmp-1604726390.9809883-15044-31829107926395="` echo /root/.ansible/tmp/ansible-tmp-1604726390.9809883-15044-31829107926395 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpc9yl2ufd TO /root/.ansible/tmp/ansible-tmp-1604726390.9809883-15044-31829107926395/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726390.9809883-15044-31829107926395/ /root/.ansible/tmp/ansible-tmp-1604726390.9809883-15044-31829107926395/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726390.9809883-15044-31829107926395/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726390.9809883-15044-31829107926395/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.055899",
    "end": "2020-11-07 05:19:51.167862",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:51.111963",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "data:\n  certificate: |-\n    -----BEGIN CERTIFICATE-----\n    MIICSjCCAfCgAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwNzA1MTk0OFoXDTIzMDgw\n    NDA1MTk0OFowgY0xEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx\n    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxPTA7BgNV\n    BAMMNHBlZXIwLmNhcnJpZXItbmV0LmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210\n    YmFmLmluZm8wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATduJrYPQjQSq+SSW0Q\n    dpH4ozRPOAfTJDSUVTb9bzOZweH/d5KB5UZFApWAsKb5snNxMamD6KC5EKa8I6q9\n    9ai1o3MwcTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4E\n    FgQU59qW5sDmppQzpUJVwpg8tS7NZegwLwYDVR0RBCgwJoIkKi5jYXJyaWVyLW5l\n    dC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0gAMEUCICW/NmkA\n    EM0emeovUL9r5E86QSZJdhOaBBwHZDGr/VH3AiEAzvxp6soQa+ff+mEuQdqZ1n8T\n    RfqakQOi7K24r8eHG+w=\n    -----END CERTIFICATE-----\n    -----BEGIN CERTIFICATE-----\n    MIIB+TCCAZ6gAwIBAgIUJJsahp2WXbEMXEL6bGCiM1WlPAUwCgYIKoZIzj0EAwIw\n    WjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\n    MRAwDgYDVQQKDAdDYXJyaWVyMRcwFQYDVQQDDA5jYS5jYXJyaWVyLW5ldDAeFw0y\n    MDExMDcwNTEwMTVaFw0yMzA4MjgwNTEwMTVaMFoxCzAJBgNVBAYTAkdCMQ8wDQYD\n    VQQIDAZMb25kb24xDzANBgNVBAcMBkxvbmRvbjEQMA4GA1UECgwHQ2FycmllcjEX\n    MBUGA1UEAwwOY2EuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\n    AAR8QSUcerkCzc//Wtjh2DTdCDrmXztHr9U8rp8idEmFPmV2N+GZuFGRh40hq3po\n    JLLYVGuaiihSCcAXc1Q5JiiSo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\n    /wQEAwIBpjAdBgNVHQ4EFgQUIKcyku0NVH0ZAMoiqU0HnbR/QzYwCgYIKoZIzj0E\n    AwIDSQAwRgIhAPbXEQNYgn/V+D2k5pGsW1exiqSAKIoRWgVrIq/In60rAiEAlBtk\n    ZHlfnVLSsPbZ5/PIArr0Qf1UqyfiOiriCqMt1NE=\n    -----END CERTIFICATE-----\n  clientcert: |-\n    -----BEGIN CERTIFICATE-----\n    MIICSjCCAfCgAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwNzA1MTk0OFoXDTIzMDgw\n    NDA1MTk0OFowgY0xEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx\n    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxPTA7BgNV\n    BAMMNHBlZXIwLmNhcnJpZXItbmV0LmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210\n    YmFmLmluZm8wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATduJrYPQjQSq+SSW0Q\n    dpH4ozRPOAfTJDSUVTb9bzOZweH/d5KB5UZFApWAsKb5snNxMamD6KC5EKa8I6q9\n    9ai1o3MwcTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4E\n    FgQU59qW5sDmppQzpUJVwpg8tS7NZegwLwYDVR0RBCgwJoIkKi5jYXJyaWVyLW5l\n    dC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0gAMEUCICW/NmkA\n    EM0emeovUL9r5E86QSZJdhOaBBwHZDGr/VH3AiEAzvxp6soQa+ff+mEuQdqZ1n8T\n    RfqakQOi7K24r8eHG+w=\n    -----END CERTIFICATE-----\n  key: |-\n    -----BEGIN EC PRIVATE KEY-----\n    MHcCAQEEIO+7+aLWxZIguZ5nuysYPYAkXou77ejl2XzwlUnx6N5soAoGCCqGSM49\n    AwEHoUQDQgAE3bia2D0I0EqvkkltEHaR+KM0TzgH0yQ0lFU2/W8zmcHh/3eSgeVG\n    RQKVgLCm+bJzcTGpg+iguRCmvCOqvfWotQ==\n    -----END EC PRIVATE KEY-----\nlease_duration: 2764800\nlease_id: \"\"\nrenewable: false\nrequest_id: 6bb5c7e6-26f5-1d3d-d8a2-351150974c27\nwarnings: null",
    "stdout_lines": [
        "data:",
        "  certificate: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICSjCCAfCgAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwNzA1MTk0OFoXDTIzMDgw",
        "    NDA1MTk0OFowgY0xEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx",
        "    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxPTA7BgNV",
        "    BAMMNHBlZXIwLmNhcnJpZXItbmV0LmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210",
        "    YmFmLmluZm8wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATduJrYPQjQSq+SSW0Q",
        "    dpH4ozRPOAfTJDSUVTb9bzOZweH/d5KB5UZFApWAsKb5snNxMamD6KC5EKa8I6q9",
        "    9ai1o3MwcTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4E",
        "    FgQU59qW5sDmppQzpUJVwpg8tS7NZegwLwYDVR0RBCgwJoIkKi5jYXJyaWVyLW5l",
        "    dC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0gAMEUCICW/NmkA",
        "    EM0emeovUL9r5E86QSZJdhOaBBwHZDGr/VH3AiEAzvxp6soQa+ff+mEuQdqZ1n8T",
        "    RfqakQOi7K24r8eHG+w=",
        "    -----END CERTIFICATE-----",
        "    -----BEGIN CERTIFICATE-----",
        "    MIIB+TCCAZ6gAwIBAgIUJJsahp2WXbEMXEL6bGCiM1WlPAUwCgYIKoZIzj0EAwIw",
        "    WjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u",
        "    MRAwDgYDVQQKDAdDYXJyaWVyMRcwFQYDVQQDDA5jYS5jYXJyaWVyLW5ldDAeFw0y",
        "    MDExMDcwNTEwMTVaFw0yMzA4MjgwNTEwMTVaMFoxCzAJBgNVBAYTAkdCMQ8wDQYD",
        "    VQQIDAZMb25kb24xDzANBgNVBAcMBkxvbmRvbjEQMA4GA1UECgwHQ2FycmllcjEX",
        "    MBUGA1UEAwwOY2EuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC",
        "    AAR8QSUcerkCzc//Wtjh2DTdCDrmXztHr9U8rp8idEmFPmV2N+GZuFGRh40hq3po",
        "    JLLYVGuaiihSCcAXc1Q5JiiSo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB",
        "    /wQEAwIBpjAdBgNVHQ4EFgQUIKcyku0NVH0ZAMoiqU0HnbR/QzYwCgYIKoZIzj0E",
        "    AwIDSQAwRgIhAPbXEQNYgn/V+D2k5pGsW1exiqSAKIoRWgVrIq/In60rAiEAlBtk",
        "    ZHlfnVLSsPbZ5/PIArr0Qf1UqyfiOiriCqMt1NE=",
        "    -----END CERTIFICATE-----",
        "  clientcert: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICSjCCAfCgAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwNzA1MTk0OFoXDTIzMDgw",
        "    NDA1MTk0OFowgY0xEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx",
        "    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxPTA7BgNV",
        "    BAMMNHBlZXIwLmNhcnJpZXItbmV0LmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210",
        "    YmFmLmluZm8wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATduJrYPQjQSq+SSW0Q",
        "    dpH4ozRPOAfTJDSUVTb9bzOZweH/d5KB5UZFApWAsKb5snNxMamD6KC5EKa8I6q9",
        "    9ai1o3MwcTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4E",
        "    FgQU59qW5sDmppQzpUJVwpg8tS7NZegwLwYDVR0RBCgwJoIkKi5jYXJyaWVyLW5l",
        "    dC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0gAMEUCICW/NmkA",
        "    EM0emeovUL9r5E86QSZJdhOaBBwHZDGr/VH3AiEAzvxp6soQa+ff+mEuQdqZ1n8T",
        "    RfqakQOi7K24r8eHG+w=",
        "    -----END CERTIFICATE-----",
        "  key: |-",
        "    -----BEGIN EC PRIVATE KEY-----",
        "    MHcCAQEEIO+7+aLWxZIguZ5nuysYPYAkXou77ejl2XzwlUnx6N5soAoGCCqGSM49",
        "    AwEHoUQDQgAE3bia2D0I0EqvkkltEHaR+KM0TzgH0yQ0lFU2/W8zmcHh/3eSgeVG",
        "    RQKVgLCm+bJzcTGpg+iguRCmvCOqvfWotQ==",
        "    -----END EC PRIVATE KEY-----",
        "lease_duration: 2764800",
        "lease_id: \"\"",
        "renewable: false",
        "request_id: 6bb5c7e6-26f5-1d3d-d8a2-351150974c27",
        "warnings: null"
    ]
}

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:19
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726391.401835-15087-40066020177560 `" && echo ansible-tmp-1604726391.401835-15087-40066020177560="` echo /root/.ansible/tmp/ansible-tmp-1604726391.401835-15087-40066020177560 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4vuk7gac TO /root/.ansible/tmp/ansible-tmp-1604726391.401835-15087-40066020177560/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726391.401835-15087-40066020177560/ /root/.ansible/tmp/ansible-tmp-1604726391.401835-15087-40066020177560/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726391.401835-15087-40066020177560/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726391.401835-15087-40066020177560/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459 `" && echo ansible-tmp-1604726391.6199112-15113-50029881534459="` echo /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphbfe13b0 TO /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/ /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmps0id3bna TO /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/ /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppk9_fcr3 TO /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/ /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "6b77152630c9f6c73fd0b4dd0ccfdea529ddf483",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmps0id3bna",
            "attributes": null,
            "backup": false,
            "checksum": "6b77152630c9f6c73fd0b4dd0ccfdea529ddf483",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "5ad068f910749b7e0b6a746139c09e97",
    "mode": "0644",
    "owner": "root",
    "size": 226,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726391.6199112-15113-50029881534459/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724 `" && echo ansible-tmp-1604726391.973376-15153-6277022421724="` echo /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpocrf3kck TO /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/ /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpebnaqv7c TO /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/ /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfmgnckq1 TO /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/ /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4691fb9f269014e1ab52c4c0aafdd41a4a875dcc",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpebnaqv7c",
            "attributes": null,
            "backup": false,
            "checksum": "4691fb9f269014e1ab52c4c0aafdd41a4a875dcc",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ecec73a8efea62af96a65acaa2cc0bef",
    "mode": "0644",
    "owner": "root",
    "size": 1599,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726391.973376-15153-6277022421724/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726392.3060334-15193-98946239903730 `" && echo ansible-tmp-1604726392.3060334-15193-98946239903730="` echo /root/.ansible/tmp/ansible-tmp-1604726392.3060334-15193-98946239903730 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp1quebe8u TO /root/.ansible/tmp/ansible-tmp-1604726392.3060334-15193-98946239903730/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726392.3060334-15193-98946239903730/ /root/.ansible/tmp/ansible-tmp-1604726392.3060334-15193-98946239903730/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726392.3060334-15193-98946239903730/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726392.3060334-15193-98946239903730/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "atime": 1604726388.4826977,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5a3b51b52dc25ab2296b7d21712d71a6cbf3a94e",
        "ctime": 1604726388.0866916,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3636,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604726388.0866916,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 269,
        "uid": 0,
        "version": "1301560006",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726392.5375915-15223-64185181306208 `" && echo ansible-tmp-1604726392.5375915-15223-64185181306208="` echo /root/.ansible/tmp/ansible-tmp-1604726392.5375915-15223-64185181306208 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5io6wn00 TO /root/.ansible/tmp/ansible-tmp-1604726392.5375915-15223-64185181306208/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726392.5375915-15223-64185181306208/ /root/.ansible/tmp/ansible-tmp-1604726392.5375915-15223-64185181306208/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726392.5375915-15223-64185181306208/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726392.5375915-15223-64185181306208/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key"
        }
    },
    "stat": {
        "atime": 1604726391.8867493,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "6b77152630c9f6c73fd0b4dd0ccfdea529ddf483",
        "ctime": 1604726391.8907495,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3651,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604726391.7547474,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 226,
        "uid": 0,
        "version": "3067520355",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the MSP config.yaml exist or not] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726392.8665292-15259-276165249414517 `" && echo ansible-tmp-1604726392.8665292-15259-276165249414517="` echo /root/.ansible/tmp/ansible-tmp-1604726392.8665292-15259-276165249414517 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp36i_r8_s TO /root/.ansible/tmp/ansible-tmp-1604726392.8665292-15259-276165249414517/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726392.8665292-15259-276165249414517/ /root/.ansible/tmp/ansible-tmp-1604726392.8665292-15259-276165249414517/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726392.8665292-15259-276165249414517/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726392.8665292-15259-276165249414517/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp/config.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Create the msp directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726393.0659692-15285-135549049570618 `" && echo ansible-tmp-1604726393.0659692-15285-135549049570618="` echo /root/.ansible/tmp/ansible-tmp-1604726393.0659692-15285-135549049570618 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp372ro2_m TO /root/.ansible/tmp/ansible-tmp-1604726393.0659692-15285-135549049570618/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726393.0659692-15285-135549049570618/ /root/.ansible/tmp/ansible-tmp-1604726393.0659692-15285-135549049570618/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726393.0659692-15285-135549049570618/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726393.0659692-15285-135549049570618/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Create the MSP config.yaml file for orgs] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:79
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726393.25943-15311-24930900566825 `" && echo ansible-tmp-1604726393.25943-15311-24930900566825="` echo /root/.ansible/tmp/ansible-tmp-1604726393.25943-15311-24930900566825 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqtk04hex TO /root/.ansible/tmp/ansible-tmp-1604726393.25943-15311-24930900566825/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726393.25943-15311-24930900566825/ /root/.ansible/tmp/ansible-tmp-1604726393.25943-15311-24930900566825/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726393.25943-15311-24930900566825/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726393.25943-15311-24930900566825/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
    "delta": "0:00:00.002223",
    "end": "2020-11-07 05:19:53.400375",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:53.398152",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check that orderer-certificate file exists] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:96
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726393.4594624-15339-39728536073127 `" && echo ansible-tmp-1604726393.4594624-15339-39728536073127="` echo /root/.ansible/tmp/ansible-tmp-1604726393.4594624-15339-39728536073127 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpbrjp_1zb TO /root/.ansible/tmp/ansible-tmp-1604726393.4594624-15339-39728536073127/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726393.4594624-15339-39728536073127/ /root/.ansible/tmp/ansible-tmp-1604726393.4594624-15339-39728536073127/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726393.4594624-15339-39728536073127/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726393.4594624-15339-39728536073127/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604691522.5970762,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "825e5bd9fae2eacf0aacf4bb9cc3a0afd22d38ce",
        "ctime": 1604691520.9170501,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3589,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604691520.7850482,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 745,
        "uid": 0,
        "version": "1732463269",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726393.6485715-15339-68891048545471 `" && echo ansible-tmp-1604726393.6485715-15339-68891048545471="` echo /root/.ansible/tmp/ansible-tmp-1604726393.6485715-15339-68891048545471 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpv7cxrw90 TO /root/.ansible/tmp/ansible-tmp-1604726393.6485715-15339-68891048545471/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726393.6485715-15339-68891048545471/ /root/.ansible/tmp/ansible-tmp-1604726393.6485715-15339-68891048545471/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726393.6485715-15339-68891048545471/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726393.6485715-15339-68891048545471/ > /dev/null 2>&1 && sleep 0'
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604691522.6410768,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "825e5bd9fae2eacf0aacf4bb9cc3a0afd22d38ce",
        "ctime": 1604691521.2410553,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3510,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604691521.1090531,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 745,
        "uid": 0,
        "version": "2922425586",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726393.9398928-15339-73741244078156 `" && echo ansible-tmp-1604726393.9398928-15339-73741244078156="` echo /root/.ansible/tmp/ansible-tmp-1604726393.9398928-15339-73741244078156 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7flfic8v TO /root/.ansible/tmp/ansible-tmp-1604726393.9398928-15339-73741244078156/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726393.9398928-15339-73741244078156/ /root/.ansible/tmp/ansible-tmp-1604726393.9398928-15339-73741244078156/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726393.9398928-15339-73741244078156/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726393.9398928-15339-73741244078156/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604691522.6770773,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "825e5bd9fae2eacf0aacf4bb9cc3a0afd22d38ce",
        "ctime": 1604691521.5730603,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604691521.4370582,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 745,
        "uid": 0,
        "version": "51032417",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Ensure orderer tls cert directory exists] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:108
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726394.1824694-15419-267287253960820 `" && echo ansible-tmp-1604726394.1824694-15419-267287253960820="` echo /root/.ansible/tmp/ansible-tmp-1604726394.1824694-15419-267287253960820 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp2_x8jzj3 TO /root/.ansible/tmp/ansible-tmp-1604726394.1824694-15419-267287253960820/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726394.1824694-15419-267287253960820/ /root/.ansible/tmp/ansible-tmp-1604726394.1824694-15419-267287253960820/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726394.1824694-15419-267287253960820/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726394.1824694-15419-267287253960820/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726394.3609667-15419-256422405105494 `" && echo ansible-tmp-1604726394.3609667-15419-256422405105494="` echo /root/.ansible/tmp/ansible-tmp-1604726394.3609667-15419-256422405105494 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppbev9m0f TO /root/.ansible/tmp/ansible-tmp-1604726394.3609667-15419-256422405105494/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726394.3609667-15419-256422405105494/ /root/.ansible/tmp/ansible-tmp-1604726394.3609667-15419-256422405105494/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726394.3609667-15419-256422405105494/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726394.3609667-15419-256422405105494/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726394.534282-15419-205246483546161 `" && echo ansible-tmp-1604726394.534282-15419-205246483546161="` echo /root/.ansible/tmp/ansible-tmp-1604726394.534282-15419-205246483546161 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfema2w_c TO /root/.ansible/tmp/ansible-tmp-1604726394.534282-15419-205246483546161/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726394.534282-15419-205246483546161/ /root/.ansible/tmp/ansible-tmp-1604726394.534282-15419-205246483546161/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726394.534282-15419-205246483546161/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726394.534282-15419-205246483546161/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Copy tls ca.crt from auto-generated path to given path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:120
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468 `" && echo ansible-tmp-1604726394.7515757-15493-263262108902468="` echo /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwyzz65lz TO /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/ /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/ /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppl341cbj TO /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/ /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "968566e2eb9387013c31b60f7cf72419122c4092",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "968566e2eb9387013c31b60f7cf72419122c4092",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4fa9ad8e93ed39bca968ecd905cbb0d1",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 745,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726394.7515757-15493-263262108902468/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678 `" && echo ansible-tmp-1604726395.0905406-15493-278469012184678="` echo /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpe6o1rf9k TO /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/ /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/ /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp7c8pkzs7 TO /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/ /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "968566e2eb9387013c31b60f7cf72419122c4092",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "968566e2eb9387013c31b60f7cf72419122c4092",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4fa9ad8e93ed39bca968ecd905cbb0d1",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 745,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726395.0905406-15493-278469012184678/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684 `" && echo ansible-tmp-1604726395.4183068-15493-154377962130684="` echo /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzb895rkz TO /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/ /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/ /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpiqumgmij TO /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/ /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "968566e2eb9387013c31b60f7cf72419122c4092",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "968566e2eb9387013c31b60f7cf72419122c4092",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4fa9ad8e93ed39bca968ecd905cbb0d1",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 745,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726395.4183068-15493-154377962130684/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if Orderer certs exist in Vault] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726395.7882907-15617-262621030618544 `" && echo ansible-tmp-1604726395.7882907-15617-262621030618544="` echo /root/.ansible/tmp/ansible-tmp-1604726395.7882907-15617-262621030618544 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpoo2kw1n6 TO /root/.ansible/tmp/ansible-tmp-1604726395.7882907-15617-262621030618544/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726395.7882907-15617-262621030618544/ /root/.ansible/tmp/ansible-tmp-1604726395.7882907-15617-262621030618544/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726395.7882907-15617-262621030618544/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726395.7882907-15617-262621030618544/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.057702",
    "end": "2020-11-07 05:19:55.979992",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-07 05:19:55.922290",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726396.0259147-15617-200236294043635 `" && echo ansible-tmp-1604726396.0259147-15617-200236294043635="` echo /root/.ansible/tmp/ansible-tmp-1604726396.0259147-15617-200236294043635 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpi2900_dw TO /root/.ansible/tmp/ansible-tmp-1604726396.0259147-15617-200236294043635/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726396.0259147-15617-200236294043635/ /root/.ansible/tmp/ansible-tmp-1604726396.0259147-15617-200236294043635/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726396.0259147-15617-200236294043635/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726396.0259147-15617-200236294043635/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.087429",
    "end": "2020-11-07 05:19:56.244033",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-07 05:19:56.156604",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726396.2886891-15617-59371604481402 `" && echo ansible-tmp-1604726396.2886891-15617-59371604481402="` echo /root/.ansible/tmp/ansible-tmp-1604726396.2886891-15617-59371604481402 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpjhy_7z91 TO /root/.ansible/tmp/ansible-tmp-1604726396.2886891-15617-59371604481402/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726396.2886891-15617-59371604481402/ /root/.ansible/tmp/ansible-tmp-1604726396.2886891-15617-59371604481402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726396.2886891-15617-59371604481402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726396.2886891-15617-59371604481402/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.057665",
    "end": "2020-11-07 05:19:56.477473",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-07 05:19:56.419808",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Save Orderer certs if not in Vault] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:149
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy organization level certificates for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:158
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726396.6244025-15718-261062933127372 `" && echo ansible-tmp-1604726396.6244025-15718-261062933127372="` echo /root/.ansible/tmp/ansible-tmp-1604726396.6244025-15718-261062933127372 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj4uj_qsk TO /root/.ansible/tmp/ansible-tmp-1604726396.6244025-15718-261062933127372/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726396.6244025-15718-261062933127372/ /root/.ansible/tmp/ansible-tmp-1604726396.6244025-15718-261062933127372/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726396.6244025-15718-261062933127372/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726396.6244025-15718-261062933127372/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt)\" \n",
    "delta": "0:00:00.140769",
    "end": "2020-11-07 05:19:56.900118",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt)\" \n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:56.759349",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ]
}

TASK [create/crypto/peer : Check if admin msp already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:173
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726396.96605-15775-121056142595850 `" && echo ansible-tmp-1604726396.96605-15775-121056142595850="` echo /root/.ansible/tmp/ansible-tmp-1604726396.96605-15775-121056142595850 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpop0ngn3c TO /root/.ansible/tmp/ansible-tmp-1604726396.96605-15775-121056142595850/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726396.96605-15775-121056142595850/ /root/.ansible/tmp/ansible-tmp-1604726396.96605-15775-121056142595850/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726396.96605-15775-121056142595850/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726396.96605-15775-121056142595850/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/admin/msp\n",
    "delta": "0:00:00.056317",
    "end": "2020-11-07 05:19:57.157579",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:57.101262",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Copy organization level certificates for orgs] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:183
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726397.229565-15809-179325816804353 `" && echo ansible-tmp-1604726397.229565-15809-179325816804353="` echo /root/.ansible/tmp/ansible-tmp-1604726397.229565-15809-179325816804353 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmps_xutfv7 TO /root/.ansible/tmp/ansible-tmp-1604726397.229565-15809-179325816804353/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726397.229565-15809-179325816804353/ /root/.ansible/tmp/ansible-tmp-1604726397.229565-15809-179325816804353/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726397.229565-15809-179325816804353/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726397.229565-15809-179325816804353/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.100205",
    "end": "2020-11-07 05:19:57.466771",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:57.366566",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/msp"
    ]
}

TASK [create/crypto/peer : Check if user msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:193
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726397.5378938-15861-207994940502145 `" && echo ansible-tmp-1604726397.5378938-15861-207994940502145="` echo /root/.ansible/tmp/ansible-tmp-1604726397.5378938-15861-207994940502145 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpttvwt5cm TO /root/.ansible/tmp/ansible-tmp-1604726397.5378938-15861-207994940502145/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726397.5378938-15861-207994940502145/ /root/.ansible/tmp/ansible-tmp-1604726397.5378938-15861-207994940502145/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726397.5378938-15861-207994940502145/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726397.5378938-15861-207994940502145/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/user1/msp\n",
    "delta": "0:00:00.051496",
    "end": "2020-11-07 05:19:57.721379",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/user1/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-07 05:19:57.669883",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/users/user1/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/users/user1/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Copy user certificates for orgs] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:203
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726397.7924273-15895-8958199303627 `" && echo ansible-tmp-1604726397.7924273-15895-8958199303627="` echo /root/.ansible/tmp/ansible-tmp-1604726397.7924273-15895-8958199303627 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpw7z9wip7 TO /root/.ansible/tmp/ansible-tmp-1604726397.7924273-15895-8958199303627/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726397.7924273-15895-8958199303627/ /root/.ansible/tmp/ansible-tmp-1604726397.7924273-15895-8958199303627/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726397.7924273-15895-8958199303627/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726397.7924273-15895-8958199303627/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/users/user1/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/user1/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/admincerts/User1@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.101278",
    "end": "2020-11-07 05:19:58.028230",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/users/user1/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/user1/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/admincerts/User1@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:19:57.926952",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/msp"
    ]
}

TASK [include_role : create/configtx] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:131

TASK [create/configtx : Create build directory if it does not exist] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:12
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726398.2074022-15949-70120634671244 `" && echo ansible-tmp-1604726398.2074022-15949-70120634671244="` echo /root/.ansible/tmp/ansible-tmp-1604726398.2074022-15949-70120634671244 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj2t_r8my TO /root/.ansible/tmp/ansible-tmp-1604726398.2074022-15949-70120634671244/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726398.2074022-15949-70120634671244/ /root/.ansible/tmp/ansible-tmp-1604726398.2074022-15949-70120634671244/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726398.2074022-15949-70120634671244/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726398.2074022-15949-70120634671244/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/configtx : Remove old configtx file] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726398.4056206-15975-120726157997697 `" && echo ansible-tmp-1604726398.4056206-15975-120726157997697="` echo /root/.ansible/tmp/ansible-tmp-1604726398.4056206-15975-120726157997697 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0uyj935n TO /root/.ansible/tmp/ansible-tmp-1604726398.4056206-15975-120726157997697/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726398.4056206-15975-120726157997697/ /root/.ansible/tmp/ansible-tmp-1604726398.4056206-15975-120726157997697/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726398.4056206-15975-120726157997697/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726398.4056206-15975-120726157997697/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/configtx.yaml",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/configtx.yaml",
    "state": "absent"
}

TASK [create/configtx : create configtx.yaml file] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:25
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726398.5952137-16001-230101168258244 `" && echo ansible-tmp-1604726398.5952137-16001-230101168258244="` echo /root/.ansible/tmp/ansible-tmp-1604726398.5952137-16001-230101168258244 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzvv83zc5 TO /root/.ansible/tmp/ansible-tmp-1604726398.5952137-16001-230101168258244/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726398.5952137-16001-230101168258244/ /root/.ansible/tmp/ansible-tmp-1604726398.5952137-16001-230101168258244/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726398.5952137-16001-230101168258244/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726398.5952137-16001-230101168258244/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "dest": "./build/configtx.yaml",
    "diff": {
        "after": {
            "atime": 1604726398.729849,
            "mtime": 1604726398.729849,
            "path": "./build/configtx.yaml",
            "state": "touch"
        },
        "before": {
            "atime": 1604726398.7228532,
            "mtime": 1604726398.7228532,
            "path": "./build/configtx.yaml",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/configtx.yaml",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "touch",
            "unsafe_writes": false
        }
    },
    "mode": "0644",
    "owner": "root",
    "size": 0,
    "state": "file",
    "uid": 0
}

TASK [create/configtx : Adding init patch to configtx.yaml] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726398.8387399-16027-124272628068452 `" && echo ansible-tmp-1604726398.8387399-16027-124272628068452="` echo /root/.ansible/tmp/ansible-tmp-1604726398.8387399-16027-124272628068452 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwm1t8iad TO /root/.ansible/tmp/ansible-tmp-1604726398.8387399-16027-124272628068452/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726398.8387399-16027-124272628068452/ /root/.ansible/tmp/ansible-tmp-1604726398.8387399-16027-124272628068452/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726398.8387399-16027-124272628068452/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726398.8387399-16027-124272628068452/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "---\nCapabilities:\n  Global: &ChannelCapabilities\n    V1_4_3: true\n  Orderer: &OrdererCapabilities\n    V1_4_2: true\n  Application: &ApplicationCapabilities\n    V1_4_2: true\n\nApplication: &ApplicationDefaults\n  Organizations:\n  Policies: &ApplicationDefaultPolicies\n    LifecycleEndorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Endorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Readers:\n        Type: ImplicitMeta\n        Rule: \"ANY Readers\"\n    Writers:\n        Type: ImplicitMeta\n        Rule: \"ANY Writers\"\n    Admins:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ApplicationCapabilities\n\nChannel: &ChannelDefaults\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ChannelCapabilities\n\nOrganizations:\n\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Adding organization patch to configtx.yaml] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:44
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726399.279136-16053-44199461202486 `" && echo ansible-tmp-1604726399.279136-16053-44199461202486="` echo /root/.ansible/tmp/ansible-tmp-1604726399.279136-16053-44199461202486 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprxltdxhy TO /root/.ansible/tmp/ansible-tmp-1604726399.279136-16053-44199461202486/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726399.279136-16053-44199461202486/ /root/.ansible/tmp/ansible-tmp-1604726399.279136-16053-44199461202486/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726399.279136-16053-44199461202486/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726399.279136-16053-44199461202486/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "  - &walmartOrg\n    Name: walmartMSP\n    ID: walmartMSP\n    MSPDir: ./crypto-config/ordererOrganizations/walmart-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('walmartMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n    \n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726399.5388615-16053-119723164394408 `" && echo ansible-tmp-1604726399.5388615-16053-119723164394408="` echo /root/.ansible/tmp/ansible-tmp-1604726399.5388615-16053-119723164394408 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpo31tmic4 TO /root/.ansible/tmp/ansible-tmp-1604726399.5388615-16053-119723164394408/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726399.5388615-16053-119723164394408/ /root/.ansible/tmp/ansible-tmp-1604726399.5388615-16053-119723164394408/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726399.5388615-16053-119723164394408/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726399.5388615-16053-119723164394408/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "  - &carrierOrg\n    Name: carrierMSP\n    ID: carrierMSP\n    MSPDir: ./crypto-config/peerOrganizations/carrier-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('carrierMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n          \n    AnchorPeers:\n      # AnchorPeers defines the location of peers which can be used\n      # for cross org gossip communication.  Note, this value is only\n      # encoded in the genesis block in the Application section context\n      - Host: peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}

TASK [create/configtx : Adding orderer patch to configtx.yaml] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726399.796077-16103-224762760563358 `" && echo ansible-tmp-1604726399.796077-16103-224762760563358="` echo /root/.ansible/tmp/ansible-tmp-1604726399.796077-16103-224762760563358 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpiy90ak0z TO /root/.ansible/tmp/ansible-tmp-1604726399.796077-16103-224762760563358/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726399.796077-16103-224762760563358/ /root/.ansible/tmp/ansible-tmp-1604726399.796077-16103-224762760563358/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726399.796077-16103-224762760563358/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726399.796077-16103-224762760563358/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "Orderer: &OrdererDefaults\n  OrdererType: etcdraft\n  Addresses:\n    - orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443\n\n  BatchTimeout: 2s\n  BatchSize:\n    MaxMessageCount: 10\n    AbsoluteMaxBytes: 98 MB\n    PreferredMaxBytes: 1024 KB\n  EtcdRaft:\n    Consenters:\n      - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n      - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n      - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n  Organizations:\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n    BlockValidation:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n  Capabilities:\n    <<: *OrdererCapabilities\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Adding profile patch to configtx.yaml] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726400.1138096-16129-41378723645145 `" && echo ansible-tmp-1604726400.1138096-16129-41378723645145="` echo /root/.ansible/tmp/ansible-tmp-1604726400.1138096-16129-41378723645145 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpcmiqobrm TO /root/.ansible/tmp/ansible-tmp-1604726400.1138096-16129-41378723645145/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726400.1138096-16129-41378723645145/ /root/.ansible/tmp/ansible-tmp-1604726400.1138096-16129-41378723645145/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726400.1138096-16129-41378723645145/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726400.1138096-16129-41378723645145/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "Profiles:\n  OrdererGenesis:\n    <<: *ChannelDefaults\n    Orderer:\n      <<: *OrdererDefaults\n      OrdererType: etcdraft\n      EtcdRaft:\n        Consenters:\n        - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n      Organizations:\n        - *walmartOrg\n    Consortiums:\n      SupplyChainConsortium:\n        Organizations:\n          - *carrierOrg\n  AllChannel:\n    <<: *ChannelDefaults\n    Consortium: SupplyChainConsortium\n    Application:\n      <<: *ApplicationDefaults\n      Organizations:\n        - *carrierOrg\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Display configtx file contents] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:87
ok: [localhost] => {
    "msg": "The configtx file is: #\n---\nCapabilities:\n  Global: &ChannelCapabilities\n    V1_4_3: true\n  Orderer: &OrdererCapabilities\n    V1_4_2: true\n  Application: &ApplicationCapabilities\n    V1_4_2: true\n\nApplication: &ApplicationDefaults\n  Organizations:\n  Policies: &ApplicationDefaultPolicies\n    LifecycleEndorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Endorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Readers:\n        Type: ImplicitMeta\n        Rule: \"ANY Readers\"\n    Writers:\n        Type: ImplicitMeta\n        Rule: \"ANY Writers\"\n    Admins:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ApplicationCapabilities\n\nChannel: &ChannelDefaults\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ChannelCapabilities\n\nOrganizations:\n\n#\n  - &walmartOrg\n    Name: walmartMSP\n    ID: walmartMSP\n    MSPDir: ./crypto-config/ordererOrganizations/walmart-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('walmartMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n    \n#\n  - &carrierOrg\n    Name: carrierMSP\n    ID: carrierMSP\n    MSPDir: ./crypto-config/peerOrganizations/carrier-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('carrierMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n          \n    AnchorPeers:\n      # AnchorPeers defines the location of peers which can be used\n      # for cross org gossip communication.  Note, this value is only\n      # encoded in the genesis block in the Application section context\n      - Host: peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n#\nOrderer: &OrdererDefaults\n  OrdererType: etcdraft\n  Addresses:\n    - orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443\n\n  BatchTimeout: 2s\n  BatchSize:\n    MaxMessageCount: 10\n    AbsoluteMaxBytes: 98 MB\n    PreferredMaxBytes: 1024 KB\n  EtcdRaft:\n    Consenters:\n      - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n      - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n      - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n  Organizations:\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n    BlockValidation:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n  Capabilities:\n    <<: *OrdererCapabilities\n#\nProfiles:\n  OrdererGenesis:\n    <<: *ChannelDefaults\n    Orderer:\n      <<: *OrdererDefaults\n      OrdererType: etcdraft\n      EtcdRaft:\n        Consenters:\n        - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n      Organizations:\n        - *walmartOrg\n    Consortiums:\n      SupplyChainConsortium:\n        Organizations:\n          - *carrierOrg\n  AllChannel:\n    <<: *ChannelDefaults\n    Consortium: SupplyChainConsortium\n    Application:\n      <<: *ApplicationDefaults\n      Organizations:\n        - *carrierOrg\n#"
}

TASK [Create channel artifacts] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:137

TASK [create/channel_artifacts : Create build directory if it does not exist] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:5
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726400.5358808-16160-96175428603208 `" && echo ansible-tmp-1604726400.5358808-16160-96175428603208="` echo /root/.ansible/tmp/ansible-tmp-1604726400.5358808-16160-96175428603208 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp42dqoslj TO /root/.ansible/tmp/ansible-tmp-1604726400.5358808-16160-96175428603208/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726400.5358808-16160-96175428603208/ /root/.ansible/tmp/ansible-tmp-1604726400.5358808-16160-96175428603208/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726400.5358808-16160-96175428603208/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726400.5358808-16160-96175428603208/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : check configtxgen] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726400.7286785-16186-54858989556367 `" && echo ansible-tmp-1604726400.7286785-16186-54858989556367="` echo /root/.ansible/tmp/ansible-tmp-1604726400.7286785-16186-54858989556367 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpdgol0qdt TO /root/.ansible/tmp/ansible-tmp-1604726400.7286785-16186-54858989556367/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726400.7286785-16186-54858989556367/ /root/.ansible/tmp/ansible-tmp-1604726400.7286785-16186-54858989556367/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726400.7286785-16186-54858989556367/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726400.7286785-16186-54858989556367/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/configtxgen"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/channel_artifacts : register temporary directory] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726400.9165747-16213-62305254100646 `" && echo ansible-tmp-1604726400.9165747-16213-62305254100646="` echo /root/.ansible/tmp/ansible-tmp-1604726400.9165747-16213-62305254100646 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpk67_ky5i TO /root/.ansible/tmp/ansible-tmp-1604726400.9165747-16213-62305254100646/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726400.9165747-16213-62305254100646/ /root/.ansible/tmp/ansible-tmp-1604726400.9165747-16213-62305254100646/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726400.9165747-16213-62305254100646/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726400.9165747-16213-62305254100646/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.tea6gl13",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : Getting the configtxgen binary tar] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726401.1075332-16239-4270325709293 `" && echo ansible-tmp-1604726401.1075332-16239-4270325709293="` echo /root/.ansible/tmp/ansible-tmp-1604726401.1075332-16239-4270325709293 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/get_url.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppssla6jh TO /root/.ansible/tmp/ansible-tmp-1604726401.1075332-16239-4270325709293/AnsiballZ_get_url.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726401.1075332-16239-4270325709293/ /root/.ansible/tmp/ansible-tmp-1604726401.1075332-16239-4270325709293/AnsiballZ_get_url.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726401.1075332-16239-4270325709293/AnsiballZ_get_url.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726401.1075332-16239-4270325709293/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum_dest": null,
    "checksum_src": "8098245d9d10578e78c0ac66e21edfa9957126e4",
    "dest": "/tmp/ansible.tea6gl13/hyperledger-fabric-linux-amd64-2.0.0.tar.gz",
    "elapsed": 2,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": null,
            "checksum": "",
            "client_cert": null,
            "client_key": null,
            "dest": "/tmp/ansible.tea6gl13",
            "force": false,
            "force_basic_auth": false,
            "group": null,
            "headers": null,
            "http_agent": "ansible-httpget",
            "mode": null,
            "owner": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "sha256sum": "",
            "timeout": 10,
            "tmp_dest": null,
            "unsafe_writes": false,
            "url": "https://github.com/hyperledger/fabric/releases/download/v2.0.0/hyperledger-fabric-linux-amd64-2.0.0.tar.gz",
            "url_password": null,
            "url_username": null,
            "use_proxy": true,
            "validate_certs": true
        }
    },
    "md5sum": "d113b7b9949345855f93314eebcf8fbb",
    "mode": "0644",
    "msg": "OK (76285381 bytes)",
    "owner": "root",
    "size": 76285381,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726401.1075332-16239-4270325709293/tmp_k1ce4z5",
    "state": "file",
    "status_code": 200,
    "uid": 0,
    "url": "https://github.com/hyperledger/fabric/releases/download/v2.0.0/hyperledger-fabric-linux-amd64-2.0.0.tar.gz"
}

TASK [create/channel_artifacts : Unziping the downloaded file] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467 `" && echo ansible-tmp-1604726404.0828547-16267-71277342031467="` echo /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpezw3z9ul TO /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/ /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /tmp/ansible.tea6gl13/hyperledger-fabric-linux-amd64-2.0.0.tar.gz TO /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/ /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/unarchive.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpuy42xz08 TO /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/AnsiballZ_unarchive.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/ /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/AnsiballZ_unarchive.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/AnsiballZ_unarchive.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "dest": "/tmp/ansible.tea6gl13",
    "extract_results": {
        "cmd": [
            "/bin/tar",
            "--extract",
            "-C",
            "/tmp/ansible.tea6gl13",
            "-z",
            "-f",
            "/root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/source"
        ],
        "err": "",
        "out": "",
        "rc": 0
    },
    "gid": 0,
    "group": "root",
    "handler": "TgzArchive",
    "invocation": {
        "module_args": {
            "attributes": null,
            "creates": null,
            "dest": "/tmp/ansible.tea6gl13",
            "exclude": [],
            "extra_opts": [],
            "group": null,
            "keep_newer": false,
            "list_files": false,
            "mode": null,
            "owner": null,
            "remote_src": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/source",
            "unsafe_writes": false,
            "validate_certs": true
        }
    },
    "mode": "0700",
    "owner": "root",
    "size": 4096,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726404.0828547-16267-71277342031467/source",
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : Moving the configtxgen from the extracted folder and place in it path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167 `" && echo ansible-tmp-1604726408.9254353-16315-61314010327167="` echo /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj4deo8bo TO /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/ /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /tmp/ansible.tea6gl13/bin/configtxgen TO /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/ /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpe390jctf TO /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/ /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "2ccdd369503d991130e0d25c0f0ba566098e4ef2",
    "dest": "./build/configtxgen",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "configtxgen",
            "attributes": null,
            "backup": false,
            "checksum": "2ccdd369503d991130e0d25c0f0ba566098e4ef2",
            "content": null,
            "dest": "./build/configtxgen",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2732cea94015343c7cdf919984fdb206",
    "mode": "0755",
    "owner": "root",
    "size": 20999008,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726408.9254353-16315-61314010327167/source",
    "state": "file",
    "uid": 0
}

TASK [create/channel_artifacts : Creating channel-artifacts folder] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726409.6446338-16355-68663872627499 `" && echo ansible-tmp-1604726409.6446338-16355-68663872627499="` echo /root/.ansible/tmp/ansible-tmp-1604726409.6446338-16355-68663872627499 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpxissej6i TO /root/.ansible/tmp/ansible-tmp-1604726409.6446338-16355-68663872627499/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726409.6446338-16355-68663872627499/ /root/.ansible/tmp/ansible-tmp-1604726409.6446338-16355-68663872627499/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726409.6446338-16355-68663872627499/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726409.6446338-16355-68663872627499/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/channel-artifacts",
            "state": "directory"
        },
        "before": {
            "path": "./build/channel-artifacts",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/channel-artifacts",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : remove old channel block] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:56
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726409.869635-16381-6754946157362 `" && echo ansible-tmp-1604726409.869635-16381-6754946157362="` echo /root/.ansible/tmp/ansible-tmp-1604726409.869635-16381-6754946157362 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpikrju6iv TO /root/.ansible/tmp/ansible-tmp-1604726409.869635-16381-6754946157362/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726409.869635-16381-6754946157362/ /root/.ansible/tmp/ansible-tmp-1604726409.869635-16381-6754946157362/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726409.869635-16381-6754946157362/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726409.869635-16381-6754946157362/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts/allchannel.tx",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/channel-artifacts/allchannel.tx",
    "state": "absent"
}

TASK [create/channel_artifacts : Creating channels] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:64
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726410.0941436-16407-186266538523918 `" && echo ansible-tmp-1604726410.0941436-16407-186266538523918="` echo /root/.ansible/tmp/ansible-tmp-1604726410.0941436-16407-186266538523918 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpg1hloai_ TO /root/.ansible/tmp/ansible-tmp-1604726410.0941436-16407-186266538523918/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726410.0941436-16407-186266538523918/ /root/.ansible/tmp/ansible-tmp-1604726410.0941436-16407-186266538523918/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726410.0941436-16407-186266538523918/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726410.0941436-16407-186266538523918/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputCreateChannelTx ./channel-artifacts/allchannel.tx -channelID allchannel\ncat ./channel-artifacts/allchannel.tx | base64 > ./channel-artifacts/allchannel.tx.base64\n",
    "delta": "0:00:00.056636",
    "end": "2020-11-07 05:20:10.285017",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile AllChannel -outputCreateChannelTx ./channel-artifacts/allchannel.tx -channelID allchannel\ncat ./channel-artifacts/allchannel.tx | base64 > ./channel-artifacts/allchannel.tx.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:10.228381",
    "stderr": "\u001b[34m2020-11-07 05:20:10.259 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-07 05:20:10.281 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-07 05:20:10.281 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003\u001b[0m Generating new channel configtx\n\u001b[34m2020-11-07 05:20:10.282 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004\u001b[0m Writing new channel tx",
    "stderr_lines": [
        "\u001b[34m2020-11-07 05:20:10.259 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-07 05:20:10.281 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-07 05:20:10.281 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003\u001b[0m Generating new channel configtx",
        "\u001b[34m2020-11-07 05:20:10.282 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004\u001b[0m Writing new channel tx"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/channel_artifacts : Creating Anchor artifacts] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:75
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726410.3631241-16442-209695133541790 `" && echo ansible-tmp-1604726410.3631241-16442-209695133541790="` echo /root/.ansible/tmp/ansible-tmp-1604726410.3631241-16442-209695133541790 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5ntmmpe4 TO /root/.ansible/tmp/ansible-tmp-1604726410.3631241-16442-209695133541790/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726410.3631241-16442-209695133541790/ /root/.ansible/tmp/ansible-tmp-1604726410.3631241-16442-209695133541790/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726410.3631241-16442-209695133541790/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726410.3631241-16442-209695133541790/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443'}, {'peer': None, 'name': 'peer1', 'gossipAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443'}], 'ordererAddress': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443'}) => {
    "ansible_loop_var": "participant",
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputAnchorPeersUpdate ./channel-artifacts/allchannelcarrierMSPAnchor.tx -channelID allchannel -asOrg carrierMSP -configPath ./\ncat ./channel-artifacts/allchannelcarrierMSPAnchor.tx | base64 > ./channel-artifacts/allchannelcarrierMSPAnchor.tx.base64\n",
    "delta": "0:00:00.057443",
    "end": "2020-11-07 05:20:10.554615",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile AllChannel -outputAnchorPeersUpdate ./channel-artifacts/allchannelcarrierMSPAnchor.tx -channelID allchannel -asOrg carrierMSP -configPath ./\ncat ./channel-artifacts/allchannelcarrierMSPAnchor.tx | base64 > ./channel-artifacts/allchannelcarrierMSPAnchor.tx.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "participant": {
        "name": "carrier",
        "ordererAddress": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443",
        "org_status": "new",
        "organization": null,
        "peers": [
            {
                "gossipAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer0",
                "peer": null,
                "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443"
            },
            {
                "gossipAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer1",
                "peer": null,
                "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443"
            }
        ],
        "type": "creator"
    },
    "rc": 0,
    "start": "2020-11-07 05:20:10.497172",
    "stderr": "\u001b[34m2020-11-07 05:20:10.531 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-07 05:20:10.550 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-07 05:20:10.550 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update\n\u001b[34m2020-11-07 05:20:10.551 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update",
    "stderr_lines": [
        "\u001b[34m2020-11-07 05:20:10.531 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-07 05:20:10.550 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-07 05:20:10.550 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update",
        "\u001b[34m2020-11-07 05:20:10.551 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/channel_artifacts : Creating JSON configuration for new organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:88
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443'}, {'peer': None, 'name': 'peer1', 'gossipAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443'}], 'ordererAddress': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443'})  => {
    "ansible_loop_var": "participant",
    "changed": false,
    "participant": {
        "name": "carrier",
        "ordererAddress": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443",
        "org_status": "new",
        "organization": null,
        "peers": [
            {
                "gossipAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer0",
                "peer": null,
                "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443"
            },
            {
                "gossipAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer1",
                "peer": null,
                "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443"
            }
        ],
        "type": "creator"
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create genesis block] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:146

TASK [create/genesis : Remove old genesis block] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726410.7843943-16481-77970263297133 `" && echo ansible-tmp-1604726410.7843943-16481-77970263297133="` echo /root/.ansible/tmp/ansible-tmp-1604726410.7843943-16481-77970263297133 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpvynyzg69 TO /root/.ansible/tmp/ansible-tmp-1604726410.7843943-16481-77970263297133/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726410.7843943-16481-77970263297133/ /root/.ansible/tmp/ansible-tmp-1604726410.7843943-16481-77970263297133/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726410.7843943-16481-77970263297133/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726410.7843943-16481-77970263297133/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts/genesis.block",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/channel-artifacts/genesis.block",
    "state": "absent"
}

TASK [create/genesis : Create genesis block] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726410.9961314-16507-161368891932091 `" && echo ansible-tmp-1604726410.9961314-16507-161368891932091="` echo /root/.ansible/tmp/ansible-tmp-1604726410.9961314-16507-161368891932091 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp26cx02_s TO /root/.ansible/tmp/ansible-tmp-1604726410.9961314-16507-161368891932091/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726410.9961314-16507-161368891932091/ /root/.ansible/tmp/ansible-tmp-1604726410.9961314-16507-161368891932091/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726410.9961314-16507-161368891932091/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726410.9961314-16507-161368891932091/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile OrdererGenesis -channelID syschannel -outputBlock ./channel-artifacts/genesis.block\ncat ./channel-artifacts/genesis.block | base64 > ./channel-artifacts/genesis.block.base64\n",
    "delta": "0:00:00.051931",
    "end": "2020-11-07 05:20:11.185445",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile OrdererGenesis -channelID syschannel -outputBlock ./channel-artifacts/genesis.block\ncat ./channel-artifacts/genesis.block | base64 > ./channel-artifacts/genesis.block.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:11.133514",
    "stderr": "\u001b[34m2020-11-07 05:20:11.161 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-07 05:20:11.181 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002\u001b[0m orderer type: etcdraft\n\u001b[34m2020-11-07 05:20:11.181 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003\u001b[0m Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 \n\u001b[34m2020-11-07 05:20:11.181 UTC [common.tools.configtxgen.localconfig] Load -> INFO 004\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-07 05:20:11.182 UTC [common.tools.configtxgen] doOutputBlock -> INFO 005\u001b[0m Generating genesis block\n\u001b[34m2020-11-07 05:20:11.183 UTC [common.tools.configtxgen] doOutputBlock -> INFO 006\u001b[0m Writing genesis block",
    "stderr_lines": [
        "\u001b[34m2020-11-07 05:20:11.161 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-07 05:20:11.181 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002\u001b[0m orderer type: etcdraft",
        "\u001b[34m2020-11-07 05:20:11.181 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003\u001b[0m Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 ",
        "\u001b[34m2020-11-07 05:20:11.181 UTC [common.tools.configtxgen.localconfig] Load -> INFO 004\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-07 05:20:11.182 UTC [common.tools.configtxgen] doOutputBlock -> INFO 005\u001b[0m Generating genesis block",
        "\u001b[34m2020-11-07 05:20:11.183 UTC [common.tools.configtxgen] doOutputBlock -> INFO 006\u001b[0m Writing genesis block"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/genesis : Write genesis block to Vault] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726411.2534635-16542-66794914222728 `" && echo ansible-tmp-1604726411.2534635-16542-66794914222728="` echo /root/.ansible/tmp/ansible-tmp-1604726411.2534635-16542-66794914222728 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphglv3awo TO /root/.ansible/tmp/ansible-tmp-1604726411.2534635-16542-66794914222728/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726411.2534635-16542-66794914222728/ /root/.ansible/tmp/ansible-tmp-1604726411.2534635-16542-66794914222728/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726411.2534635-16542-66794914222728/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726411.2534635-16542-66794914222728/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "org",
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations genesisBlock=\"$(cat ./build/channel-artifacts/genesis.block.base64)\"\n",
    "delta": "0:00:00.055550",
    "end": "2020-11-07 05:20:11.449190",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations genesisBlock=\"$(cat ./build/channel-artifacts/genesis.block.base64)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "org": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:11.393640",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations"
    ]
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "org",
    "changed": false,
    "org": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/orderers] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:155
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create kafka clusters] ***************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create orderers] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:25

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726411.9399278-16585-178142506739996 `" && echo ansible-tmp-1604726411.9399278-16585-178142506739996="` echo /root/.ansible/tmp/ansible-tmp-1604726411.9399278-16585-178142506739996 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp83svvp4r TO /root/.ansible/tmp/ansible-tmp-1604726411.9399278-16585-178142506739996/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726411.9399278-16585-178142506739996/ /root/.ansible/tmp/ansible-tmp-1604726411.9399278-16585-178142506739996/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726411.9399278-16585-178142506739996/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726411.9399278-16585-178142506739996/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726412.149409-16611-196916048624531 `" && echo ansible-tmp-1604726412.149409-16611-196916048624531="` echo /root/.ansible/tmp/ansible-tmp-1604726412.149409-16611-196916048624531 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpmwtntm10 TO /root/.ansible/tmp/ansible-tmp-1604726412.149409-16611-196916048624531/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726412.149409-16611-196916048624531/ /root/.ansible/tmp/ansible-tmp-1604726412.149409-16611-196916048624531/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726412.149409-16611-196916048624531/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726412.149409-16611-196916048624531/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer1-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984 `" && echo ansible-tmp-1604726412.3568764-16637-236108646131984="` echo /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptaarc828 TO /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/ /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5n_q41sl/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/ /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp24msjroo TO /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/ /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "af97077b8359d542c4476a9679953fd515f2590a",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "af97077b8359d542c4476a9679953fd515f2590a",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "0de961043a5ea15b4bd82a3de93c7f27",
    "mode": "0644",
    "owner": "root",
    "size": 23501,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726412.3568764-16637-236108646131984/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726412.7918541-16679-87262136143898 `" && echo ansible-tmp-1604726412.7918541-16679-87262136143898="` echo /root/.ansible/tmp/ansible-tmp-1604726412.7918541-16679-87262136143898 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_jnwv4rt TO /root/.ansible/tmp/ansible-tmp-1604726412.7918541-16679-87262136143898/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726412.7918541-16679-87262136143898/ /root/.ansible/tmp/ansible-tmp-1604726412.7918541-16679-87262136143898/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726412.7918541-16679-87262136143898/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726412.7918541-16679-87262136143898/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604726412.6710646,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "af97077b8359d542c4476a9679953fd515f2590a",
        "ctime": 1604726412.6710646,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3663,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604726412.5350626,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23501,
        "uid": 0,
        "version": "965335096",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726413.06078-16709-219478813843505 `" && echo ansible-tmp-1604726413.06078-16709-219478813843505="` echo /root/.ansible/tmp/ansible-tmp-1604726413.06078-16709-219478813843505 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8xy4kkpd TO /root/.ansible/tmp/ansible-tmp-1604726413.06078-16709-219478813843505/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726413.06078-16709-219478813843505/ /root/.ansible/tmp/ansible-tmp-1604726413.06078-16709-219478813843505/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726413.06078-16709-219478813843505/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726413.06078-16709-219478813843505/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604725810.0939538,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604725955.4201486,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3309,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604725955.4201486,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "391631264",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer1",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer1",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIJKFwTYXB9Vr1c69QxyLBNLPLeQUuoXihu5AmK2bgOdfEsZ2CsN2CsB2CngKWggBEAEaBgiL\n3Zj9BSIKc3lzY2hhbm5lbCpANGRkMzU3OTVjYjI3ODBjOTQ3MTE3NjQwMmE2MTIzMjA1NWE3NTE3\nMmQ0YjRhZTk4ZThiOWU2NWI5MGM0ZWRiOBIaEhi7zMwlx4/ou8h5YwRTfO+MOSjyhzG+vgISw3UK\nwHUSvXUSgE4KB09yZGVyZXIS9E0SlhYKCndhbG1hcnRNU1AShxYaoxQKA01TUBKbFBKQFBKNFAoK\nd2FsbWFydE1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lC\nQWdJVVpmQmFNNzVMUWlwM3UwOUFGY0pUYlBoSkwyRXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURjd05URXdNRFphRncweU16QTRNamd3TlRFd01EWmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJCYnplRGpxMEplWVg1WWtXc01UcVVK\nNHM1ODFUT1Y4SVppR1VXeG9XNmFWMmNFZTFFZnpBV2VTWEJDQnlGCkhKTGhCYURNSG83UXl3NVdX\naER2ZEx2bG8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0NnWUlLb1pJemowRQpB\nd0lEU0FBd1JRSWhBTDBqazZDUXd5RWVYeHJVbi84ZU5wa1pRTjl4d3d6cTh1cG52azVnWCtPc0Fp\nQW5hWjZGCnNjbDg2YllPSjRncnVkUFc5eHluVVY2OXR1N3hSejJCZEhJVXVBPT0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoilggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzF6Q0NB\nbjZnQXdJQkFnSVVHOHF1RFc4RmRLSm9PWkdkOEg4c0J5cW1qbjR3Q2dZSUtvWkl6ajBFQXdJdwpX\nakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH\nOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlY\nSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURCYUZ3MHlNVEV4TURjd05URTVNREJhTUdreEN6\nQUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE\nQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeER6QU5CZ05WCkJBc1RCbU5zYVdWdWRERWFNQmdHQTFVRUF3\nd1JRV1J0YVc1QWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak8KUFFJQkJnZ3Foa2pPUFFNQkJ3\nTkNBQVNadEdreFBNbkQ5Nkt5ZjA0MnRtTWdxaklhMWVqWkhxcEVDd0lUUTc3eAp3MDgwUzNxSnV4\nL280WjQrU2pqL1lnbUI1VW0xaDZHZ0pCNStXL1BIVlp3d280SUJFVENDQVEwd0RnWURWUjBQCkFR\nSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkUwZWJiNWgxK3FPbW1O\nK25acWYKdFVLTSt1QitNQjhHQTFVZEl3UVlNQmFBRlA4MlRzUVQydlJoVDlJbS9IVW92YTc4dmw3\nbk1DUUdBMVVkRVFRZApNQnVDR1dOaExYUnZiMnh6TFRZNVpEYzRPRFZtT0RZdGFuaHhlalV3Z1lZ\nR0NDb0RCQVVHQndnQkJIcDdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENK\naFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205\nc2JHMWxiblJKUkNJNklrRmtiV2x1UUhkaGJHMWhjblF0Ym1WMApJaXdpYUdZdVZIbHdaU0k2SW1O\nc2FXVnVkQ0o5ZlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlBLzV3dXR1Z2JuCmdpNG9JczRzVHpx\nMzd4dExSS0FCa091R05WQjdacUVTL1FJZ0tUVDdoU0JFRHRJMjFwbHZjTlU4aXNPYktwOWkKM1VV\nOE9XaUxGZk9FM3VNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK\n6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVaZkJhTTc1\nTFFpcDN1MDlBRmNKVGJQaEpMMkV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJ\neER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR\nS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURF\neE1EY3dOVEV3TURaYUZ3MHlNekE0TWpnd05URXdNRFphTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3\nRFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dI\nVDNKa1pYSmxjakVYCk1CVUdBMVVFQXd3T1kyRXVkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pP\nUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFSQmJ6ZURqcTBKZVlYNVlrV3NNVHFVSjRzNTgxVE9WOEla\naUdVV3hvVzZhVjJjRWUxRWZ6QVdlU1hCQ0J5RgpISkxoQmFETUhvN1F5dzVXV2hEdmRMdmxvMEl3\nUURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRF\nRmdRVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlo\nQUwwams2Q1F3eUVlWHhyVW4vOGVOcGtaUU45eHd3enE4dXBudms1Z1grT3NBaUFuYVo2RgpzY2w4\nNmJZT0o0Z3J1ZFBXOXh5blVWNjl0dTd4UnoyQmRISVV1QT09Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KGgZBZG1pbnMiMwoHUmVhZGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRN\nU1AaBkFkbWlucyIzCgdXcml0ZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoG\nQWRtaW5zIjQKBkFkbWlucxIqEiAIARIcEggSBggBEgIIABoQEg4KCndhbG1hcnRNU1AQARoGQWRt\naW5zIjcKC0VuZG9yc2VtZW50EigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoGQWRt\naW5zKgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0Y2hU\naW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlucxom\nCgxDYXBhYmlsaXRpZXMSFhIMCgoKBlYxXzRfMhIAGgZBZG1pbnMaqzUKDUNvbnNlbnN1c1R5cGUS\nmTUSjjUKCGV0Y2RyYWZ0EoE1CswRCitvcmRlcmVyMS53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0Lndt\ndGJhZi5pbmZvEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3\nSUJBZ0lVRmNiY1hYSkNkTmRXaGVkek5hOTRmeDJ5TE9Zd0NnWUlLb1pJemowRUF3SXcKV2pFTE1B\na0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5\ndQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1\nbGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdO\nVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdO\nVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdW\neVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdB\nRW15SW9ZZlNlcm1pd0hqQlhMMDkvamVVeHczRWlWUkFxMk02NGdPZ3gKM1JId3hrdGJiQTZDSSsv\nUytHbzZWUkRYRDJsMkczU0hOVEdtbDBscytyTWQ1cU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dR\nRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBU\nCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWZTV051RThZQ1JTN2hCdXFXcDVkdmtHVlozZ3dId1lE\nVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElV\nYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYw\nTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIw\nY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFp\nT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5\nTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUhTZmE0a3VCWkg1bHFtdXRsUjdOeFMwCkVKREpMREJG\nUVZveUJMckNmaDRoQWlCQ0lCcmxReXhiTVZMUndsaHRGeUVUY0w2ZXJLenJITStYWDRpTW5nTHYK\nK3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUt\nLS0tLQpNSUlDL1RDQ0FxU2dBd0lCQWdJVUZjYmNYWEpDZE5kV2hlZHpOYTk0ZngyeUxPWXdDZ1lJ\nS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQ\nTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFE\nREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURjd05URTBNREJhRncweU1URXhNRGN3\nTlRFNU1EQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4\nTXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4\nSFRBYkJnTlZCQU1URkc5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBD\nQVFZSUtvWkl6ajBEQVFjRFFnQUVteUlvWWZTZXJtaXdIakJYTDA5L2plVXh3M0VpVlJBcTJNNjRn\nT2d4CjNSSHd4a3RiYkE2Q0krL1MrR282VlJEWEQybDJHM1NITlRHbWwwbHMrck1kNXFPQ0FUWXdn\nZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlL\nd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVmU1dOdUU4WUNSUzdo\nQnVxV3A1ZHZrR1ZaM2d3SHdZRFZSMGpCQmd3CkZvQVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStY\ndWN3VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnla\nWEl4TG5kaGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlL\nZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9a\naTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxs\nUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lIU2ZhNGt1QlpINWxx\nbXV0bFI3TnhTMApFSkRKTERCRlFWb3lCTHJDZmg0aEFpQkNJQnJsUXl4Yk1WTFJ3bGh0RnlFVGNM\nNmVyS3pySE0rWFg0aU1uZ0x2Cit3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29y\nZGVyZXIyLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8Q+0EaywgtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVBbUEvK0I2YXhvbm1GV1RFQ3VV\nWkkyaXhQbFV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21W\neU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURC\nYUZ3MHlNVEV4TURjd05URTVNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJ\nMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05W\nCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJeUxuZGhiRzFoY25RdGJtVjBNRmt3\nRXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFZzNGK1JRd081V21nd2ZHRnBEM3RnWVlx\nN2VTRTZPZUl1Y2ZOYlYxMwpaNXZrc3NsYTNCVWxsMDBnWStFck41NGtEVndCQm9wdThXTG1BdnVs\nRzZOQmRxT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dy\nQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FV\nbTdsY25jTHVId0hINnlEUkhJc0VTU0tFNkVjd0h3WURWUjBqQkJndwpGb0FVL3paT3hCUGE5R0ZQ\nMGliOGRTaTlydnkrWHVjd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqSXVkMkZzCmJXRnlkQzF1\nWlhTQ0syOXlaR1Z5WlhJeUxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0K\nTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBi\nMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNaTUzWVd4dFlYSjBM\nVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJ\nQUpwdE8rNHNPc3lrL3dYZ2xkU1RsSUMKRzhMRktCaUNnMTR0Ym1xRnpXaXlBaUE2c3Ura3dZY08z\nanUvZkFpM0pZM1podkRHTkRuTEtKUXlHWWxBSDlOawpkdz09Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KIssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lV\nQW1BLytCNmF4b25tRldURUN1VVpJMml4UGxVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVF\nQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3\nRGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVG\ndzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRB\na2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RC\nMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlM\nbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWczRitS\nUXdPNVdtZ3dmR0ZwRDN0Z1lZcTdlU0U2T2VJdWNmTmJWMTMKWjV2a3NzbGEzQlVsbDAwZ1krRXJO\nNTRrRFZ3QkJvcHU4V0xtQXZ1bEc2TkJkcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURx\nREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9C\nQUl3QURBZEJnTlZIUTRFRmdRVW03bGNuY0x1SHdISDZ5RFJISXNFU1NLRTZFY3dId1lEVlIwakJC\nZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pY\nSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJt\nVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9u\nc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNt\nUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0ND\ncUdTTTQ5QkFNQ0EwY0FNRVFDSUFKcHRPKzRzT3N5ay93WGdsZFNUbElDCkc4TEZLQmlDZzE0dGJt\ncUZ6V2l5QWlBNnN1K2t3WWNPM2p1L2ZBaTNKWTNaaHZER05EbkxLSlF5R1lsQUg5TmsKZHc9PQot\nLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgrMEQorb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVs\nLnB2dC53bXRiYWYuaW5mbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RD\nQ0FxU2dBd0lCQWdJVVB2VUZNSTdHS3ZlcGhQUFg0NU9RdHVSeHRpRXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0\nWVhKMExXNWxkREFlRncweQpNREV4TURjd05URTBNREJhRncweU1URXhNRGN3TlRFNU1EQmFNR294\nQ3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4\nRURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1U\nRkc5eVpHVnlaWEl6TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBE\nQVFjRFFnQUVFOTRBS3JUT296UW9nRGJHa1ZQNkMzMDlhNzhRN3ZsNGJjWkM1d0V6Cll2anVHaWcx\ncUpvd1Q1WHpPUUNSZUZoc011aTlWbWRERXhEQTZWYlo4RVNyeUtPQ0FUWXdnZ0V5TUE0R0ExVWQK\nRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdE\nQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVKWm56SVpsOFlza0ZvRzZhU0xuU0hqRm9P\nSjR3SHdZRFZSMGpCQmd3CkZvQVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3VEFZRFZSMFJC\nRVV3UTRJVWIzSmtaWEpsY2pNdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl6TG5kaGJHMWhj\nblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVX\nWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRa\nVzUwU1VRaU9pSnZjbVJsY21WeU15NTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSnda\nV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lCTndmV09aNW4wLzJTNmEwc0JkaTdDcQo5\nRWJ6TUNMSFJ3SlhSbUFQSHlZTEFpQk5SOGtVQVZxWGRqQWFYWGRvbU9qSHBDbVBPOUM5K1ZBOTU4\nLzBDWFlGCmVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJ\nRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVQdlVGTUk3R0t2ZXBoUFBYNDVPUXR1Unh0\naUV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZi\nbVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dG\nUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURCYUZ3MHlN\nVEV4TURjd05URTVNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFN\nQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RC\nSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtv\nWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRTk0QUtyVE9velFvZ0RiR2tWUDZDMzA5YTc4UTd2\nbDRiY1pDNXdFegpZdmp1R2lnMXFKb3dUNVh6T1FDUmVGaHNNdWk5Vm1kREV4REE2VmJaOEVTcnlL\nT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJR\nY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVSlpuekla\nbDhZc2tGb0c2YVNMblNIakZvT0o0d0h3WURWUjBqQkJndwpGb0FVL3paT3hCUGE5R0ZQMGliOGRT\naTlydnkrWHVjd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0sy\nOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVpt\nOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJ\naQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJ\nc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJQk53ZldP\nWjVuMC8yUzZhMHNCZGk3Q3EKOUViek1DTEhSd0pYUm1BUEh5WUxBaUJOUjhrVUFWcVhkakFhWFhk\nb21PakhwQ21QTzlDOStWQTk1OC8wQ1hZRgplZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nEhIKBTUwMG1zEAoYASAFKICAgAgaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMa\nBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlk\nYXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVy\ncxoGQWRtaW5zKgZBZG1pbnMS+iMKC0NvbnNvcnRpdW1zEuojEp8jChVTdXBwbHlDaGFpbkNvbnNv\ncnRpdW0ShSMSpyIKCmNhcnJpZXJNU1ASmCIatCAKA01TUBKsIBKhIBKeIAoKY2Fycmllck1TUBLp\nBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJX\nWGJFTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4\nTURjd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdE\nUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hR\nMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9Q\nUUlCQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThy\ncDhpZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdR\nREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVG\nZ1FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhB\nUGJYRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZu\nVkxTc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUt\nLS0tLQoitggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzhEQ0NBcGFnQXdJQkFnSVVS\nR25LZFZzdXRjVnh5N0tBVlZ4M0VkMzNiQkV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVC\naE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdE\nZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3\nMHkKTURFeE1EY3dOVEUxTURCYUZ3MHlNVEV4TURjd05USXdNREJhTUhreEN6QUpCZ05WQkFZVEFr\nZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIw\nTmhjbkpwWlhJeEh6QU5CZ05WCkJBc1RCbU5zYVdWdWREQU9CZ05WQkFzVEIyTmhjbkpwWlhJeEdq\nQVlCZ05WQkFNTUVVRmtiV2x1UUdOaGNuSnAKWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUU4R1ZrZWsvdit5SFNhdE50Y2JlRQpsYjJCL05Pc0xlR0RnWWVqcWdBNFNk\nUHN5cHZSVnc5TERJblFkUk9ZNG5Tak9pOUhsdXVrS21ZNXpXWFdtMGJ5CjVhT0NBUmt3Z2dFVk1B\nNEdBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVcKQkJSM2p5\nanZLbGVzTEU3UTFDbFZ6UEYvMUF4N3dEQWZCZ05WSFNNRUdEQVdnQlFncHpLUzdRMVVmUmtBeWlL\ncApUUWVkdEg5RE5qQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRM09EZzFaamcyTFRK\namMzcHpNSUdPCkJnZ3FBd1FGQmdjSUFRU0JnWHNpWVhSMGNuTWlPbnNpWVdKaFl5NXBibWwwSWpv\naWRISjFaU0lzSW1Ga2JXbHUKSWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXVJam9pWTJG\neWNtbGxjaUlzSW1obUxrVnVjbTlzYkcxbApiblJKUkNJNklrRmtiV2x1UUdOaGNuSnBaWEl0Ym1W\nMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLCkJnZ3Foa2pPUFFRREFnTklBREJGQWlF\nQXBvZWdoeFBBdjFxNDdsd0lGN0RqQUZDaldPa1Y1eEkzaDFkdFlrTEYKMnpjQ0lEZW9vR3dlUEhC\nNGtrd0ErUTZsaVBRa2pKL3JxVEQ3RjU5azh4dTRqa3dyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0t\nLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RD\nQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJFTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5\nYVdWeUxXNWxkREFlRncweQpNREV4TURjd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94\nQ3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2\nYm1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxs\nY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8v\nV3RqaDJEVGRDRHJtWHp0SHI5VThycDhpZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3Vh\naWloU0NjQVhjMVE1SmlpU28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIK\nL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlL\nb1pJemowRQpBd0lEU1FBd1JnSWhBUGJYRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJ\ncS9JbjYwckFpRUFsQnRrClpIbGZuVkxTc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0K\nLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpa7gsIARL0BQrpBS0tLS0tQkVHSU4gQ0VSVElGSUNB\nVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJFTVhFTDZiR0NpTTFXbFBBVXdD\nZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZi\nakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURW\nUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURjd05URXdNVFZhRncweU16QTRN\namd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhE\nekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVB\nd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpB\nQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThycDhpZEVtRlBtVjJOK0dadUZHUmg0\nMGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFR\nSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVSUtjeWt1ME5WSDBaQU1vaXFV\nMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhBUGJYRVFOWWduL1YrRDJrNXBHc1cx\nZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZuVkxTc1BiWjUvUElBcnIwUWYxVXF5\nZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBmNsaWVudBryBQrpBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJF\nTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURj\nd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5\nY21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThycDhp\nZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhBUGJY\nRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZuVkxT\nc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t\nLQoSBHBlZXIaBkFkbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVy\nTVNQEAEaBkFkbWlucyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJp\nZXJNU1AaBkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1T\nUBoGQWRtaW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZB\nZG1pbnMqBkFkbWlucxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcv\nQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5z\nEiMSCAgBEgQSAhIAGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9B\nZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0\nYUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaxwEKEE9yZGVyZXJBZGRyZXNzZXMS\nsgESlgEKMG9yZGVyZXIxLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwow\nb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzCjBvcmRlcmVy\nMy53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMaFy9DaGFubmVsL09yZGVy\nZXIvQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8zEgAaBkFkbWlucyIiCgdXcml0\nZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIa\nBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyoGQWRtaW5zGg4KBAoC\nCgAKAAoACgAKAA==",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer1",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762 `" && echo ansible-tmp-1604726413.5148244-16747-36443120427762="` echo /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpuz_r8wl2 TO /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/ /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpeoxkl577 TO /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/ /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpgszxojyc TO /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/ /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "cd1daad4c17ca74ec61208ee39f9e72448445536",
    "dest": "./build/test/walmart-orderer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpeoxkl577",
            "attributes": null,
            "backup": false,
            "checksum": "cd1daad4c17ca74ec61208ee39f9e72448445536",
            "content": null,
            "dest": "./build/test/walmart-orderer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4225bd2c6320b7955d74ad339c1ed925",
    "mode": "0644",
    "owner": "root",
    "size": 22767,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726413.5148244-16747-36443120427762/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726413.9790556-16787-2552989194358 `" && echo ansible-tmp-1604726413.9790556-16787-2552989194358="` echo /root/.ansible/tmp/ansible-tmp-1604726413.9790556-16787-2552989194358 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpz7ikjxvf TO /root/.ansible/tmp/ansible-tmp-1604726413.9790556-16787-2552989194358/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726413.9790556-16787-2552989194358/ /root/.ansible/tmp/ansible-tmp-1604726413.9790556-16787-2552989194358/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726413.9790556-16787-2552989194358/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726413.9790556-16787-2552989194358/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.080242",
    "end": "2020-11-07 05:20:14.223977",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:14.143735",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726414.295785-16819-144198979390271 `" && echo ansible-tmp-1604726414.295785-16819-144198979390271="` echo /root/.ansible/tmp/ansible-tmp-1604726414.295785-16819-144198979390271 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmplbbanptn TO /root/.ansible/tmp/ansible-tmp-1604726414.295785-16819-144198979390271/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726414.295785-16819-144198979390271/ /root/.ansible/tmp/ansible-tmp-1604726414.295785-16819-144198979390271/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726414.295785-16819-144198979390271/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726414.295785-16819-144198979390271/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726414.5057395-16845-271299922634940 `" && echo ansible-tmp-1604726414.5057395-16845-271299922634940="` echo /root/.ansible/tmp/ansible-tmp-1604726414.5057395-16845-271299922634940 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppsf3b70h TO /root/.ansible/tmp/ansible-tmp-1604726414.5057395-16845-271299922634940/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726414.5057395-16845-271299922634940/ /root/.ansible/tmp/ansible-tmp-1604726414.5057395-16845-271299922634940/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726414.5057395-16845-271299922634940/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726414.5057395-16845-271299922634940/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer2-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657 `" && echo ansible-tmp-1604726414.7159548-16871-277187127821657="` echo /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9xp4qz85 TO /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/ /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpizh5365v/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/ /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpetrcjl6_ TO /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/ /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5b0f1b102b3f2dc1bdd470e8a37d89b9082d9ec6",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5b0f1b102b3f2dc1bdd470e8a37d89b9082d9ec6",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ec50b57e05f20a8956f6f15ada73c060",
    "mode": "0644",
    "owner": "root",
    "size": 23501,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726414.7159548-16871-277187127821657/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726415.1716568-16913-264604194690631 `" && echo ansible-tmp-1604726415.1716568-16913-264604194690631="` echo /root/.ansible/tmp/ansible-tmp-1604726415.1716568-16913-264604194690631 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3m7kvseg TO /root/.ansible/tmp/ansible-tmp-1604726415.1716568-16913-264604194690631/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726415.1716568-16913-264604194690631/ /root/.ansible/tmp/ansible-tmp-1604726415.1716568-16913-264604194690631/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726415.1716568-16913-264604194690631/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726415.1716568-16913-264604194690631/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604726415.0391006,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "5b0f1b102b3f2dc1bdd470e8a37d89b9082d9ec6",
        "ctime": 1604726415.0391006,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3665,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604726414.8950984,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23501,
        "uid": 0,
        "version": "3019034635",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726415.4340823-16943-90928926274778 `" && echo ansible-tmp-1604726415.4340823-16943-90928926274778="` echo /root/.ansible/tmp/ansible-tmp-1604726415.4340823-16943-90928926274778 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj7p29lfo TO /root/.ansible/tmp/ansible-tmp-1604726415.4340823-16943-90928926274778/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726415.4340823-16943-90928926274778/ /root/.ansible/tmp/ansible-tmp-1604726415.4340823-16943-90928926274778/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726415.4340823-16943-90928926274778/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726415.4340823-16943-90928926274778/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604725810.0939538,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604726413.815082,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3309,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604726413.815082,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "391631264",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer2",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer2",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIJKFwTYXB9Vr1c69QxyLBNLPLeQUuoXihu5AmK2bgOdfEsZ2CsN2CsB2CngKWggBEAEaBgiL\n3Zj9BSIKc3lzY2hhbm5lbCpANGRkMzU3OTVjYjI3ODBjOTQ3MTE3NjQwMmE2MTIzMjA1NWE3NTE3\nMmQ0YjRhZTk4ZThiOWU2NWI5MGM0ZWRiOBIaEhi7zMwlx4/ou8h5YwRTfO+MOSjyhzG+vgISw3UK\nwHUSvXUSgE4KB09yZGVyZXIS9E0SlhYKCndhbG1hcnRNU1AShxYaoxQKA01TUBKbFBKQFBKNFAoK\nd2FsbWFydE1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lC\nQWdJVVpmQmFNNzVMUWlwM3UwOUFGY0pUYlBoSkwyRXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURjd05URXdNRFphRncweU16QTRNamd3TlRFd01EWmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJCYnplRGpxMEplWVg1WWtXc01UcVVK\nNHM1ODFUT1Y4SVppR1VXeG9XNmFWMmNFZTFFZnpBV2VTWEJDQnlGCkhKTGhCYURNSG83UXl3NVdX\naER2ZEx2bG8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0NnWUlLb1pJemowRQpB\nd0lEU0FBd1JRSWhBTDBqazZDUXd5RWVYeHJVbi84ZU5wa1pRTjl4d3d6cTh1cG52azVnWCtPc0Fp\nQW5hWjZGCnNjbDg2YllPSjRncnVkUFc5eHluVVY2OXR1N3hSejJCZEhJVXVBPT0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoilggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzF6Q0NB\nbjZnQXdJQkFnSVVHOHF1RFc4RmRLSm9PWkdkOEg4c0J5cW1qbjR3Q2dZSUtvWkl6ajBFQXdJdwpX\nakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH\nOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlY\nSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURCYUZ3MHlNVEV4TURjd05URTVNREJhTUdreEN6\nQUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE\nQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeER6QU5CZ05WCkJBc1RCbU5zYVdWdWRERWFNQmdHQTFVRUF3\nd1JRV1J0YVc1QWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak8KUFFJQkJnZ3Foa2pPUFFNQkJ3\nTkNBQVNadEdreFBNbkQ5Nkt5ZjA0MnRtTWdxaklhMWVqWkhxcEVDd0lUUTc3eAp3MDgwUzNxSnV4\nL280WjQrU2pqL1lnbUI1VW0xaDZHZ0pCNStXL1BIVlp3d280SUJFVENDQVEwd0RnWURWUjBQCkFR\nSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkUwZWJiNWgxK3FPbW1O\nK25acWYKdFVLTSt1QitNQjhHQTFVZEl3UVlNQmFBRlA4MlRzUVQydlJoVDlJbS9IVW92YTc4dmw3\nbk1DUUdBMVVkRVFRZApNQnVDR1dOaExYUnZiMnh6TFRZNVpEYzRPRFZtT0RZdGFuaHhlalV3Z1lZ\nR0NDb0RCQVVHQndnQkJIcDdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENK\naFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205\nc2JHMWxiblJKUkNJNklrRmtiV2x1UUhkaGJHMWhjblF0Ym1WMApJaXdpYUdZdVZIbHdaU0k2SW1O\nc2FXVnVkQ0o5ZlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlBLzV3dXR1Z2JuCmdpNG9JczRzVHpx\nMzd4dExSS0FCa091R05WQjdacUVTL1FJZ0tUVDdoU0JFRHRJMjFwbHZjTlU4aXNPYktwOWkKM1VV\nOE9XaUxGZk9FM3VNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK\n6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVaZkJhTTc1\nTFFpcDN1MDlBRmNKVGJQaEpMMkV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJ\neER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR\nS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURF\neE1EY3dOVEV3TURaYUZ3MHlNekE0TWpnd05URXdNRFphTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3\nRFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dI\nVDNKa1pYSmxjakVYCk1CVUdBMVVFQXd3T1kyRXVkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pP\nUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFSQmJ6ZURqcTBKZVlYNVlrV3NNVHFVSjRzNTgxVE9WOEla\naUdVV3hvVzZhVjJjRWUxRWZ6QVdlU1hCQ0J5RgpISkxoQmFETUhvN1F5dzVXV2hEdmRMdmxvMEl3\nUURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRF\nRmdRVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlo\nQUwwams2Q1F3eUVlWHhyVW4vOGVOcGtaUU45eHd3enE4dXBudms1Z1grT3NBaUFuYVo2RgpzY2w4\nNmJZT0o0Z3J1ZFBXOXh5blVWNjl0dTd4UnoyQmRISVV1QT09Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KGgZBZG1pbnMiMwoHUmVhZGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRN\nU1AaBkFkbWlucyIzCgdXcml0ZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoG\nQWRtaW5zIjQKBkFkbWlucxIqEiAIARIcEggSBggBEgIIABoQEg4KCndhbG1hcnRNU1AQARoGQWRt\naW5zIjcKC0VuZG9yc2VtZW50EigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoGQWRt\naW5zKgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0Y2hU\naW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlucxom\nCgxDYXBhYmlsaXRpZXMSFhIMCgoKBlYxXzRfMhIAGgZBZG1pbnMaqzUKDUNvbnNlbnN1c1R5cGUS\nmTUSjjUKCGV0Y2RyYWZ0EoE1CswRCitvcmRlcmVyMS53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0Lndt\ndGJhZi5pbmZvEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3\nSUJBZ0lVRmNiY1hYSkNkTmRXaGVkek5hOTRmeDJ5TE9Zd0NnWUlLb1pJemowRUF3SXcKV2pFTE1B\na0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5\ndQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1\nbGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdO\nVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdO\nVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdW\neVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdB\nRW15SW9ZZlNlcm1pd0hqQlhMMDkvamVVeHczRWlWUkFxMk02NGdPZ3gKM1JId3hrdGJiQTZDSSsv\nUytHbzZWUkRYRDJsMkczU0hOVEdtbDBscytyTWQ1cU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dR\nRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBU\nCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWZTV051RThZQ1JTN2hCdXFXcDVkdmtHVlozZ3dId1lE\nVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElV\nYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYw\nTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIw\nY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFp\nT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5\nTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUhTZmE0a3VCWkg1bHFtdXRsUjdOeFMwCkVKREpMREJG\nUVZveUJMckNmaDRoQWlCQ0lCcmxReXhiTVZMUndsaHRGeUVUY0w2ZXJLenJITStYWDRpTW5nTHYK\nK3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUt\nLS0tLQpNSUlDL1RDQ0FxU2dBd0lCQWdJVUZjYmNYWEpDZE5kV2hlZHpOYTk0ZngyeUxPWXdDZ1lJ\nS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQ\nTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFE\nREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURjd05URTBNREJhRncweU1URXhNRGN3\nTlRFNU1EQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4\nTXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4\nSFRBYkJnTlZCQU1URkc5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBD\nQVFZSUtvWkl6ajBEQVFjRFFnQUVteUlvWWZTZXJtaXdIakJYTDA5L2plVXh3M0VpVlJBcTJNNjRn\nT2d4CjNSSHd4a3RiYkE2Q0krL1MrR282VlJEWEQybDJHM1NITlRHbWwwbHMrck1kNXFPQ0FUWXdn\nZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlL\nd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVmU1dOdUU4WUNSUzdo\nQnVxV3A1ZHZrR1ZaM2d3SHdZRFZSMGpCQmd3CkZvQVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStY\ndWN3VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnla\nWEl4TG5kaGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlL\nZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9a\naTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxs\nUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lIU2ZhNGt1QlpINWxx\nbXV0bFI3TnhTMApFSkRKTERCRlFWb3lCTHJDZmg0aEFpQkNJQnJsUXl4Yk1WTFJ3bGh0RnlFVGNM\nNmVyS3pySE0rWFg0aU1uZ0x2Cit3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29y\nZGVyZXIyLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8Q+0EaywgtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVBbUEvK0I2YXhvbm1GV1RFQ3VV\nWkkyaXhQbFV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21W\neU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURC\nYUZ3MHlNVEV4TURjd05URTVNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJ\nMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05W\nCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJeUxuZGhiRzFoY25RdGJtVjBNRmt3\nRXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFZzNGK1JRd081V21nd2ZHRnBEM3RnWVlx\nN2VTRTZPZUl1Y2ZOYlYxMwpaNXZrc3NsYTNCVWxsMDBnWStFck41NGtEVndCQm9wdThXTG1BdnVs\nRzZOQmRxT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dy\nQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FV\nbTdsY25jTHVId0hINnlEUkhJc0VTU0tFNkVjd0h3WURWUjBqQkJndwpGb0FVL3paT3hCUGE5R0ZQ\nMGliOGRTaTlydnkrWHVjd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqSXVkMkZzCmJXRnlkQzF1\nWlhTQ0syOXlaR1Z5WlhJeUxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0K\nTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBi\nMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNaTUzWVd4dFlYSjBM\nVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJ\nQUpwdE8rNHNPc3lrL3dYZ2xkU1RsSUMKRzhMRktCaUNnMTR0Ym1xRnpXaXlBaUE2c3Ura3dZY08z\nanUvZkFpM0pZM1podkRHTkRuTEtKUXlHWWxBSDlOawpkdz09Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KIssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lV\nQW1BLytCNmF4b25tRldURUN1VVpJMml4UGxVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVF\nQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3\nRGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVG\ndzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRB\na2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RC\nMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlM\nbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWczRitS\nUXdPNVdtZ3dmR0ZwRDN0Z1lZcTdlU0U2T2VJdWNmTmJWMTMKWjV2a3NzbGEzQlVsbDAwZ1krRXJO\nNTRrRFZ3QkJvcHU4V0xtQXZ1bEc2TkJkcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURx\nREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9C\nQUl3QURBZEJnTlZIUTRFRmdRVW03bGNuY0x1SHdISDZ5RFJISXNFU1NLRTZFY3dId1lEVlIwakJC\nZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pY\nSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJt\nVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9u\nc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNt\nUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0ND\ncUdTTTQ5QkFNQ0EwY0FNRVFDSUFKcHRPKzRzT3N5ay93WGdsZFNUbElDCkc4TEZLQmlDZzE0dGJt\ncUZ6V2l5QWlBNnN1K2t3WWNPM2p1L2ZBaTNKWTNaaHZER05EbkxLSlF5R1lsQUg5TmsKZHc9PQot\nLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgrMEQorb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVs\nLnB2dC53bXRiYWYuaW5mbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RD\nQ0FxU2dBd0lCQWdJVVB2VUZNSTdHS3ZlcGhQUFg0NU9RdHVSeHRpRXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0\nWVhKMExXNWxkREFlRncweQpNREV4TURjd05URTBNREJhRncweU1URXhNRGN3TlRFNU1EQmFNR294\nQ3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4\nRURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1U\nRkc5eVpHVnlaWEl6TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBE\nQVFjRFFnQUVFOTRBS3JUT296UW9nRGJHa1ZQNkMzMDlhNzhRN3ZsNGJjWkM1d0V6Cll2anVHaWcx\ncUpvd1Q1WHpPUUNSZUZoc011aTlWbWRERXhEQTZWYlo4RVNyeUtPQ0FUWXdnZ0V5TUE0R0ExVWQK\nRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdE\nQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVKWm56SVpsOFlza0ZvRzZhU0xuU0hqRm9P\nSjR3SHdZRFZSMGpCQmd3CkZvQVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3VEFZRFZSMFJC\nRVV3UTRJVWIzSmtaWEpsY2pNdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl6TG5kaGJHMWhj\nblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVX\nWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRa\nVzUwU1VRaU9pSnZjbVJsY21WeU15NTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSnda\nV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lCTndmV09aNW4wLzJTNmEwc0JkaTdDcQo5\nRWJ6TUNMSFJ3SlhSbUFQSHlZTEFpQk5SOGtVQVZxWGRqQWFYWGRvbU9qSHBDbVBPOUM5K1ZBOTU4\nLzBDWFlGCmVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJ\nRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVQdlVGTUk3R0t2ZXBoUFBYNDVPUXR1Unh0\naUV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZi\nbVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dG\nUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURCYUZ3MHlN\nVEV4TURjd05URTVNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFN\nQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RC\nSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtv\nWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRTk0QUtyVE9velFvZ0RiR2tWUDZDMzA5YTc4UTd2\nbDRiY1pDNXdFegpZdmp1R2lnMXFKb3dUNVh6T1FDUmVGaHNNdWk5Vm1kREV4REE2VmJaOEVTcnlL\nT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJR\nY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVSlpuekla\nbDhZc2tGb0c2YVNMblNIakZvT0o0d0h3WURWUjBqQkJndwpGb0FVL3paT3hCUGE5R0ZQMGliOGRT\naTlydnkrWHVjd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0sy\nOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVpt\nOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJ\naQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJ\nc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJQk53ZldP\nWjVuMC8yUzZhMHNCZGk3Q3EKOUViek1DTEhSd0pYUm1BUEh5WUxBaUJOUjhrVUFWcVhkakFhWFhk\nb21PakhwQ21QTzlDOStWQTk1OC8wQ1hZRgplZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nEhIKBTUwMG1zEAoYASAFKICAgAgaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMa\nBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlk\nYXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVy\ncxoGQWRtaW5zKgZBZG1pbnMS+iMKC0NvbnNvcnRpdW1zEuojEp8jChVTdXBwbHlDaGFpbkNvbnNv\ncnRpdW0ShSMSpyIKCmNhcnJpZXJNU1ASmCIatCAKA01TUBKsIBKhIBKeIAoKY2Fycmllck1TUBLp\nBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJX\nWGJFTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4\nTURjd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdE\nUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hR\nMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9Q\nUUlCQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThy\ncDhpZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdR\nREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVG\nZ1FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhB\nUGJYRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZu\nVkxTc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUt\nLS0tLQoitggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzhEQ0NBcGFnQXdJQkFnSVVS\nR25LZFZzdXRjVnh5N0tBVlZ4M0VkMzNiQkV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVC\naE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdE\nZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3\nMHkKTURFeE1EY3dOVEUxTURCYUZ3MHlNVEV4TURjd05USXdNREJhTUhreEN6QUpCZ05WQkFZVEFr\nZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIw\nTmhjbkpwWlhJeEh6QU5CZ05WCkJBc1RCbU5zYVdWdWREQU9CZ05WQkFzVEIyTmhjbkpwWlhJeEdq\nQVlCZ05WQkFNTUVVRmtiV2x1UUdOaGNuSnAKWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUU4R1ZrZWsvdit5SFNhdE50Y2JlRQpsYjJCL05Pc0xlR0RnWWVqcWdBNFNk\nUHN5cHZSVnc5TERJblFkUk9ZNG5Tak9pOUhsdXVrS21ZNXpXWFdtMGJ5CjVhT0NBUmt3Z2dFVk1B\nNEdBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVcKQkJSM2p5\nanZLbGVzTEU3UTFDbFZ6UEYvMUF4N3dEQWZCZ05WSFNNRUdEQVdnQlFncHpLUzdRMVVmUmtBeWlL\ncApUUWVkdEg5RE5qQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRM09EZzFaamcyTFRK\namMzcHpNSUdPCkJnZ3FBd1FGQmdjSUFRU0JnWHNpWVhSMGNuTWlPbnNpWVdKaFl5NXBibWwwSWpv\naWRISjFaU0lzSW1Ga2JXbHUKSWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXVJam9pWTJG\neWNtbGxjaUlzSW1obUxrVnVjbTlzYkcxbApiblJKUkNJNklrRmtiV2x1UUdOaGNuSnBaWEl0Ym1W\nMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLCkJnZ3Foa2pPUFFRREFnTklBREJGQWlF\nQXBvZWdoeFBBdjFxNDdsd0lGN0RqQUZDaldPa1Y1eEkzaDFkdFlrTEYKMnpjQ0lEZW9vR3dlUEhC\nNGtrd0ErUTZsaVBRa2pKL3JxVEQ3RjU5azh4dTRqa3dyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0t\nLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RD\nQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJFTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5\nYVdWeUxXNWxkREFlRncweQpNREV4TURjd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94\nQ3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2\nYm1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxs\nY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8v\nV3RqaDJEVGRDRHJtWHp0SHI5VThycDhpZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3Vh\naWloU0NjQVhjMVE1SmlpU28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIK\nL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlL\nb1pJemowRQpBd0lEU1FBd1JnSWhBUGJYRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJ\ncS9JbjYwckFpRUFsQnRrClpIbGZuVkxTc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0K\nLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpa7gsIARL0BQrpBS0tLS0tQkVHSU4gQ0VSVElGSUNB\nVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJFTVhFTDZiR0NpTTFXbFBBVXdD\nZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZi\nakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURW\nUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURjd05URXdNVFZhRncweU16QTRN\namd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhE\nekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVB\nd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpB\nQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThycDhpZEVtRlBtVjJOK0dadUZHUmg0\nMGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFR\nSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVSUtjeWt1ME5WSDBaQU1vaXFV\nMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhBUGJYRVFOWWduL1YrRDJrNXBHc1cx\nZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZuVkxTc1BiWjUvUElBcnIwUWYxVXF5\nZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBmNsaWVudBryBQrpBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJF\nTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURj\nd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5\nY21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThycDhp\nZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhBUGJY\nRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZuVkxT\nc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t\nLQoSBHBlZXIaBkFkbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVy\nTVNQEAEaBkFkbWlucyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJp\nZXJNU1AaBkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1T\nUBoGQWRtaW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZB\nZG1pbnMqBkFkbWlucxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcv\nQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5z\nEiMSCAgBEgQSAhIAGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9B\nZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0\nYUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaxwEKEE9yZGVyZXJBZGRyZXNzZXMS\nsgESlgEKMG9yZGVyZXIxLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwow\nb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzCjBvcmRlcmVy\nMy53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMaFy9DaGFubmVsL09yZGVy\nZXIvQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8zEgAaBkFkbWlucyIiCgdXcml0\nZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIa\nBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyoGQWRtaW5zGg4KBAoC\nCgAKAAoACgAKAA==",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer2",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428 `" && echo ansible-tmp-1604726415.8682015-16981-174289615272428="` echo /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpfnjzcphs TO /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/ /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpbo7ak_lr TO /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/ /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp0a4226ru TO /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/ /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d41f9647419042ed6c026ca71b01eb28508a2db4",
    "dest": "./build/test/walmart-orderer2.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpbo7ak_lr",
            "attributes": null,
            "backup": false,
            "checksum": "d41f9647419042ed6c026ca71b01eb28508a2db4",
            "content": null,
            "dest": "./build/test/walmart-orderer2.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "db4b50ce09d9ca3b11ae37ef2c151ef3",
    "mode": "0644",
    "owner": "root",
    "size": 22767,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726415.8682015-16981-174289615272428/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726416.2204323-17021-104323792325266 `" && echo ansible-tmp-1604726416.2204323-17021-104323792325266="` echo /root/.ansible/tmp/ansible-tmp-1604726416.2204323-17021-104323792325266 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpv3dehbrg TO /root/.ansible/tmp/ansible-tmp-1604726416.2204323-17021-104323792325266/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726416.2204323-17021-104323792325266/ /root/.ansible/tmp/ansible-tmp-1604726416.2204323-17021-104323792325266/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726416.2204323-17021-104323792325266/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726416.2204323-17021-104323792325266/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer2.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.067969",
    "end": "2020-11-07 05:20:16.420228",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer2.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:16.352259",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726416.4892938-17053-98409033466582 `" && echo ansible-tmp-1604726416.4892938-17053-98409033466582="` echo /root/.ansible/tmp/ansible-tmp-1604726416.4892938-17053-98409033466582 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp07bmr9_3 TO /root/.ansible/tmp/ansible-tmp-1604726416.4892938-17053-98409033466582/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726416.4892938-17053-98409033466582/ /root/.ansible/tmp/ansible-tmp-1604726416.4892938-17053-98409033466582/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726416.4892938-17053-98409033466582/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726416.4892938-17053-98409033466582/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726416.6902237-17079-107601362152382 `" && echo ansible-tmp-1604726416.6902237-17079-107601362152382="` echo /root/.ansible/tmp/ansible-tmp-1604726416.6902237-17079-107601362152382 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmppvk2se_i TO /root/.ansible/tmp/ansible-tmp-1604726416.6902237-17079-107601362152382/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726416.6902237-17079-107601362152382/ /root/.ansible/tmp/ansible-tmp-1604726416.6902237-17079-107601362152382/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726416.6902237-17079-107601362152382/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726416.6902237-17079-107601362152382/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer3-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456 `" && echo ansible-tmp-1604726416.9002686-17105-134750680171456="` echo /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzr5rw1fq TO /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/ /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpz6sxqgs8/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/ /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpmhkgv7vw TO /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/ /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "549c38055a58e6f80ff7ea6c4c9351056f15b35d",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "549c38055a58e6f80ff7ea6c4c9351056f15b35d",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "81e2e8332c659ccc74163d9539ca731d",
    "mode": "0644",
    "owner": "root",
    "size": 23501,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726416.9002686-17105-134750680171456/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726417.32722-17147-245398235708358 `" && echo ansible-tmp-1604726417.32722-17147-245398235708358="` echo /root/.ansible/tmp/ansible-tmp-1604726417.32722-17147-245398235708358 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp5gl_haq1 TO /root/.ansible/tmp/ansible-tmp-1604726417.32722-17147-245398235708358/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726417.32722-17147-245398235708358/ /root/.ansible/tmp/ansible-tmp-1604726417.32722-17147-245398235708358/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726417.32722-17147-245398235708358/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726417.32722-17147-245398235708358/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604726417.2111335,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "549c38055a58e6f80ff7ea6c4c9351056f15b35d",
        "ctime": 1604726417.2111335,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3667,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604726417.0751314,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23501,
        "uid": 0,
        "version": "1275871593",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726417.577859-17177-277951072929068 `" && echo ansible-tmp-1604726417.577859-17177-277951072929068="` echo /root/.ansible/tmp/ansible-tmp-1604726417.577859-17177-277951072929068 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp6iw7h886 TO /root/.ansible/tmp/ansible-tmp-1604726417.577859-17177-277951072929068/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726417.577859-17177-277951072929068/ /root/.ansible/tmp/ansible-tmp-1604726417.577859-17177-277951072929068/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726417.577859-17177-277951072929068/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726417.577859-17177-277951072929068/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604725810.0939538,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604726416.1431174,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3309,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604726416.1431174,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "391631264",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer3",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer3",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIJKFwTYXB9Vr1c69QxyLBNLPLeQUuoXihu5AmK2bgOdfEsZ2CsN2CsB2CngKWggBEAEaBgiL\n3Zj9BSIKc3lzY2hhbm5lbCpANGRkMzU3OTVjYjI3ODBjOTQ3MTE3NjQwMmE2MTIzMjA1NWE3NTE3\nMmQ0YjRhZTk4ZThiOWU2NWI5MGM0ZWRiOBIaEhi7zMwlx4/ou8h5YwRTfO+MOSjyhzG+vgISw3UK\nwHUSvXUSgE4KB09yZGVyZXIS9E0SlhYKCndhbG1hcnRNU1AShxYaoxQKA01TUBKbFBKQFBKNFAoK\nd2FsbWFydE1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lC\nQWdJVVpmQmFNNzVMUWlwM3UwOUFGY0pUYlBoSkwyRXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURjd05URXdNRFphRncweU16QTRNamd3TlRFd01EWmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJCYnplRGpxMEplWVg1WWtXc01UcVVK\nNHM1ODFUT1Y4SVppR1VXeG9XNmFWMmNFZTFFZnpBV2VTWEJDQnlGCkhKTGhCYURNSG83UXl3NVdX\naER2ZEx2bG8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVL3paT3hCUGE5R0ZQMGliOGRTaTlydnkrWHVjd0NnWUlLb1pJemowRQpB\nd0lEU0FBd1JRSWhBTDBqazZDUXd5RWVYeHJVbi84ZU5wa1pRTjl4d3d6cTh1cG52azVnWCtPc0Fp\nQW5hWjZGCnNjbDg2YllPSjRncnVkUFc5eHluVVY2OXR1N3hSejJCZEhJVXVBPT0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoilggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzF6Q0NB\nbjZnQXdJQkFnSVVHOHF1RFc4RmRLSm9PWkdkOEg4c0J5cW1qbjR3Q2dZSUtvWkl6ajBFQXdJdwpX\nakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH\nOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlY\nSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURCYUZ3MHlNVEV4TURjd05URTVNREJhTUdreEN6\nQUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE\nQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeER6QU5CZ05WCkJBc1RCbU5zYVdWdWRERWFNQmdHQTFVRUF3\nd1JRV1J0YVc1QWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak8KUFFJQkJnZ3Foa2pPUFFNQkJ3\nTkNBQVNadEdreFBNbkQ5Nkt5ZjA0MnRtTWdxaklhMWVqWkhxcEVDd0lUUTc3eAp3MDgwUzNxSnV4\nL280WjQrU2pqL1lnbUI1VW0xaDZHZ0pCNStXL1BIVlp3d280SUJFVENDQVEwd0RnWURWUjBQCkFR\nSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkUwZWJiNWgxK3FPbW1O\nK25acWYKdFVLTSt1QitNQjhHQTFVZEl3UVlNQmFBRlA4MlRzUVQydlJoVDlJbS9IVW92YTc4dmw3\nbk1DUUdBMVVkRVFRZApNQnVDR1dOaExYUnZiMnh6TFRZNVpEYzRPRFZtT0RZdGFuaHhlalV3Z1lZ\nR0NDb0RCQVVHQndnQkJIcDdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENK\naFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205\nc2JHMWxiblJKUkNJNklrRmtiV2x1UUhkaGJHMWhjblF0Ym1WMApJaXdpYUdZdVZIbHdaU0k2SW1O\nc2FXVnVkQ0o5ZlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlBLzV3dXR1Z2JuCmdpNG9JczRzVHpx\nMzd4dExSS0FCa091R05WQjdacUVTL1FJZ0tUVDdoU0JFRHRJMjFwbHZjTlU4aXNPYktwOWkKM1VV\nOE9XaUxGZk9FM3VNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK\n6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVaZkJhTTc1\nTFFpcDN1MDlBRmNKVGJQaEpMMkV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJ\neER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR\nS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURF\neE1EY3dOVEV3TURaYUZ3MHlNekE0TWpnd05URXdNRFphTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3\nRFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dI\nVDNKa1pYSmxjakVYCk1CVUdBMVVFQXd3T1kyRXVkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pP\nUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFSQmJ6ZURqcTBKZVlYNVlrV3NNVHFVSjRzNTgxVE9WOEla\naUdVV3hvVzZhVjJjRWUxRWZ6QVdlU1hCQ0J5RgpISkxoQmFETUhvN1F5dzVXV2hEdmRMdmxvMEl3\nUURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRF\nRmdRVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlo\nQUwwams2Q1F3eUVlWHhyVW4vOGVOcGtaUU45eHd3enE4dXBudms1Z1grT3NBaUFuYVo2RgpzY2w4\nNmJZT0o0Z3J1ZFBXOXh5blVWNjl0dTd4UnoyQmRISVV1QT09Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KGgZBZG1pbnMiMwoHUmVhZGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRN\nU1AaBkFkbWlucyIzCgdXcml0ZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoG\nQWRtaW5zIjQKBkFkbWlucxIqEiAIARIcEggSBggBEgIIABoQEg4KCndhbG1hcnRNU1AQARoGQWRt\naW5zIjcKC0VuZG9yc2VtZW50EigSHggBEhoSCBIGCAESAggAGg4SDAoKd2FsbWFydE1TUBoGQWRt\naW5zKgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0Y2hU\naW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlucxom\nCgxDYXBhYmlsaXRpZXMSFhIMCgoKBlYxXzRfMhIAGgZBZG1pbnMaqzUKDUNvbnNlbnN1c1R5cGUS\nmTUSjjUKCGV0Y2RyYWZ0EoE1CswRCitvcmRlcmVyMS53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0Lndt\ndGJhZi5pbmZvEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3\nSUJBZ0lVRmNiY1hYSkNkTmRXaGVkek5hOTRmeDJ5TE9Zd0NnWUlLb1pJemowRUF3SXcKV2pFTE1B\na0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5\ndQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1\nbGREQWVGdzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdO\nVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdO\nVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdW\neVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdB\nRW15SW9ZZlNlcm1pd0hqQlhMMDkvamVVeHczRWlWUkFxMk02NGdPZ3gKM1JId3hrdGJiQTZDSSsv\nUytHbzZWUkRYRDJsMkczU0hOVEdtbDBscytyTWQ1cU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dR\nRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBU\nCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWZTV051RThZQ1JTN2hCdXFXcDVkdmtHVlozZ3dId1lE\nVlIwakJCZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElV\nYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYw\nTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIw\nY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFp\nT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5\nTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUhTZmE0a3VCWkg1bHFtdXRsUjdOeFMwCkVKREpMREJG\nUVZveUJMckNmaDRoQWlCQ0lCcmxReXhiTVZMUndsaHRGeUVUY0w2ZXJLenJITStYWDRpTW5nTHYK\nK3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUt\nLS0tLQpNSUlDL1RDQ0FxU2dBd0lCQWdJVUZjYmNYWEpDZE5kV2hlZHpOYTk0ZngyeUxPWXdDZ1lJ\nS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQ\nTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFE\nREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURjd05URTBNREJhRncweU1URXhNRGN3\nTlRFNU1EQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4\nTXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4\nSFRBYkJnTlZCQU1URkc5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBD\nQVFZSUtvWkl6ajBEQVFjRFFnQUVteUlvWWZTZXJtaXdIakJYTDA5L2plVXh3M0VpVlJBcTJNNjRn\nT2d4CjNSSHd4a3RiYkE2Q0krL1MrR282VlJEWEQybDJHM1NITlRHbWwwbHMrck1kNXFPQ0FUWXdn\nZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlL\nd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVmU1dOdUU4WUNSUzdo\nQnVxV3A1ZHZrR1ZaM2d3SHdZRFZSMGpCQmd3CkZvQVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStY\ndWN3VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnla\nWEl4TG5kaGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlL\nZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9a\naTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxs\nUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lIU2ZhNGt1QlpINWxx\nbXV0bFI3TnhTMApFSkRKTERCRlFWb3lCTHJDZmg0aEFpQkNJQnJsUXl4Yk1WTFJ3bGh0RnlFVGNM\nNmVyS3pySE0rWFg0aU1uZ0x2Cit3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29y\nZGVyZXIyLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm8Q+0EaywgtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVBbUEvK0I2YXhvbm1GV1RFQ3VV\nWkkyaXhQbFV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21W\neU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURC\nYUZ3MHlNVEV4TURjd05URTVNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJ\nMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05W\nCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJeUxuZGhiRzFoY25RdGJtVjBNRmt3\nRXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFZzNGK1JRd081V21nd2ZHRnBEM3RnWVlx\nN2VTRTZPZUl1Y2ZOYlYxMwpaNXZrc3NsYTNCVWxsMDBnWStFck41NGtEVndCQm9wdThXTG1BdnVs\nRzZOQmRxT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dy\nQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FV\nbTdsY25jTHVId0hINnlEUkhJc0VTU0tFNkVjd0h3WURWUjBqQkJndwpGb0FVL3paT3hCUGE5R0ZQ\nMGliOGRTaTlydnkrWHVjd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqSXVkMkZzCmJXRnlkQzF1\nWlhTQ0syOXlaR1Z5WlhJeUxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0K\nTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBi\nMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNaTUzWVd4dFlYSjBM\nVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJ\nQUpwdE8rNHNPc3lrL3dYZ2xkU1RsSUMKRzhMRktCaUNnMTR0Ym1xRnpXaXlBaUE2c3Ura3dZY08z\nanUvZkFpM0pZM1podkRHTkRuTEtKUXlHWWxBSDlOawpkdz09Ci0tLS0tRU5EIENFUlRJRklDQVRF\nLS0tLS0KIssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lV\nQW1BLytCNmF4b25tRldURUN1VVpJMml4UGxVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVF\nQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3\nRGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVG\ndzB5Ck1ERXhNRGN3TlRFME1EQmFGdzB5TVRFeE1EY3dOVEU1TURCYU1Hb3hDekFKQmdOVkJBWVRB\na2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RC\nMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlM\nbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRWczRitS\nUXdPNVdtZ3dmR0ZwRDN0Z1lZcTdlU0U2T2VJdWNmTmJWMTMKWjV2a3NzbGEzQlVsbDAwZ1krRXJO\nNTRrRFZ3QkJvcHU4V0xtQXZ1bEc2TkJkcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURx\nREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9C\nQUl3QURBZEJnTlZIUTRFRmdRVW03bGNuY0x1SHdISDZ5RFJISXNFU1NLRTZFY3dId1lEVlIwakJC\nZ3cKRm9BVS96Wk94QlBhOUdGUDBpYjhkU2k5cnZ5K1h1Y3dUQVlEVlIwUkJFVXdRNElVYjNKa1pY\nSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJt\nVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9u\nc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNt\nUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0ND\ncUdTTTQ5QkFNQ0EwY0FNRVFDSUFKcHRPKzRzT3N5ay93WGdsZFNUbElDCkc4TEZLQmlDZzE0dGJt\ncUZ6V2l5QWlBNnN1K2t3WWNPM2p1L2ZBaTNKWTNaaHZER05EbkxLSlF5R1lsQUg5TmsKZHc9PQot\nLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgrMEQorb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVs\nLnB2dC53bXRiYWYuaW5mbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RD\nQ0FxU2dBd0lCQWdJVVB2VUZNSTdHS3ZlcGhQUFg0NU9RdHVSeHRpRXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0\nWVhKMExXNWxkREFlRncweQpNREV4TURjd05URTBNREJhRncweU1URXhNRGN3TlRFNU1EQmFNR294\nQ3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4\nRURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1U\nRkc5eVpHVnlaWEl6TG5kaGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBE\nQVFjRFFnQUVFOTRBS3JUT296UW9nRGJHa1ZQNkMzMDlhNzhRN3ZsNGJjWkM1d0V6Cll2anVHaWcx\ncUpvd1Q1WHpPUUNSZUZoc011aTlWbWRERXhEQTZWYlo4RVNyeUtPQ0FUWXdnZ0V5TUE0R0ExVWQK\nRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdE\nQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVKWm56SVpsOFlza0ZvRzZhU0xuU0hqRm9P\nSjR3SHdZRFZSMGpCQmd3CkZvQVUvelpPeEJQYTlHRlAwaWI4ZFNpOXJ2eStYdWN3VEFZRFZSMFJC\nRVV3UTRJVWIzSmtaWEpsY2pNdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl6TG5kaGJHMWhj\nblF0Ym1WMExuTjFibVZsYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVX\nWHNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRa\nVzUwU1VRaU9pSnZjbVJsY21WeU15NTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSnda\nV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lCTndmV09aNW4wLzJTNmEwc0JkaTdDcQo5\nRWJ6TUNMSFJ3SlhSbUFQSHlZTEFpQk5SOGtVQVZxWGRqQWFYWGRvbU9qSHBDbVBPOUM5K1ZBOTU4\nLzBDWFlGCmVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJ\nRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJQkFnSVVQdlVGTUk3R0t2ZXBoUFBYNDVPUXR1Unh0\naUV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZi\nbVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dG\nUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EY3dOVEUwTURCYUZ3MHlN\nVEV4TURjd05URTVNREJhTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFN\nQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RC\nSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtv\nWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRTk0QUtyVE9velFvZ0RiR2tWUDZDMzA5YTc4UTd2\nbDRiY1pDNXdFegpZdmp1R2lnMXFKb3dUNVh6T1FDUmVGaHNNdWk5Vm1kREV4REE2VmJaOEVTcnlL\nT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJR\nY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVSlpuekla\nbDhZc2tGb0c2YVNMblNIakZvT0o0d0h3WURWUjBqQkJndwpGb0FVL3paT3hCUGE5R0ZQMGliOGRT\naTlydnkrWHVjd1RBWURWUjBSQkVVd1E0SVViM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0sy\nOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVpt\nOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJ\naQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJ\nc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJQk53ZldP\nWjVuMC8yUzZhMHNCZGk3Q3EKOUViek1DTEhSd0pYUm1BUEh5WUxBaUJOUjhrVUFWcVhkakFhWFhk\nb21PakhwQ21QTzlDOStWQTk1OC8wQ1hZRgplZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nEhIKBTUwMG1zEAoYASAFKICAgAgaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMa\nBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlk\nYXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVy\ncxoGQWRtaW5zKgZBZG1pbnMS+iMKC0NvbnNvcnRpdW1zEuojEp8jChVTdXBwbHlDaGFpbkNvbnNv\ncnRpdW0ShSMSpyIKCmNhcnJpZXJNU1ASmCIatCAKA01TUBKsIBKhIBKeIAoKY2Fycmllck1TUBLp\nBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJX\nWGJFTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4\nTURjd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdE\nUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hR\nMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9Q\nUUlCQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThy\ncDhpZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdR\nREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVG\nZ1FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhB\nUGJYRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZu\nVkxTc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUt\nLS0tLQoitggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzhEQ0NBcGFnQXdJQkFnSVVS\nR25LZFZzdXRjVnh5N0tBVlZ4M0VkMzNiQkV3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVC\naE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdE\nZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3\nMHkKTURFeE1EY3dOVEUxTURCYUZ3MHlNVEV4TURjd05USXdNREJhTUhreEN6QUpCZ05WQkFZVEFr\nZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIw\nTmhjbkpwWlhJeEh6QU5CZ05WCkJBc1RCbU5zYVdWdWREQU9CZ05WQkFzVEIyTmhjbkpwWlhJeEdq\nQVlCZ05WQkFNTUVVRmtiV2x1UUdOaGNuSnAKWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtv\nWkl6ajBEQVFjRFFnQUU4R1ZrZWsvdit5SFNhdE50Y2JlRQpsYjJCL05Pc0xlR0RnWWVqcWdBNFNk\nUHN5cHZSVnc5TERJblFkUk9ZNG5Tak9pOUhsdXVrS21ZNXpXWFdtMGJ5CjVhT0NBUmt3Z2dFVk1B\nNEdBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVcKQkJSM2p5\nanZLbGVzTEU3UTFDbFZ6UEYvMUF4N3dEQWZCZ05WSFNNRUdEQVdnQlFncHpLUzdRMVVmUmtBeWlL\ncApUUWVkdEg5RE5qQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRM09EZzFaamcyTFRK\namMzcHpNSUdPCkJnZ3FBd1FGQmdjSUFRU0JnWHNpWVhSMGNuTWlPbnNpWVdKaFl5NXBibWwwSWpv\naWRISjFaU0lzSW1Ga2JXbHUKSWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXVJam9pWTJG\neWNtbGxjaUlzSW1obUxrVnVjbTlzYkcxbApiblJKUkNJNklrRmtiV2x1UUdOaGNuSnBaWEl0Ym1W\nMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLCkJnZ3Foa2pPUFFRREFnTklBREJGQWlF\nQXBvZWdoeFBBdjFxNDdsd0lGN0RqQUZDaldPa1Y1eEkzaDFkdFlrTEYKMnpjQ0lEZW9vR3dlUEhC\nNGtrd0ErUTZsaVBRa2pKL3JxVEQ3RjU5azh4dTRqa3dyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0t\nLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RD\nQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJFTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3\nCldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH\nVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5\nYVdWeUxXNWxkREFlRncweQpNREV4TURjd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94\nQ3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2\nYm1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxs\nY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8v\nV3RqaDJEVGRDRHJtWHp0SHI5VThycDhpZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3Vh\naWloU0NjQVhjMVE1SmlpU28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIK\nL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlL\nb1pJemowRQpBd0lEU1FBd1JnSWhBUGJYRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJ\ncS9JbjYwckFpRUFsQnRrClpIbGZuVkxTc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0K\nLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpa7gsIARL0BQrpBS0tLS0tQkVHSU4gQ0VSVElGSUNB\nVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJFTVhFTDZiR0NpTTFXbFBBVXdD\nZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZi\nakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURW\nUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURjd05URXdNVFZhRncweU16QTRN\namd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhE\nekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVB\nd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpB\nQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThycDhpZEVtRlBtVjJOK0dadUZHUmg0\nMGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFR\nSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVSUtjeWt1ME5WSDBaQU1vaXFV\nMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhBUGJYRVFOWWduL1YrRDJrNXBHc1cx\nZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZuVkxTc1BiWjUvUElBcnIwUWYxVXF5\nZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBmNsaWVudBryBQrpBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVUpKc2FocDJXWGJF\nTVhFTDZiR0NpTTFXbFBBVXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNREV4TURj\nd05URXdNVFZhRncweU16QTRNamd3TlRFd01UVmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5\nY21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVI4UVNVY2Vya0N6Yy8vV3RqaDJEVGRDRHJtWHp0SHI5VThycDhp\nZEVtRlBtVjJOK0dadUZHUmg0MGhxM3BvCkpMTFlWR3VhaWloU0NjQVhjMVE1SmlpU28wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nSUtjeWt1ME5WSDBaQU1vaXFVMEhuYlIvUXpZd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhBUGJY\nRVFOWWduL1YrRDJrNXBHc1cxZXhpcVNBS0lvUldnVnJJcS9JbjYwckFpRUFsQnRrClpIbGZuVkxT\nc1BiWjUvUElBcnIwUWYxVXF5ZmlPaXJpQ3FNdDFORT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t\nLQoSBHBlZXIaBkFkbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVy\nTVNQEAEaBkFkbWlucyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJp\nZXJNU1AaBkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1T\nUBoGQWRtaW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZB\nZG1pbnMqBkFkbWlucxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcv\nQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5z\nEiMSCAgBEgQSAhIAGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9B\nZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0\nYUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaxwEKEE9yZGVyZXJBZGRyZXNzZXMS\nsgESlgEKMG9yZGVyZXIxLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwow\nb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzCjBvcmRlcmVy\nMy53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMaFy9DaGFubmVsL09yZGVy\nZXIvQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8zEgAaBkFkbWlucyIiCgdXcml0\nZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIa\nBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyoGQWRtaW5zGg4KBAoC\nCgAKAAoACgAKAA==",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer3",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504 `" && echo ansible-tmp-1604726417.9975808-17215-73835350263504="` echo /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_1qdhwg6 TO /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/ /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpnm445zx7 TO /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/ /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptgto3mvo TO /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/ /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "004442b071c3fc97cd52e8df508f0a0bede9afba",
    "dest": "./build/test/walmart-orderer3.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpnm445zx7",
            "attributes": null,
            "backup": false,
            "checksum": "004442b071c3fc97cd52e8df508f0a0bede9afba",
            "content": null,
            "dest": "./build/test/walmart-orderer3.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "49e25c0ed36bf1e0be730af5ab6ad1e2",
    "mode": "0644",
    "owner": "root",
    "size": 22767,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726417.9975808-17215-73835350263504/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726418.3448691-17255-222306723378176 `" && echo ansible-tmp-1604726418.3448691-17255-222306723378176="` echo /root/.ansible/tmp/ansible-tmp-1604726418.3448691-17255-222306723378176 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp14fx84jn TO /root/.ansible/tmp/ansible-tmp-1604726418.3448691-17255-222306723378176/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726418.3448691-17255-222306723378176/ /root/.ansible/tmp/ansible-tmp-1604726418.3448691-17255-222306723378176/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726418.3448691-17255-222306723378176/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726418.3448691-17255-222306723378176/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer3.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.065748",
    "end": "2020-11-07 05:20:18.542682",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer3.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:18.476934",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726418.6591706-17289-101260852094087 `" && echo ansible-tmp-1604726418.6591706-17289-101260852094087="` echo /root/.ansible/tmp/ansible-tmp-1604726418.6591706-17289-101260852094087 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpu_vwu389 TO /root/.ansible/tmp/ansible-tmp-1604726418.6591706-17289-101260852094087/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726418.6591706-17289-101260852094087/ /root/.ansible/tmp/ansible-tmp-1604726418.6591706-17289-101260852094087/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726418.6591706-17289-101260852094087/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726418.6591706-17289-101260852094087/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726418.8665633-17315-180523518368653 `" && echo ansible-tmp-1604726418.8665633-17315-180523518368653="` echo /root/.ansible/tmp/ansible-tmp-1604726418.8665633-17315-180523518368653 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_m6l3jz4 TO /root/.ansible/tmp/ansible-tmp-1604726418.8665633-17315-180523518368653/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726418.8665633-17315-180523518368653/ /root/.ansible/tmp/ansible-tmp-1604726418.8665633-17315-180523518368653/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726418.8665633-17315-180523518368653/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726418.8665633-17315-180523518368653/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Orderer files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:33.751679",
    "end": "2020-11-07 05:20:52.751749",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Orderer files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:19.000070",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   8d0207df..4946d39a  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   8d0207df..4946d39a  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 4946d39a] [ci skip] Pushing Orderer files\n 4 files changed, 12637 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 4946d39a] [ci skip] Pushing Orderer files",
        " 4 files changed, 12637 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 4946d39a] [ci skip] Pushing Orderer files",
        " 4 files changed, 12637 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   8d0207df..4946d39a  HEAD -> gorilla"
    ]
}

TASK [include_role : create/peers] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:173
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/peers : Write the couchdb credentials to Vault] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726453.0397828-17365-161263040069141 `" && echo ansible-tmp-1604726453.0397828-17365-161263040069141="` echo /root/.ansible/tmp/ansible-tmp-1604726453.0397828-17365-161263040069141 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpwmpl_re3 TO /root/.ansible/tmp/ansible-tmp-1604726453.0397828-17365-161263040069141/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726453.0397828-17365-161263040069141/ /root/.ansible/tmp/ansible-tmp-1604726453.0397828-17365-161263040069141/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726453.0397828-17365-161263040069141/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726453.0397828-17365-161263040069141/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/couchdb/carrier user=\"admin123\"\n",
    "delta": "0:00:00.065163",
    "end": "2020-11-07 05:20:53.235924",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/couchdb/carrier user=\"admin123\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:53.170761",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/couchdb/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/couchdb/carrier"
    ]
}

TASK [Create Value files for Organization Peers] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:17

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726453.3824136-17403-199479286175254 `" && echo ansible-tmp-1604726453.3824136-17403-199479286175254="` echo /root/.ansible/tmp/ansible-tmp-1604726453.3824136-17403-199479286175254 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp9e42g2ty TO /root/.ansible/tmp/ansible-tmp-1604726453.3824136-17403-199479286175254/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726453.3824136-17403-199479286175254/ /root/.ansible/tmp/ansible-tmp-1604726453.3824136-17403-199479286175254/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726453.3824136-17403-199479286175254/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726453.3824136-17403-199479286175254/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726453.5875566-17429-184692225888109 `" && echo ansible-tmp-1604726453.5875566-17429-184692225888109="` echo /root/.ansible/tmp/ansible-tmp-1604726453.5875566-17429-184692225888109 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpviy4xl_c TO /root/.ansible/tmp/ansible-tmp-1604726453.5875566-17429-184692225888109/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726453.5875566-17429-184692225888109/ /root/.ansible/tmp/ansible-tmp-1604726453.5875566-17429-184692225888109/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726453.5875566-17429-184692225888109/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726453.5875566-17429-184692225888109/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for values-peer0] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511 `" && echo ansible-tmp-1604726453.7954037-17455-84026911391511="` echo /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprxvgv0fe TO /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/ /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpzesbx8ql/value_peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/ /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpj12xklr6 TO /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/ /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "b20eea0939c153f7f4e881769b3e4d23e524fc7a",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "value_peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "b20eea0939c153f7f4e881769b3e4d23e524fc7a",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "acc10e08c8c262db5afff340d34582c9",
    "mode": "0644",
    "owner": "root",
    "size": 1861,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726453.7954037-17455-84026911391511/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726454.2157815-17497-198832837706439 `" && echo ansible-tmp-1604726454.2157815-17497-198832837706439="` echo /root/.ansible/tmp/ansible-tmp-1604726454.2157815-17497-198832837706439 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphvk86br3 TO /root/.ansible/tmp/ansible-tmp-1604726454.2157815-17497-198832837706439/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726454.2157815-17497-198832837706439/ /root/.ansible/tmp/ansible-tmp-1604726454.2157815-17497-198832837706439/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726454.2157815-17497-198832837706439/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726454.2157815-17497-198832837706439/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
        }
    },
    "stat": {
        "atime": 1604726454.099693,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "b20eea0939c153f7f4e881769b3e4d23e524fc7a",
        "ctime": 1604726454.103693,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3684,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604726453.967691,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1861,
        "uid": 0,
        "version": "1609623631",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726454.4639199-17527-170747554134312 `" && echo ansible-tmp-1604726454.4639199-17527-170747554134312="` echo /root/.ansible/tmp/ansible-tmp-1604726454.4639199-17527-170747554134312 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpbckmxkiv TO /root/.ansible/tmp/ansible-tmp-1604726454.4639199-17527-170747554134312/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726454.4639199-17527-170747554134312/ /root/.ansible/tmp/ansible-tmp-1604726454.4639199-17527-170747554134312/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726454.4639199-17527-170747554134312/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726454.4639199-17527-170747554134312/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604725810.0939538,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604726418.2711496,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3309,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604726418.2711496,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "391631264",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-peer0",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/peernode",
                "ref": "gorilla"
            },
            "releaseName": "carrier-peer0",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "couchdb": "hyperledger/fabric-couchdb:0.4.18",
                        "peer": "hyperledger/fabric-peer:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "peer": {
                    "builder": "hyperledger/fabric-ccenv:2.0.0",
                    "couchdb": {
                        "username": "carrier-user"
                    },
                    "gossipexternalendpoint": "peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "gossippeeraddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "localmspid": "carrierMSP",
                    "loglevel": "info",
                    "name": "peer0",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "couchdb": {
                            "clusteripport": 5984
                        },
                        "events": {
                            "clusteripport": 7053
                        },
                        "grpc": {
                            "clusteripport": 7051
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "couchdb": {
                        "storageclassname": "carriersc",
                        "storagesize": "1Gi"
                    },
                    "peer": {
                        "storageclassname": "carriersc",
                        "storagesize": "512Mi"
                    }
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretambassador": "secret/crypto/peerOrganizations/carrier-net/ambassador",
                    "secretcouchdbpass": "secret/credentials/carrier-net/couchdb/carrier?user",
                    "secretprefix": "secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627 `" && echo ansible-tmp-1604726454.8374927-17565-135784615640627="` echo /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpt14z3vdy TO /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/ /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmphsmlwybk TO /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/ /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpjg03_59n TO /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/ /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "524190bc435e303e0c0adbd0e3497d19c14f6f79",
    "dest": "./build/test/carrier-peer0.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmphsmlwybk",
            "attributes": null,
            "backup": false,
            "checksum": "524190bc435e303e0c0adbd0e3497d19c14f6f79",
            "content": null,
            "dest": "./build/test/carrier-peer0.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b97d2189073f23d413a8e631e2e59861",
    "mode": "0644",
    "owner": "root",
    "size": 1400,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726454.8374927-17565-135784615640627/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726455.1778762-17605-26798538723174 `" && echo ansible-tmp-1604726455.1778762-17605-26798538723174="` echo /root/.ansible/tmp/ansible-tmp-1604726455.1778762-17605-26798538723174 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpqqxo1equ TO /root/.ansible/tmp/ansible-tmp-1604726455.1778762-17605-26798538723174/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726455.1778762-17605-26798538723174/ /root/.ansible/tmp/ansible-tmp-1604726455.1778762-17605-26798538723174/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726455.1778762-17605-26798538723174/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726455.1778762-17605-26798538723174/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-peer0.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
    "delta": "0:00:00.063295",
    "end": "2020-11-07 05:20:55.377484",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-peer0.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:55.314189",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726455.4508452-17637-127910629823665 `" && echo ansible-tmp-1604726455.4508452-17637-127910629823665="` echo /root/.ansible/tmp/ansible-tmp-1604726455.4508452-17637-127910629823665 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprkj0jeh8 TO /root/.ansible/tmp/ansible-tmp-1604726455.4508452-17637-127910629823665/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726455.4508452-17637-127910629823665/ /root/.ansible/tmp/ansible-tmp-1604726455.4508452-17637-127910629823665/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726455.4508452-17637-127910629823665/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726455.4508452-17637-127910629823665/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726455.6504655-17663-245337899832342 `" && echo ansible-tmp-1604726455.6504655-17663-245337899832342="` echo /root/.ansible/tmp/ansible-tmp-1604726455.6504655-17663-245337899832342 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmprx8pm235 TO /root/.ansible/tmp/ansible-tmp-1604726455.6504655-17663-245337899832342/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726455.6504655-17663-245337899832342/ /root/.ansible/tmp/ansible-tmp-1604726455.6504655-17663-245337899832342/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726455.6504655-17663-245337899832342/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726455.6504655-17663-245337899832342/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for values-peer1] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315 `" && echo ansible-tmp-1604726455.8501425-17689-236219412848315="` echo /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp2umdt1bb TO /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/ /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp4w9u6ikq/value_peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/ /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp3y7_wlxu TO /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/ /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5a7b2a4af0a9e4e0ff939330576b8ab410620bbb",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "value_peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5a7b2a4af0a9e4e0ff939330576b8ab410620bbb",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "0d2c310cd87179a7926fa7041e02d2c4",
    "mode": "0644",
    "owner": "root",
    "size": 1861,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726455.8501425-17689-236219412848315/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726456.3386643-17731-192024087624831 `" && echo ansible-tmp-1604726456.3386643-17731-192024087624831="` echo /root/.ansible/tmp/ansible-tmp-1604726456.3386643-17731-192024087624831 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp_9rfg2es TO /root/.ansible/tmp/ansible-tmp-1604726456.3386643-17731-192024087624831/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726456.3386643-17731-192024087624831/ /root/.ansible/tmp/ansible-tmp-1604726456.3386643-17731-192024087624831/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726456.3386643-17731-192024087624831/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726456.3386643-17731-192024087624831/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
        }
    },
    "stat": {
        "atime": 1604726456.2237253,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5a7b2a4af0a9e4e0ff939330576b8ab410620bbb",
        "ctime": 1604726456.2237253,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3687,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604726456.083723,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1861,
        "uid": 0,
        "version": "2219000368",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726456.5858083-17761-1840109520001 `" && echo ansible-tmp-1604726456.5858083-17761-1840109520001="` echo /root/.ansible/tmp/ansible-tmp-1604726456.5858083-17761-1840109520001 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpz039hzy0 TO /root/.ansible/tmp/ansible-tmp-1604726456.5858083-17761-1840109520001/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726456.5858083-17761-1840109520001/ /root/.ansible/tmp/ansible-tmp-1604726456.5858083-17761-1840109520001/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726456.5858083-17761-1840109520001/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726456.5858083-17761-1840109520001/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604725810.0939538,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604726455.1077082,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3309,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604726455.1077082,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "391631264",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-peer1",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/peernode",
                "ref": "gorilla"
            },
            "releaseName": "carrier-peer1",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "couchdb": "hyperledger/fabric-couchdb:0.4.18",
                        "peer": "hyperledger/fabric-peer:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "peer": {
                    "builder": "hyperledger/fabric-ccenv:2.0.0",
                    "couchdb": {
                        "username": "carrier-user"
                    },
                    "gossipexternalendpoint": "peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "gossippeeraddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "localmspid": "carrierMSP",
                    "loglevel": "info",
                    "name": "peer1",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "couchdb": {
                            "clusteripport": 5984
                        },
                        "events": {
                            "clusteripport": 7053
                        },
                        "grpc": {
                            "clusteripport": 7051
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "couchdb": {
                        "storageclassname": "carriersc",
                        "storagesize": "1Gi"
                    },
                    "peer": {
                        "storageclassname": "carriersc",
                        "storagesize": "512Mi"
                    }
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretambassador": "secret/crypto/peerOrganizations/carrier-net/ambassador",
                    "secretcouchdbpass": "secret/credentials/carrier-net/couchdb/carrier?user",
                    "secretprefix": "secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464 `" && echo ansible-tmp-1604726456.9607253-17799-191728700878464="` echo /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp8znwykr8 TO /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/ /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpr55olk8a TO /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/ /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmptuzbvfly TO /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/ /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "7e246a3d50ded435cabf413ca27c0e9afd742e1f",
    "dest": "./build/test/carrier-peer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpr55olk8a",
            "attributes": null,
            "backup": false,
            "checksum": "7e246a3d50ded435cabf413ca27c0e9afd742e1f",
            "content": null,
            "dest": "./build/test/carrier-peer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "0fdc2033ab2bcab428235810139b2cf1",
    "mode": "0644",
    "owner": "root",
    "size": 1400,
    "src": "/root/.ansible/tmp/ansible-tmp-1604726456.9607253-17799-191728700878464/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726457.3154902-17839-19496007571894 `" && echo ansible-tmp-1604726457.3154902-17839-19496007571894="` echo /root/.ansible/tmp/ansible-tmp-1604726457.3154902-17839-19496007571894 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmp95xsgeh5 TO /root/.ansible/tmp/ansible-tmp-1604726457.3154902-17839-19496007571894/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726457.3154902-17839-19496007571894/ /root/.ansible/tmp/ansible-tmp-1604726457.3154902-17839-19496007571894/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726457.3154902-17839-19496007571894/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726457.3154902-17839-19496007571894/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-peer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
    "delta": "0:00:00.060392",
    "end": "2020-11-07 05:20:57.506526",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-peer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-07 05:20:57.446134",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:36

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726457.6227758-17873-198283469872471 `" && echo ansible-tmp-1604726457.6227758-17873-198283469872471="` echo /root/.ansible/tmp/ansible-tmp-1604726457.6227758-17873-198283469872471 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpjdllvplb TO /root/.ansible/tmp/ansible-tmp-1604726457.6227758-17873-198283469872471/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726457.6227758-17873-198283469872471/ /root/.ansible/tmp/ansible-tmp-1604726457.6227758-17873-198283469872471/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726457.6227758-17873-198283469872471/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604726457.6227758-17873-198283469872471/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604726457.831221-17899-233460532988361 `" && echo ansible-tmp-1604726457.831221-17899-233460532988361="` echo /root/.ansible/tmp/ansible-tmp-1604726457.831221-17899-233460532988361 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-54939kpevjym/tmpdgf4hhrb TO /root/.ansible/tmp/ansible-tmp-1604726457.831221-17899-233460532988361/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604726457.831221-17899-233460532988361/ /root/.ansible/tmp/ansible-tmp-1604726457.831221-17899-233460532988361/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604726457.831221-17899-233460532988361/AnsiballZ_command.py && sleep 0'
