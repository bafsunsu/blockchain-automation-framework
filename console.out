ansible-playbook 2.10.2
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/dist-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
No config file found; using defaults
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Parsed /etc/ansible/hosts inventory source with ini plugin

PLAYBOOK: site.yaml ************************************************************
16 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840583.8539333-26055-181333239970357 `" && echo ansible-tmp-1604840583.8539333-26055-181333239970357="` echo /root/.ansible/tmp/ansible-tmp-1604840583.8539333-26055-181333239970357 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp9ph539c7 TO /root/.ansible/tmp/ansible-tmp-1604840583.8539333-26055-181333239970357/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840583.8539333-26055-181333239970357/ /root/.ansible/tmp/ansible-tmp-1604840583.8539333-26055-181333239970357/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840583.8539333-26055-181333239970357/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840583.8539333-26055-181333239970357/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:10

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840584.7730515-26107-174416695914991 `" && echo ansible-tmp-1604840584.7730515-26107-174416695914991="` echo /root/.ansible/tmp/ansible-tmp-1604840584.7730515-26107-174416695914991 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpb1b2teho TO /root/.ansible/tmp/ansible-tmp-1604840584.7730515-26107-174416695914991/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840584.7730515-26107-174416695914991/ /root/.ansible/tmp/ansible-tmp-1604840584.7730515-26107-174416695914991/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840584.7730515-26107-174416695914991/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840584.7730515-26107-174416695914991/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.fx8afo40",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840585.0891728-26133-165794048308969 `" && echo ansible-tmp-1604840585.0891728-26133-165794048308969="` echo /root/.ansible/tmp/ansible-tmp-1604840585.0891728-26133-165794048308969 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpr0bizuul TO /root/.ansible/tmp/ansible-tmp-1604840585.0891728-26133-165794048308969/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840585.0891728-26133-165794048308969/ /root/.ansible/tmp/ansible-tmp-1604840585.0891728-26133-165794048308969/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840585.0891728-26133-165794048308969/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840585.0891728-26133-165794048308969/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840585.5865176-26169-74296063296205 `" && echo ansible-tmp-1604840585.5865176-26169-74296063296205="` echo /root/.ansible/tmp/ansible-tmp-1604840585.5865176-26169-74296063296205 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpy11uxory TO /root/.ansible/tmp/ansible-tmp-1604840585.5865176-26169-74296063296205/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840585.5865176-26169-74296063296205/ /root/.ansible/tmp/ansible-tmp-1604840585.5865176-26169-74296063296205/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840585.5865176-26169-74296063296205/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840585.5865176-26169-74296063296205/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.062215",
    "end": "2020-11-08 13:03:05.925585",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:05.863370",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/kubectl : register temporary directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840585.973394-26200-93915640353648 `" && echo ansible-tmp-1604840585.973394-26200-93915640353648="` echo /root/.ansible/tmp/ansible-tmp-1604840585.973394-26200-93915640353648 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphqw7ynxm TO /root/.ansible/tmp/ansible-tmp-1604840585.973394-26200-93915640353648/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840585.973394-26200-93915640353648/ /root/.ansible/tmp/ansible-tmp-1604840585.973394-26200-93915640353648/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840585.973394-26200-93915640353648/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840585.973394-26200-93915640353648/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.3e399liv",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840586.1499665-26226-209110386098544 `" && echo ansible-tmp-1604840586.1499665-26226-209110386098544="` echo /root/.ansible/tmp/ansible-tmp-1604840586.1499665-26226-209110386098544 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp0trgzee4 TO /root/.ansible/tmp/ansible-tmp-1604840586.1499665-26226-209110386098544/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840586.1499665-26226-209110386098544/ /root/.ansible/tmp/ansible-tmp-1604840586.1499665-26226-209110386098544/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840586.1499665-26226-209110386098544/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840586.1499665-26226-209110386098544/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840586.5145159-26262-123642572120630 `" && echo ansible-tmp-1604840586.5145159-26262-123642572120630="` echo /root/.ansible/tmp/ansible-tmp-1604840586.5145159-26262-123642572120630 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplte0dtju TO /root/.ansible/tmp/ansible-tmp-1604840586.5145159-26262-123642572120630/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840586.5145159-26262-123642572120630/ /root/.ansible/tmp/ansible-tmp-1604840586.5145159-26262-123642572120630/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840586.5145159-26262-123642572120630/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840586.5145159-26262-123642572120630/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.048946",
    "end": "2020-11-08 13:03:06.693022",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:06.644076",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [include_role : setup/helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:20

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840586.8229837-26295-143668750858642 `" && echo ansible-tmp-1604840586.8229837-26295-143668750858642="` echo /root/.ansible/tmp/ansible-tmp-1604840586.8229837-26295-143668750858642 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp19auzoa2 TO /root/.ansible/tmp/ansible-tmp-1604840586.8229837-26295-143668750858642/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840586.8229837-26295-143668750858642/ /root/.ansible/tmp/ansible-tmp-1604840586.8229837-26295-143668750858642/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840586.8229837-26295-143668750858642/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840586.8229837-26295-143668750858642/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.50fkxa9f",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840586.997675-26321-255874860889990 `" && echo ansible-tmp-1604840586.997675-26321-255874860889990="` echo /root/.ansible/tmp/ansible-tmp-1604840586.997675-26321-255874860889990 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpxdi527e2 TO /root/.ansible/tmp/ansible-tmp-1604840586.997675-26321-255874860889990/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840586.997675-26321-255874860889990/ /root/.ansible/tmp/ansible-tmp-1604840586.997675-26321-255874860889990/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840586.997675-26321-255874860889990/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840586.997675-26321-255874860889990/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840587.3404758-26357-250513688897133 `" && echo ansible-tmp-1604840587.3404758-26357-250513688897133="` echo /root/.ansible/tmp/ansible-tmp-1604840587.3404758-26357-250513688897133 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8b4sv061 TO /root/.ansible/tmp/ansible-tmp-1604840587.3404758-26357-250513688897133/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840587.3404758-26357-250513688897133/ /root/.ansible/tmp/ansible-tmp-1604840587.3404758-26357-250513688897133/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840587.3404758-26357-250513688897133/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840587.3404758-26357-250513688897133/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051357",
    "end": "2020-11-08 13:03:07.521422",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:07.470065",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840587.567804-26388-251363987820473 `" && echo ansible-tmp-1604840587.567804-26388-251363987820473="` echo /root/.ansible/tmp/ansible-tmp-1604840587.567804-26388-251363987820473 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqkdb7jui TO /root/.ansible/tmp/ansible-tmp-1604840587.567804-26388-251363987820473/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840587.567804-26388-251363987820473/ /root/.ansible/tmp/ansible-tmp-1604840587.567804-26388-251363987820473/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840587.567804-26388-251363987820473/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840587.567804-26388-251363987820473/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.b0zwsn6d",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840587.7495546-26414-241510346446595 `" && echo ansible-tmp-1604840587.7495546-26414-241510346446595="` echo /root/.ansible/tmp/ansible-tmp-1604840587.7495546-26414-241510346446595 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp1rccwno6 TO /root/.ansible/tmp/ansible-tmp-1604840587.7495546-26414-241510346446595/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840587.7495546-26414-241510346446595/ /root/.ansible/tmp/ansible-tmp-1604840587.7495546-26414-241510346446595/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840587.7495546-26414-241510346446595/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840587.7495546-26414-241510346446595/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840588.0932593-26450-124307622503639 `" && echo ansible-tmp-1604840588.0932593-26450-124307622503639="` echo /root/.ansible/tmp/ansible-tmp-1604840588.0932593-26450-124307622503639 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpifegjlwu TO /root/.ansible/tmp/ansible-tmp-1604840588.0932593-26450-124307622503639/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840588.0932593-26450-124307622503639/ /root/.ansible/tmp/ansible-tmp-1604840588.0932593-26450-124307622503639/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840588.0932593-26450-124307622503639/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840588.0932593-26450-124307622503639/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.054126",
    "end": "2020-11-08 13:03:08.277827",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:08.223701",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [include_role : setup/vault] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:30

TASK [setup/vault : register temporary directory] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840588.3833451-26485-234698545823432 `" && echo ansible-tmp-1604840588.3833451-26485-234698545823432="` echo /root/.ansible/tmp/ansible-tmp-1604840588.3833451-26485-234698545823432 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplkgf3igi TO /root/.ansible/tmp/ansible-tmp-1604840588.3833451-26485-234698545823432/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840588.3833451-26485-234698545823432/ /root/.ansible/tmp/ansible-tmp-1604840588.3833451-26485-234698545823432/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840588.3833451-26485-234698545823432/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840588.3833451-26485-234698545823432/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.pzd_etbh",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840588.5591877-26511-36384673966824 `" && echo ansible-tmp-1604840588.5591877-26511-36384673966824="` echo /root/.ansible/tmp/ansible-tmp-1604840588.5591877-26511-36384673966824 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplwsl0r4l TO /root/.ansible/tmp/ansible-tmp-1604840588.5591877-26511-36384673966824/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840588.5591877-26511-36384673966824/ /root/.ansible/tmp/ansible-tmp-1604840588.5591877-26511-36384673966824/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840588.5591877-26511-36384673966824/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840588.5591877-26511-36384673966824/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1603618466.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 270632,
        "charset": "binary",
        "checksum": "b1cacaa735c4406d1f47a6937e9329a38a842ede",
        "ctime": 1604239660.105088,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126520,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618466.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 138561023,
        "uid": 0,
        "version": "2790310722",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:34
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840589.01232-26546-225869148225337 `" && echo ansible-tmp-1604840589.01232-26546-225869148225337="` echo /root/.ansible/tmp/ansible-tmp-1604840589.01232-26546-225869148225337 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmptu2fwk1m TO /root/.ansible/tmp/ansible-tmp-1604840589.01232-26546-225869148225337/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840589.01232-26546-225869148225337/ /root/.ansible/tmp/ansible-tmp-1604840589.01232-26546-225869148225337/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840589.01232-26546-225869148225337/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840589.01232-26546-225869148225337/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.030421",
    "end": "2020-11-08 13:03:09.174369",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:09.143948",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)",
    "stdout_lines": [
        "Vault v1.5.5 (f5d1ddb3750e7c28e25036e1ef26a4c02379fc01)"
    ]
}

TASK [include_role : setup/aws-cli] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/environment-setup.yaml:63
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840589.439609-26586-21003817029327 `" && echo ansible-tmp-1604840589.439609-26586-21003817029327="` echo /root/.ansible/tmp/ansible-tmp-1604840589.439609-26586-21003817029327 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp4fagt3sx TO /root/.ansible/tmp/ansible-tmp-1604840589.439609-26586-21003817029327/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840589.439609-26586-21003817029327/ /root/.ansible/tmp/ansible-tmp-1604840589.439609-26586-21003817029327/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840589.439609-26586-21003817029327/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840589.439609-26586-21003817029327/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840590.446568-26626-178786268154279 `" && echo ansible-tmp-1604840590.446568-26626-178786268154279="` echo /root/.ansible/tmp/ansible-tmp-1604840590.446568-26626-178786268154279 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbmhpljs_ TO /root/.ansible/tmp/ansible-tmp-1604840590.446568-26626-178786268154279/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840590.446568-26626-178786268154279/ /root/.ansible/tmp/ansible-tmp-1604840590.446568-26626-178786268154279/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840590.446568-26626-178786268154279/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840590.446568-26626-178786268154279/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840591.0669203-26654-106821121422414 `" && echo ansible-tmp-1604840591.0669203-26654-106821121422414="` echo /root/.ansible/tmp/ansible-tmp-1604840591.0669203-26654-106821121422414 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpsa3nbm5d TO /root/.ansible/tmp/ansible-tmp-1604840591.0669203-26654-106821121422414/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840591.0669203-26654-106821121422414/ /root/.ansible/tmp/ansible-tmp-1604840591.0669203-26654-106821121422414/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840591.0669203-26654-106821121422414/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840591.0669203-26654-106821121422414/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840591.8551934-26694-200118565958305 `" && echo ansible-tmp-1604840591.8551934-26694-200118565958305="` echo /root/.ansible/tmp/ansible-tmp-1604840591.8551934-26694-200118565958305 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbn7p320q TO /root/.ansible/tmp/ansible-tmp-1604840591.8551934-26694-200118565958305/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840591.8551934-26694-200118565958305/ /root/.ansible/tmp/ansible-tmp-1604840591.8551934-26694-200118565958305/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840591.8551934-26694-200118565958305/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840591.8551934-26694-200118565958305/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s to community.kubernetes.k8s
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840592.9541886-26749-258023085044233 `" && echo ansible-tmp-1604840592.9541886-26749-258023085044233="` echo /root/.ansible/tmp/ansible-tmp-1604840592.9541886-26749-258023085044233 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpprvm7qdx TO /root/.ansible/tmp/ansible-tmp-1604840592.9541886-26749-258023085044233/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840592.9541886-26749-258023085044233/ /root/.ansible/tmp/ansible-tmp-1604840592.9541886-26749-258023085044233/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840592.9541886-26749-258023085044233/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840592.9541886-26749-258023085044233/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ujn4vcbf",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840593.135728-26775-160707449256659 `" && echo ansible-tmp-1604840593.135728-26775-160707449256659="` echo /root/.ansible/tmp/ansible-tmp-1604840593.135728-26775-160707449256659 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpg0urqfbg TO /root/.ansible/tmp/ansible-tmp-1604840593.135728-26775-160707449256659/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840593.135728-26775-160707449256659/ /root/.ansible/tmp/ansible-tmp-1604840593.135728-26775-160707449256659/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840593.135728-26775-160707449256659/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840593.135728-26775-160707449256659/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840593.498853-26811-46605504439182 `" && echo ansible-tmp-1604840593.498853-26811-46605504439182="` echo /root/.ansible/tmp/ansible-tmp-1604840593.498853-26811-46605504439182 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwrf_5xj9 TO /root/.ansible/tmp/ansible-tmp-1604840593.498853-26811-46605504439182/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840593.498853-26811-46605504439182/ /root/.ansible/tmp/ansible-tmp-1604840593.498853-26811-46605504439182/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840593.498853-26811-46605504439182/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840593.498853-26811-46605504439182/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051862",
    "end": "2020-11-08 13:03:13.684525",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:13.632663",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840593.7387192-26842-13387024279386 `" && echo ansible-tmp-1604840593.7387192-26842-13387024279386="` echo /root/.ansible/tmp/ansible-tmp-1604840593.7387192-26842-13387024279386 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpvaixo7_y TO /root/.ansible/tmp/ansible-tmp-1604840593.7387192-26842-13387024279386/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840593.7387192-26842-13387024279386/ /root/.ansible/tmp/ansible-tmp-1604840593.7387192-26842-13387024279386/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840593.7387192-26842-13387024279386/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840593.7387192-26842-13387024279386/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.7rp9hh79",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840593.9168358-26868-70266087061604 `" && echo ansible-tmp-1604840593.9168358-26868-70266087061604="` echo /root/.ansible/tmp/ansible-tmp-1604840593.9168358-26868-70266087061604 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp55mz2lvi TO /root/.ansible/tmp/ansible-tmp-1604840593.9168358-26868-70266087061604/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840593.9168358-26868-70266087061604/ /root/.ansible/tmp/ansible-tmp-1604840593.9168358-26868-70266087061604/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840593.9168358-26868-70266087061604/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840593.9168358-26868-70266087061604/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840594.2900953-26904-176016943675106 `" && echo ansible-tmp-1604840594.2900953-26904-176016943675106="` echo /root/.ansible/tmp/ansible-tmp-1604840594.2900953-26904-176016943675106 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_ar12rr0 TO /root/.ansible/tmp/ansible-tmp-1604840594.2900953-26904-176016943675106/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840594.2900953-26904-176016943675106/ /root/.ansible/tmp/ansible-tmp-1604840594.2900953-26904-176016943675106/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840594.2900953-26904-176016943675106/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840594.2900953-26904-176016943675106/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.047780",
    "end": "2020-11-08 13:03:14.467659",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:14.419879",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840594.5248463-26936-197451895875620 `" && echo ansible-tmp-1604840594.5248463-26936-197451895875620="` echo /root/.ansible/tmp/ansible-tmp-1604840594.5248463-26936-197451895875620 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzr8i6ma5 TO /root/.ansible/tmp/ansible-tmp-1604840594.5248463-26936-197451895875620/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840594.5248463-26936-197451895875620/ /root/.ansible/tmp/ansible-tmp-1604840594.5248463-26936-197451895875620/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840594.5248463-26936-197451895875620/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840594.5248463-26936-197451895875620/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840595.3419323-26976-201637962903124 `" && echo ansible-tmp-1604840595.3419323-26976-201637962903124="` echo /root/.ansible/tmp/ansible-tmp-1604840595.3419323-26976-201637962903124 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpyvqelpz2 TO /root/.ansible/tmp/ansible-tmp-1604840595.3419323-26976-201637962903124/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840595.3419323-26976-201637962903124/ /root/.ansible/tmp/ansible-tmp-1604840595.3419323-26976-201637962903124/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840595.3419323-26976-201637962903124/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840595.3419323-26976-201637962903124/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840595.9697683-27004-96316076834522 `" && echo ansible-tmp-1604840595.9697683-27004-96316076834522="` echo /root/.ansible/tmp/ansible-tmp-1604840595.9697683-27004-96316076834522 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5ktr0ny1 TO /root/.ansible/tmp/ansible-tmp-1604840595.9697683-27004-96316076834522/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840595.9697683-27004-96316076834522/ /root/.ansible/tmp/ansible-tmp-1604840595.9697683-27004-96316076834522/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840595.9697683-27004-96316076834522/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840595.9697683-27004-96316076834522/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840596.5830345-27032-45040823754815 `" && echo ansible-tmp-1604840596.5830345-27032-45040823754815="` echo /root/.ansible/tmp/ansible-tmp-1604840596.5830345-27032-45040823754815 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp86wl7bs4 TO /root/.ansible/tmp/ansible-tmp-1604840596.5830345-27032-45040823754815/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840596.5830345-27032-45040823754815/ /root/.ansible/tmp/ansible-tmp-1604840596.5830345-27032-45040823754815/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840596.5830345-27032-45040823754815/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840596.5830345-27032-45040823754815/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
    "delta": "0:00:00.364870",
    "end": "2020-11-08 13:03:17.079170",
    "invocation": {
        "module_args": {
            "_raw_params": "ssh-keyscan github.com > flux_known_hosts\nchmod -R 777 flux_known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:16.714300",
    "stderr": "# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba\n# github.com:22 SSH-2.0-babeld-17f526ba",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba",
        "# github.com:22 SSH-2.0-babeld-17f526ba"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840597.135211-27061-32789650907319 `" && echo ansible-tmp-1604840597.135211-27061-32789650907319="` echo /root/.ansible/tmp/ansible-tmp-1604840597.135211-27061-32789650907319 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpff7lq6qm TO /root/.ansible/tmp/ansible-tmp-1604840597.135211-27061-32789650907319/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840597.135211-27061-32789650907319/ /root/.ansible/tmp/ansible-tmp-1604840597.135211-27061-32789650907319/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840597.135211-27061-32789650907319/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840597.135211-27061-32789650907319/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
    "delta": "0:00:00.276036",
    "end": "2020-11-08 13:03:17.543406",
    "invocation": {
        "module_args": {
            "_raw_params": "helm init --client-only && helm repo add fluxcd https://fluxcd.github.io/flux\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:17.267370",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "$HELM_HOME has been configured at /root/.helm.\nNot installing Tiller due to 'client-only' flag having been set\n\"fluxcd\" has been added to your repositories",
    "stdout_lines": [
        "$HELM_HOME has been configured at /root/.helm.",
        "Not installing Tiller due to 'client-only' flag having been set",
        "\"fluxcd\" has been added to your repositories"
    ]
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840597.6120646-27098-211016037826049 `" && echo ansible-tmp-1604840597.6120646-27098-211016037826049="` echo /root/.ansible/tmp/ansible-tmp-1604840597.6120646-27098-211016037826049 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp9tfp0wnh TO /root/.ansible/tmp/ansible-tmp-1604840597.6120646-27098-211016037826049/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840597.6120646-27098-211016037826049/ /root/.ansible/tmp/ansible-tmp-1604840597.6120646-27098-211016037826049/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840597.6120646-27098-211016037826049/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840597.6120646-27098-211016037826049/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
    "delta": "0:00:03.197837",
    "end": "2020-11-08 13:03:20.942407",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret generic git-auth-dev --from-file=identity=/Users/s0s0dit/project/blockchain-automation-framework/build/gitops --namespace default\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl apply -f /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/../../../platforms/shared/charts/flux-helm-release-crd.yaml --context=\"fabric-aks-dev1\"\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml helm upgrade --install --set rbac.create=true --set helmOperator.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='ssh://git@github.com/bafsunsu/blockchain-automation-framework.git' --set git.secretName=git-auth-dev --set git.branch=gorilla --set git.label='sync-dev' --set git.path=\"platforms/hyperledger-fabric/releases/dev\" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts=\"index.docker.io/hyperledgerlabs\" --namespace default flux-dev --version \"0.15.0\" fluxcd/flux --kube-context=\"fabric-aks-dev1\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:17.744570",
    "stderr": "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists",
    "stderr_lines": [
        "Error from server (AlreadyExists): secrets \"git-auth-dev\" already exists"
    ],
    "stdout": "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged\nRelease \"flux-dev\" does not exist. Installing it now.\nNAME:   flux-dev\nLAST DEPLOYED: Sun Nov  8 13:03:19 2020\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME                  DATA  AGE\nflux-dev-kube-config  1     0s\nflux-dev-ssh-config   1     0s\n\n==> v1/Deployment\nNAME                    READY  UP-TO-DATE  AVAILABLE  AGE\nflux-dev                0/1    1           0          0s\nflux-dev-helm-operator  0/1    1           0          0s\nflux-dev-memcached      0/1    1           0          0s\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS             RESTARTS  AGE\nflux-dev-794c97d9cc-x7xcd                0/1    ContainerCreating  0         0s\nflux-dev-helm-operator-745dc7fb99-g9tsb  0/1    ContainerCreating  0         0s\nflux-dev-memcached-5f689bfdb9-9z9x2      0/1    ContainerCreating  0         0s\n\n==> v1/Service\nNAME                TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE\nflux-dev            ClusterIP  10.0.253.185  <none>       3030/TCP   0s\nflux-dev-memcached  ClusterIP  10.0.219.164  <none>       11211/TCP  0s\n\n==> v1/ServiceAccount\nNAME      SECRETS  AGE\nflux-dev  1        0s\n\n==> v1beta1/ClusterRole\nNAME      AGE\nflux-dev  0s\n\n==> v1beta1/ClusterRoleBinding\nNAME      AGE\nflux-dev  0s\n\n\nNOTES:\nGet the Git deploy key by either (a) running\n\n  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n\nor by (b) installing fluxctl through\nhttps://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl\nand running:\n\n  fluxctl identity --k8s-fwd-ns default",
    "stdout_lines": [
        "customresourcedefinition.apiextensions.k8s.io/helmreleases.flux.weave.works unchanged",
        "Release \"flux-dev\" does not exist. Installing it now.",
        "NAME:   flux-dev",
        "LAST DEPLOYED: Sun Nov  8 13:03:19 2020",
        "NAMESPACE: default",
        "STATUS: DEPLOYED",
        "",
        "RESOURCES:",
        "==> v1/ConfigMap",
        "NAME                  DATA  AGE",
        "flux-dev-kube-config  1     0s",
        "flux-dev-ssh-config   1     0s",
        "",
        "==> v1/Deployment",
        "NAME                    READY  UP-TO-DATE  AVAILABLE  AGE",
        "flux-dev                0/1    1           0          0s",
        "flux-dev-helm-operator  0/1    1           0          0s",
        "flux-dev-memcached      0/1    1           0          0s",
        "",
        "==> v1/Pod(related)",
        "NAME                                     READY  STATUS             RESTARTS  AGE",
        "flux-dev-794c97d9cc-x7xcd                0/1    ContainerCreating  0         0s",
        "flux-dev-helm-operator-745dc7fb99-g9tsb  0/1    ContainerCreating  0         0s",
        "flux-dev-memcached-5f689bfdb9-9z9x2      0/1    ContainerCreating  0         0s",
        "",
        "==> v1/Service",
        "NAME                TYPE       CLUSTER-IP    EXTERNAL-IP  PORT(S)    AGE",
        "flux-dev            ClusterIP  10.0.253.185  <none>       3030/TCP   0s",
        "flux-dev-memcached  ClusterIP  10.0.219.164  <none>       11211/TCP  0s",
        "",
        "==> v1/ServiceAccount",
        "NAME      SECRETS  AGE",
        "flux-dev  1        0s",
        "",
        "==> v1beta1/ClusterRole",
        "NAME      AGE",
        "flux-dev  0s",
        "",
        "==> v1beta1/ClusterRoleBinding",
        "NAME      AGE",
        "flux-dev  0s",
        "",
        "",
        "NOTES:",
        "Get the Git deploy key by either (a) running",
        "",
        "  kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2",
        "",
        "or by (b) installing fluxctl through",
        "https://docs.fluxcd.io/en/latest/references/fluxctl.html#installing-fluxctl",
        "and running:",
        "",
        "  fluxctl identity --k8s-fwd-ns default"
    ]
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in default] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840601.1197865-27147-52034222182889 `" && echo ansible-tmp-1604840601.1197865-27147-52034222182889="` echo /root/.ansible/tmp/ansible-tmp-1604840601.1197865-27147-52034222182889 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpxkx3zvz_ TO /root/.ansible/tmp/ansible-tmp-1604840601.1197865-27147-52034222182889/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840601.1197865-27147-52034222182889/ /root/.ansible/tmp/ansible-tmp-1604840601.1197865-27147-52034222182889/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840601.1197865-27147-52034222182889/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840601.1197865-27147-52034222182889/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod flux in default (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840631.757868-27147-114579448066439 `" && echo ansible-tmp-1604840631.757868-27147-114579448066439="` echo /root/.ansible/tmp/ansible-tmp-1604840631.757868-27147-114579448066439 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmptx3s0swd TO /root/.ansible/tmp/ansible-tmp-1604840631.757868-27147-114579448066439/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840631.757868-27147-114579448066439/ /root/.ansible/tmp/ansible-tmp-1604840631.757868-27147-114579448066439/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840631.757868-27147-114579448066439/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840631.757868-27147-114579448066439/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T13:03:20Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-x7xcd",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "8bdd5a11-e948-4c01-9c97-f8588c1ec4ea"
                    }
                ],
                "resourceVersion": "2907477",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-x7xcd",
                "uid": "b1e5a292-28f9-4515-9e33-bc9bebaada68"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-hkgp2",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-hkgp2",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-hkgp2"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:03:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:03:30Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:03:30Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:03:20Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://b8caaee5863f202807900c6851af5f657524690c6e930f837bf7bc1c31f4fd1b",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T13:03:22Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.70",
                "podIPs": [
                    {
                        "ip": "10.1.0.70"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-08T13:03:20Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840632.3933268-27201-174437491369787 `" && echo ansible-tmp-1604840632.3933268-27201-174437491369787="` echo /root/.ansible/tmp/ansible-tmp-1604840632.3933268-27201-174437491369787 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfi7m0xsq TO /root/.ansible/tmp/ansible-tmp-1604840632.3933268-27201-174437491369787/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840632.3933268-27201-174437491369787/ /root/.ansible/tmp/ansible-tmp-1604840632.3933268-27201-174437491369787/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840632.3933268-27201-174437491369787/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840632.3933268-27201-174437491369787/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.304427",
    "end": "2020-11-08 13:03:52.829520",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:52.525093",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : register temporary directory] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check aws-authenticator] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install aws-authenticator] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : register temporary directory] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840633.2083046-27261-144931578411629 `" && echo ansible-tmp-1604840633.2083046-27261-144931578411629="` echo /root/.ansible/tmp/ansible-tmp-1604840633.2083046-27261-144931578411629 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpff82wwhx TO /root/.ansible/tmp/ansible-tmp-1604840633.2083046-27261-144931578411629/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840633.2083046-27261-144931578411629/ /root/.ansible/tmp/ansible-tmp-1604840633.2083046-27261-144931578411629/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840633.2083046-27261-144931578411629/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840633.2083046-27261-144931578411629/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible._v7k1h6n",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check helm] **************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840633.390553-27287-128513670019660 `" && echo ansible-tmp-1604840633.390553-27287-128513670019660="` echo /root/.ansible/tmp/ansible-tmp-1604840633.390553-27287-128513670019660 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_l0roqga TO /root/.ansible/tmp/ansible-tmp-1604840633.390553-27287-128513670019660/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840633.390553-27287-128513670019660/ /root/.ansible/tmp/ansible-tmp-1604840633.390553-27287-128513670019660/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840633.390553-27287-128513670019660/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840633.390553-27287-128513670019660/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Install helm] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Unzip helm archive] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Move helm binaries] ******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test helm installation] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840633.7495291-27323-251766522343157 `" && echo ansible-tmp-1604840633.7495291-27323-251766522343157="` echo /root/.ansible/tmp/ansible-tmp-1604840633.7495291-27323-251766522343157 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp9ra3b31h TO /root/.ansible/tmp/ansible-tmp-1604840633.7495291-27323-251766522343157/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840633.7495291-27323-251766522343157/ /root/.ansible/tmp/ansible-tmp-1604840633.7495291-27323-251766522343157/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840633.7495291-27323-251766522343157/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840633.7495291-27323-251766522343157/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.050585",
    "end": "2020-11-08 13:03:53.933145",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:53.882560",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [kubectl : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840633.9872327-27354-214548719953245 `" && echo ansible-tmp-1604840633.9872327-27354-214548719953245="` echo /root/.ansible/tmp/ansible-tmp-1604840633.9872327-27354-214548719953245 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpe_5sfhlt TO /root/.ansible/tmp/ansible-tmp-1604840633.9872327-27354-214548719953245/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840633.9872327-27354-214548719953245/ /root/.ansible/tmp/ansible-tmp-1604840633.9872327-27354-214548719953245/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840633.9872327-27354-214548719953245/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840633.9872327-27354-214548719953245/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.mqqr_d4b",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [check kubectl] ***********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840634.165838-27380-116185246853710 `" && echo ansible-tmp-1604840634.165838-27380-116185246853710="` echo /root/.ansible/tmp/ansible-tmp-1604840634.165838-27380-116185246853710 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmppca20rxm TO /root/.ansible/tmp/ansible-tmp-1604840634.165838-27380-116185246853710/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840634.165838-27380-116185246853710/ /root/.ansible/tmp/ansible-tmp-1604840634.165838-27380-116185246853710/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840634.165838-27380-116185246853710/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840634.165838-27380-116185246853710/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1603618462.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 83992,
        "charset": "binary",
        "checksum": "fe0bcf142cabb39a09ab46440d797bd85d7fa838",
        "ctime": 1604239658.6170657,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126502,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618462.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 43003904,
        "uid": 0,
        "version": "1156023499",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [Download kubectl binary] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Copy kubectl binary to destination directory] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:41
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Test kubectl installation] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840634.5370526-27416-129275997828567 `" && echo ansible-tmp-1604840634.5370526-27416-129275997828567="` echo /root/.ansible/tmp/ansible-tmp-1604840634.5370526-27416-129275997828567 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwmray4oo TO /root/.ansible/tmp/ansible-tmp-1604840634.5370526-27416-129275997828567/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840634.5370526-27416-129275997828567/ /root/.ansible/tmp/ansible-tmp-1604840634.5370526-27416-129275997828567/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840634.5370526-27416-129275997828567/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840634.5370526-27416-129275997828567/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.048868",
    "end": "2020-11-08 13:03:54.715538",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:54.666670",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.0",
    "stdout_lines": [
        "Client Version: v1.19.0"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840634.7747262-27447-245716077228618 `" && echo ansible-tmp-1604840634.7747262-27447-245716077228618="` echo /root/.ansible/tmp/ansible-tmp-1604840634.7747262-27447-245716077228618 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6e6dysqr TO /root/.ansible/tmp/ansible-tmp-1604840634.7747262-27447-245716077228618/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840634.7747262-27447-245716077228618/ /root/.ansible/tmp/ansible-tmp-1604840634.7747262-27447-245716077228618/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840634.7747262-27447-245716077228618/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840634.7747262-27447-245716077228618/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840635.6584902-27487-179836423207822 `" && echo ansible-tmp-1604840635.6584902-27487-179836423207822="` echo /root/.ansible/tmp/ansible-tmp-1604840635.6584902-27487-179836423207822 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpkhy_jiws TO /root/.ansible/tmp/ansible-tmp-1604840635.6584902-27487-179836423207822/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840635.6584902-27487-179836423207822/ /root/.ansible/tmp/ansible-tmp-1604840635.6584902-27487-179836423207822/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840635.6584902-27487-179836423207822/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840635.6584902-27487-179836423207822/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840636.2916315-27515-128466174045167 `" && echo ansible-tmp-1604840636.2916315-27515-128466174045167="` echo /root/.ansible/tmp/ansible-tmp-1604840636.2916315-27515-128466174045167 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpulo_4zpl TO /root/.ansible/tmp/ansible-tmp-1604840636.2916315-27515-128466174045167/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840636.2916315-27515-128466174045167/ /root/.ansible/tmp/ansible-tmp-1604840636.2916315-27515-128466174045167/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840636.2916315-27515-128466174045167/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840636.2916315-27515-128466174045167/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = flux",
                "release = flux-dev"
            ],
            "name": null,
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T13:03:20Z",
                "generateName": "flux-dev-794c97d9cc-",
                "labels": {
                    "app": "flux",
                    "pod-template-hash": "794c97d9cc",
                    "release": "flux-dev"
                },
                "name": "flux-dev-794c97d9cc-x7xcd",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "flux-dev-794c97d9cc",
                        "uid": "8bdd5a11-e948-4c01-9c97-f8588c1ec4ea"
                    }
                ],
                "resourceVersion": "2907477",
                "selfLink": "/api/v1/namespaces/default/pods/flux-dev-794c97d9cc-x7xcd",
                "uid": "b1e5a292-28f9-4515-9e33-bc9bebaada68"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--log-format=fmt",
                            "--ssh-keygen-dir=/var/fluxd/keygen",
                            "--k8s-secret-name=git-auth-dev",
                            "--memcached-hostname=flux-dev-memcached",
                            "--sync-state=git",
                            "--memcached-service=",
                            "--git-url=ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                            "--git-branch=gorilla",
                            "--git-path=platforms/hyperledger-fabric/releases/dev",
                            "--git-readonly=false",
                            "--git-user=Weave Flux",
                            "--git-email=support@weave.works",
                            "--git-set-author=false",
                            "--git-poll-interval=2m",
                            "--git-timeout=200s",
                            "--sync-interval=2m",
                            "--git-ci-skip=false",
                            "--git-label=sync-dev",
                            "--registry-poll-interval=5m",
                            "--registry-rps=200",
                            "--registry-burst=125",
                            "--registry-trace=false",
                            "--registry-insecure-host=index.docker.io/hyperledgerlabs"
                        ],
                        "env": [
                            {
                                "name": "KUBECONFIG",
                                "value": "/root/.kubectl/config"
                            }
                        ],
                        "image": "docker.io/fluxcd/flux:1.15.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "flux",
                        "ports": [
                            {
                                "containerPort": 3030,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/flux/v6/identity.pub",
                                "port": 3030,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "50m",
                                "memory": "64Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/root/.kubectl",
                                "name": "kubedir"
                            },
                            {
                                "mountPath": "/root/.ssh",
                                "name": "sshdir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/fluxd/ssh",
                                "name": "git-key",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/fluxd/keygen",
                                "name": "git-keygen"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "flux-dev-token-hkgp2",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "flux-dev",
                "serviceAccountName": "flux-dev",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "flux-dev-kube-config"
                        },
                        "name": "kubedir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 384,
                            "name": "flux-dev-ssh-config"
                        },
                        "name": "sshdir"
                    },
                    {
                        "name": "git-key",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "git-auth-dev"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "git-keygen"
                    },
                    {
                        "name": "flux-dev-token-hkgp2",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "flux-dev-token-hkgp2"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:03:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:03:30Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:03:30Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:03:20Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://b8caaee5863f202807900c6851af5f657524690c6e930f837bf7bc1c31f4fd1b",
                        "image": "fluxcd/flux:1.15.0",
                        "imageID": "docker-pullable://fluxcd/flux@sha256:ba4bd9ed8ea13ba4aa94d97b6ca285b6f3831fc5861369110dc19f238ac13201",
                        "lastState": {},
                        "name": "flux",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T13:03:22Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.70",
                "podIPs": [
                    {
                        "ip": "10.1.0.70"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2020-11-08T13:03:20Z"
            }
        }
    ]
}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Helm repo add] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Get ssh key] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:54
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840637.0204318-27551-122257231705096 `" && echo ansible-tmp-1604840637.0204318-27551-122257231705096="` echo /root/.ansible/tmp/ansible-tmp-1604840637.0204318-27551-122257231705096 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqn2mrzdx TO /root/.ansible/tmp/ansible-tmp-1604840637.0204318-27551-122257231705096/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840637.0204318-27551-122257231705096/ /root/.ansible/tmp/ansible-tmp-1604840637.0204318-27551-122257231705096/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840637.0204318-27551-122257231705096/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840637.0204318-27551-122257231705096/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
    "delta": "0:00:00.160730",
    "end": "2020-11-08 13:03:57.310673",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl -n default logs deployment/flux-dev | grep identity.pub | cut -d '\"' -f2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:57.149943",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0=",
    "stdout_lines": [
        "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
    ]
}

TASK [setup/flux : Output ssh key] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:60
ok: [localhost] => {
    "ssh_key.stdout": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ImoOJkm9nhYVB2d6wbBVNW526Q3nEQoeBG0tQTTbQ5F6bFIkfraDGKKxqpRZRPwiSTkcxUbGeWV1xpbX4kuG3NKn8MwFm1LBilEnp8m9t48ID9cIfLe4WESE4KCqmXPXjMK/OFa1Yo1JRd9P/PHVK4mJK1syXAZl0XKhK9gujrStC/EOsRaB/6ToyQeOPPfeWqL/EO8P6a5T1CFerUBc+Mw4lnFa8XEP7ab4q3xZbmuZ+oGt6sFR+/Jzu8kYJAY1j0ASqBU0DbJbUvvDnpEr7sM3DHTLHj3Mu0K3d4qyc+eaSMono+6BJZIi5JfT3ymgJ5Xwa3W87w5zPgYd+/LVF/wnChgeYYAzCfHZagFQTzxS/wEuWjvNouTf2TbVbgdFRCKPQ9BTTQB+Hrlm8kzqhduNsWlQO9puWd6Zn/A8B+rcae0hrJdKrF7A8NA5N5N/cR9kiri6rJ4m8kJWvrG+zTEBHWcqtDvRj0Yqf29m0XP2IjERFfCwe5W5efIkEk0="
}

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:22
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:31
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/kubernetes-env-setup.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840637.9694672-27617-128190348357272 `" && echo ansible-tmp-1604840637.9694672-27617-128190348357272="` echo /root/.ansible/tmp/ansible-tmp-1604840637.9694672-27617-128190348357272 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzzolxhff TO /root/.ansible/tmp/ansible-tmp-1604840637.9694672-27617-128190348357272/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840637.9694672-27617-128190348357272/ /root/.ansible/tmp/ansible-tmp-1604840637.9694672-27617-128190348357272/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840637.9694672-27617-128190348357272/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840637.9694672-27617-128190348357272/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.utjifjqr",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840638.1532733-27643-93065642465929 `" && echo ansible-tmp-1604840638.1532733-27643-93065642465929="` echo /root/.ansible/tmp/ansible-tmp-1604840638.1532733-27643-93065642465929 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6ra6dezi TO /root/.ansible/tmp/ansible-tmp-1604840638.1532733-27643-93065642465929/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840638.1532733-27643-93065642465929/ /root/.ansible/tmp/ansible-tmp-1604840638.1532733-27643-93065642465929/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840638.1532733-27643-93065642465929/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840638.1532733-27643-93065642465929/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840638.5211284-27679-229255449843588 `" && echo ansible-tmp-1604840638.5211284-27679-229255449843588="` echo /root/.ansible/tmp/ansible-tmp-1604840638.5211284-27679-229255449843588 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpjscq6fzu TO /root/.ansible/tmp/ansible-tmp-1604840638.5211284-27679-229255449843588/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840638.5211284-27679-229255449843588/ /root/.ansible/tmp/ansible-tmp-1604840638.5211284-27679-229255449843588/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840638.5211284-27679-229255449843588/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840638.5211284-27679-229255449843588/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051374",
    "end": "2020-11-08 13:03:58.702887",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:03:58.651513",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840638.7619119-27710-275420622170138 `" && echo ansible-tmp-1604840638.7619119-27710-275420622170138="` echo /root/.ansible/tmp/ansible-tmp-1604840638.7619119-27710-275420622170138 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpa0mf1eks TO /root/.ansible/tmp/ansible-tmp-1604840638.7619119-27710-275420622170138/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840638.7619119-27710-275420622170138/ /root/.ansible/tmp/ansible-tmp-1604840638.7619119-27710-275420622170138/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840638.7619119-27710-275420622170138/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840638.7619119-27710-275420622170138/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840639.6129773-27750-76458084862478 `" && echo ansible-tmp-1604840639.6129773-27750-76458084862478="` echo /root/.ansible/tmp/ansible-tmp-1604840639.6129773-27750-76458084862478 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp3hw7b8ig TO /root/.ansible/tmp/ansible-tmp-1604840639.6129773-27750-76458084862478/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840639.6129773-27750-76458084862478/ /root/.ansible/tmp/ansible-tmp-1604840639.6129773-27750-76458084862478/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840639.6129773-27750-76458084862478/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840639.6129773-27750-76458084862478/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840640.242016-27778-59677373768152 `" && echo ansible-tmp-1604840640.242016-27778-59677373768152="` echo /root/.ansible/tmp/ansible-tmp-1604840640.242016-27778-59677373768152 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp80lqxw4q TO /root/.ansible/tmp/ansible-tmp-1604840640.242016-27778-59677373768152/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840640.242016-27778-59677373768152/ /root/.ansible/tmp/ansible-tmp-1604840640.242016-27778-59677373768152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840640.242016-27778-59677373768152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840640.242016-27778-59677373768152/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840641.0805328-27818-195345967510937 `" && echo ansible-tmp-1604840641.0805328-27818-195345967510937="` echo /root/.ansible/tmp/ansible-tmp-1604840641.0805328-27818-195345967510937 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpc565iatr TO /root/.ansible/tmp/ansible-tmp-1604840641.0805328-27818-195345967510937/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840641.0805328-27818-195345967510937/ /root/.ansible/tmp/ansible-tmp-1604840641.0805328-27818-195345967510937/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840641.0805328-27818-195345967510937/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840641.0805328-27818-195345967510937/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [aws-cli : register temporary directory] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:44
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:52
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : register temporary directory] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : check aws-authenticator] ********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : create bin directory] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Install aws-authenticator] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/aws-auth : Test Kubernetes connection] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:35
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : register temporary directory] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840642.0407016-27870-248423182341694 `" && echo ansible-tmp-1604840642.0407016-27870-248423182341694="` echo /root/.ansible/tmp/ansible-tmp-1604840642.0407016-27870-248423182341694 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp581hf0on TO /root/.ansible/tmp/ansible-tmp-1604840642.0407016-27870-248423182341694/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840642.0407016-27870-248423182341694/ /root/.ansible/tmp/ansible-tmp-1604840642.0407016-27870-248423182341694/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840642.0407016-27870-248423182341694/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840642.0407016-27870-248423182341694/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.fm695t74",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840642.2218785-27896-146203051017164 `" && echo ansible-tmp-1604840642.2218785-27896-146203051017164="` echo /root/.ansible/tmp/ansible-tmp-1604840642.2218785-27896-146203051017164 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphz9faddh TO /root/.ansible/tmp/ansible-tmp-1604840642.2218785-27896-146203051017164/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840642.2218785-27896-146203051017164/ /root/.ansible/tmp/ansible-tmp-1604840642.2218785-27896-146203051017164/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840642.2218785-27896-146203051017164/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840642.2218785-27896-146203051017164/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1603618464.0,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 78000,
        "charset": "binary",
        "checksum": "5820860e398793a3b0b54449e9b6f9a4a0f35cb9",
        "ctime": 1604239659.0090716,
        "dev": 255,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3126511,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "application/x-executable",
        "mode": "0755",
        "mtime": 1603618464.0,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 39936000,
        "uid": 0,
        "version": "2759632516",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:47
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840642.586501-27932-259813072536654 `" && echo ansible-tmp-1604840642.586501-27932-259813072536654="` echo /root/.ansible/tmp/ansible-tmp-1604840642.586501-27932-259813072536654 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpws5jh_xh TO /root/.ansible/tmp/ansible-tmp-1604840642.586501-27932-259813072536654/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840642.586501-27932-259813072536654/ /root/.ansible/tmp/ansible-tmp-1604840642.586501-27932-259813072536654/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840642.586501-27932-259813072536654/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840642.586501-27932-259813072536654/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.049740",
    "end": "2020-11-08 13:04:02.766068",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:04:02.716328",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client: v2.16.12+g47f0b88",
    "stdout_lines": [
        "Client: v2.16.12+g47f0b88"
    ]
}

TASK [setup/tiller : Check if Tiller is already installed in the Kubernetes clusters] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840642.8245816-27963-217078823196940 `" && echo ansible-tmp-1604840642.8245816-27963-217078823196940="` echo /root/.ansible/tmp/ansible-tmp-1604840642.8245816-27963-217078823196940 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5igiiq12 TO /root/.ansible/tmp/ansible-tmp-1604840642.8245816-27963-217078823196940/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840642.8245816-27963-217078823196940/ /root/.ansible/tmp/ansible-tmp-1604840642.8245816-27963-217078823196940/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840642.8245816-27963-217078823196940/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840642.8245816-27963-217078823196940/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/tiller : Create service account for Tiller] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Apply Tiller RBAC definintion] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:27
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/tiller : Setup tiller] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Wait for tiller to be ready] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/tiller/tasks/main.yaml:55

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod helm in kube-system] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840643.6755846-28003-24044442309931 `" && echo ansible-tmp-1604840643.6755846-28003-24044442309931="` echo /root/.ansible/tmp/ansible-tmp-1604840643.6755846-28003-24044442309931 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpd5mcnrj4 TO /root/.ansible/tmp/ansible-tmp-1604840643.6755846-28003-24044442309931/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840643.6755846-28003-24044442309931/ /root/.ansible/tmp/ansible-tmp-1604840643.6755846-28003-24044442309931/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840643.6755846-28003-24044442309931/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840643.6755846-28003-24044442309931/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "app = helm"
            ],
            "name": null,
            "namespace": "kube-system",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T18:12:54Z",
                "generateName": "tiller-deploy-59fbf5447c-",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "59fbf5447c"
                },
                "name": "tiller-deploy-59fbf5447c-cpkbh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-59fbf5447c",
                        "uid": "c3d6ed6b-8817-4666-9014-a9e57ba14a2d"
                    }
                ],
                "resourceVersion": "236917",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-59fbf5447c-cpkbh",
                "uid": "536ed4d6-9da8-4cf5-b6d4-7cf61a081618"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "200"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "fabric-dns-1-d0b060a1.hcp.southcentralus.azmk8s.io"
                            }
                        ],
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "tiller",
                        "ports": [
                            {
                                "containerPort": 44134,
                                "name": "tiller",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 44135,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "tiller-token-r24lq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tiller",
                "serviceAccountName": "tiller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tiller-token-r24lq",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "tiller-token-r24lq"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:13:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T18:12:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5d833a631b5d8b2e0bc8397d5e1f473b3bd9d918eaebac7c0d466ab91f292a28",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.12",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6003775d503546087266eda39418d221f9afb5ccfe35f637c32a1161619a3f9c",
                        "lastState": {},
                        "name": "tiller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T18:13:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.75",
                "podIPs": [
                    {
                        "ip": "10.1.0.75"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T18:12:54Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Check if haproxy is already installed] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840644.3003886-28031-146178819706537 `" && echo ansible-tmp-1604840644.3003886-28031-146178819706537="` echo /root/.ansible/tmp/ansible-tmp-1604840644.3003886-28031-146178819706537 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_41hgyak TO /root/.ansible/tmp/ansible-tmp-1604840644.3003886-28031-146178819706537/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840644.3003886-28031-146178819706537/ /root/.ansible/tmp/ansible-tmp-1604840644.3003886-28031-146178819706537/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840644.3003886-28031-146178819706537/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840644.3003886-28031-146178819706537/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}

TASK [setup/haproxy-ingress : Install HAProxy Ingress controller] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:16
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Enable external DNS] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:24
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/haproxy-ingress : Disable TLS1.0 for the AWS] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [wait for pods to come up] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/setup/haproxy-ingress/tasks/main.yaml:42

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/helm_component : Wait for Pod flux in ingress-controller] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840645.137333-28071-46715558857666 `" && echo ansible-tmp-1604840645.137333-28071-46715558857666="` echo /root/.ansible/tmp/ansible-tmp-1604840645.137333-28071-46715558857666 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp4fdr1js6 TO /root/.ansible/tmp/ansible-tmp-1604840645.137333-28071-46715558857666/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840645.137333-28071-46715558857666/ /root/.ansible/tmp/ansible-tmp-1604840645.137333-28071-46715558857666/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840645.137333-28071-46715558857666/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840645.137333-28071-46715558857666/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "run = haproxy-ingress"
            ],
            "name": null,
            "namespace": "ingress-controller",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-6ksdw",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106895",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-6ksdw",
                "uid": "8563bc8d-1403-4bd4-aee2-7951da46957d"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000002"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4176a8d9672284d4518d9c6472735301169dbef1f5f96e8543488e1d8cc80b9e",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.66",
                "podIPs": [
                    {
                        "ip": "10.1.0.66"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-cp4vl",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106892",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-cp4vl",
                "uid": "a4be4342-5781-4905-83af-ff731371aca9"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4d1866dac0c6f40ce0ecaa88085357e276165bd48a61d29224c7e7e34dee4054",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "phase": "Running",
                "podIP": "10.1.0.4",
                "podIPs": [
                    {
                        "ip": "10.1.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-10-27T04:00:06Z",
                "generateName": "haproxy-ingress-",
                "labels": {
                    "controller-revision-hash": "6fdf94c59f",
                    "pod-template-generation": "1",
                    "run": "haproxy-ingress"
                },
                "name": "haproxy-ingress-rwks2",
                "namespace": "ingress-controller",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "haproxy-ingress",
                        "uid": "4c1ad8e7-b166-464b-b1b3-0ebfec677b09"
                    }
                ],
                "resourceVersion": "106888",
                "selfLink": "/api/v1/namespaces/ingress-controller/pods/haproxy-ingress-rwks2",
                "uid": "d50d75fe-0b73-48e7-9523-365002cc2784"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-fabricpool-41135923-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--default-backend-service=$(POD_NAMESPACE)/ingress-default-backend",
                            "--configmap=$(POD_NAMESPACE)/haproxy-ingress",
                            "--sort-backends"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10253,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "haproxy-ingress",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 1936,
                                "hostPort": 1936,
                                "name": "stat",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "ingress-controller-token-qdm2n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "ingress-controller",
                "serviceAccountName": "ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "ingress-controller-token-qdm2n",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "ingress-controller-token-qdm2n"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:11Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-27T04:00:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4ea1edbd8c67e0e8a562d94639105dd6b0066370c17eb29f212680cbd72e578d",
                        "image": "quay.io/jcmoraisjr/haproxy-ingress:v0.9.1",
                        "imageID": "docker-pullable://quay.io/jcmoraisjr/haproxy-ingress@sha256:406705945c949a3efa9ad33cc21b3f643f45debeb0a54c61066a6c104e404d91",
                        "lastState": {},
                        "name": "haproxy-ingress",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-10-27T04:00:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.35",
                "podIPs": [
                    {
                        "ip": "10.1.0.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-10-27T04:00:06Z"
            }
        }
    ]
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840645.7972405-28100-67932081104939 `" && echo ansible-tmp-1604840645.7972405-28100-67932081104939="` echo /root/.ansible/tmp/ansible-tmp-1604840645.7972405-28100-67932081104939 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpoyq644wl TO /root/.ansible/tmp/ansible-tmp-1604840645.7972405-28100-67932081104939/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840645.7972405-28100-67932081104939/ /root/.ansible/tmp/ansible-tmp-1604840645.7972405-28100-67932081104939/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840645.7972405-28100-67932081104939/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840645.7972405-28100-67932081104939/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [include_role : create/namespace_vaultauth] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:22

TASK [Checking if the namespace walmart-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840646.3673007-28130-11486683744000 `" && echo ansible-tmp-1604840646.3673007-28130-11486683744000="` echo /root/.ansible/tmp/ansible-tmp-1604840646.3673007-28130-11486683744000 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpnz1zr2b_ TO /root/.ansible/tmp/ansible-tmp-1604840646.3673007-28130-11486683744000/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840646.3673007-28130-11486683744000/ /root/.ansible/tmp/ansible-tmp-1604840646.3673007-28130-11486683744000/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840646.3673007-28130-11486683744000/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840646.3673007-28130-11486683744000/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840647.2077146-28168-31942184185855 `" && echo ansible-tmp-1604840647.2077146-28168-31942184185855="` echo /root/.ansible/tmp/ansible-tmp-1604840647.2077146-28168-31942184185855 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfgg_7pr0 TO /root/.ansible/tmp/ansible-tmp-1604840647.2077146-28168-31942184185855/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840647.2077146-28168-31942184185855/ /root/.ansible/tmp/ansible-tmp-1604840647.2077146-28168-31942184185855/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840647.2077146-28168-31942184185855/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840647.2077146-28168-31942184185855/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690 `" && echo ansible-tmp-1604840647.4205222-28194-52900356436690="` echo /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpn96pqjy_ TO /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/ /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwgsnwre5/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/ /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzq01y8z6 TO /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/ /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a55518c41c3491d670e8e50c4de26d9767b22e3f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "4d93c9ae989d8757fd969fecf14722d7",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840647.4205222-28194-52900356436690/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840648.0912588-28237-204271802466291 `" && echo ansible-tmp-1604840648.0912588-28237-204271802466291="` echo /root/.ansible/tmp/ansible-tmp-1604840648.0912588-28237-204271802466291 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpk2hh23vc TO /root/.ansible/tmp/ansible-tmp-1604840648.0912588-28237-204271802466291/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840648.0912588-28237-204271802466291/ /root/.ansible/tmp/ansible-tmp-1604840648.0912588-28237-204271802466291/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840648.0912588-28237-204271802466291/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840648.0912588-28237-204271802466291/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for orderer] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655 `" && echo ansible-tmp-1604840648.2955132-28263-31344787322655="` echo /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp3qu4yj34 TO /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/ /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_7kxquxj/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/ /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwnoe5l0x TO /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/ /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "ab63f59922ef87cd2f97503258d467994978d18e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b1e902eb27343ada17df0d459fa5440c",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840648.2955132-28263-31344787322655/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840648.6917229-28305-264978573933614 `" && echo ansible-tmp-1604840648.6917229-28305-264978573933614="` echo /root/.ansible/tmp/ansible-tmp-1604840648.6917229-28305-264978573933614 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzaas7h9w TO /root/.ansible/tmp/ansible-tmp-1604840648.6917229-28305-264978573933614/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840648.6917229-28305-264978573933614/ /root/.ansible/tmp/ansible-tmp-1604840648.6917229-28305-264978573933614/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840648.6917229-28305-264978573933614/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840648.6917229-28305-264978573933614/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for orderer] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934 `" && echo ansible-tmp-1604840648.8936324-28331-24704471319934="` echo /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpnrv4o_vh TO /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/ /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqxpoo2qj/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/ /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpcwk5p7fh TO /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/ /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "9312e5532388dd5137fb6e23c732fd6422cd630f",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "707b3f479630c38f6e663c6c7306b4d0",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840648.8936324-28331-24704471319934/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures orderer dir exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840649.3015497-28373-137059251865034 `" && echo ansible-tmp-1604840649.3015497-28373-137059251865034="` echo /root/.ansible/tmp/ansible-tmp-1604840649.3015497-28373-137059251865034 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpd943skvq TO /root/.ansible/tmp/ansible-tmp-1604840649.3015497-28373-137059251865034/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840649.3015497-28373-137059251865034/ /root/.ansible/tmp/ansible-tmp-1604840649.3015497-28373-137059251865034/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840649.3015497-28373-137059251865034/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840649.3015497-28373-137059251865034/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for orderer] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634 `" && echo ansible-tmp-1604840649.5050862-28399-162745185902634="` echo /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpv29kvfr9 TO /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/ /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwsi21shg/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/ /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmppvxg_htg TO /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/ /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "70b7eb49953ccea656acc3a2ada135dae3868d78",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "48ca9ca3bda6a4d4373d83682874e266",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840649.5050862-28399-162745185902634/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840649.9083266-28441-19902892529556 `" && echo ansible-tmp-1604840649.9083266-28441-19902892529556="` echo /root/.ansible/tmp/ansible-tmp-1604840649.9083266-28441-19902892529556 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp0jckny4v TO /root/.ansible/tmp/ansible-tmp-1604840649.9083266-28441-19902892529556/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840649.9083266-28441-19902892529556/ /root/.ansible/tmp/ansible-tmp-1604840649.9083266-28441-19902892529556/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840649.9083266-28441-19902892529556/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840649.9083266-28441-19902892529556/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840650.1181538-28467-104949994134051 `" && echo ansible-tmp-1604840650.1181538-28467-104949994134051="` echo /root/.ansible/tmp/ansible-tmp-1604840650.1181538-28467-104949994134051 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpgo8mxt2y TO /root/.ansible/tmp/ansible-tmp-1604840650.1181538-28467-104949994134051/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840650.1181538-28467-104949994134051/ /root/.ansible/tmp/ansible-tmp-1604840650.1181538-28467-104949994134051/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840650.1181538-28467-104949994134051/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840650.1181538-28467-104949994134051/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.238699",
    "end": "2020-11-08 13:04:18.487430",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:04:10.248731",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   5d61903c..b5204161  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   5d61903c..b5204161  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla b5204161] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 11231 insertions(+)\n create mode 100644 console.out\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla b5204161] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+)",
        " create mode 100644 console.out",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla b5204161] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 11231 insertions(+)",
        " create mode 100644 console.out",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   5d61903c..b5204161  HEAD -> gorilla"
    ]
}

TASK [Checking for the walmart-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding walmart-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840658.7358046-28519-50644059490072 `" && echo ansible-tmp-1604840658.7358046-28519-50644059490072="` echo /root/.ansible/tmp/ansible-tmp-1604840658.7358046-28519-50644059490072 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpmomvanno TO /root/.ansible/tmp/ansible-tmp-1604840658.7358046-28519-50644059490072/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840658.7358046-28519-50644059490072/ /root/.ansible/tmp/ansible-tmp-1604840658.7358046-28519-50644059490072/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840658.7358046-28519-50644059490072/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840658.7358046-28519-50644059490072/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "2ac106c4abd83ffb52d3a8e3b910c95c18efa038",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"2ac106c4abd83ffb52d3a8e3b910c95c18efa038\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78\"},\"name\":\"walmart-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}]}\n"
                },
                "creationTimestamp": "2020-11-06T07:10:22Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.zvwt9OtkjuZKnPaC5jwdOwNP8ZcfyEenAdp50ntCX78"
                },
                "name": "walmart-net-role-tokenreview-binding",
                "resourceVersion": "2396289",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/walmart-net-role-tokenreview-binding",
                "uid": "27e7b4f4-321f-4fde-8504-e817937d7507"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "walmart-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding walmart-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in walmart-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840659.6377244-28559-72769240130111 `" && echo ansible-tmp-1604840659.6377244-28559-72769240130111="` echo /root/.ansible/tmp/ansible-tmp-1604840659.6377244-28559-72769240130111 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpi42o_cvy TO /root/.ansible/tmp/ansible-tmp-1604840659.6377244-28559-72769240130111/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840659.6377244-28559-72769240130111/ /root/.ansible/tmp/ansible-tmp-1604840659.6377244-28559-72769240130111/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840659.6377244-28559-72769240130111/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840659.6377244-28559-72769240130111/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840695.2619689-28559-231388032828480 `" && echo ansible-tmp-1604840695.2619689-28559-231388032828480="` echo /root/.ansible/tmp/ansible-tmp-1604840695.2619689-28559-231388032828480 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplo76wg87 TO /root/.ansible/tmp/ansible-tmp-1604840695.2619689-28559-231388032828480/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840695.2619689-28559-231388032828480/ /root/.ansible/tmp/ansible-tmp-1604840695.2619689-28559-231388032828480/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840695.2619689-28559-231388032828480/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840695.2619689-28559-231388032828480/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840730.9297504-28559-36769370315448 `" && echo ansible-tmp-1604840730.9297504-28559-36769370315448="` echo /root/.ansible/tmp/ansible-tmp-1604840730.9297504-28559-36769370315448 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdoj4osfi TO /root/.ansible/tmp/ansible-tmp-1604840730.9297504-28559-36769370315448/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840730.9297504-28559-36769370315448/ /root/.ansible/tmp/ansible-tmp-1604840730.9297504-28559-36769370315448/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840730.9297504-28559-36769370315448/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840730.9297504-28559-36769370315448/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840766.561369-28559-62807409399488 `" && echo ansible-tmp-1604840766.561369-28559-62807409399488="` echo /root/.ansible/tmp/ansible-tmp-1604840766.561369-28559-62807409399488 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpcojp1gxi TO /root/.ansible/tmp/ansible-tmp-1604840766.561369-28559-62807409399488/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840766.561369-28559-62807409399488/ /root/.ansible/tmp/ansible-tmp-1604840766.561369-28559-62807409399488/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840766.561369-28559-62807409399488/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840766.561369-28559-62807409399488/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "586eac56c69c15efee4d4ceb86bb2999c96a56c2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"586eac56c69c15efee4d4ceb86bb2999c96a56c2\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA\"},\"name\":\"vault-reviewer\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T13:05:42Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256._HQr2TZ7Xag8ZALP1GDf1v7MWxG57gY5JKCA-0lQrMA"
                },
                "name": "vault-reviewer",
                "namespace": "walmart-net",
                "resourceVersion": "2907825",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-reviewer",
                "uid": "fd7461df-7ed4-45a6-9f3d-f7f17c7dcbe4"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-h4plm"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in walmart-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840767.3959746-28673-139332546797099 `" && echo ansible-tmp-1604840767.3959746-28673-139332546797099="` echo /root/.ansible/tmp/ansible-tmp-1604840767.3959746-28673-139332546797099 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpawtf62qu TO /root/.ansible/tmp/ansible-tmp-1604840767.3959746-28673-139332546797099/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840767.3959746-28673-139332546797099/ /root/.ansible/tmp/ansible-tmp-1604840767.3959746-28673-139332546797099/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840767.3959746-28673-139332546797099/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840767.3959746-28673-139332546797099/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b527239518c6f14365e0009e83a7965e765a8dc3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b527239518c6f14365e0009e83a7965e765a8dc3\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0\"},\"name\":\"vault-auth\",\"namespace\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T13:05:42Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.PORVc536_cz560074Yt3tw1lMBw9TuOpitX_7rUhwY0"
                },
                "name": "vault-auth",
                "namespace": "walmart-net",
                "resourceVersion": "2907823",
                "selfLink": "/api/v1/namespaces/walmart-net/serviceaccounts/vault-auth",
                "uid": "c93173db-273d-4b91-afa9-b79f6248fd8f"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-p5mdn"
                }
            ]
        }
    ]
}

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840768.0710974-28703-58198600712901 `" && echo ansible-tmp-1604840768.0710974-28703-58198600712901="` echo /root/.ansible/tmp/ansible-tmp-1604840768.0710974-28703-58198600712901 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpsb0avssz TO /root/.ansible/tmp/ansible-tmp-1604840768.0710974-28703-58198600712901/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840768.0710974-28703-58198600712901/ /root/.ansible/tmp/ansible-tmp-1604840768.0710974-28703-58198600712901/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840768.0710974-28703-58198600712901/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840768.0710974-28703-58198600712901/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:17
ok: [localhost] => {
    "ansible_facts": {
        "get_namespace": {
            "changed": false,
            "failed": false,
            "resources": []
        }
    },
    "changed": false
}

TASK [Create namespaces] *******************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:24

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840768.8744776-28741-43532540820798 `" && echo ansible-tmp-1604840768.8744776-28741-43532540820798="` echo /root/.ansible/tmp/ansible-tmp-1604840768.8744776-28741-43532540820798 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpt7nbl6gn TO /root/.ansible/tmp/ansible-tmp-1604840768.8744776-28741-43532540820798/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840768.8744776-28741-43532540820798/ /root/.ansible/tmp/ansible-tmp-1604840768.8744776-28741-43532540820798/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840768.8744776-28741-43532540820798/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840768.8744776-28741-43532540820798/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create namespace file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195 `" && echo ansible-tmp-1604840769.0781074-28767-190800864212195="` echo /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpssttug2i TO /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/ /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8mx7p_8e/namespace_component.tpl TO /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/ /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqmt8ef5o TO /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/ /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "namespace_component.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "160f8992bcfbf52ddf8ec40b36a5efa86c32ef83",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "87aff577d25e325fac79903302d07758",
    "mode": "0644",
    "owner": "root",
    "size": 60,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840769.0781074-28767-190800864212195/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:38

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840769.4799314-28811-211845057676056 `" && echo ansible-tmp-1604840769.4799314-28811-211845057676056="` echo /root/.ansible/tmp/ansible-tmp-1604840769.4799314-28811-211845057676056 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp0fea3hq1 TO /root/.ansible/tmp/ansible-tmp-1604840769.4799314-28811-211845057676056/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840769.4799314-28811-211845057676056/ /root/.ansible/tmp/ansible-tmp-1604840769.4799314-28811-211845057676056/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840769.4799314-28811-211845057676056/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840769.4799314-28811-211845057676056/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vault-reviewer file for peer] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789 `" && echo ansible-tmp-1604840769.6863081-28837-33500933858789="` echo /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp29_7vh4_ TO /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/ /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzpkm1ybk/reviewer.tpl TO /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/ /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp7v8ogo54 TO /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/ /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c1efc6b2276d3bcf1ae2801acda84fad126b4e1e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "9749a00045b3fd05c025cc29e7eabfb1",
    "mode": "0644",
    "owner": "root",
    "size": 93,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840769.6863081-28837-33500933858789/source",
    "state": "file",
    "uid": 0
}

TASK [Create vault auth service account for Organizations] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:52

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840770.078589-28879-251243612304607 `" && echo ansible-tmp-1604840770.078589-28879-251243612304607="` echo /root/.ansible/tmp/ansible-tmp-1604840770.078589-28879-251243612304607 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpewdz0hfz TO /root/.ansible/tmp/ansible-tmp-1604840770.078589-28879-251243612304607/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840770.078589-28879-251243612304607/ /root/.ansible/tmp/ansible-tmp-1604840770.078589-28879-251243612304607/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840770.078589-28879-251243612304607/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840770.078589-28879-251243612304607/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create vaultAuth file for peer] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722 `" && echo ansible-tmp-1604840770.3124118-28905-193381621148722="` echo /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzuz72pff TO /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/ /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpm48ehvd7/vault_auth.tpl TO /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/ /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp54cbrsqk TO /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/ /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d39874ba996a2494812a782b78453e995845be6b",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "vault_auth.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "d39874ba996a2494812a782b78453e995845be6b",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "603f99cf710abd04581efdc563a6074a",
    "mode": "0644",
    "owner": "root",
    "size": 89,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840770.3124118-28905-193381621148722/source",
    "state": "file",
    "uid": 0
}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:66

TASK [k8_component : Ensures peer dir exists] **********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840770.7140434-28947-278256725722807 `" && echo ansible-tmp-1604840770.7140434-28947-278256725722807="` echo /root/.ansible/tmp/ansible-tmp-1604840770.7140434-28947-278256725722807 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpe8h9wf7s TO /root/.ansible/tmp/ansible-tmp-1604840770.7140434-28947-278256725722807/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840770.7140434-28947-278256725722807/ /root/.ansible/tmp/ansible-tmp-1604840770.7140434-28947-278256725722807/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840770.7140434-28947-278256725722807/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840770.7140434-28947-278256725722807/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [k8_component : create reviewer_rbac file for peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/k8_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044 `" && echo ansible-tmp-1604840770.921762-28973-12299150110044="` echo /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpotsyu59a TO /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/ /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqqxct9f_/reviewer_rbac.tpl TO /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/ /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpcz_eey8d TO /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/ /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "reviewer_rbac.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "a78b1b2becfd8b36bd59970cbcdef0602b6f25cc",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdea783ba12108f490d72ae42abb8b05",
    "mode": "0644",
    "owner": "root",
    "size": 324,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840770.921762-28973-12299150110044/source",
    "state": "file",
    "uid": 0
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:74

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840771.3172638-29015-234370226647859 `" && echo ansible-tmp-1604840771.3172638-29015-234370226647859="` echo /root/.ansible/tmp/ansible-tmp-1604840771.3172638-29015-234370226647859 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpv8lm3swr TO /root/.ansible/tmp/ansible-tmp-1604840771.3172638-29015-234370226647859/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840771.3172638-29015-234370226647859/ /root/.ansible/tmp/ansible-tmp-1604840771.3172638-29015-234370226647859/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840771.3172638-29015-234370226647859/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840771.3172638-29015-234370226647859/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840771.5227447-29041-173773221233505 `" && echo ansible-tmp-1604840771.5227447-29041-173773221233505="` echo /root/.ansible/tmp/ansible-tmp-1604840771.5227447-29041-173773221233505 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmptg5p0p0m TO /root/.ansible/tmp/ansible-tmp-1604840771.5227447-29041-173773221233505/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840771.5227447-29041-173773221233505/ /root/.ansible/tmp/ansible-tmp-1604840771.5227447-29041-173773221233505/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840771.5227447-29041-173773221233505/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840771.5227447-29041-173773221233505/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:05.574358",
    "end": "2020-11-08 13:06:17.228544",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:06:11.654186",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   b5204161..cf3f1e18  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   b5204161..cf3f1e18  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla cf3f1e18] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 5 files changed, 1162 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla cf3f1e18] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla cf3f1e18] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 5 files changed, 1162 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/namespace.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/reviewer_rbac.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vault-reviewer.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/peer/vaultAuth.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   b5204161..cf3f1e18  HEAD -> gorilla"
    ]
}

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:90

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ClusterRoleBinding carrier-net-role-tokenreview-binding is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840777.4701562-29093-89926725870037 `" && echo ansible-tmp-1604840777.4701562-29093-89926725870037="` echo /root/.ansible/tmp/ansible-tmp-1604840777.4701562-29093-89926725870037 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmprxcedr4l TO /root/.ansible/tmp/ansible-tmp-1604840777.4701562-29093-89926725870037/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840777.4701562-29093-89926725870037/ /root/.ansible/tmp/ansible-tmp-1604840777.4701562-29093-89926725870037/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840777.4701562-29093-89926725870037/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840777.4701562-29093-89926725870037/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ClusterRoleBinding",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net-role-tokenreview-binding",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "ebf39e3d696d21f8f7b231cc1556e148d9bc32ca",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"ebf39e3d696d21f8f7b231cc1556e148d9bc32ca\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E\"},\"name\":\"carrier-net-role-tokenreview-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}]}\n"
                },
                "creationTimestamp": "2020-10-28T09:21:48Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Dv5nwsOCZ-WKqlE53IB79if0yplIUljlLTwKbmhBa8E"
                },
                "name": "carrier-net-role-tokenreview-binding",
                "resourceVersion": "2396603",
                "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/carrier-net-role-tokenreview-binding",
                "uid": "595b15f6-118b-4cc4-8d71-d2e003a9ffc1"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "vault-reviewer",
                    "namespace": "carrier-net"
                }
            ]
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ClusterRoleBinding carrier-net-role-tokenreview-binding] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:103

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840778.3427987-29133-194561722550195 `" && echo ansible-tmp-1604840778.3427987-29133-194561722550195="` echo /root/.ansible/tmp/ansible-tmp-1604840778.3427987-29133-194561722550195 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpu_sx3d_y TO /root/.ansible/tmp/ansible-tmp-1604840778.3427987-29133-194561722550195/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840778.3427987-29133-194561722550195/ /root/.ansible/tmp/ansible-tmp-1604840778.3427987-29133-194561722550195/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840778.3427987-29133-194561722550195/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840778.3427987-29133-194561722550195/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840813.9697552-29133-150032489333781 `" && echo ansible-tmp-1604840813.9697552-29133-150032489333781="` echo /root/.ansible/tmp/ansible-tmp-1604840813.9697552-29133-150032489333781 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpuygfltbe TO /root/.ansible/tmp/ansible-tmp-1604840813.9697552-29133-150032489333781/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840813.9697552-29133-150032489333781/ /root/.ansible/tmp/ansible-tmp-1604840813.9697552-29133-150032489333781/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840813.9697552-29133-150032489333781/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840813.9697552-29133-150032489333781/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840849.591119-29133-133679421149113 `" && echo ansible-tmp-1604840849.591119-29133-133679421149113="` echo /root/.ansible/tmp/ansible-tmp-1604840849.591119-29133-133679421149113 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqixdt8ww TO /root/.ansible/tmp/ansible-tmp-1604840849.591119-29133-133679421149113/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840849.591119-29133-133679421149113/ /root/.ansible/tmp/ansible-tmp-1604840849.591119-29133-133679421149113/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840849.591119-29133-133679421149113/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840849.591119-29133-133679421149113/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for ServiceAccount vault-reviewer (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840885.2138906-29133-8964414075555 `" && echo ansible-tmp-1604840885.2138906-29133-8964414075555="` echo /root/.ansible/tmp/ansible-tmp-1604840885.2138906-29133-8964414075555 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpl_wt502c TO /root/.ansible/tmp/ansible-tmp-1604840885.2138906-29133-8964414075555/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840885.2138906-29133-8964414075555/ /root/.ansible/tmp/ansible-tmp-1604840885.2138906-29133-8964414075555/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840885.2138906-29133-8964414075555/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840885.2138906-29133-8964414075555/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-reviewer",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T13:07:43Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.SfwI4bUp-9vBmNtYuvWPud29wS2vub5mkmAEFSwImLM"
                },
                "name": "vault-reviewer",
                "namespace": "carrier-net",
                "resourceVersion": "2908139",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-reviewer",
                "uid": "1e53bc7e-a871-48d7-863f-94e5be6b88b9"
            },
            "secrets": [
                {
                    "name": "vault-reviewer-token-bhw2n"
                }
            ]
        }
    ]
}

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:115

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840886.0056305-29247-117948470567329 `" && echo ansible-tmp-1604840886.0056305-29247-117948470567329="` echo /root/.ansible/tmp/ansible-tmp-1604840886.0056305-29247-117948470567329 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp97rnawt1 TO /root/.ansible/tmp/ansible-tmp-1604840886.0056305-29247-117948470567329/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840886.0056305-29247-117948470567329/ /root/.ansible/tmp/ansible-tmp-1604840886.0056305-29247-117948470567329/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840886.0056305-29247-117948470567329/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840886.0056305-29247-117948470567329/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "ServiceAccount",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "vault-auth",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T13:07:43Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.dtH53QwRXD4Ub9H-9Pfs3PmTtIHuyT-6vz4YP0xgw_4"
                },
                "name": "vault-auth",
                "namespace": "carrier-net",
                "resourceVersion": "2908137",
                "selfLink": "/api/v1/namespaces/carrier-net/serviceaccounts/vault-auth",
                "uid": "f80f63d9-2044-49b8-b290-089996dd0163"
            },
            "secrets": [
                {
                    "name": "vault-auth-token-mfnln"
                }
            ]
        }
    ]
}

TASK [include_role : setup/vault_kubernetes] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:32

TASK [Waiting for the namespace walmart-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace walmart-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840886.8919635-29281-46348496691731 `" && echo ansible-tmp-1604840886.8919635-29281-46348496691731="` echo /root/.ansible/tmp/ansible-tmp-1604840886.8919635-29281-46348496691731 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpyl8iqg3d TO /root/.ansible/tmp/ansible-tmp-1604840886.8919635-29281-46348496691731/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840886.8919635-29281-46348496691731/ /root/.ansible/tmp/ansible-tmp-1604840886.8919635-29281-46348496691731/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840886.8919635-29281-46348496691731/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840886.8919635-29281-46348496691731/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmart-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "42333c092f583cd8c9e567f7c9309cf9b1a19a7a",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"42333c092f583cd8c9e567f7c9309cf9b1a19a7a\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0\"},\"name\":\"walmart-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T13:05:42Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.5ghI6f1RCMw7etASBXtHoKqBQMXua26tzh8kOI6dbS0"
                },
                "name": "walmart-net",
                "resourceVersion": "2907816",
                "selfLink": "/api/v1/namespaces/walmart-net",
                "uid": "bb72e4c9-b03f-45fe-91a4-0495de45b3d6"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840887.6446624-29315-23555826938676 `" && echo ansible-tmp-1604840887.6446624-29315-23555826938676="` echo /root/.ansible/tmp/ansible-tmp-1604840887.6446624-29315-23555826938676 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6h2l6vin TO /root/.ansible/tmp/ansible-tmp-1604840887.6446624-29315-23555826938676/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840887.6446624-29315-23555826938676/ /root/.ansible/tmp/ansible-tmp-1604840887.6446624-29315-23555826938676/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840887.6446624-29315-23555826938676/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840887.6446624-29315-23555826938676/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840887.830385-29341-192923412877786 `" && echo ansible-tmp-1604840887.830385-29341-192923412877786="` echo /root/.ansible/tmp/ansible-tmp-1604840887.830385-29341-192923412877786 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp3emwrmol TO /root/.ansible/tmp/ansible-tmp-1604840887.830385-29341-192923412877786/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840887.830385-29341-192923412877786/ /root/.ansible/tmp/ansible-tmp-1604840887.830385-29341-192923412877786/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840887.830385-29341-192923412877786/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840887.830385-29341-192923412877786/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840888.2264218-29379-137479908178741 `" && echo ansible-tmp-1604840888.2264218-29379-137479908178741="` echo /root/.ansible/tmp/ansible-tmp-1604840888.2264218-29379-137479908178741 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdcimcozn TO /root/.ansible/tmp/ansible-tmp-1604840888.2264218-29379-137479908178741/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840888.2264218-29379-137479908178741/ /root/.ansible/tmp/ansible-tmp-1604840888.2264218-29379-137479908178741/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840888.2264218-29379-137479908178741/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840888.2264218-29379-137479908178741/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.082347",
    "end": "2020-11-08 13:08:08.440244",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:08.357897",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"",
    "stdout_lines": [
        "\"token/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.082347",
            "end": "2020-11-08 13:08:08.440244",
            "failed": false,
            "rc": 0,
            "start": "2020-11-08 13:08:08.357897",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"",
            "stdout_lines": [
                "\"token/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"walmart-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840888.662457-29425-265788213326228 `" && echo ansible-tmp-1604840888.662457-29425-265788213326228="` echo /root/.ansible/tmp/ansible-tmp-1604840888.662457-29425-265788213326228 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpumvyvwx3 TO /root/.ansible/tmp/ansible-tmp-1604840888.662457-29425-265788213326228/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840888.662457-29425-265788213326228/ /root/.ansible/tmp/ansible-tmp-1604840888.662457-29425-265788213326228/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840888.662457-29425-265788213326228/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840888.662457-29425-265788213326228/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
    "delta": "0:00:00.046432",
    "end": "2020-11-08 13:08:08.838758",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"walmart-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:08.792326",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: walmart-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: walmart-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840888.8998978-29461-213790660878672 `" && echo ansible-tmp-1604840888.8998978-29461-213790660878672="` echo /root/.ansible/tmp/ansible-tmp-1604840888.8998978-29461-213790660878672 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp17962t0n TO /root/.ansible/tmp/ansible-tmp-1604840888.8998978-29461-213790660878672/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840888.8998978-29461-213790660878672/ /root/.ansible/tmp/ansible-tmp-1604840888.8998978-29461-213790660878672/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840888.8998978-29461-213790660878672/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840888.8998978-29461-213790660878672/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.243799",
    "end": "2020-11-08 13:08:09.273399",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:09.029600",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840889.3452687-29502-139778540292012 `" && echo ansible-tmp-1604840889.3452687-29502-139778540292012="` echo /root/.ansible/tmp/ansible-tmp-1604840889.3452687-29502-139778540292012 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp64givuxv TO /root/.ansible/tmp/ansible-tmp-1604840889.3452687-29502-139778540292012/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840889.3452687-29502-139778540292012/ /root/.ansible/tmp/ansible-tmp-1604840889.3452687-29502-139778540292012/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840889.3452687-29502-139778540292012/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840889.3452687-29502-139778540292012/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
    "delta": "0:00:00.319858",
    "end": "2020-11-08 13:08:09.796227",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n walmart-net vault-reviewer -o jsonpath={.secrets[0].name}) -n walmart-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/walmart-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/walmart-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:09.476369",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840890.018788-29562-917494448930 `" && echo ansible-tmp-1604840890.018788-29562-917494448930="` echo /root/.ansible/tmp/ansible-tmp-1604840890.018788-29562-917494448930 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpka3wls_1 TO /root/.ansible/tmp/ansible-tmp-1604840890.018788-29562-917494448930/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840890.018788-29562-917494448930/ /root/.ansible/tmp/ansible-tmp-1604840890.018788-29562-917494448930/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840890.018788-29562-917494448930/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840890.018788-29562-917494448930/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
    "delta": "0:00:00.043118",
    "end": "2020-11-08 13:08:10.192215",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-orderer-walmart-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:08:10.149097",
    "stderr": "No policy named: vault-crypto-orderer-walmart-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-orderer-walmart-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106 `" && echo ansible-tmp-1604840890.2816951-29598-24663244355106="` echo /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdunlftx5 TO /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/ /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdwutkk2q/orderer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/ /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpl7u9rj7j TO /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/ /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
    "dest": "./build/vault-crypto-walmart-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "7d3e4d838f82f48d91070b70f8a0c91f37063a9d",
            "content": null,
            "dest": "./build/vault-crypto-walmart-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "8e853417c42460b613805d59c18a9b53",
    "mode": "0644",
    "owner": "root",
    "size": 297,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840890.2816951-29598-24663244355106/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840890.67878-29640-1041771342805 `" && echo ansible-tmp-1604840890.67878-29640-1041771342805="` echo /root/.ansible/tmp/ansible-tmp-1604840890.67878-29640-1041771342805 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpq29hhplt TO /root/.ansible/tmp/ansible-tmp-1604840890.67878-29640-1041771342805/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840890.67878-29640-1041771342805/ /root/.ansible/tmp/ansible-tmp-1604840890.67878-29640-1041771342805/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840890.67878-29640-1041771342805/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840890.67878-29640-1041771342805/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
    "delta": "0:00:00.042220",
    "end": "2020-11-08 13:08:10.855562",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-orderer-walmart-net-ro policy=\"@./build/vault-crypto-walmart-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:10.813342",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-orderer-walmart-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840890.9229934-29676-166424903001913 `" && echo ansible-tmp-1604840890.9229934-29676-166424903001913="` echo /root/.ansible/tmp/ansible-tmp-1604840890.9229934-29676-166424903001913 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpx2_n_c8a TO /root/.ansible/tmp/ansible-tmp-1604840890.9229934-29676-166424903001913/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840890.9229934-29676-166424903001913/ /root/.ansible/tmp/ansible-tmp-1604840890.9229934-29676-166424903001913/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840890.9229934-29676-166424903001913/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840890.9229934-29676-166424903001913/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.041955",
    "end": "2020-11-08 13:08:11.095208",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/walmart-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=walmart-net policies=\"vault-crypto-orderer-walmart-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:11.053253",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/walmart-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/walmart-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840891.3467708-29721-200124609963559 `" && echo ansible-tmp-1604840891.3467708-29721-200124609963559="` echo /root/.ansible/tmp/ansible-tmp-1604840891.3467708-29721-200124609963559 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplpfb08l_ TO /root/.ansible/tmp/ansible-tmp-1604840891.3467708-29721-200124609963559/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840891.3467708-29721-200124609963559/ /root/.ansible/tmp/ansible-tmp-1604840891.3467708-29721-200124609963559/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840891.3467708-29721-200124609963559/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840891.3467708-29721-200124609963559/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840891.9649105-29749-101302046873352 `" && echo ansible-tmp-1604840891.9649105-29749-101302046873352="` echo /root/.ansible/tmp/ansible-tmp-1604840891.9649105-29749-101302046873352 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp1rpssw1_ TO /root/.ansible/tmp/ansible-tmp-1604840891.9649105-29749-101302046873352/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840891.9649105-29749-101302046873352/ /root/.ansible/tmp/ansible-tmp-1604840891.9649105-29749-101302046873352/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840891.9649105-29749-101302046873352/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840891.9649105-29749-101302046873352/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.101798",
    "end": "2020-11-08 13:08:12.196929",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n walmart-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:12.095131",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:7

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840892.3582718-29785-140237290470857 `" && echo ansible-tmp-1604840892.3582718-29785-140237290470857="` echo /root/.ansible/tmp/ansible-tmp-1604840892.3582718-29785-140237290470857 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmppycj_sud TO /root/.ansible/tmp/ansible-tmp-1604840892.3582718-29785-140237290470857/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840892.3582718-29785-140237290470857/ /root/.ansible/tmp/ansible-tmp-1604840892.3582718-29785-140237290470857/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840892.3582718-29785-140237290470857/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840892.3582718-29785-140237290470857/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Namespace",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carrier-net",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI\"},\"name\":\"carrier-net\"}}\n"
                },
                "creationTimestamp": "2020-11-08T13:07:43Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.czRisvyIFDFCF8DyxxTuOO9avUFja9OQy3KGX8saHvI"
                },
                "name": "carrier-net",
                "resourceVersion": "2908130",
                "selfLink": "/api/v1/namespaces/carrier-net",
                "uid": "fb7fc69c-bfc1-4332-9364-caced5ece43b"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Creating the build directory] ********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840893.0887952-29819-98165634524083 `" && echo ansible-tmp-1604840893.0887952-29819-98165634524083="` echo /root/.ansible/tmp/ansible-tmp-1604840893.0887952-29819-98165634524083 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpjptbny1a TO /root/.ansible/tmp/ansible-tmp-1604840893.0887952-29819-98165634524083/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840893.0887952-29819-98165634524083/ /root/.ansible/tmp/ansible-tmp-1604840893.0887952-29819-98165634524083/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840893.0887952-29819-98165634524083/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840893.0887952-29819-98165634524083/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "atime": 1604840887.9595535,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604840890.567593,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3370,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604840890.567593,
        "nlink": 2,
        "path": "./build",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "334042599",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the vault path already exists] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:26

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840893.528837-29861-98584313511146 `" && echo ansible-tmp-1604840893.528837-29861-98584313511146="` echo /root/.ansible/tmp/ansible-tmp-1604840893.528837-29861-98584313511146 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp7vg9d54e TO /root/.ansible/tmp/ansible-tmp-1604840893.528837-29861-98584313511146/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840893.528837-29861-98584313511146/ /root/.ansible/tmp/ansible-tmp-1604840893.528837-29861-98584313511146/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840893.528837-29861-98584313511146/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840893.528837-29861-98584313511146/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
    "delta": "0:00:00.045926",
    "end": "2020-11-08 13:08:13.705683",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:13.659757",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\"token/\"\n\"walmart-net-auth/\"",
    "stdout_lines": [
        "\"token/\"",
        "\"walmart-net-auth/\""
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Set Variable] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:32
ok: [localhost] => {
    "ansible_facts": {
        "auth_list": {
            "changed": true,
            "cmd": "vault auth list --format json | jq \"to_entries[] | select(.value.restricted|not) | .key\"\n",
            "delta": "0:00:00.045926",
            "end": "2020-11-08 13:08:13.705683",
            "failed": false,
            "rc": 0,
            "start": "2020-11-08 13:08:13.659757",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "\"token/\"\n\"walmart-net-auth/\"",
            "stdout_lines": [
                "\"token/\"",
                "\"walmart-net-auth/\""
            ]
        }
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:37
ok: [localhost] => {
    "ansible_facts": {
        "component_auth_temp": "\"carrier-net-auth/\"",
        "vault_auth_status": false
    },
    "changed": false
}

TASK [setup/vault_kubernetes : set_fact] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:42
skipping: [localhost] => (item="token/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"token/\"",
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item="walmart-net-auth/")  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "\"walmart-net-auth/\"",
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Enable and configure Kubernetes-auth for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840893.938374-29907-54962364381485 `" && echo ansible-tmp-1604840893.938374-29907-54962364381485="` echo /root/.ansible/tmp/ansible-tmp-1604840893.938374-29907-54962364381485 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpjgxltfdh TO /root/.ansible/tmp/ansible-tmp-1604840893.938374-29907-54962364381485/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840893.938374-29907-54962364381485/ /root/.ansible/tmp/ansible-tmp-1604840893.938374-29907-54962364381485/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840893.938374-29907-54962364381485/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840893.938374-29907-54962364381485/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
    "delta": "0:00:00.043153",
    "end": "2020-11-08 13:08:14.111083",
    "invocation": {
        "module_args": {
            "_raw_params": "vault auth enable --path=\"carrier-net-auth\" kubernetes\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:14.067930",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Enabled kubernetes auth method at: carrier-net-auth/",
    "stdout_lines": [
        "Success! Enabled kubernetes auth method at: carrier-net-auth/"
    ]
}

TASK [setup/vault_kubernetes : Get Kubernetes cert files for organizations] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:62
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840894.1743407-29942-232018859222850 `" && echo ansible-tmp-1604840894.1743407-29942-232018859222850="` echo /root/.ansible/tmp/ansible-tmp-1604840894.1743407-29942-232018859222850 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpkcl9pejr TO /root/.ansible/tmp/ansible-tmp-1604840894.1743407-29942-232018859222850/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840894.1743407-29942-232018859222850/ /root/.ansible/tmp/ansible-tmp-1604840894.1743407-29942-232018859222850/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840894.1743407-29942-232018859222850/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840894.1743407-29942-232018859222850/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.202986",
    "end": "2020-11-08 13:08:14.506866",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secrets | grep \"default\" | awk '{print $1}') -o jsonpath=\"{.data['ca\\.crt']}\" | base64 -d > \"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:14.303880",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [setup/vault_kubernetes : Write reviewer token for Organisations] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840894.5801096-29983-250864152335521 `" && echo ansible-tmp-1604840894.5801096-29983-250864152335521="` echo /root/.ansible/tmp/ansible-tmp-1604840894.5801096-29983-250864152335521 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpz_prmu76 TO /root/.ansible/tmp/ansible-tmp-1604840894.5801096-29983-250864152335521/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840894.5801096-29983-250864152335521/ /root/.ansible/tmp/ansible-tmp-1604840894.5801096-29983-250864152335521/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840894.5801096-29983-250864152335521/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840894.5801096-29983-250864152335521/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
    "delta": "0:00:00.277010",
    "end": "2020-11-08 13:08:14.988080",
    "invocation": {
        "module_args": {
            "_raw_params": "export REVIEWER_TOKEN=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get secret $(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get serviceaccount -n carrier-net vault-reviewer -o jsonpath={.secrets[0].name}) -n carrier-net -o  jsonpath={.data.token} | base64 -d)\nvault write auth/carrier-net-auth/config token_reviewer_jwt=\"$REVIEWER_TOKEN\" kubernetes_host=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"fabric-aks-dev1\\\")].cluster.server}\") kubernetes_ca_cert=@\"./build/carrier-net.ca.cert\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:14.711070",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/config",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/config"
    ]
}

TASK [Checking if the vault policies already exists] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840895.2089515-30044-78299397212515 `" && echo ansible-tmp-1604840895.2089515-30044-78299397212515="` echo /root/.ansible/tmp/ansible-tmp-1604840895.2089515-30044-78299397212515 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpk_8ucjfo TO /root/.ansible/tmp/ansible-tmp-1604840895.2089515-30044-78299397212515/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840895.2089515-30044-78299397212515/ /root/.ansible/tmp/ansible-tmp-1604840895.2089515-30044-78299397212515/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840895.2089515-30044-78299397212515/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840895.2089515-30044-78299397212515/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": true,
    "cmd": "vault policy read vault-crypto-peer-carrier-net-ro\n",
    "delta": "0:00:00.040604",
    "end": "2020-11-08 13:08:15.384032",
    "invocation": {
        "module_args": {
            "_raw_params": "vault policy read vault-crypto-peer-carrier-net-ro\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:08:15.343428",
    "stderr": "No policy named: vault-crypto-peer-carrier-net-ro",
    "stderr_lines": [
        "No policy named: vault-crypto-peer-carrier-net-ro"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Orderer Access Control] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:90
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault_kubernetes : Create policy for Organisations Access Control] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:101
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726 `" && echo ansible-tmp-1604840895.5085323-30083-268617891479726="` echo /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpx9za39k6 TO /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/ /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp62oxdyw2/peer-ro.tpl TO /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/ /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpml49c8ei TO /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/ /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
    "dest": "./build/vault-crypto-carrier-net-ro.hcl",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "peer-ro.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "641d89e3ce56e8347092dba494bcba380eec715a",
            "content": null,
            "dest": "./build/vault-crypto-carrier-net-ro.hcl",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a9752761bec6323a75d51e7a8cef75ea",
    "mode": "0644",
    "owner": "root",
    "size": 433,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840895.5085323-30083-268617891479726/source",
    "state": "file",
    "uid": 0
}

TASK [setup/vault_kubernetes : Write Policy to Vault] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840895.8743465-30123-195691473977889 `" && echo ansible-tmp-1604840895.8743465-30123-195691473977889="` echo /root/.ansible/tmp/ansible-tmp-1604840895.8743465-30123-195691473977889 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpn4p60oeh TO /root/.ansible/tmp/ansible-tmp-1604840895.8743465-30123-195691473977889/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840895.8743465-30123-195691473977889/ /root/.ansible/tmp/ansible-tmp-1604840895.8743465-30123-195691473977889/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840895.8743465-30123-195691473977889/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840895.8743465-30123-195691473977889/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
    "delta": "0:00:00.042072",
    "end": "2020-11-08 13:08:16.047212",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write sys/policy/vault-crypto-peer-carrier-net-ro policy=\"@./build/vault-crypto-carrier-net-ro.hcl\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:16.005140",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro",
    "stdout_lines": [
        "Success! Data written to: sys/policy/vault-crypto-peer-carrier-net-ro"
    ]
}

TASK [setup/vault_kubernetes : Create Vault auth role] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:121
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840896.1166453-30161-173695827617704 `" && echo ansible-tmp-1604840896.1166453-30161-173695827617704="` echo /root/.ansible/tmp/ansible-tmp-1604840896.1166453-30161-173695827617704 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5vt7uqke TO /root/.ansible/tmp/ansible-tmp-1604840896.1166453-30161-173695827617704/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840896.1166453-30161-173695827617704/ /root/.ansible/tmp/ansible-tmp-1604840896.1166453-30161-173695827617704/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840896.1166453-30161-173695827617704/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840896.1166453-30161-173695827617704/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
    "delta": "0:00:00.038220",
    "end": "2020-11-08 13:08:16.285327",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write auth/carrier-net-auth/role/vault-role bound_service_account_names=vault-auth bound_service_account_namespaces=carrier-net policies=\"vault-crypto-peer-carrier-net-ro\" ttl=1200s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:16.247107",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: auth/carrier-net-auth/role/vault-role",
    "stdout_lines": [
        "Success! Data written to: auth/carrier-net-auth/role/vault-role"
    ]
}

TASK [Checking if the docker credentials already exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:130

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840896.5324929-30207-237733334805484 `" && echo ansible-tmp-1604840896.5324929-30207-237733334805484="` echo /root/.ansible/tmp/ansible-tmp-1604840896.5324929-30207-237733334805484 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpw93p_rnj TO /root/.ansible/tmp/ansible-tmp-1604840896.5324929-30207-237733334805484/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840896.5324929-30207-237733334805484/ /root/.ansible/tmp/ansible-tmp-1604840896.5324929-30207-237733334805484/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840896.5324929-30207-237733334805484/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840896.5324929-30207-237733334805484/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "regcred",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [setup/vault_kubernetes : Create the docker pull credentials] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:139
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840897.1591842-30235-18482671866472 `" && echo ansible-tmp-1604840897.1591842-30235-18482671866472="` echo /root/.ansible/tmp/ansible-tmp-1604840897.1591842-30235-18482671866472 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpa_qpkn1d TO /root/.ansible/tmp/ansible-tmp-1604840897.1591842-30235-18482671866472/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840897.1591842-30235-18482671866472/ /root/.ansible/tmp/ansible-tmp-1604840897.1591842-30235-18482671866472/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840897.1591842-30235-18482671866472/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840897.1591842-30235-18482671866472/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
    "delta": "0:00:00.117817",
    "end": "2020-11-08 13:08:17.414415",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret -n carrier-net docker-registry regcred --docker-server=index.docker.io/hyperledgerlabs --docker-username=suneelbaf --docker-password=Baf@20202021 --docker-email=\"test@abc.mail\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:17.296598",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/regcred created",
    "stdout_lines": [
        "secret/regcred created"
    ]
}

TASK [include_role : create/storageclass] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:43

TASK [Checking if the storage class walmartsc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass walmartsc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840897.7080822-30271-226256365391628 `" && echo ansible-tmp-1604840897.7080822-30271-226256365391628="` echo /root/.ansible/tmp/ansible-tmp-1604840897.7080822-30271-226256365391628 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp070haxt7 TO /root/.ansible/tmp/ansible-tmp-1604840897.7080822-30271-226256365391628/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840897.7080822-30271-226256365391628/ /root/.ansible/tmp/ansible-tmp-1604840897.7080822-30271-226256365391628/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840897.7080822-30271-226256365391628/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840897.7080822-30271-226256365391628/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "walmartsc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-11-06T08:18:49Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                },
                "name": "walmartsc",
                "resourceVersion": "2406961",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass walmartsc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "1481bca78f33cde5aea004f6eedba5472f1b5f56",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1481bca78f33cde5aea004f6eedba5472f1b5f56\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E\"},\"name\":\"walmartsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-11-06T08:18:49Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Mhn9imIbH1fpqEu7tvx7goVqI0Wt_7Tn4Xoiqa9Gm0E"
                        },
                        "name": "walmartsc",
                        "resourceVersion": "2406961",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/walmartsc",
                        "uid": "3e1092f9-7a5e-432b-b06c-5b90c6962851"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of walmartsc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Checking if the storage class carriersc already exists] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840898.6698196-30319-221244646912176 `" && echo ansible-tmp-1604840898.6698196-30319-221244646912176="` echo /root/.ansible/tmp/ansible-tmp-1604840898.6698196-30319-221244646912176 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpd7tqd720 TO /root/.ansible/tmp/ansible-tmp-1604840898.6698196-30319-221244646912176/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840898.6698196-30319-221244646912176/ /root/.ansible/tmp/ansible-tmp-1604840898.6698196-30319-221244646912176/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840898.6698196-30319-221244646912176/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840898.6698196-30319-221244646912176/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "StorageClass",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "carriersc",
            "namespace": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "allowVolumeExpansion": true,
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "annotations": {
                    "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                },
                "creationTimestamp": "2020-10-28T09:44:35Z",
                "labels": {
                    "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                },
                "name": "carriersc",
                "resourceVersion": "378759",
                "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
            },
            "parameters": {
                "kind": "Managed",
                "storageaccounttype": "Premium_LRS"
            },
            "provisioner": "kubernetes.io/azure-disk",
            "reclaimPolicy": "Retain",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:17
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Set Variable] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:14
ok: [localhost] => {
    "ansible_facts": {
        "get_sc": {
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"
                        },
                        "creationTimestamp": "2020-10-28T09:44:35Z",
                        "labels": {
                            "fluxcd.io/sync-gc-mark": "sha256.Vi2OHnjb-nI_wjGWt_ybF2QD95bS1SGV0xKCkg2jhII"
                        },
                        "name": "carriersc",
                        "resourceVersion": "378759",
                        "selfLink": "/apis/storage.k8s.io/v1/storageclasses/carriersc",
                        "uid": "2903c3a7-d6ba-4300-9e73-b986b7874ed8"
                    },
                    "parameters": {
                        "kind": "Managed",
                        "storageaccounttype": "Premium_LRS"
                    },
                    "provisioner": "kubernetes.io/azure-disk",
                    "reclaimPolicy": "Retain",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [creating /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:19
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:29
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:68
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/ca-server] *****************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840899.7504394-30367-23942106860433 `" && echo ansible-tmp-1604840899.7504394-30367-23942106860433="` echo /root/.ansible/tmp/ansible-tmp-1604840899.7504394-30367-23942106860433 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwazv719h TO /root/.ansible/tmp/ansible-tmp-1604840899.7504394-30367-23942106860433/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840899.7504394-30367-23942106860433/ /root/.ansible/tmp/ansible-tmp-1604840899.7504394-30367-23942106860433/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840899.7504394-30367-23942106860433/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840899.7504394-30367-23942106860433/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
    "delta": "0:00:00.084166",
    "end": "2020-11-08 13:08:19.965396",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:08:19.881230",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/ordererOrganizations/walmart-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840900.0819485-30403-59234883481063 `" && echo ansible-tmp-1604840900.0819485-30403-59234883481063="` echo /root/.ansible/tmp/ansible-tmp-1604840900.0819485-30403-59234883481063 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp7q8qro06 TO /root/.ansible/tmp/ansible-tmp-1604840900.0819485-30403-59234883481063/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840900.0819485-30403-59234883481063/ /root/.ansible/tmp/ansible-tmp-1604840900.0819485-30403-59234883481063/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840900.0819485-30403-59234883481063/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840900.0819485-30403-59234883481063/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840900.2694635-30429-21605837518916 `" && echo ansible-tmp-1604840900.2694635-30429-21605837518916="` echo /root/.ansible/tmp/ansible-tmp-1604840900.2694635-30429-21605837518916 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqgs8iw3b TO /root/.ansible/tmp/ansible-tmp-1604840900.2694635-30429-21605837518916/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840900.2694635-30429-21605837518916/ /root/.ansible/tmp/ansible-tmp-1604840900.2694635-30429-21605837518916/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840900.2694635-30429-21605837518916/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840900.2694635-30429-21605837518916/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840900.5764663-30463-12229700053785 `" && echo ansible-tmp-1604840900.5764663-30463-12229700053785="` echo /root/.ansible/tmp/ansible-tmp-1604840900.5764663-30463-12229700053785 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpxsak77tl TO /root/.ansible/tmp/ansible-tmp-1604840900.5764663-30463-12229700053785/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840900.5764663-30463-12229700053785/ /root/.ansible/tmp/ansible-tmp-1604840900.5764663-30463-12229700053785/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840900.5764663-30463-12229700053785/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840900.5764663-30463-12229700053785/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840900.7687213-30489-51038975208157 `" && echo ansible-tmp-1604840900.7687213-30489-51038975208157="` echo /root/.ansible/tmp/ansible-tmp-1604840900.7687213-30489-51038975208157 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpw385h0g9 TO /root/.ansible/tmp/ansible-tmp-1604840900.7687213-30489-51038975208157/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840900.7687213-30489-51038975208157/ /root/.ansible/tmp/ansible-tmp-1604840900.7687213-30489-51038975208157/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840900.7687213-30489-51038975208157/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840900.7687213-30489-51038975208157/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net\"\n",
    "delta": "0:00:00.007797",
    "end": "2020-11-08 13:08:20.911209",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/ordererOrganizations/walmart-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out walmart-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key walmart-net-CA.key -days 1024 -out ca.walmart-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:20.903412",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840901.0183754-30518-110680367963200 `" && echo ansible-tmp-1604840901.0183754-30518-110680367963200="` echo /root/.ansible/tmp/ansible-tmp-1604840901.0183754-30518-110680367963200 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6oj_w41i TO /root/.ansible/tmp/ansible-tmp-1604840901.0183754-30518-110680367963200/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840901.0183754-30518-110680367963200/ /root/.ansible/tmp/ansible-tmp-1604840901.0183754-30518-110680367963200/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840901.0183754-30518-110680367963200/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840901.0183754-30518-110680367963200/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
    "delta": "0:00:00.041898",
    "end": "2020-11-08 13:08:21.190381",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ca ca.walmart-net-cert.pem=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\")\" walmart-net-CA.key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:21.148483",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840901.253719-30556-129977186983572 `" && echo ansible-tmp-1604840901.253719-30556-129977186983572="` echo /root/.ansible/tmp/ansible-tmp-1604840901.253719-30556-129977186983572 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzexymq1m TO /root/.ansible/tmp/ansible-tmp-1604840901.253719-30556-129977186983572/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840901.253719-30556-129977186983572/ /root/.ansible/tmp/ansible-tmp-1604840901.253719-30556-129977186983572/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840901.253719-30556-129977186983572/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840901.253719-30556-129977186983572/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
    "delta": "0:00:00.059434",
    "end": "2020-11-08 13:08:21.452100",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/walmart-net/ca/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:08:21.392666",
    "stderr": "No value found at secret/credentials/walmart-net/ca/walmart",
    "stderr_lines": [
        "No value found at secret/credentials/walmart-net/ca/walmart"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840901.5206764-30591-265747409149331 `" && echo ansible-tmp-1604840901.5206764-30591-265747409149331="` echo /root/.ansible/tmp/ansible-tmp-1604840901.5206764-30591-265747409149331 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmps1p0spj6 TO /root/.ansible/tmp/ansible-tmp-1604840901.5206764-30591-265747409149331/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840901.5206764-30591-265747409149331/ /root/.ansible/tmp/ansible-tmp-1604840901.5206764-30591-265747409149331/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840901.5206764-30591-265747409149331/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840901.5206764-30591-265747409149331/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
    "delta": "0:00:00.039797",
    "end": "2020-11-08 13:08:21.691216",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/walmart-net/ca/walmart user=\"walmart-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:21.651419",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/walmart-net/ca/walmart",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/walmart-net/ca/walmart"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840901.754927-30627-193080832353132 `" && echo ansible-tmp-1604840901.754927-30627-193080832353132="` echo /root/.ansible/tmp/ansible-tmp-1604840901.754927-30627-193080832353132 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpr76_lyjo TO /root/.ansible/tmp/ansible-tmp-1604840901.754927-30627-193080832353132/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840901.754927-30627-193080832353132/ /root/.ansible/tmp/ansible-tmp-1604840901.754927-30627-193080832353132/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840901.754927-30627-193080832353132/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840901.754927-30627-193080832353132/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840902.3729184-30655-79847094630487 `" && echo ansible-tmp-1604840902.3729184-30655-79847094630487="` echo /root/.ansible/tmp/ansible-tmp-1604840902.3729184-30655-79847094630487 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdexll11i TO /root/.ansible/tmp/ansible-tmp-1604840902.3729184-30655-79847094630487/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840902.3729184-30655-79847094630487/ /root/.ansible/tmp/ansible-tmp-1604840902.3729184-30655-79847094630487/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840902.3729184-30655-79847094630487/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840902.3729184-30655-79847094630487/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
    "delta": "0:00:00.150850",
    "end": "2020-11-08 13:08:22.654511",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-walmart-net-ambassador-certs --cert=./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --key=./build/crypto-config/ordererOrganizations/walmart-net/ca/walmart-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:22.503661",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-walmart-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-walmart-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840902.791463-30689-125928947908200 `" && echo ansible-tmp-1604840902.791463-30689-125928947908200="` echo /root/.ansible/tmp/ansible-tmp-1604840902.791463-30689-125928947908200 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpsdw7u5g1 TO /root/.ansible/tmp/ansible-tmp-1604840902.791463-30689-125928947908200/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840902.791463-30689-125928947908200/ /root/.ansible/tmp/ansible-tmp-1604840902.791463-30689-125928947908200/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840902.791463-30689-125928947908200/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840902.791463-30689-125928947908200/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840902.99242-30715-256679753378503 `" && echo ansible-tmp-1604840902.99242-30715-256679753378503="` echo /root/.ansible/tmp/ansible-tmp-1604840902.99242-30715-256679753378503 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpt_edgocf TO /root/.ansible/tmp/ansible-tmp-1604840902.99242-30715-256679753378503/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840902.99242-30715-256679753378503/ /root/.ansible/tmp/ansible-tmp-1604840902.99242-30715-256679753378503/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840902.99242-30715-256679753378503/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840902.99242-30715-256679753378503/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019 `" && echo ansible-tmp-1604840903.1895409-30741-127618660002019="` echo /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp68dg7w2l TO /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/ /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpkv2wkcl_/ca-orderer.tpl TO /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/ /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpg6j1xzzb TO /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/ /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-orderer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "98a580d5a06a395442faeb695bf50cc0",
    "mode": "0644",
    "owner": "root",
    "size": 1272,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840903.1895409-30741-127618660002019/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840903.6183522-30783-182867395484460 `" && echo ansible-tmp-1604840903.6183522-30783-182867395484460="` echo /root/.ansible/tmp/ansible-tmp-1604840903.6183522-30783-182867395484460 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbuurtmo7 TO /root/.ansible/tmp/ansible-tmp-1604840903.6183522-30783-182867395484460/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840903.6183522-30783-182867395484460/ /root/.ansible/tmp/ansible-tmp-1604840903.6183522-30783-182867395484460/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840903.6183522-30783-182867395484460/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840903.6183522-30783-182867395484460/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604840903.49179,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "f0bed6556a82b15f50893f6fa1ccdd38a942b09d",
        "ctime": 1604840903.4957902,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3415,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604840903.355788,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1272,
        "uid": 0,
        "version": "729368384",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840903.8662493-30813-56891857097218 `" && echo ansible-tmp-1604840903.8662493-30813-56891857097218="` echo /root/.ansible/tmp/ansible-tmp-1604840903.8662493-30813-56891857097218 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8ifdl8r3 TO /root/.ansible/tmp/ansible-tmp-1604840903.8662493-30813-56891857097218/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840903.8662493-30813-56891857097218/ /root/.ansible/tmp/ansible-tmp-1604840903.8662493-30813-56891857097218/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840903.8662493-30813-56891857097218/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840903.8662493-30813-56891857097218/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840904.0513594-30839-116293888988511 `" && echo ansible-tmp-1604840904.0513594-30839-116293888988511="` echo /root/.ansible/tmp/ansible-tmp-1604840904.0513594-30839-116293888988511 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzyfy5as9 TO /root/.ansible/tmp/ansible-tmp-1604840904.0513594-30839-116293888988511/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840904.0513594-30839-116293888988511/ /root/.ansible/tmp/ansible-tmp-1604840904.0513594-30839-116293888988511/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840904.0513594-30839-116293888988511/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840904.0513594-30839-116293888988511/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/test",
            "state": "directory"
        },
        "before": {
            "path": "./build/test",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/test",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/test",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "walmart-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "orderer"
                },
                "server": {
                    "admin": "walmart-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/walmart-net/ca/walmart?user",
                    "secretcert": "secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem",
                    "secretkey": "secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206 `" && echo ansible-tmp-1604840904.4013438-30873-182354479100206="` echo /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpmtkv5juh TO /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/ /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpai2g395i TO /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/ /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp4fbs54u4 TO /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/ /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
    "dest": "./build/test/walmart-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpai2g395i",
            "attributes": null,
            "backup": false,
            "checksum": "05e1c9f78c549143552856ebefc15c888e673231",
            "content": null,
            "dest": "./build/test/walmart-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d6c44224a3b7e1ecf5d32e6ff6e2bb00",
    "mode": "0644",
    "owner": "root",
    "size": 843,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840904.4013438-30873-182354479100206/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840904.7411628-30913-232039006021768 `" && echo ansible-tmp-1604840904.7411628-30913-232039006021768="` echo /root/.ansible/tmp/ansible-tmp-1604840904.7411628-30913-232039006021768 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_m3ulb8o TO /root/.ansible/tmp/ansible-tmp-1604840904.7411628-30913-232039006021768/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840904.7411628-30913-232039006021768/ /root/.ansible/tmp/ansible-tmp-1604840904.7411628-30913-232039006021768/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840904.7411628-30913-232039006021768/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840904.7411628-30913-232039006021768/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.057311",
    "end": "2020-11-08 13:08:24.929324",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:24.872013",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840905.0742779-30949-23982263258370 `" && echo ansible-tmp-1604840905.0742779-30949-23982263258370="` echo /root/.ansible/tmp/ansible-tmp-1604840905.0742779-30949-23982263258370 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzizpvui4 TO /root/.ansible/tmp/ansible-tmp-1604840905.0742779-30949-23982263258370/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840905.0742779-30949-23982263258370/ /root/.ansible/tmp/ansible-tmp-1604840905.0742779-30949-23982263258370/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840905.0742779-30949-23982263258370/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840905.0742779-30949-23982263258370/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840905.2878954-30975-54935212977336 `" && echo ansible-tmp-1604840905.2878954-30975-54935212977336="` echo /root/.ansible/tmp/ansible-tmp-1604840905.2878954-30975-54935212977336 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwxzhjwyr TO /root/.ansible/tmp/ansible-tmp-1604840905.2878954-30975-54935212977336/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840905.2878954-30975-54935212977336/ /root/.ansible/tmp/ansible-tmp-1604840905.2878954-30975-54935212977336/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840905.2878954-30975-54935212977336/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840905.2878954-30975-54935212977336/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:07.104598",
    "end": "2020-11-08 13:08:32.524731",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:25.420133",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   cf3f1e18..3d3039fd  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   cf3f1e18..3d3039fd  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 3d3039fd] [ci skip] Pushing CA server files\n 2 files changed, 3447 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 3d3039fd] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 3d3039fd] [ci skip] Pushing CA server files",
        " 2 files changed, 3447 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   cf3f1e18..3d3039fd  HEAD -> gorilla"
    ]
}

TASK [create/ca-server : Check if ca certs already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840912.6606908-31023-107568005499553 `" && echo ansible-tmp-1604840912.6606908-31023-107568005499553="` echo /root/.ansible/tmp/ansible-tmp-1604840912.6606908-31023-107568005499553 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpan80wqme TO /root/.ansible/tmp/ansible-tmp-1604840912.6606908-31023-107568005499553/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840912.6606908-31023-107568005499553/ /root/.ansible/tmp/ansible-tmp-1604840912.6606908-31023-107568005499553/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840912.6606908-31023-107568005499553/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840912.6606908-31023-107568005499553/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
    "delta": "0:00:00.085736",
    "end": "2020-11-08 13:08:32.876870",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:08:32.791134",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ca",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ca"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [creating the directory ./build/crypto-config/peerOrganizations/carrier-net/ca] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:18

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840912.9906447-31059-39162704602177 `" && echo ansible-tmp-1604840912.9906447-31059-39162704602177="` echo /root/.ansible/tmp/ansible-tmp-1604840912.9906447-31059-39162704602177 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp23po11s_ TO /root/.ansible/tmp/ansible-tmp-1604840912.9906447-31059-39162704602177/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840912.9906447-31059-39162704602177/ /root/.ansible/tmp/ansible-tmp-1604840912.9906447-31059-39162704602177/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840912.9906447-31059-39162704602177/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840912.9906447-31059-39162704602177/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840913.1816213-31085-231667917581115 `" && echo ansible-tmp-1604840913.1816213-31085-231667917581115="` echo /root/.ansible/tmp/ansible-tmp-1604840913.1816213-31085-231667917581115 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpllq65kkv TO /root/.ansible/tmp/ansible-tmp-1604840913.1816213-31085-231667917581115/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840913.1816213-31085-231667917581115/ /root/.ansible/tmp/ansible-tmp-1604840913.1816213-31085-231667917581115/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840913.1816213-31085-231667917581115/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840913.1816213-31085-231667917581115/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "directory"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Get ca certs and key] *********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:25
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/ca-server : Check if the CA.key is already present] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840913.492904-31119-135724035216910 `" && echo ansible-tmp-1604840913.492904-31119-135724035216910="` echo /root/.ansible/tmp/ansible-tmp-1604840913.492904-31119-135724035216910 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp0raqa723 TO /root/.ansible/tmp/ansible-tmp-1604840913.492904-31119-135724035216910/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840913.492904-31119-135724035216910/ /root/.ansible/tmp/ansible-tmp-1604840913.492904-31119-135724035216910/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840913.492904-31119-135724035216910/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840913.492904-31119-135724035216910/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/ca-server : Generate the CA certificate] **************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:46
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840913.6831636-31145-171766322891797 `" && echo ansible-tmp-1604840913.6831636-31145-171766322891797="` echo /root/.ansible/tmp/ansible-tmp-1604840913.6831636-31145-171766322891797 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpkdoq4r5l TO /root/.ansible/tmp/ansible-tmp-1604840913.6831636-31145-171766322891797/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840913.6831636-31145-171766322891797/ /root/.ansible/tmp/ansible-tmp-1604840913.6831636-31145-171766322891797/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840913.6831636-31145-171766322891797/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840913.6831636-31145-171766322891797/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net\"\n",
    "delta": "0:00:00.008578",
    "end": "2020-11-08 13:08:33.822081",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net/ca\"\nopenssl ecparam -name prime256v1 -genkey -noout -out carrier-net-CA.key\nopenssl req -x509 -config \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/openssl.conf\" -new -nodes -key carrier-net-CA.key -days 1024 -out ca.carrier-net-cert.pem -extensions v3_req -subj \"/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:33.813503",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/ca-server : Copy the crypto material to Vault] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840913.8890889-31174-159052262920296 `" && echo ansible-tmp-1604840913.8890889-31174-159052262920296="` echo /root/.ansible/tmp/ansible-tmp-1604840913.8890889-31174-159052262920296 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzxj3fwrf TO /root/.ansible/tmp/ansible-tmp-1604840913.8890889-31174-159052262920296/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840913.8890889-31174-159052262920296/ /root/.ansible/tmp/ansible-tmp-1604840913.8890889-31174-159052262920296/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840913.8890889-31174-159052262920296/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840913.8890889-31174-159052262920296/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
    "delta": "0:00:00.041591",
    "end": "2020-11-08 13:08:34.060700",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ca ca.carrier-net-cert.pem=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\")\" carrier-net-CA.key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:34.019109",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ca"
    ]
}

TASK [create/ca-server : Check if ca admin credentials already created] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840914.1264558-31211-105938048965009 `" && echo ansible-tmp-1604840914.1264558-31211-105938048965009="` echo /root/.ansible/tmp/ansible-tmp-1604840914.1264558-31211-105938048965009 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp7ym6vt5j TO /root/.ansible/tmp/ansible-tmp-1604840914.1264558-31211-105938048965009/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840914.1264558-31211-105938048965009/ /root/.ansible/tmp/ansible-tmp-1604840914.1264558-31211-105938048965009/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840914.1264558-31211-105938048965009/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840914.1264558-31211-105938048965009/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
    "delta": "0:00:00.049285",
    "end": "2020-11-08 13:08:34.305702",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get secret/credentials/carrier-net/ca/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:08:34.256417",
    "stderr": "No value found at secret/credentials/carrier-net/ca/carrier",
    "stderr_lines": [
        "No value found at secret/credentials/carrier-net/ca/carrier"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/ca-server : Write the ca server admin credentials to Vault] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:77
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840914.3738668-31245-230814769057543 `" && echo ansible-tmp-1604840914.3738668-31245-230814769057543="` echo /root/.ansible/tmp/ansible-tmp-1604840914.3738668-31245-230814769057543 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfjx3rg7b TO /root/.ansible/tmp/ansible-tmp-1604840914.3738668-31245-230814769057543/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840914.3738668-31245-230814769057543/ /root/.ansible/tmp/ansible-tmp-1604840914.3738668-31245-230814769057543/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840914.3738668-31245-230814769057543/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840914.3738668-31245-230814769057543/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
    "delta": "0:00:00.042628",
    "end": "2020-11-08 13:08:34.547880",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/ca/carrier user=\"carrier-adminpw\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:34.505252",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/ca/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/ca/carrier"
    ]
}

TASK [create/ca-server : Check Ambassador cred exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:87
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840914.6129205-31281-277181349114152 `" && echo ansible-tmp-1604840914.6129205-31281-277181349114152="` echo /root/.ansible/tmp/ansible-tmp-1604840914.6129205-31281-277181349114152 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdkmf88gl TO /root/.ansible/tmp/ansible-tmp-1604840914.6129205-31281-277181349114152/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840914.6129205-31281-277181349114152/ /root/.ansible/tmp/ansible-tmp-1604840914.6129205-31281-277181349114152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840914.6129205-31281-277181349114152/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840914.6129205-31281-277181349114152/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "ca-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/ca-server : Create the Ambassador credentials] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:98
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840915.2859786-31309-275245390014739 `" && echo ansible-tmp-1604840915.2859786-31309-275245390014739="` echo /root/.ansible/tmp/ansible-tmp-1604840915.2859786-31309-275245390014739 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpygrx8vt5 TO /root/.ansible/tmp/ansible-tmp-1604840915.2859786-31309-275245390014739/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840915.2859786-31309-275245390014739/ /root/.ansible/tmp/ansible-tmp-1604840915.2859786-31309-275245390014739/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840915.2859786-31309-275245390014739/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840915.2859786-31309-275245390014739/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
    "delta": "0:00:00.111530",
    "end": "2020-11-08 13:08:35.529448",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls ca-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --key=./build/crypto-config/peerOrganizations/carrier-net/ca/carrier-net-CA.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:35.417918",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/ca-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/ca-carrier-net-ambassador-certs created"
    ]
}

TASK [Create CA server values for Orderer] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:105
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create CA server values organizations] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:120

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840915.6897662-31345-190999465409316 `" && echo ansible-tmp-1604840915.6897662-31345-190999465409316="` echo /root/.ansible/tmp/ansible-tmp-1604840915.6897662-31345-190999465409316 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_yuuhvwj TO /root/.ansible/tmp/ansible-tmp-1604840915.6897662-31345-190999465409316/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840915.6897662-31345-190999465409316/ /root/.ansible/tmp/ansible-tmp-1604840915.6897662-31345-190999465409316/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840915.6897662-31345-190999465409316/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840915.6897662-31345-190999465409316/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840915.9289434-31371-204430939486289 `" && echo ansible-tmp-1604840915.9289434-31371-204430939486289="` echo /root/.ansible/tmp/ansible-tmp-1604840915.9289434-31371-204430939486289 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdv4_nlvx TO /root/.ansible/tmp/ansible-tmp-1604840915.9289434-31371-204430939486289/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840915.9289434-31371-204430939486289/ /root/.ansible/tmp/ansible-tmp-1604840915.9289434-31371-204430939486289/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840915.9289434-31371-204430939486289/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840915.9289434-31371-204430939486289/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244 `" && echo ansible-tmp-1604840916.1338265-31397-215712075837244="` echo /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphi_xmgsc TO /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/ /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqfkufzqm/ca-peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/ /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpxojvj_lu TO /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/ /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "7d8e039d61ac8a6ff961573116ce20ca",
    "mode": "0644",
    "owner": "root",
    "size": 1262,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840916.1338265-31397-215712075837244/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840916.5503752-31439-37269723423002 `" && echo ansible-tmp-1604840916.5503752-31439-37269723423002="` echo /root/.ansible/tmp/ansible-tmp-1604840916.5503752-31439-37269723423002 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpt4wgj81m TO /root/.ansible/tmp/ansible-tmp-1604840916.5503752-31439-37269723423002/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840916.5503752-31439-37269723423002/ /root/.ansible/tmp/ansible-tmp-1604840916.5503752-31439-37269723423002/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840916.5503752-31439-37269723423002/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840916.5503752-31439-37269723423002/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604840916.4359872,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5470d00ee536a047be328537ccac1d5b291e3f0e",
        "ctime": 1604840916.4359872,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3469,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604840916.3039854,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1262,
        "uid": 0,
        "version": "1354037385",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840916.7996418-31469-216864874978430 `" && echo ansible-tmp-1604840916.7996418-31469-216864874978430="` echo /root/.ansible/tmp/ansible-tmp-1604840916.7996418-31469-216864874978430 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp515sza7t TO /root/.ansible/tmp/ansible-tmp-1604840916.7996418-31469-216864874978430/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840916.7996418-31469-216864874978430/ /root/.ansible/tmp/ansible-tmp-1604840916.7996418-31469-216864874978430/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840916.7996418-31469-216864874978430/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840916.7996418-31469-216864874978430/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604840904.1838007,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604840904.667808,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3429,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604840904.667808,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1450343826",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/ca",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "ca": "hyperledger/fabric-ca:1.4.5"
                    },
                    "namespace": "carrier-net"
                },
                "proxy": {
                    "provider": "haproxy",
                    "type": "peer"
                },
                "server": {
                    "admin": "carrier-admin",
                    "name": "ca",
                    "tlsstatus": true
                },
                "service": {
                    "ports": {
                        "tcp": {
                            "port": 7054
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretadminpass": "secret/credentials/carrier-net/ca/carrier?user",
                    "secretcert": "secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem",
                    "secretkey": "secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193 `" && echo ansible-tmp-1604840917.1829486-31508-233874383432193="` echo /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpq5w1hun5 TO /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/ /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpywxsoqtq TO /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/ /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8hy0guzt TO /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/ /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
    "dest": "./build/test/carrier-net-ca.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpywxsoqtq",
            "attributes": null,
            "backup": false,
            "checksum": "e03d8e9191fd66a6dba3f842c6cb90762b91b174",
            "content": null,
            "dest": "./build/test/carrier-net-ca.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea14e4e12c26cbb2cb9ee3a173335ca1",
    "mode": "0644",
    "owner": "root",
    "size": 834,
    "src": "/root/.ansible/tmp/ansible-tmp-1604840917.1829486-31508-233874383432193/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840917.523138-31548-109445733057607 `" && echo ansible-tmp-1604840917.523138-31548-109445733057607="` echo /root/.ansible/tmp/ansible-tmp-1604840917.523138-31548-109445733057607 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpi71jb0p9 TO /root/.ansible/tmp/ansible-tmp-1604840917.523138-31548-109445733057607/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840917.523138-31548-109445733057607/ /root/.ansible/tmp/ansible-tmp-1604840917.523138-31548-109445733057607/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840917.523138-31548-109445733057607/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840917.523138-31548-109445733057607/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
    "delta": "0:00:00.055347",
    "end": "2020-11-08 13:08:37.713761",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:37.658414",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:134

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840917.8305385-31582-213108678299270 `" && echo ansible-tmp-1604840917.8305385-31582-213108678299270="` echo /root/.ansible/tmp/ansible-tmp-1604840917.8305385-31582-213108678299270 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpy6mo7mu5 TO /root/.ansible/tmp/ansible-tmp-1604840917.8305385-31582-213108678299270/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840917.8305385-31582-213108678299270/ /root/.ansible/tmp/ansible-tmp-1604840917.8305385-31582-213108678299270/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840917.8305385-31582-213108678299270/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840917.8305385-31582-213108678299270/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840918.0300233-31608-47550287462194 `" && echo ansible-tmp-1604840918.0300233-31608-47550287462194="` echo /root/.ansible/tmp/ansible-tmp-1604840918.0300233-31608-47550287462194 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpo_tme2bm TO /root/.ansible/tmp/ansible-tmp-1604840918.0300233-31608-47550287462194/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840918.0300233-31608-47550287462194/ /root/.ansible/tmp/ansible-tmp-1604840918.0300233-31608-47550287462194/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840918.0300233-31608-47550287462194/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840918.0300233-31608-47550287462194/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.106628",
    "end": "2020-11-08 13:08:41.266188",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:08:38.159560",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   3d3039fd..7e187762  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   3d3039fd..7e187762  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 7e187762] [ci skip] Pushing CA server files\n 2 files changed, 1142 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 7e187762] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 7e187762] [ci skip] Pushing CA server files",
        " 2 files changed, 1142 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   3d3039fd..7e187762  HEAD -> gorilla"
    ]
}

TASK [include_role : create/ca-tools] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:70

TASK [waiting for the CA server to be created in walmart-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840921.6752496-31664-174007729356656 `" && echo ansible-tmp-1604840921.6752496-31664-174007729356656="` echo /root/.ansible/tmp/ansible-tmp-1604840921.6752496-31664-174007729356656 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpt_k4hhof TO /root/.ansible/tmp/ansible-tmp-1604840921.6752496-31664-174007729356656/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840921.6752496-31664-174007729356656/ /root/.ansible/tmp/ansible-tmp-1604840921.6752496-31664-174007729356656/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840921.6752496-31664-174007729356656/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840921.6752496-31664-174007729356656/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (20 retries left).Result was: {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840952.3501554-31664-181712093172695 `" && echo ansible-tmp-1604840952.3501554-31664-181712093172695="` echo /root/.ansible/tmp/ansible-tmp-1604840952.3501554-31664-181712093172695 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp1j3tzvox TO /root/.ansible/tmp/ansible-tmp-1604840952.3501554-31664-181712093172695/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840952.3501554-31664-181712093172695/ /root/.ansible/tmp/ansible-tmp-1604840952.3501554-31664-181712093172695/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840952.3501554-31664-181712093172695/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840952.3501554-31664-181712093172695/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (19 retries left).Result was: {
    "attempts": 2,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604840982.9850016-31664-146110189668833 `" && echo ansible-tmp-1604840982.9850016-31664-146110189668833="` echo /root/.ansible/tmp/ansible-tmp-1604840982.9850016-31664-146110189668833 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpi_bu_6yj TO /root/.ansible/tmp/ansible-tmp-1604840982.9850016-31664-146110189668833/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604840982.9850016-31664-146110189668833/ /root/.ansible/tmp/ansible-tmp-1604840982.9850016-31664-146110189668833/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604840982.9850016-31664-146110189668833/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604840982.9850016-31664-146110189668833/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (18 retries left).Result was: {
    "attempts": 3,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841013.603238-31664-60651518079355 `" && echo ansible-tmp-1604841013.603238-31664-60651518079355="` echo /root/.ansible/tmp/ansible-tmp-1604841013.603238-31664-60651518079355 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpteyifp04 TO /root/.ansible/tmp/ansible-tmp-1604841013.603238-31664-60651518079355/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841013.603238-31664-60651518079355/ /root/.ansible/tmp/ansible-tmp-1604841013.603238-31664-60651518079355/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841013.603238-31664-60651518079355/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841013.603238-31664-60651518079355/ > /dev/null 2>&1 && sleep 0'
FAILED - RETRYING: Wait for Pod ca in walmart-net (17 retries left).Result was: {
    "attempts": 4,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [],
    "retries": 21
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841044.2879677-31664-242143635768759 `" && echo ansible-tmp-1604841044.2879677-31664-242143635768759="` echo /root/.ansible/tmp/ansible-tmp-1604841044.2879677-31664-242143635768759 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp96mfs735 TO /root/.ansible/tmp/ansible-tmp-1604841044.2879677-31664-242143635768759/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841044.2879677-31664-242143635768759/ /root/.ansible/tmp/ansible-tmp-1604841044.2879677-31664-242143635768759/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841044.2879677-31664-242143635768759/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841044.2879677-31664-242143635768759/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 5,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T13:09:52Z",
                "generateName": "ca-876984656-",
                "labels": {
                    "app.kubernetes.io/instance": "walmart-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "876984656"
                },
                "name": "ca-876984656-4q52d",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-876984656",
                        "uid": "35203052-11b9-4795-9e0f-f2e98a682b3c"
                    }
                ],
                "resourceVersion": "2908687",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-876984656-4q52d",
                "uid": "53e6857d-0c43-44cd-88e8-785e3efe42cc"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b walmart-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.walmart-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-p5mdn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/ordererOrganizations/walmart-net/ca?ca.walmart-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/ordererOrganizations/walmart-net/ca?walmart-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/walmart-net/ca/walmart?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "walmart-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-p5mdn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000000",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-p5mdn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-p5mdn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:10:31Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:10:32Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:10:32Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:10:07Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c14268187c2b68f14fedd56db21dc4399b912d761e1237027e5483a52ab81a30",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T13:10:31Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://89e11fdd428f087667c4a4b2d6e90a865c3dca507e002d25dbe59cc203e13d34",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://89e11fdd428f087667c4a4b2d6e90a865c3dca507e002d25dbe59cc203e13d34",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T13:10:30Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T13:10:27Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.22",
                "podIPs": [
                    {
                        "ip": "10.1.0.22"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T13:10:07Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841045.0145717-31798-28148180677479 `" && echo ansible-tmp-1604841045.0145717-31798-28148180677479="` echo /root/.ansible/tmp/ansible-tmp-1604841045.0145717-31798-28148180677479 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp4m5wt_ka TO /root/.ansible/tmp/ansible-tmp-1604841045.0145717-31798-28148180677479/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841045.0145717-31798-28148180677479/ /root/.ansible/tmp/ansible-tmp-1604841045.0145717-31798-28148180677479/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841045.0145717-31798-28148180677479/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841045.0145717-31798-28148180677479/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841045.2153137-31824-275150038417700 `" && echo ansible-tmp-1604841045.2153137-31824-275150038417700="` echo /root/.ansible/tmp/ansible-tmp-1604841045.2153137-31824-275150038417700 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmprd2gp061 TO /root/.ansible/tmp/ansible-tmp-1604841045.2153137-31824-275150038417700/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841045.2153137-31824-275150038417700/ /root/.ansible/tmp/ansible-tmp-1604841045.2153137-31824-275150038417700/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841045.2153137-31824-275150038417700/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841045.2153137-31824-275150038417700/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for walmart-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314 `" && echo ansible-tmp-1604841045.4174926-31850-146152700035314="` echo /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpuoiqga2w TO /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/ /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpor1313wj/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/ /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpx47nbaye TO /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/ /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "22eb57fc62c4c46e12211ccc6f0ae59e",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841045.4174926-31850-146152700035314/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841045.821798-31892-175212623152844 `" && echo ansible-tmp-1604841045.821798-31892-175212623152844="` echo /root/.ansible/tmp/ansible-tmp-1604841045.821798-31892-175212623152844 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp7n9dro9x TO /root/.ansible/tmp/ansible-tmp-1604841045.821798-31892-175212623152844/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841045.821798-31892-175212623152844/ /root/.ansible/tmp/ansible-tmp-1604841045.821798-31892-175212623152844/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841045.821798-31892-175212623152844/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841045.821798-31892-175212623152844/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
        }
    },
    "stat": {
        "atime": 1604841045.7099564,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "dc39e1d41f3b4a44f468df6d6264ebe686615af2",
        "ctime": 1604841045.7099564,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3474,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841045.5739543,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "3297801230",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841046.0686707-31922-79083794490324 `" && echo ansible-tmp-1604841046.0686707-31922-79083794490324="` echo /root/.ansible/tmp/ansible-tmp-1604841046.0686707-31922-79083794490324 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp7vautmse TO /root/.ansible/tmp/ansible-tmp-1604841046.0686707-31922-79083794490324/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841046.0686707-31922-79083794490324/ /root/.ansible/tmp/ansible-tmp-1604841046.0686707-31922-79083794490324/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841046.0686707-31922-79083794490324/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841046.0686707-31922-79083794490324/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604840904.1838007,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604840917.456003,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3429,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604840917.456003,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1450343826",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-net-ca-tools",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "walmart-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "walmart-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585 `" && echo ansible-tmp-1604841046.4486117-31960-56565248244585="` echo /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpe0t6vzqr TO /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/ /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpmf0p3c7f TO /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/ /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpnbln5cp3 TO /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/ /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
    "dest": "./build/test/walmart-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpmf0p3c7f",
            "attributes": null,
            "backup": false,
            "checksum": "d8008d520cc18c3f99b05235fab3adaa17b8a466",
            "content": null,
            "dest": "./build/test/walmart-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "590790aef7bb9a4128b32a0352fb27f4",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841046.4486117-31960-56565248244585/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841046.7877634-32001-121588756204233 `" && echo ansible-tmp-1604841046.7877634-32001-121588756204233="` echo /root/.ansible/tmp/ansible-tmp-1604841046.7877634-32001-121588756204233 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpja6k2xl1 TO /root/.ansible/tmp/ansible-tmp-1604841046.7877634-32001-121588756204233/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841046.7877634-32001-121588756204233/ /root/.ansible/tmp/ansible-tmp-1604841046.7877634-32001-121588756204233/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841046.7877634-32001-121588756204233/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841046.7877634-32001-121588756204233/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.056355",
    "end": "2020-11-08 13:10:46.974458",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:10:46.918103",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841047.0885673-32035-158127537030968 `" && echo ansible-tmp-1604841047.0885673-32035-158127537030968="` echo /root/.ansible/tmp/ansible-tmp-1604841047.0885673-32035-158127537030968 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphh1xpcjz TO /root/.ansible/tmp/ansible-tmp-1604841047.0885673-32035-158127537030968/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841047.0885673-32035-158127537030968/ /root/.ansible/tmp/ansible-tmp-1604841047.0885673-32035-158127537030968/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841047.0885673-32035-158127537030968/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841047.0885673-32035-158127537030968/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841047.2928588-32061-24421820425793 `" && echo ansible-tmp-1604841047.2928588-32061-24421820425793="` echo /root/.ansible/tmp/ansible-tmp-1604841047.2928588-32061-24421820425793 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmph11ie0vz TO /root/.ansible/tmp/ansible-tmp-1604841047.2928588-32061-24421820425793/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841047.2928588-32061-24421820425793/ /root/.ansible/tmp/ansible-tmp-1604841047.2928588-32061-24421820425793/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841047.2928588-32061-24421820425793/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841047.2928588-32061-24421820425793/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.173095",
    "end": "2020-11-08 13:10:50.597087",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:10:47.423992",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   7e187762..35f89372  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   7e187762..35f89372  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 35f89372] [ci skip] Pushing CA-tools files\n 2 files changed, 1193 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 35f89372] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 35f89372] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1193 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/ca-tools/walmart-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   7e187762..35f89372  HEAD -> gorilla"
    ]
}

TASK [waiting for the CA server to be created in carrier-net] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:6

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841050.8737319-32116-170421114846110 `" && echo ansible-tmp-1604841050.8737319-32116-170421114846110="` echo /root/.ansible/tmp/ansible-tmp-1604841050.8737319-32116-170421114846110 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpvu4tdep1 TO /root/.ansible/tmp/ansible-tmp-1604841050.8737319-32116-170421114846110/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841050.8737319-32116-170421114846110/ /root/.ansible/tmp/ansible-tmp-1604841050.8737319-32116-170421114846110/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841050.8737319-32116-170421114846110/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841050.8737319-32116-170421114846110/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T13:09:51Z",
                "generateName": "ca-645c757f7d-",
                "labels": {
                    "app.kubernetes.io/instance": "carrier-net-ca",
                    "app.kubernetes.io/name": "ca",
                    "name": "ca",
                    "pod-template-hash": "645c757f7d"
                },
                "name": "ca-645c757f7d-2jhr9",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-645c757f7d",
                        "uid": "900d725d-5358-4205-be74-5a4575ff6f07"
                    }
                ],
                "resourceVersion": "2908674",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-645c757f7d-2jhr9",
                "uid": "a45069a9-1477-4125-9761-efac9b437642"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "sleep 1 && fabric-ca-server start -b carrier-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d"
                        ],
                        "env": [
                            {
                                "name": "FABRIC_CA_HOME",
                                "value": "/etc/hyperledger/fabric-ca-server"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_NAME",
                                "value": "ca.carrier-net"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_CA_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DEBUG",
                                "value": "true"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_CERTFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_TLS_KEYFILE",
                                "value": "/etc/hyperledger/fabric-ca-server-config/server.key"
                            },
                            {
                                "name": "FABRIC_CA_SERVER_DB_DATASOURCE",
                                "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"
                            }
                        ],
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca",
                        "ports": [
                            {
                                "containerPort": 7054,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/hyperledger/fabric-ca-server-config",
                                "name": "certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/hyperledger/fabric-ca-server/db/",
                                "name": "ca-server-db"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-mfnln",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "regcred"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "#!/usr/bin/env sh\nvalidateVaultResponse () {\nif echo ${2} | grep \"errors\"; then\n echo \"ERROR: unable to retrieve ${1}: ${2}\"\n exit 1\n fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secret/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secret/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secret/credentials/carrier-net/ca/carrier?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "VAULT_ADDR",
                                "value": "http://vault.suneelbaf.svc.cluster.local:8200"
                            },
                            {
                                "name": "KUBERNETES_AUTH_PATH",
                                "value": "carrier-net-auth"
                            },
                            {
                                "name": "VAULT_APP_ROLE",
                                "value": "vault-role"
                            },
                            {
                                "name": "MOUNT_PATH",
                                "value": "/secret"
                            }
                        ],
                        "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "imagePullPolicy": "Always",
                        "name": "ca-certs-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/secret",
                                "name": "certificates"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "vault-auth-token-mfnln",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "vault-auth",
                "serviceAccountName": "vault-auth",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-server-db",
                        "persistentVolumeClaim": {
                            "claimName": "ca-server-db-pvc"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "certificates"
                    },
                    {
                        "name": "vault-auth-token-mfnln",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "vault-auth-token-mfnln"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:10:28Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:10:29Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:10:29Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:10:07Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://fc5ce566b71b55f1765f6b83da697792702b99eafd6c53f6deaeb010f918a827",
                        "image": "hyperledger/fabric-ca:1.4.5",
                        "imageID": "docker-pullable://hyperledger/fabric-ca@sha256:9c316860990c600487113e3eb567574ef0af5922a03e974cd172eb6aaa23bc3d",
                        "lastState": {},
                        "name": "ca",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T13:10:28Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://40b0918d54f5e5b77b945ace1388738a640d52548260606ca8ce103e6b2b48ce",
                        "image": "hyperledgerlabs/alpine-utils:1.0",
                        "imageID": "docker-pullable://hyperledgerlabs/alpine-utils@sha256:d074834d802a48f13d5f19402b4e570e158213d74c75485fc39fef890f8c7027",
                        "lastState": {},
                        "name": "ca-certs-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://40b0918d54f5e5b77b945ace1388738a640d52548260606ca8ce103e6b2b48ce",
                                "exitCode": 0,
                                "finishedAt": "2020-11-08T13:10:28Z",
                                "reason": "Completed",
                                "startedAt": "2020-11-08T13:10:27Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.0.38",
                "podIPs": [
                    {
                        "ip": "10.1.0.38"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T13:10:07Z"
            }
        }
    ]
}

TASK [Create CA-tools Values] **************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:18

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841051.6059403-32146-28127417915900 `" && echo ansible-tmp-1604841051.6059403-32146-28127417915900="` echo /root/.ansible/tmp/ansible-tmp-1604841051.6059403-32146-28127417915900 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwg6v88z8 TO /root/.ansible/tmp/ansible-tmp-1604841051.6059403-32146-28127417915900/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841051.6059403-32146-28127417915900/ /root/.ansible/tmp/ansible-tmp-1604841051.6059403-32146-28127417915900/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841051.6059403-32146-28127417915900/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841051.6059403-32146-28127417915900/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841051.8053374-32172-172557140686054 `" && echo ansible-tmp-1604841051.8053374-32172-172557140686054="` echo /root/.ansible/tmp/ansible-tmp-1604841051.8053374-32172-172557140686054 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpigt4ay42 TO /root/.ansible/tmp/ansible-tmp-1604841051.8053374-32172-172557140686054/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841051.8053374-32172-172557140686054/ /root/.ansible/tmp/ansible-tmp-1604841051.8053374-32172-172557140686054/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841051.8053374-32172-172557140686054/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841051.8053374-32172-172557140686054/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for carrier-net] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157 `" && echo ansible-tmp-1604841052.003772-32199-264983792792157="` echo /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp7ypavdmm TO /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/ /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpmqen9k8h/ca-tools.tpl TO /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/ /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwz3d3if5 TO /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/ /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca-tools.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "31ce48ae00d8d8ffe510b3550432011b",
    "mode": "0644",
    "owner": "root",
    "size": 652,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841052.003772-32199-264983792792157/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841052.408965-32241-73742600702036 `" && echo ansible-tmp-1604841052.408965-32241-73742600702036="` echo /root/.ansible/tmp/ansible-tmp-1604841052.408965-32241-73742600702036 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplj5o2ssa TO /root/.ansible/tmp/ansible-tmp-1604841052.408965-32241-73742600702036/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841052.408965-32241-73742600702036/ /root/.ansible/tmp/ansible-tmp-1604841052.408965-32241-73742600702036/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841052.408965-32241-73742600702036/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841052.408965-32241-73742600702036/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
        }
    },
    "stat": {
        "atime": 1604841052.2860563,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "4da07c336f0bb98f2c68715923494e488bb016d8",
        "ctime": 1604841052.2860563,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3480,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841052.1540542,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 652,
        "uid": 0,
        "version": "1739660747",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841052.6596541-32271-256018311321749 `" && echo ansible-tmp-1604841052.6596541-32271-256018311321749="` echo /root/.ansible/tmp/ansible-tmp-1604841052.6596541-32271-256018311321749 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp15xsgftx TO /root/.ansible/tmp/ansible-tmp-1604841052.6596541-32271-256018311321749/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841052.6596541-32271-256018311321749/ /root/.ansible/tmp/ansible-tmp-1604841052.6596541-32271-256018311321749/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841052.6596541-32271-256018311321749/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841052.6596541-32271-256018311321749/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604840904.1838007,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604841046.7179716,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3429,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604841046.7179716,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1450343826",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-net-ca-tools",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/catools",
                "ref": "gorilla"
            },
            "releaseName": "carrier-net-ca-tools",
            "values": {
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "hyperledger/fabric-ca-tools",
                    "tag": "1.2.0"
                },
                "metadata": {
                    "name": "ca-tools",
                    "namespace": "carrier-net"
                },
                "replicaCount": 1,
                "storage": {
                    "storageclassname": "carriersc",
                    "storagesize": "512Mi"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411 `" && echo ansible-tmp-1604841053.039048-32309-176830152218411="` echo /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp0xjc89cg TO /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/ /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp19z6zoc3 TO /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/ /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpy4shmczx TO /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/ /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
    "dest": "./build/test/carrier-net-ca-tools.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp19z6zoc3",
            "attributes": null,
            "backup": false,
            "checksum": "db2ea95d1a80c9ba8cbd5ec007d6f4af3a41bb7b",
            "content": null,
            "dest": "./build/test/carrier-net-ca-tools.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "1e84a94c7e9daff778218b24a27091ea",
    "mode": "0644",
    "owner": "root",
    "size": 231,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841053.039048-32309-176830152218411/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841053.3807762-32349-229517085266627 `" && echo ansible-tmp-1604841053.3807762-32349-229517085266627="` echo /root/.ansible/tmp/ansible-tmp-1604841053.3807762-32349-229517085266627 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmph4kxvviu TO /root/.ansible/tmp/ansible-tmp-1604841053.3807762-32349-229517085266627/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841053.3807762-32349-229517085266627/ /root/.ansible/tmp/ansible-tmp-1604841053.3807762-32349-229517085266627/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841053.3807762-32349-229517085266627/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841053.3807762-32349-229517085266627/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
    "delta": "0:00:00.058525",
    "end": "2020-11-08 13:10:53.570020",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:10:53.511495",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/tasks/main.yaml:29

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841053.681359-32383-149372546814188 `" && echo ansible-tmp-1604841053.681359-32383-149372546814188="` echo /root/.ansible/tmp/ansible-tmp-1604841053.681359-32383-149372546814188 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp31fjwrei TO /root/.ansible/tmp/ansible-tmp-1604841053.681359-32383-149372546814188/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841053.681359-32383-149372546814188/ /root/.ansible/tmp/ansible-tmp-1604841053.681359-32383-149372546814188/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841053.681359-32383-149372546814188/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841053.681359-32383-149372546814188/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841053.8867662-32409-175083754592586 `" && echo ansible-tmp-1604841053.8867662-32409-175083754592586="` echo /root/.ansible/tmp/ansible-tmp-1604841053.8867662-32409-175083754592586 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmps5x9y058 TO /root/.ansible/tmp/ansible-tmp-1604841053.8867662-32409-175083754592586/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841053.8867662-32409-175083754592586/ /root/.ansible/tmp/ansible-tmp-1604841053.8867662-32409-175083754592586/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841053.8867662-32409-175083754592586/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841053.8867662-32409-175083754592586/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:08.255497",
    "end": "2020-11-08 13:11:02.272050",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:10:54.016553",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   35f89372..075651dd  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   35f89372..075651dd  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 075651dd] [ci skip] Pushing CA-tools files\n 2 files changed, 1011 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 075651dd] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 075651dd] [ci skip] Pushing CA-tools files",
        " 2 files changed, 1011 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   35f89372..075651dd  HEAD -> gorilla"
    ]
}

TASK [include_role : create/crypto_script] *************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:85

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841062.5908754-32459-4869484751539 `" && echo ansible-tmp-1604841062.5908754-32459-4869484751539="` echo /root/.ansible/tmp/ansible-tmp-1604841062.5908754-32459-4869484751539 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpn8ial6d7 TO /root/.ansible/tmp/ansible-tmp-1604841062.5908754-32459-4869484751539/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841062.5908754-32459-4869484751539/ /root/.ansible/tmp/ansible-tmp-1604841062.5908754-32459-4869484751539/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841062.5908754-32459-4869484751539/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841062.5908754-32459-4869484751539/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452 `" && echo ansible-tmp-1604841062.7983716-32485-164776921841452="` echo /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfb_94g2m TO /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/ /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplbmka7m0/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/ /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6pfjwcod TO /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/ /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "480d289ef6662bbab578be328654f6561843b88a",
    "dest": "./build/generate-crypto-walmart-orderer1.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "480d289ef6662bbab578be328654f6561843b88a",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer1.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "44f5848d8eb1f30ca687b6194b06faa5",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer1",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841062.7983716-32485-164776921841452/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751 `" && echo ansible-tmp-1604841063.1320965-32485-164370762228751="` echo /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpea2lu7ca TO /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/ /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpln4ygby6/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/ /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpi0gpjk7d TO /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/ /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "878c1a8c631020f3e5356765f191403e5fcd824d",
    "dest": "./build/generate-crypto-walmart-orderer2.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "878c1a8c631020f3e5356765f191403e5fcd824d",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer2.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "a0bf25fd9770ac7e0da9684c08a133da",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer2",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841063.1320965-32485-164370762228751/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522 `" && echo ansible-tmp-1604841063.468526-32485-84038240387522="` echo /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpl4vndf_8 TO /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/ /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpyf94tauf/orderer_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/ /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzbzvam6p TO /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/ /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "e01c7b0f6bd46487011f462aa2ab5c1f51bd1fb2",
    "dest": "./build/generate-crypto-walmart-orderer3.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "e01c7b0f6bd46487011f462aa2ab5c1f51bd1fb2",
            "content": null,
            "dest": "./build/generate-crypto-walmart-orderer3.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2594a73061c3bc6598466f5435e1492c",
    "mode": "0644",
    "orderer": {
        "consensus": "raft",
        "grpc": {
            "port": 7050
        },
        "name": "orderer3",
        "orderer": null,
        "type": "orderer"
    },
    "owner": "root",
    "size": 2595,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841063.468526-32485-84038240387522/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625 `" && echo ansible-tmp-1604841063.828106-32601-212636053784625="` echo /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpx2bbu6lq TO /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/ /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpq22m6fp9/orderer_organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/ /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpddpj_1c8 TO /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/ /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "64df30f5e30a0b5059f87dfe7e3e175f3f37f0a1",
    "dest": "./build/generate-crypto-walmart.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderer_organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "64df30f5e30a0b5059f87dfe7e3e175f3f37f0a1",
            "content": null,
            "dest": "./build/generate-crypto-walmart.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ed7b38ef30a5d84380fe1096ab91459f",
    "mode": "0644",
    "owner": "root",
    "size": 2912,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841063.828106-32601-212636053784625/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841064.2091842-32643-62815814308093 `" && echo ansible-tmp-1604841064.2091842-32643-62815814308093="` echo /root/.ansible/tmp/ansible-tmp-1604841064.2091842-32643-62815814308093 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwlhreoqv TO /root/.ansible/tmp/ansible-tmp-1604841064.2091842-32643-62815814308093/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841064.2091842-32643-62815814308093/ /root/.ansible/tmp/ansible-tmp-1604841064.2091842-32643-62815814308093/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841064.2091842-32643-62815814308093/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841064.2091842-32643-62815814308093/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:34
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276 `" && echo ansible-tmp-1604841064.4713974-32673-246217343496276="` echo /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp90hb0cft TO /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/ /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbn_920g_/organisation_script.tpl TO /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/ /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqvgw2fbe TO /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/ /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "75274d7dcfb5fdf1db32693302b1095b589ef47e",
    "dest": "./build/generate-crypto-carrier.sh",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "organisation_script.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "75274d7dcfb5fdf1db32693302b1095b589ef47e",
            "content": null,
            "dest": "./build/generate-crypto-carrier.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "d84067ed5e5c66cd0b6cacb3bab1d4ac",
    "mode": "0644",
    "owner": "root",
    "size": 5182,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841064.4713974-32673-246217343496276/source",
    "state": "file",
    "uid": 0
}

TASK [pause] *******************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:94
Pausing for 360 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[pause]
Sleeping... so that the client certificates are valid:
ok: [localhost] => {
    "changed": false,
    "delta": 360,
    "echo": true,
    "rc": 0,
    "start": "2020-11-08 13:11:04.816193",
    "stderr": "",
    "stdout": "Paused for 6.0 minutes",
    "stop": "2020-11-08 13:17:04.816482",
    "user_input": ""
}

TASK [include_role : create/crypto/orderer] ************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:99
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:6
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841424.9886718-32717-93882190170990 `" && echo ansible-tmp-1604841424.9886718-32717-93882190170990="` echo /root/.ansible/tmp/ansible-tmp-1604841424.9886718-32717-93882190170990 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpunzt6rv4 TO /root/.ansible/tmp/ansible-tmp-1604841424.9886718-32717-93882190170990/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841424.9886718-32717-93882190170990/ /root/.ansible/tmp/ansible-tmp-1604841424.9886718-32717-93882190170990/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841424.9886718-32717-93882190170990/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841424.9886718-32717-93882190170990/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.127738",
    "end": "2020-11-08 13:17:05.246024",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:05.118286",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Call orderercheck.yaml for orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:16
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml for localhost

TASK [Waiting for CA-tool in walmart-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:2
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in walmart-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841425.5493217-32761-170297802004612 `" && echo ansible-tmp-1604841425.5493217-32761-170297802004612="` echo /root/.ansible/tmp/ansible-tmp-1604841425.5493217-32761-170297802004612 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpy0y5p8ci TO /root/.ansible/tmp/ansible-tmp-1604841425.5493217-32761-170297802004612/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841425.5493217-32761-170297802004612/ /root/.ansible/tmp/ansible-tmp-1604841425.5493217-32761-170297802004612/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841425.5493217-32761-170297802004612/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841425.5493217-32761-170297802004612/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "walmart-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T13:11:56Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-shgbq",
                "namespace": "walmart-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "bd7430bb-521b-467e-86af-acb91f6187d0"
                    }
                ],
                "resourceVersion": "2909162",
                "selfLink": "/api/v1/namespaces/walmart-net/pods/ca-tools-69d7885f86-shgbq",
                "uid": "e75633ee-7519-45e3-a714-0ec2f8969665"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-98ngr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000001",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-98ngr",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-98ngr"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:12:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:12:51Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:12:51Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:12:15Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://d3c59722101a9bdc455128769e9e04ca06cd1555c5ddc0912ce37bc57b2f4045",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T13:12:50Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.35",
                "phase": "Running",
                "podIP": "10.1.0.37",
                "podIPs": [
                    {
                        "ip": "10.1.0.37"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T13:12:15Z"
            }
        }
    ]
}

TASK [include_role : {{ playbook_dir }}/../../shared/configuration/roles/check/setup] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:15
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841426.262964-323-2151557980275 `" && echo ansible-tmp-1604841426.262964-323-2151557980275="` echo /root/.ansible/tmp/ansible-tmp-1604841426.262964-323-2151557980275 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzhlkjrj4 TO /root/.ansible/tmp/ansible-tmp-1604841426.262964-323-2151557980275/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841426.262964-323-2151557980275/ /root/.ansible/tmp/ansible-tmp-1604841426.262964-323-2151557980275/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841426.262964-323-2151557980275/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841426.262964-323-2151557980275/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca"
        }
    },
    "stat": {
        "atime": 1604840900.399743,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604840900.9077508,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3395,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604840900.9077508,
        "nlink": 2,
        "path": "./build/crypto-config/ordererOrganizations/walmart-net/ca",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "2098233923",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if ca certs already created] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841426.5824914-363-280293609856778 `" && echo ansible-tmp-1604841426.5824914-363-280293609856778="` echo /root/.ansible/tmp/ansible-tmp-1604841426.5824914-363-280293609856778 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp54cykl7y TO /root/.ansible/tmp/ansible-tmp-1604841426.5824914-363-280293609856778/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841426.5824914-363-280293609856778/ /root/.ansible/tmp/ansible-tmp-1604841426.5824914-363-280293609856778/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841426.5824914-363-280293609856778/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841426.5824914-363-280293609856778/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.054612",
    "end": "2020-11-08 13:17:06.767499",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.walmart-net-cert.pem secret/crypto/ordererOrganizations/walmart-net/ca > ca.walmart-net-cert.pem\nmv ca.walmart-net-cert.pem ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:06.712887",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Check if ca key already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderercheck.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841426.8320034-399-255512408326798 `" && echo ansible-tmp-1604841426.8320034-399-255512408326798="` echo /root/.ansible/tmp/ansible-tmp-1604841426.8320034-399-255512408326798 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp91htq7p1 TO /root/.ansible/tmp/ansible-tmp-1604841426.8320034-399-255512408326798/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841426.8320034-399-255512408326798/ /root/.ansible/tmp/ansible-tmp-1604841426.8320034-399-255512408326798/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841426.8320034-399-255512408326798/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841426.8320034-399-255512408326798/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:00.054949",
    "end": "2020-11-08 13:17:07.016528",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=walmart-net-CA.key secret/crypto/ordererOrganizations/walmart-net/ca > walmart-net-CA.key\nmv walmart-net-CA.key ./build/crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:06.961579",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call common.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:19
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml for localhost

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841427.133135-438-113981725622762 `" && echo ansible-tmp-1604841427.133135-438-113981725622762="` echo /root/.ansible/tmp/ansible-tmp-1604841427.133135-438-113981725622762 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpytlr9gnm TO /root/.ansible/tmp/ansible-tmp-1604841427.133135-438-113981725622762/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841427.133135-438-113981725622762/ /root/.ansible/tmp/ansible-tmp-1604841427.133135-438-113981725622762/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841427.133135-438-113981725622762/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841427.133135-438-113981725622762/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:02.098464",
    "end": "2020-11-08 13:17:09.361488",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:07.263024",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Changing the permissions for generate-crypto script] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841429.4310794-483-253124724718549 `" && echo ansible-tmp-1604841429.4310794-483-253124724718549="` echo /root/.ansible/tmp/ansible-tmp-1604841429.4310794-483-253124724718549 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphjsd1ybx TO /root/.ansible/tmp/ansible-tmp-1604841429.4310794-483-253124724718549/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841429.4310794-483-253124724718549/ /root/.ansible/tmp/ansible-tmp-1604841429.4310794-483-253124724718549/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841429.4310794-483-253124724718549/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841429.4310794-483-253124724718549/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart.sh"
        }
    },
    "files": "generate-crypto-walmart.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart.sh",
    "size": 2912,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841429.6377041-509-216616550657886 `" && echo ansible-tmp-1604841429.6377041-509-216616550657886="` echo /root/.ansible/tmp/ansible-tmp-1604841429.6377041-509-216616550657886 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmppet5p0aj TO /root/.ansible/tmp/ansible-tmp-1604841429.6377041-509-216616550657886/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841429.6377041-509-216616550657886/ /root/.ansible/tmp/ansible-tmp-1604841429.6377041-509-216616550657886/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841429.6377041-509-216616550657886/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841429.6377041-509-216616550657886/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:02.397006",
    "end": "2020-11-08 13:17:12.164860",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:09.767854",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:39
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841432.2308142-554-216625356887792 `" && echo ansible-tmp-1604841432.2308142-554-216625356887792="` echo /root/.ansible/tmp/ansible-tmp-1604841432.2308142-554-216625356887792 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpl_1i2ev8 TO /root/.ansible/tmp/ansible-tmp-1604841432.2308142-554-216625356887792/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841432.2308142-554-216625356887792/ /root/.ansible/tmp/ansible-tmp-1604841432.2308142-554-216625356887792/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841432.2308142-554-216625356887792/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841432.2308142-554-216625356887792/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
    "delta": "0:00:01.406008",
    "end": "2020-11-08 13:17:13.772640",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:12.366632",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:13 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:13 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420194870}\n2020/11/08 13:17:13 [DEBUG] Entered runEnroll\n2020/11/08 13:17:13 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420194870}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201948d0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201ac1c0 DummyKeystore:<nil>}\n2020/11/08 13:17:13 [INFO] TLS Enabled\n2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:13 [DEBUG] Client Cert File: \n2020/11/08 13:17:13 [DEBUG] Client Key File: \n2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:13 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:13 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:13 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:13 [INFO] encoded CSR\n2020/11/08 13:17:13 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErT6k8rHAoAoLFNgROCh7YbJzwwZP\\nlAcOn0XX+7fic5D576O1Or/cbFv5kHwJLcHc+WwjTZeAgZ6ZrVgBu3dv9qA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1z\\naGdicTAKBggqhkjOPQQDAgNHADBEAiANiW75UOutkC+ALPcHf975KkUdl6ilTfhO\\nk1pUTiGHsQIgUgcL7l/JtqxnwwZsesW4uw1M8z+Y9GArmxWHZIf22Rc=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:13 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:13 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTRENDQWUrZ0F3SUJBZ0lVVWtOS0RqdW9peW00NnZWVDJkQVNZYkZLWXNZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OZDJGc2JXRnlkQzFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCSzArcFBLeHdLQUtDeFRZRVRnb2UyR3ljOE1HVDVRSERwOUYxL3UzNG5PUStlK2oKdFRxLzNHeGIrWkI4Q1MzQjNQbHNJMDJYZ0lHZW1hMVlBYnQzYi9hamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGQWhzMTZ5VHNBUmNoQXZwVW9Ld2Y2VzExb05LCk1COEdBMVVkSXdRWU1CYUFGRDd0QW9GYy9IWnVDZ21xdlZFTHlyZ1JFMmVUTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzJoblluRXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdXQ3Y2UGl1RApJOVZEMDk4TkIrUFYwcFFVbGxZeStXQkNMY1lwa1hmNWR0QUNJQ2JCdHRtN0FCRVdEdWtnSUtubzhUMTMrWGI1CkpCZXFtV1RoWVNuaGg1VlIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/08 13:17:13 [DEBUG] newEnrollmentResponse walmart-admin\n2020/11/08 13:17:13 [INFO] Stored client certificate at /root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 13:17:13 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-walmart/msp/cacerts/ca-walmart-net-7054.pem\n+ fabric-ca-client getcacert -d -u https://ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp\n2020/11/08 13:17:13 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:13 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/08 13:17:13 [DEBUG] Entered runGetCACert\n2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016be30 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420251fb0 DummyKeystore:<nil>}\n2020/11/08 13:17:13 [INFO] TLS Enabled\n2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:13 [DEBUG] Client Cert File: \n2020/11/08 13:17:13 [DEBUG] Client Key File: \n2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:13 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/cainfo\n{}\n2020/11/08 13:17:13 [DEBUG] Received response\nstatusCode=200 (200 OK)\n2020/11/08 13:17:13 [DEBUG] Response body result: map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5]\n2020/11/08 13:17:13 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts\n+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:13 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:13 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 13:17:13 [DEBUG] Checking for enrollment\n2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b65d0}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b6630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bd5a0 DummyKeystore:<nil>}\n2020/11/08 13:17:13 [INFO] TLS Enabled\n2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:13 [DEBUG] Client Cert File: \n2020/11/08 13:17:13 [DEBUG] Client Key File: \n2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b65d0}\n2020/11/08 13:17:13 [DEBUG] Entered runRegister\n2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b65d0}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b6630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bd5a0 DummyKeystore:<nil>}\n2020/11/08 13:17:13 [INFO] TLS Enabled\n2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:13 [DEBUG] Client Cert File: \n2020/11/08 13:17:13 [DEBUG] Client Key File: \n2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:13 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 13:17:13 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:17:13 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 13:17:13 [DEBUG] Register { Name:Admin@walmart-net Type:client Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Registrar.Roles client false} {hf.Registrar.Attributes * false} {hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true} {abac.init true true}] CAName:  }\n2020/11/08 13:17:13 [DEBUG] Adding token-based authorization header\n2020/11/08 13:17:13 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"Admin@walmart-net\",\"type\":\"client\",\"secret\":\"Admin@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"},{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true},{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true}]}\n2020/11/08 13:17:13 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:13 [DEBUG] Response body result: map[secret:Admin@walmart-net-pw]\n2020/11/08 13:17:13 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:13 [DEBUG] Home directory: /root/ca-tools/walmart/admin\n2020/11/08 13:17:13 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml\n2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7e0}\n2020/11/08 13:17:13 [DEBUG] Entered runEnroll\n2020/11/08 13:17:13 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7e0}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e840 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a42a0 DummyKeystore:<nil>}\n2020/11/08 13:17:13 [INFO] TLS Enabled\n2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:13 [DEBUG] Client Cert File: \n2020/11/08 13:17:13 [DEBUG] Client Key File: \n2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:13 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:13 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:13 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:13 [INFO] encoded CSR\n2020/11/08 13:17:13 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPdSlIb0+obgFGKTLQ3yB+4t\\nGV5HGJZfqzA51IT294BVgi+dDHQPZZV/hxCkja0Snoir0G5jlY5MP/LZ3pfP9omg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgEG/PwJIdx7Ko+jIpahT3f/i6zaOe\\nmwQQrRRlpLt6mOkCIBqKyqTx+vQ/ZSAn8O5/2ha5QapW4tSA4Wgv+Axqg6TX\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:13 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:13 [DEBUG] Response body result: map[ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMxekNDQW42Z0F3SUJBZ0lVUFF6eHN3M2x2Q29ZRURWelNISkg2WUdSeUkwd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFUM1VwU0c5UHFHNEJSaWt5ME44Z2Z1TFJsZVJ4aVdYNnN3T2RTRTl2ZUEKVllJdm5ReDBEMldWZjRjUXBJMnRFcDZJcTlCdVk1V09URC95MmQ2WHovYUpvNElCRVRDQ0FRMHdEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZKTjJGbXpZMDVlWEFXUWtlcnlqCm81cHVpWWdPTUI4R0ExVWRJd1FZTUJhQUZEN3RBb0ZjL0hadUNnbXF2VkVMeXJnUkUyZVRNQ1FHQTFVZEVRUWQKTUJ1Q0dXTmhMWFJ2YjJ4ekxUWTVaRGM0T0RWbU9EWXRjMmhuWW5Fd2dZWUdDQ29EQkFVR0J3Z0JCSHA3SW1GMApkSEp6SWpwN0ltRmlZV011YVc1cGRDSTZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1VpTENKb1ppNUJabVpwCmJHbGhkR2x2YmlJNklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFIZGhiRzFoY25RdGJtVjAKSWl3aWFHWXVWSGx3WlNJNkltTnNhV1Z1ZENKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQjlaaWdqdXhPUwpaNFY4WFZ2ckZ4MjZlL0xta21CdGdQYi80cHFjNVBRaVd3SWdGUSs4VUdKSEcvN3FRRlhIY2cxMGZHWlJRYVJ3CjdLbDN1dC95YVhuSi9Faz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=]\n2020/11/08 13:17:13 [DEBUG] newEnrollmentResponse Admin@walmart-net\n2020/11/08 13:17:13 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/msp/signcerts/cert.pem\n2020/11/08 13:17:13 [INFO] Stored root CA certificate at /root/ca-tools/walmart/admin/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts\n+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem\n+ mkdir /root/ca-tools/walmart/admin/msp/admincerts\n+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:13 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:13 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200627e0}\n2020/11/08 13:17:13 [DEBUG] Entered runEnroll\n2020/11/08 13:17:13 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200627e0}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420062840 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203d7d90 DummyKeystore:<nil>}\n2020/11/08 13:17:13 [INFO] TLS Enabled\n2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:13 [DEBUG] Client Cert File: \n2020/11/08 13:17:13 [DEBUG] Client Key File: \n2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:13 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:13 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:13 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:13 [INFO] encoded CSR\n2020/11/08 13:17:13 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOPOuF+Zuvq0HikkhetnamO4\\nhbYKEKH4GubRlaGmoVAqnlt+wKtuYqgTd8DBwoYv2F74x58kW/6l6HfBvQaivPSg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhAI8CLkFtLboYeDjgQcREtGxnVofv\\nR+b89XRL7WlkNGI5AiAuzpFr8Vc6pT61Hked/uiLaNvvp2ixnx1c9UxtyKI1gQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:13 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:13 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5akNDQXAyZ0F3SUJBZ0lVRHhzVkVJaEpmczhwTUFhenJsTFVzV1hnZWI0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFUanpyaGZtYnI2dEI0cEpJWHJaMnBqdUlXMkNoQ2grQnJtMFpXaHBxRlEKS3A1YmZzQ3JibUtvRTNmQXdjS0dMOWhlK01lZkpGditwZWgzd2IwR29yejBvNElCTURDQ0FTd3dEZ1lEVlIwUApBUUgvQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CCkFmOEVBakFBTUIwR0ExVWREZ1FXQkJTVEx6ZVNpclVSVFhIaitBa1VuZ1FEREVSL3J6QWZCZ05WSFNNRUdEQVcKZ0JRKzdRS0JYUHgyYmdvSnFyMVJDOHE0RVJObmt6QWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRMwpPRGcxWmpnMkxYTm9aMkp4TUlHR0JnZ3FBd1FGQmdjSUFRUjZleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpCk9pSjBjblZsSWl3aVlXUnRhVzRpT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1ppNUYKYm5KdmJHeHRaVzUwU1VRaU9pSkJaRzFwYmtCM1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbApiblFpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ2VDMVpjYzFvZlFXMWFtcDB2a0hTbXFsL2dna1BMNUZGCjIyYW5IRml0SmZzQ0lFRlg0MW1IenViUldVNWdjWUhEc2wycW9PME9kMk1oTVhWdG40K1QwZERMCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:17:13 [DEBUG] newEnrollmentResponse Admin@walmart-net\n2020/11/08 13:17:13 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/tls/signcerts/cert.pem\n2020/11/08 13:17:13 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls\n+ cp /root/ca-tools/walmart/admin/tls/keystore/1cc1b5d05d12caf96c9a89182f164cbc437c202bea61a052b1118cf25d650a7a_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key\n+ cp /root/ca-tools/walmart/admin/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ fabric-ca-client enroll -d -u https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:13 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:13 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://walmart-admin:walmart-adminpw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420194870}",
        "2020/11/08 13:17:13 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:13 [DEBUG] Enrolling { Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:walmart-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{walmart-admin [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420194870}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201948d0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201ac1c0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:13 [INFO] TLS Enabled",
        "2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:13 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:13 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:13 [DEBUG] GenCSR &{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:13 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:13 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:13 [INFO] encoded CSR",
        "2020/11/08 13:17:13 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBRTCB7QIBADBUMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRYwFAYDVQQDEw13YWxtYXJ0LWFkbWlu\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErT6k8rHAoAoLFNgROCh7YbJzwwZP\\nlAcOn0XX+7fic5D576O1Or/cbFv5kHwJLcHc+WwjTZeAgZ6ZrVgBu3dv9qA3MDUG\\nCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2EtdG9vbHMtNjlkNzg4NWY4Ni1z\\naGdicTAKBggqhkjOPQQDAgNHADBEAiANiW75UOutkC+ALPcHf975KkUdl6ilTfhO\\nk1pUTiGHsQIgUgcL7l/JtqxnwwZsesW4uw1M8z+Y9GArmxWHZIf22Rc=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:13 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:13 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTRENDQWUrZ0F3SUJBZ0lVVWtOS0RqdW9peW00NnZWVDJkQVNZYkZLWXNZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OZDJGc2JXRnlkQzFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCSzArcFBLeHdLQUtDeFRZRVRnb2UyR3ljOE1HVDVRSERwOUYxL3UzNG5PUStlK2oKdFRxLzNHeGIrWkI4Q1MzQjNQbHNJMDJYZ0lHZW1hMVlBYnQzYi9hamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGQWhzMTZ5VHNBUmNoQXZwVW9Ld2Y2VzExb05LCk1COEdBMVVkSXdRWU1CYUFGRDd0QW9GYy9IWnVDZ21xdlZFTHlyZ1JFMmVUTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzJoblluRXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdXQ3Y2UGl1RApJOVZEMDk4TkIrUFYwcFFVbGxZeStXQkNMY1lwa1hmNWR0QUNJQ2JCdHRtN0FCRVdEdWtnSUtubzhUMTMrWGI1CkpCZXFtV1RoWVNuaGg1VlIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/08 13:17:13 [DEBUG] newEnrollmentResponse walmart-admin",
        "2020/11/08 13:17:13 [INFO] Stored client certificate at /root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 13:17:13 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-walmart/msp/cacerts/ca-walmart-net-7054.pem",
        "+ fabric-ca-client getcacert -d -u https://ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem -M /crypto-config/ordererOrganizations/walmart-net/msp",
        "2020/11/08 13:17:13 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:13 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/08 13:17:13 [DEBUG] Entered runGetCACert",
        "2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016be30 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420251fb0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:13 [INFO] TLS Enabled",
        "2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:13 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:13 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:13 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/cainfo",
        "{}",
        "2020/11/08 13:17:13 [DEBUG] Received response",
        "statusCode=200 (200 OK)",
        "2020/11/08 13:17:13 [DEBUG] Response body result: map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5]",
        "2020/11/08 13:17:13 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/msp/tlscacerts",
        "+ fabric-ca-client register -d --id.name Admin@walmart-net --id.secret Admin@walmart-net-pw --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:13 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:13 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:13 [DEBUG] Checking for enrollment",
        "2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b65d0}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b6630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bd5a0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:13 [INFO] TLS Enabled",
        "2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:13 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:13 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b65d0}",
        "2020/11/08 13:17:13 [DEBUG] Entered runRegister",
        "2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@walmart-net Type:client Secret:Admin@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true} {Name:abac.init Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b65d0}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b6630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bd5a0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:13 [INFO] TLS Enabled",
        "2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:13 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:13 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:13 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 13:17:13 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:17:13 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 13:17:13 [DEBUG] Register { Name:Admin@walmart-net Type:client Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Registrar.Roles client false} {hf.Registrar.Attributes * false} {hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true} {abac.init true true}] CAName:  }",
        "2020/11/08 13:17:13 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:17:13 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"Admin@walmart-net\",\"type\":\"client\",\"secret\":\"Admin@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"},{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true},{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true}]}",
        "2020/11/08 13:17:13 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:13 [DEBUG] Response body result: map[secret:Admin@walmart-net-pw]",
        "2020/11/08 13:17:13 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/admin --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:13 [DEBUG] Home directory: /root/ca-tools/walmart/admin",
        "2020/11/08 13:17:13 [INFO] Created a default configuration file at /root/ca-tools/walmart/admin/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7e0}",
        "2020/11/08 13:17:13 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:13 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42018e7e0}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42018e840 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201a42a0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:13 [INFO] TLS Enabled",
        "2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:13 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:13 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:13 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:13 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:13 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:13 [INFO] encoded CSR",
        "2020/11/08 13:17:13 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPdSlIb0+obgFGKTLQ3yB+4t\\nGV5HGJZfqzA51IT294BVgi+dDHQPZZV/hxCkja0Snoir0G5jlY5MP/LZ3pfP9omg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgEG/PwJIdx7Ko+jIpahT3f/i6zaOe\\nmwQQrRRlpLt6mOkCIBqKyqTx+vQ/ZSAn8O5/2ha5QapW4tSA4Wgv+Axqg6TX\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:13 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:13 [DEBUG] Response body result: map[ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMxekNDQW42Z0F3SUJBZ0lVUFF6eHN3M2x2Q29ZRURWelNISkg2WUdSeUkwd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFUM1VwU0c5UHFHNEJSaWt5ME44Z2Z1TFJsZVJ4aVdYNnN3T2RTRTl2ZUEKVllJdm5ReDBEMldWZjRjUXBJMnRFcDZJcTlCdVk1V09URC95MmQ2WHovYUpvNElCRVRDQ0FRMHdEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZKTjJGbXpZMDVlWEFXUWtlcnlqCm81cHVpWWdPTUI4R0ExVWRJd1FZTUJhQUZEN3RBb0ZjL0hadUNnbXF2VkVMeXJnUkUyZVRNQ1FHQTFVZEVRUWQKTUJ1Q0dXTmhMWFJ2YjJ4ekxUWTVaRGM0T0RWbU9EWXRjMmhuWW5Fd2dZWUdDQ29EQkFVR0J3Z0JCSHA3SW1GMApkSEp6SWpwN0ltRmlZV011YVc1cGRDSTZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1VpTENKb1ppNUJabVpwCmJHbGhkR2x2YmlJNklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFIZGhiRzFoY25RdGJtVjAKSWl3aWFHWXVWSGx3WlNJNkltTnNhV1Z1ZENKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQjlaaWdqdXhPUwpaNFY4WFZ2ckZ4MjZlL0xta21CdGdQYi80cHFjNVBRaVd3SWdGUSs4VUdKSEcvN3FRRlhIY2cxMGZHWlJRYVJ3CjdLbDN1dC95YVhuSi9Faz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=]",
        "2020/11/08 13:17:13 [DEBUG] newEnrollmentResponse Admin@walmart-net",
        "2020/11/08 13:17:13 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/msp/signcerts/cert.pem",
        "2020/11/08 13:17:13 [INFO] Stored root CA certificate at /root/ca-tools/walmart/admin/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/msp/admincerts",
        "+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem",
        "+ mkdir /root/ca-tools/walmart/admin/msp/admincerts",
        "+ cp /root/ca-tools/walmart/admin/msp/signcerts/cert.pem /root/ca-tools/walmart/admin/msp/admincerts/Admin@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ cp -R /root/ca-tools/walmart/admin/msp /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/admin/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:13 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:13 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:13 [DEBUG] Client configuration settings: &{URL:https://Admin@walmart-net:Admin@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200627e0}",
        "2020/11/08 13:17:13 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:13 [DEBUG] Enrolling { Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:13 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200627e0}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420062840 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:13 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203d7d90 DummyKeystore:<nil>}",
        "2020/11/08 13:17:13 [INFO] TLS Enabled",
        "2020/11/08 13:17:13 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:13 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:13 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:13 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:13 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:13 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:13 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:13 [INFO] encoded CSR",
        "2020/11/08 13:17:13 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFBZG1pbkB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOPOuF+Zuvq0HikkhetnamO4\\nhbYKEKH4GubRlaGmoVAqnlt+wKtuYqgTd8DBwoYv2F74x58kW/6l6HfBvQaivPSg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhAI8CLkFtLboYeDjgQcREtGxnVofv\\nR+b89XRL7WlkNGI5AiAuzpFr8Vc6pT61Hked/uiLaNvvp2ixnx1c9UxtyKI1gQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:13 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:13 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5akNDQXAyZ0F3SUJBZ0lVRHhzVkVJaEpmczhwTUFhenJsTFVzV1hnZWI0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1Ha3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVhTUJnR0ExVUVBd3dSUVdSdGFXNUFkMkZzYldGeWRDMXVaWFF3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFUanpyaGZtYnI2dEI0cEpJWHJaMnBqdUlXMkNoQ2grQnJtMFpXaHBxRlEKS3A1YmZzQ3JibUtvRTNmQXdjS0dMOWhlK01lZkpGditwZWgzd2IwR29yejBvNElCTURDQ0FTd3dEZ1lEVlIwUApBUUgvQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CCkFmOEVBakFBTUIwR0ExVWREZ1FXQkJTVEx6ZVNpclVSVFhIaitBa1VuZ1FEREVSL3J6QWZCZ05WSFNNRUdEQVcKZ0JRKzdRS0JYUHgyYmdvSnFyMVJDOHE0RVJObmt6QWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAyT1dRMwpPRGcxWmpnMkxYTm9aMkp4TUlHR0JnZ3FBd1FGQmdjSUFRUjZleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpCk9pSjBjblZsSWl3aVlXUnRhVzRpT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1ppNUYKYm5KdmJHeHRaVzUwU1VRaU9pSkJaRzFwYmtCM1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbApiblFpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ2VDMVpjYzFvZlFXMWFtcDB2a0hTbXFsL2dna1BMNUZGCjIyYW5IRml0SmZzQ0lFRlg0MW1IenViUldVNWdjWUhEc2wycW9PME9kMk1oTVhWdG40K1QwZERMCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:17:13 [DEBUG] newEnrollmentResponse Admin@walmart-net",
        "2020/11/08 13:17:13 [INFO] Stored client certificate at /root/ca-tools/walmart/admin/tls/signcerts/cert.pem",
        "2020/11/08 13:17:13 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/admin/tls/keystore/1cc1b5d05d12caf96c9a89182f164cbc437c202bea61a052b1118cf25d650a7a_sk /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key",
        "+ cp /root/ca-tools/walmart/admin/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/admin/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt",
        "+ cd /"
    ],
    "stdout": "Password: Admin@walmart-net-pw",
    "stdout_lines": [
        "Password: Admin@walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/common.yaml:48
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841433.844963-594-241240130064566 `" && echo ansible-tmp-1604841433.844963-594-241240130064566="` echo /root/.ansible/tmp/ansible-tmp-1604841433.844963-594-241240130064566 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpww0szsgq TO /root/.ansible/tmp/ansible-tmp-1604841433.844963-594-241240130064566/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841433.844963-594-241240130064566/ /root/.ansible/tmp/ansible-tmp-1604841433.844963-594-241240130064566/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841433.844963-594-241240130064566/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841433.844963-594-241240130064566/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.738174",
    "end": "2020-11-08 13:17:14.713114",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:13.974940",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Call orderer.yaml for each orderer] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml for localhost => (item={'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841434.907386-636-62716314434446 `" && echo ansible-tmp-1604841434.907386-636-62716314434446="` echo /root/.ansible/tmp/ansible-tmp-1604841434.907386-636-62716314434446 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphaa4j0kl TO /root/.ansible/tmp/ansible-tmp-1604841434.907386-636-62716314434446/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841434.907386-636-62716314434446/ /root/.ansible/tmp/ansible-tmp-1604841434.907386-636-62716314434446/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841434.907386-636-62716314434446/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841434.907386-636-62716314434446/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
    "delta": "0:00:00.056124",
    "end": "2020-11-08 13:17:15.096124",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:15.040000",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841435.1918309-672-212467255309189 `" && echo ansible-tmp-1604841435.1918309-672-212467255309189="` echo /root/.ansible/tmp/ansible-tmp-1604841435.1918309-672-212467255309189 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpe_uhd0b9 TO /root/.ansible/tmp/ansible-tmp-1604841435.1918309-672-212467255309189/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841435.1918309-672-212467255309189/ /root/.ansible/tmp/ansible-tmp-1604841435.1918309-672-212467255309189/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841435.1918309-672-212467255309189/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841435.1918309-672-212467255309189/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
    "delta": "0:00:00.059622",
    "end": "2020-11-08 13:17:15.382077",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:15.322455",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841435.5098703-710-12892006727011 `" && echo ansible-tmp-1604841435.5098703-710-12892006727011="` echo /root/.ansible/tmp/ansible-tmp-1604841435.5098703-710-12892006727011 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpgr5gttq5 TO /root/.ansible/tmp/ansible-tmp-1604841435.5098703-710-12892006727011/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841435.5098703-710-12892006727011/ /root/.ansible/tmp/ansible-tmp-1604841435.5098703-710-12892006727011/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841435.5098703-710-12892006727011/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841435.5098703-710-12892006727011/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.246115",
    "end": "2020-11-08 13:17:16.886489",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:15.640374",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841436.9517915-755-192245678366543 `" && echo ansible-tmp-1604841436.9517915-755-192245678366543="` echo /root/.ansible/tmp/ansible-tmp-1604841436.9517915-755-192245678366543 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpj13ihhpd TO /root/.ansible/tmp/ansible-tmp-1604841436.9517915-755-192245678366543/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841436.9517915-755-192245678366543/ /root/.ansible/tmp/ansible-tmp-1604841436.9517915-755-192245678366543/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841436.9517915-755-192245678366543/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841436.9517915-755-192245678366543/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841437.159173-783-187916907052186 `" && echo ansible-tmp-1604841437.159173-783-187916907052186="` echo /root/.ansible/tmp/ansible-tmp-1604841437.159173-783-187916907052186 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpshk3q718 TO /root/.ansible/tmp/ansible-tmp-1604841437.159173-783-187916907052186/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841437.159173-783-187916907052186/ /root/.ansible/tmp/ansible-tmp-1604841437.159173-783-187916907052186/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841437.159173-783-187916907052186/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841437.159173-783-187916907052186/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer1.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer1.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer1.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer1.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer1.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841437.333491-783-107266003662382 `" && echo ansible-tmp-1604841437.333491-783-107266003662382="` echo /root/.ansible/tmp/ansible-tmp-1604841437.333491-783-107266003662382 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbdce48u3 TO /root/.ansible/tmp/ansible-tmp-1604841437.333491-783-107266003662382/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841437.333491-783-107266003662382/ /root/.ansible/tmp/ansible-tmp-1604841437.333491-783-107266003662382/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841437.333491-783-107266003662382/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841437.333491-783-107266003662382/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841437.5347629-833-106118366962620 `" && echo ansible-tmp-1604841437.5347629-833-106118366962620="` echo /root/.ansible/tmp/ansible-tmp-1604841437.5347629-833-106118366962620 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp38_rxye_ TO /root/.ansible/tmp/ansible-tmp-1604841437.5347629-833-106118366962620/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841437.5347629-833-106118366962620/ /root/.ansible/tmp/ansible-tmp-1604841437.5347629-833-106118366962620/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841437.5347629-833-106118366962620/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841437.5347629-833-106118366962620/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.564460",
    "end": "2020-11-08 13:17:21.228781",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer1.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:17.664321",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841441.2996328-883-168950725812132 `" && echo ansible-tmp-1604841441.2996328-883-168950725812132="` echo /root/.ansible/tmp/ansible-tmp-1604841441.2996328-883-168950725812132 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpp1tyekmt TO /root/.ansible/tmp/ansible-tmp-1604841441.2996328-883-168950725812132/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841441.2996328-883-168950725812132/ /root/.ansible/tmp/ansible-tmp-1604841441.2996328-883-168950725812132/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841441.2996328-883-168950725812132/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841441.2996328-883-168950725812132/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.224319",
    "end": "2020-11-08 13:17:23.654385",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer1 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:21.430066",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer1.walmart-net\n+ CSR_HOSTS=orderer1.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:22 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:22 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 13:17:22 [DEBUG] Checking for enrollment\n2020/11/08 13:17:22 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378510}\n2020/11/08 13:17:22 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420378570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:22 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42009a960 DummyKeystore:<nil>}\n2020/11/08 13:17:22 [INFO] TLS Enabled\n2020/11/08 13:17:22 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:22 [DEBUG] Client Cert File: \n2020/11/08 13:17:22 [DEBUG] Client Key File: \n2020/11/08 13:17:22 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:22 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378510}\n2020/11/08 13:17:22 [DEBUG] Entered runRegister\n2020/11/08 13:17:22 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378510}\n2020/11/08 13:17:22 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420378570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:22 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42009a960 DummyKeystore:<nil>}\n2020/11/08 13:17:22 [INFO] TLS Enabled\n2020/11/08 13:17:22 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:22 [DEBUG] Client Cert File: \n2020/11/08 13:17:22 [DEBUG] Client Key File: \n2020/11/08 13:17:22 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:22 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 13:17:22 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:17:22 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 13:17:22 [DEBUG] Register { Name:orderer1.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 13:17:22 [DEBUG] Adding token-based authorization header\n2020/11/08 13:17:22 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer1.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer1.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/08 13:17:22 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:22 [DEBUG] Response body result: map[secret:orderer1.walmart-net-pw]\n2020/11/08 13:17:22 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:22 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:22 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e390}\n2020/11/08 13:17:22 [DEBUG] Entered runEnroll\n2020/11/08 13:17:22 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:22 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e390}\n2020/11/08 13:17:22 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039e3f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:22 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42018fb90 DummyKeystore:<nil>}\n2020/11/08 13:17:22 [INFO] TLS Enabled\n2020/11/08 13:17:22 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:22 [DEBUG] Client Cert File: \n2020/11/08 13:17:22 [DEBUG] Client Key File: \n2020/11/08 13:17:22 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:22 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:22 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:22 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:22 [INFO] encoded CSR\n2020/11/08 13:17:22 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQoGnb7NNcBtiAD58Gp\\nnGv7OuJGLZh0ryMc/qU5J6moK/XYCTIbPy0hUnilTn8DB/cOZq6zTCu3ykPI4DOP\\nDZ0PoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEAgCu/2YyHU6gcuiZe/Wl3lBMcNHbM1anB\\n2SuBEtZuB8MCIFe6VQbobktsy05YzlqpkbznuFjMybuu3HAWPn4T5Sua\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:22 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:22 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQXFTZ0F3SUJBZ0lVWVIrVWpSK2VNNTFyVmQ2OFZtZDA2Ymtkb3A0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUtCcDIrelRYQWJZZ0ErZkJxWnhyK3pyaVJpMllkSzhqSFA2bE9TZXAKcUN2MTJBa3lHejh0SVZKNHBVNS9Bd2YzRG1hdXMwd3J0OHBEeU9Bemp3MmRENk9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVXpYZk9nZGFydG1hL2lPSlVXZTNnRlJ5WHA4c3dId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDRDhFN05GcjBSQ2lGOG5yaUF6NjkrCmw3QmlEdUJ4TURlUXJMQjJTVHFFcFFJZ1dZemhCKzJ1cnNObW1LeUc3RjJ3K3JnREV5VnZFanJwUk5jNzBPYTgKYzhrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/08 13:17:22 [DEBUG] newEnrollmentResponse orderer1.walmart-net\n2020/11/08 13:17:22 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/08 13:17:22 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/9a78136103480c31c626f4ae33b30a714a366ac4e19bc6aa6be37b2365e304a5_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:22 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:22 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392660}\n2020/11/08 13:17:22 [DEBUG] Entered runEnroll\n2020/11/08 13:17:22 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:22 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392660}\n2020/11/08 13:17:22 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203926c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:22 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200aba10 DummyKeystore:<nil>}\n2020/11/08 13:17:22 [INFO] TLS Enabled\n2020/11/08 13:17:22 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:22 [DEBUG] Client Cert File: \n2020/11/08 13:17:22 [DEBUG] Client Key File: \n2020/11/08 13:17:22 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:22 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:22 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:22 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:22 [INFO] encoded CSR\n2020/11/08 13:17:22 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCau9a8nblWUn+nug10J\\nYEairYCoAn2pDBELa5G8aLLH1JsGRkoRGahFBpSchIyMyjnH3Vwcp922NTjKZyJs\\n22GgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgM0k61WKRvVVds6Nia60KZG2f\\n+01y6ljUZea5vjCcrhsCICb0nyDTsoHapsBMYe2gGUPmiLX5iUgu87/QPTA3Z5K1\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:22 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:22 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVY2ZYWUwyNmMvVXNWNjlMc1o3R2JJbWRhMWs0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUpxNzFyeWR1VlpTZjZlNkRYUWxnUnFLdGdLZ0NmYWtNRVF0cmtieG8Kc3NmVW13WkdTaEVacUVVR2xKeUVqSXpLT2NmZFhCeW4zYlkxT01wbkltemJZYU9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWhBbkhTUjZ5MU5uMk1wbzQzZzZHCmFCVDFxVW93SHdZRFZSMGpCQmd3Rm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXphR2RpY1RCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXhMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBSkxQZDN0Um0zY05FRGJQL2tCUzFVTUZTbitrdHZPWlQxdVJqTmtHbTNoMkFpQnJYS2ZodC94dQpTN3dhSHFhekVGQVRkc00rNGU5VmpnZW14S0FRb3JOREZBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:17:22 [DEBUG] newEnrollmentResponse orderer1.walmart-net\n2020/11/08 13:17:22 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem\n2020/11/08 13:17:22 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer1s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer1 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer1 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:23 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:23 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 13:17:23 [DEBUG] Checking for enrollment\n2020/11/08 13:17:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c630}\n2020/11/08 13:17:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028c690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb7f0 DummyKeystore:<nil>}\n2020/11/08 13:17:23 [INFO] TLS Enabled\n2020/11/08 13:17:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:23 [DEBUG] Client Cert File: \n2020/11/08 13:17:23 [DEBUG] Client Key File: \n2020/11/08 13:17:23 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:23 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c630}\n2020/11/08 13:17:23 [DEBUG] Entered runRegister\n2020/11/08 13:17:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c630}\n2020/11/08 13:17:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028c690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb7f0 DummyKeystore:<nil>}\n2020/11/08 13:17:23 [INFO] TLS Enabled\n2020/11/08 13:17:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:23 [DEBUG] Client Cert File: \n2020/11/08 13:17:23 [DEBUG] Client Key File: \n2020/11/08 13:17:23 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:23 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 13:17:23 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:17:23 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 13:17:23 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/08 13:17:23 [DEBUG] Adding token-based authorization header\n2020/11/08 13:17:23 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/08 13:17:23 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:23 [DEBUG] Response body result: map[secret:User1@walmart-net-pw]\n2020/11/08 13:17:23 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/08 13:17:23 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/08 13:17:23 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml\n2020/11/08 13:17:23 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420298840}\n2020/11/08 13:17:23 [DEBUG] Entered runEnroll\n2020/11/08 13:17:23 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420298840}\n2020/11/08 13:17:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4202988a0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202b0680 DummyKeystore:<nil>}\n2020/11/08 13:17:23 [INFO] TLS Enabled\n2020/11/08 13:17:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:23 [DEBUG] Client Cert File: \n2020/11/08 13:17:23 [DEBUG] Client Key File: \n2020/11/08 13:17:23 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:23 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:23 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:23 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:23 [INFO] encoded CSR\n2020/11/08 13:17:23 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABE9YBZRNeWF5fP26mAtZdMC3\\ny9l8qIHjT+eZFmASHFC0BS1W+tJDSySEIVmFkL2OzZPsCjAdBRZVaxXBOznvp9ig\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgcaEf/7mt8POO5y699UnilvpUkfmN\\nZ439rzH16oTa0AwCIF2pbC8QiIarJuwRdAaE7RN8MMpa9e7sIXmfhhpp1tw9\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:23 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:23 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVY2d5dE5EeEJsT2VIaDJ0OVc5b0ZmNExRbGF3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFVDFnRmxFMTVZWGw4L2JxWUMxbDB3TGZMMlh5b2dlTlA1NWtXWUJJY1VMUUYKTFZiNjBrTkxKSVFoV1lXUXZZN05rK3dLTUIwRkZsVnJGY0U3T2UrbjJLT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVblZBZVRnRUJqeHZFT3lNYmo4WEU1eVJsCkZ0SXdId1lEVlIwakJCZ3dGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKSkJiblVBMm5EejBWejJGdFRlYWVXT1lTVTc2RmY3V2hzMnI1NmNDS29mQUNJSE5EenA5VnJzSkI2UHNVUTFPNQp0eFVaNUFINVdxT0VPU3J4SDVXMHpPOHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:17:23 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 13:17:23 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/08 13:17:23 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/08 13:17:23 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:23 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205e0690}\n2020/11/08 13:17:23 [DEBUG] Entered runEnroll\n2020/11/08 13:17:23 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205e0690}\n2020/11/08 13:17:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205e06f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202920e0 DummyKeystore:<nil>}\n2020/11/08 13:17:23 [INFO] TLS Enabled\n2020/11/08 13:17:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:23 [DEBUG] Client Cert File: \n2020/11/08 13:17:23 [DEBUG] Client Key File: \n2020/11/08 13:17:23 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:23 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:23 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:23 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:23 [INFO] encoded CSR\n2020/11/08 13:17:23 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBNMDFsoXXtaKjXRGb8yDf3CttQQ16IaaDmwuA/Nq+JCvoPETKKcp16oUWeSLf9es\\nLwuMFM1dA9ZXujW8uirW6tugNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgILeB\\nTLTDilyzYYeZ/xrP3Q8SQJa3F6oLb5WCpY0mA3QCIBWNScx6oOjD1ftIec5+vuS3\\nm244sORb2Wf0FAR/EW5t\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:23 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:23 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6ekNDQW5hZ0F3SUJBZ0lVZFZuZ01naGhvR2l2L04wdzZDRzdudEk3QjZnd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMHdNV3loZGUxb3FOZEVadnpJTi9jSzIxQkRYb2hwb09iQzREODJyNGtLK2cKOFJNb3B5blhxaFJaNUl0LzE2d3ZDNHdVelYwRDFsZTZOYnk2S3RicTI2T0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVRkFCSzZtZFpGbllXZDQyZStnaHNndkttaTJZd0h3WURWUjBqQkJnd0ZvQVUKUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdUcFJsNXplVEFvWFRGdnQwT0dxQgpxY2ZUSWdhSGtjWnhEdmU4ZjR2Uko1RUNJQ2RYZmVqMXVjYWVkTkNuL3lqdWJ6ZjdIL3ZLbWtjRnRNMG15WExmClZTT0kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K]]\n2020/11/08 13:17:23 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 13:17:23 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/08 13:17:23 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/0d9ae0f8ed0d0d3f2933d9a23d015415ebea4d1227284f147186ad8719988671_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer1.walmart-net",
        "+ CSR_HOSTS=orderer1.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer1.walmart-net --id.secret orderer1.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:22 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:22 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:22 [DEBUG] Checking for enrollment",
        "2020/11/08 13:17:22 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378510}",
        "2020/11/08 13:17:22 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420378570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:22 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42009a960 DummyKeystore:<nil>}",
        "2020/11/08 13:17:22 [INFO] TLS Enabled",
        "2020/11/08 13:17:22 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:22 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:22 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:22 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:22 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378510}",
        "2020/11/08 13:17:22 [DEBUG] Entered runRegister",
        "2020/11/08 13:17:22 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer1.walmart-net Type:peer Secret:orderer1.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420378510}",
        "2020/11/08 13:17:22 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420378570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:22 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42009a960 DummyKeystore:<nil>}",
        "2020/11/08 13:17:22 [INFO] TLS Enabled",
        "2020/11/08 13:17:22 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:22 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:22 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:22 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:22 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 13:17:22 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:17:22 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 13:17:22 [DEBUG] Register { Name:orderer1.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 13:17:22 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:17:22 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer1.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer1.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 13:17:22 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:22 [DEBUG] Response body result: map[secret:orderer1.walmart-net-pw]",
        "2020/11/08 13:17:22 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:22 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:22 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e390}",
        "2020/11/08 13:17:22 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:22 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:22 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039e390}",
        "2020/11/08 13:17:22 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039e3f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:22 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42018fb90 DummyKeystore:<nil>}",
        "2020/11/08 13:17:22 [INFO] TLS Enabled",
        "2020/11/08 13:17:22 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:22 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:22 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:22 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:22 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer1.walmart-net orderer1.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:22 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:22 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:22 [INFO] encoded CSR",
        "2020/11/08 13:17:22 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer1.walmart-net\",\"orderer1.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjEud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQoGnb7NNcBtiAD58Gp\\nnGv7OuJGLZh0ryMc/qU5J6moK/XYCTIbPy0hUnilTn8DB/cOZq6zTCu3ykPI4DOP\\nDZ0PoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEAgCu/2YyHU6gcuiZe/Wl3lBMcNHbM1anB\\n2SuBEtZuB8MCIFe6VQbobktsy05YzlqpkbznuFjMybuu3HAWPn4T5Sua\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:22 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:22 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQXFTZ0F3SUJBZ0lVWVIrVWpSK2VNNTFyVmQ2OFZtZDA2Ymtkb3A0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUtCcDIrelRYQWJZZ0ErZkJxWnhyK3pyaVJpMllkSzhqSFA2bE9TZXAKcUN2MTJBa3lHejh0SVZKNHBVNS9Bd2YzRG1hdXMwd3J0OHBEeU9Bemp3MmRENk9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVXpYZk9nZGFydG1hL2lPSlVXZTNnRlJ5WHA4c3dId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakV1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TVM1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDRDhFN05GcjBSQ2lGOG5yaUF6NjkrCmw3QmlEdUJ4TURlUXJMQjJTVHFFcFFJZ1dZemhCKzJ1cnNObW1LeUc3RjJ3K3JnREV5VnZFanJwUk5jNzBPYTgKYzhrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/08 13:17:22 [DEBUG] newEnrollmentResponse orderer1.walmart-net",
        "2020/11/08 13:17:22 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/08 13:17:22 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/9a78136103480c31c626f4ae33b30a714a366ac4e19bc6aa6be37b2365e304a5_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:22 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:22 [DEBUG] Client configuration settings: &{URL:https://orderer1.walmart-net:orderer1.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392660}",
        "2020/11/08 13:17:22 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:22 [DEBUG] Enrolling { Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:22 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer1.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392660}",
        "2020/11/08 13:17:22 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203926c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:22 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200aba10 DummyKeystore:<nil>}",
        "2020/11/08 13:17:22 [INFO] TLS Enabled",
        "2020/11/08 13:17:22 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:22 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:22 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:22 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:22 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:22 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:22 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:22 [INFO] encoded CSR",
        "2020/11/08 13:17:22 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMS53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCau9a8nblWUn+nug10J\\nYEairYCoAn2pDBELa5G8aLLH1JsGRkoRGahFBpSchIyMyjnH3Vwcp922NTjKZyJs\\n22GgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgM0k61WKRvVVds6Nia60KZG2f\\n+01y6ljUZea5vjCcrhsCICb0nyDTsoHapsBMYe2gGUPmiLX5iUgu87/QPTA3Z5K1\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:22 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:22 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVY2ZYWUwyNmMvVXNWNjlMc1o3R2JJbWRhMWs0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXhMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUpxNzFyeWR1VlpTZjZlNkRYUWxnUnFLdGdLZ0NmYWtNRVF0cmtieG8Kc3NmVW13WkdTaEVacUVVR2xKeUVqSXpLT2NmZFhCeW4zYlkxT01wbkltemJZYU9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWhBbkhTUjZ5MU5uMk1wbzQzZzZHCmFCVDFxVW93SHdZRFZSMGpCQmd3Rm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXphR2RpY1RCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXhMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBSkxQZDN0Um0zY05FRGJQL2tCUzFVTUZTbitrdHZPWlQxdVJqTmtHbTNoMkFpQnJYS2ZodC94dQpTN3dhSHFhekVGQVRkc00rNGU5VmpnZW14S0FRb3JOREZBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:17:22 [DEBUG] newEnrollmentResponse orderer1.walmart-net",
        "2020/11/08 13:17:22 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem",
        "2020/11/08 13:17:22 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer1s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer1 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer1 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:23 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:23 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:23 [DEBUG] Checking for enrollment",
        "2020/11/08 13:17:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c630}",
        "2020/11/08 13:17:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028c690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb7f0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:23 [INFO] TLS Enabled",
        "2020/11/08 13:17:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:23 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:23 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:23 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:23 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c630}",
        "2020/11/08 13:17:23 [DEBUG] Entered runRegister",
        "2020/11/08 13:17:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42028c630}",
        "2020/11/08 13:17:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42028c690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bb7f0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:23 [INFO] TLS Enabled",
        "2020/11/08 13:17:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:23 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:23 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:23 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:23 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 13:17:23 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:17:23 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 13:17:23 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/08 13:17:23 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:17:23 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/08 13:17:23 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:23 [DEBUG] Response body result: map[secret:User1@walmart-net-pw]",
        "2020/11/08 13:17:23 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/08 13:17:23 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/08 13:17:23 [INFO] Created a default configuration file at /root/ca-tools/walmart/client1/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:23 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420298840}",
        "2020/11/08 13:17:23 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:23 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420298840}",
        "2020/11/08 13:17:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4202988a0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202b0680 DummyKeystore:<nil>}",
        "2020/11/08 13:17:23 [INFO] TLS Enabled",
        "2020/11/08 13:17:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:23 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:23 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:23 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:23 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:23 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:23 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:23 [INFO] encoded CSR",
        "2020/11/08 13:17:23 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABE9YBZRNeWF5fP26mAtZdMC3\\ny9l8qIHjT+eZFmASHFC0BS1W+tJDSySEIVmFkL2OzZPsCjAdBRZVaxXBOznvp9ig\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgcaEf/7mt8POO5y699UnilvpUkfmN\\nZ439rzH16oTa0AwCIF2pbC8QiIarJuwRdAaE7RN8MMpa9e7sIXmfhhpp1tw9\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:23 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:23 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVY2d5dE5EeEJsT2VIaDJ0OVc5b0ZmNExRbGF3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFVDFnRmxFMTVZWGw4L2JxWUMxbDB3TGZMMlh5b2dlTlA1NWtXWUJJY1VMUUYKTFZiNjBrTkxKSVFoV1lXUXZZN05rK3dLTUIwRkZsVnJGY0U3T2UrbjJLT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVblZBZVRnRUJqeHZFT3lNYmo4WEU1eVJsCkZ0SXdId1lEVlIwakJCZ3dGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKSkJiblVBMm5EejBWejJGdFRlYWVXT1lTVTc2RmY3V2hzMnI1NmNDS29mQUNJSE5EenA5VnJzSkI2UHNVUTFPNQp0eFVaNUFINVdxT0VPU3J4SDVXMHpPOHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:17:23 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 13:17:23 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/08 13:17:23 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/08 13:17:23 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:23 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205e0690}",
        "2020/11/08 13:17:23 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:23 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:23 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205e0690}",
        "2020/11/08 13:17:23 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205e06f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:23 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4202920e0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:23 [INFO] TLS Enabled",
        "2020/11/08 13:17:23 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:23 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:23 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:23 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:23 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:23 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:23 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:23 [INFO] encoded CSR",
        "2020/11/08 13:17:23 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBWzCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBNMDFsoXXtaKjXRGb8yDf3CttQQ16IaaDmwuA/Nq+JCvoPETKKcp16oUWeSLf9es\\nLwuMFM1dA9ZXujW8uirW6tugNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgILeB\\nTLTDilyzYYeZ/xrP3Q8SQJa3F6oLb5WCpY0mA3QCIBWNScx6oOjD1ftIec5+vuS3\\nm244sORb2Wf0FAR/EW5t\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:23 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:23 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6ekNDQW5hZ0F3SUJBZ0lVZFZuZ01naGhvR2l2L04wdzZDRzdudEk3QjZnd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFeU1EQmFGdzB5TVRFeE1EZ3hNekUzTURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMHdNV3loZGUxb3FOZEVadnpJTi9jSzIxQkRYb2hwb09iQzREODJyNGtLK2cKOFJNb3B5blhxaFJaNUl0LzE2d3ZDNHdVelYwRDFsZTZOYnk2S3RicTI2T0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVRkFCSzZtZFpGbllXZDQyZStnaHNndkttaTJZd0h3WURWUjBqQkJnd0ZvQVUKUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdUcFJsNXplVEFvWFRGdnQwT0dxQgpxY2ZUSWdhSGtjWnhEdmU4ZjR2Uko1RUNJQ2RYZmVqMXVjYWVkTkNuL3lqdWJ6ZjdIL3ZLbWtjRnRNMG15WExmClZTT0kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K]]",
        "2020/11/08 13:17:23 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 13:17:23 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/08 13:17:23 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/0d9ae0f8ed0d0d3f2933d9a23d015415ebea4d1227284f147186ad8719988671_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer1.walmart-net-pw\nPassword: User1@walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer1.walmart-net with csr hosts orderer1.walmart-net,orderer1.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer1.walmart-net-pw",
        "Password: User1@walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841443.7249677-928-76379556498018 `" && echo ansible-tmp-1604841443.7249677-928-76379556498018="` echo /root/.ansible/tmp/ansible-tmp-1604841443.7249677-928-76379556498018 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpu7cx7q99 TO /root/.ansible/tmp/ansible-tmp-1604841443.7249677-928-76379556498018/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841443.7249677-928-76379556498018/ /root/.ansible/tmp/ansible-tmp-1604841443.7249677-928-76379556498018/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841443.7249677-928-76379556498018/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841443.7249677-928-76379556498018/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.719339",
    "end": "2020-11-08 13:17:24.576015",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:23.856676",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841444.6479971-968-267107184881495 `" && echo ansible-tmp-1604841444.6479971-968-267107184881495="` echo /root/.ansible/tmp/ansible-tmp-1604841444.6479971-968-267107184881495 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpz3aih6zy TO /root/.ansible/tmp/ansible-tmp-1604841444.6479971-968-267107184881495/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841444.6479971-968-267107184881495/ /root/.ansible/tmp/ansible-tmp-1604841444.6479971-968-267107184881495/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841444.6479971-968-267107184881495/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841444.6479971-968-267107184881495/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.121072",
    "end": "2020-11-08 13:17:24.899485",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:24.778413",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841444.9692268-1021-129382165099724 `" && echo ansible-tmp-1604841444.9692268-1021-129382165099724="` echo /root/.ansible/tmp/ansible-tmp-1604841444.9692268-1021-129382165099724 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpe23o7vd1 TO /root/.ansible/tmp/ansible-tmp-1604841444.9692268-1021-129382165099724/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841444.9692268-1021-129382165099724/ /root/.ansible/tmp/ansible-tmp-1604841444.9692268-1021-129382165099724/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841444.9692268-1021-129382165099724/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841444.9692268-1021-129382165099724/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer1-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5RENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9EUTVXaGNOTWpNd09EQXpNRGd5Ck9EUTVXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TVM1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFkCmFncTQ3ZjdueVp6eHZRVnM5UjRoV0VQeHVpZk1HZEttRVFveW52NVUrWDNlRndLYytQSkZPekJKNnlQMVBlRXIKbENGWHR2ZmxTYzYzb1dXOHpqMGhvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVVJqNWFNMDRUd3dCSk43SG9oWjhpbmpQcDdWNHdDZ1lJS29aSXpqMEVBd0lEClJ3QXdSQUlnUVVtNmRUNG41VlErT0I3TXMxckFtNVV6ZzNwS1hzNmlicnBJbUVTWkU2OENJQWw2d3I4enUrMFEKT011VTBTREZVMjhKamZjSnFQb1hBLzc3ZFlTRHhHNWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjhEQ0NBWmFnQXdJQkFnSVVNemhzd2VRL1l4R1RBbHFkUDFpdmtNWXg4NzB3Q2dZSUtvWkl6ajBFQXdJdwpWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEVlFRRERBcGpZUzUzWVd4dFlYSjBNQjRYRFRJd01URXcKTmpBNE1Ua3hObG9YRFRJek1EZ3lOekE0TVRreE5sb3dWakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTQpCa3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1STXdFUVlEClZRUUREQXBqWVM1M1lXeHRZWEowTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFeG9JdDhlWisKOVhHQ0M3VzdMbEdVK2lVUTV2bmFxem1PczF0Snc2anZMYm40ZDlLTk56NHVuclg1LzViM3E0WWtMeEpZT3poTQpYYzd3N3JwbXFLV0VzcU5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBYVl3CkhRWURWUjBPQkJZRUZKNGlUblB4dk1wbVNLSXFkN2ZmaG5tQzhNOEFNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUMKSVFEZ3dQZlFZTVBDYjJiaXdma09UNVZkVnVFUkh2SWdidGxrdHpWVkZCTjl0Z0lnTmw0T3AyVEdIT1kwcXRoRAp2dENDMUNvMGhEbHZKTGVyYUxwYlYxdGtHVGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVjRXFDbXgycWJFcnQyZmd0ODZhR2ZGWVdZcGx2Z2pQK00yREpqL2pwdnlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSFdvS3VPMys1OG1jOGIwRmJQVWVJVmhEOGJvbnpCblNwaEVLTXA3K1ZQbDkzaGNDblBqeQpSVHN3U2VzajlUM2hLNVFoVjdiMzVVbk90NkZsdk00OUlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:28:49Z",
                "name": "orderer1-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408734",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer1-walmart-net-ambassador-certs",
                "uid": "a5a7499f-2fa9-4ba5-9662-97fa6bef6281"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841445.5783744-1049-187525259663614 `" && echo ansible-tmp-1604841445.5783744-1049-187525259663614="` echo /root/.ansible/tmp/ansible-tmp-1604841445.5783744-1049-187525259663614 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdzfy01ps TO /root/.ansible/tmp/ansible-tmp-1604841445.5783744-1049-187525259663614/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841445.5783744-1049-187525259663614/ /root/.ansible/tmp/ansible-tmp-1604841445.5783744-1049-187525259663614/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841445.5783744-1049-187525259663614/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841445.5783744-1049-187525259663614/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
    "delta": "0:00:00.089977",
    "end": "2020-11-08 13:17:25.799445",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:25.709468",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841445.9605148-1089-213268525422763 `" && echo ansible-tmp-1604841445.9605148-1089-213268525422763="` echo /root/.ansible/tmp/ansible-tmp-1604841445.9605148-1089-213268525422763 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmph65g2ft7 TO /root/.ansible/tmp/ansible-tmp-1604841445.9605148-1089-213268525422763/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841445.9605148-1089-213268525422763/ /root/.ansible/tmp/ansible-tmp-1604841445.9605148-1089-213268525422763/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841445.9605148-1089-213268525422763/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841445.9605148-1089-213268525422763/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
    "delta": "0:00:00.051443",
    "end": "2020-11-08 13:17:26.142383",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:26.090940",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer1-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer1"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841446.2059417-1128-148114997214014 `" && echo ansible-tmp-1604841446.2059417-1128-148114997214014="` echo /root/.ansible/tmp/ansible-tmp-1604841446.2059417-1128-148114997214014 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpiqj1lz__ TO /root/.ansible/tmp/ansible-tmp-1604841446.2059417-1128-148114997214014/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841446.2059417-1128-148114997214014/ /root/.ansible/tmp/ansible-tmp-1604841446.2059417-1128-148114997214014/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841446.2059417-1128-148114997214014/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841446.2059417-1128-148114997214014/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
    "delta": "0:00:00.053413",
    "end": "2020-11-08 13:17:26.390665",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:26.337252",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841446.4826233-1165-28937127031220 `" && echo ansible-tmp-1604841446.4826233-1165-28937127031220="` echo /root/.ansible/tmp/ansible-tmp-1604841446.4826233-1165-28937127031220 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwy5_46xv TO /root/.ansible/tmp/ansible-tmp-1604841446.4826233-1165-28937127031220/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841446.4826233-1165-28937127031220/ /root/.ansible/tmp/ansible-tmp-1604841446.4826233-1165-28937127031220/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841446.4826233-1165-28937127031220/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841446.4826233-1165-28937127031220/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
    "delta": "0:00:00.053115",
    "end": "2020-11-08 13:17:26.665794",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:26.612679",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841446.7929654-1203-34117159326307 `" && echo ansible-tmp-1604841446.7929654-1203-34117159326307="` echo /root/.ansible/tmp/ansible-tmp-1604841446.7929654-1203-34117159326307 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp0qos81jq TO /root/.ansible/tmp/ansible-tmp-1604841446.7929654-1203-34117159326307/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841446.7929654-1203-34117159326307/ /root/.ansible/tmp/ansible-tmp-1604841446.7929654-1203-34117159326307/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841446.7929654-1203-34117159326307/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841446.7929654-1203-34117159326307/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.371860",
    "end": "2020-11-08 13:17:28.294877",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:26.923017",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841448.3591468-1249-136552131600787 `" && echo ansible-tmp-1604841448.3591468-1249-136552131600787="` echo /root/.ansible/tmp/ansible-tmp-1604841448.3591468-1249-136552131600787 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpvlfetlbu TO /root/.ansible/tmp/ansible-tmp-1604841448.3591468-1249-136552131600787/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841448.3591468-1249-136552131600787/ /root/.ansible/tmp/ansible-tmp-1604841448.3591468-1249-136552131600787/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841448.3591468-1249-136552131600787/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841448.3591468-1249-136552131600787/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841448.5611365-1275-48219141809442 `" && echo ansible-tmp-1604841448.5611365-1275-48219141809442="` echo /root/.ansible/tmp/ansible-tmp-1604841448.5611365-1275-48219141809442 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpu_jkmn4f TO /root/.ansible/tmp/ansible-tmp-1604841448.5611365-1275-48219141809442/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841448.5611365-1275-48219141809442/ /root/.ansible/tmp/ansible-tmp-1604841448.5611365-1275-48219141809442/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841448.5611365-1275-48219141809442/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841448.5611365-1275-48219141809442/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer2.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer2.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer2.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer2.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer2.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841448.7382545-1275-150356307384682 `" && echo ansible-tmp-1604841448.7382545-1275-150356307384682="` echo /root/.ansible/tmp/ansible-tmp-1604841448.7382545-1275-150356307384682 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5lzyv6uo TO /root/.ansible/tmp/ansible-tmp-1604841448.7382545-1275-150356307384682/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841448.7382545-1275-150356307384682/ /root/.ansible/tmp/ansible-tmp-1604841448.7382545-1275-150356307384682/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841448.7382545-1275-150356307384682/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841448.7382545-1275-150356307384682/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841448.9462912-1325-198031635195168 `" && echo ansible-tmp-1604841448.9462912-1325-198031635195168="` echo /root/.ansible/tmp/ansible-tmp-1604841448.9462912-1325-198031635195168 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmppet740bh TO /root/.ansible/tmp/ansible-tmp-1604841448.9462912-1325-198031635195168/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841448.9462912-1325-198031635195168/ /root/.ansible/tmp/ansible-tmp-1604841448.9462912-1325-198031635195168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841448.9462912-1325-198031635195168/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841448.9462912-1325-198031635195168/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.736157",
    "end": "2020-11-08 13:17:32.813182",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer2.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:29.077025",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841452.8819478-1375-230072139595707 `" && echo ansible-tmp-1604841452.8819478-1375-230072139595707="` echo /root/.ansible/tmp/ansible-tmp-1604841452.8819478-1375-230072139595707 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzke4hzpb TO /root/.ansible/tmp/ansible-tmp-1604841452.8819478-1375-230072139595707/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841452.8819478-1375-230072139595707/ /root/.ansible/tmp/ansible-tmp-1604841452.8819478-1375-230072139595707/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841452.8819478-1375-230072139595707/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841452.8819478-1375-230072139595707/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.076353",
    "end": "2020-11-08 13:17:35.088885",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer2 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:33.012532",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer2.walmart-net\n+ CSR_HOSTS=orderer2.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:33 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:33 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 13:17:33 [DEBUG] Checking for enrollment\n2020/11/08 13:17:33 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038e5d0}\n2020/11/08 13:17:33 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038e630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:33 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398f30 DummyKeystore:<nil>}\n2020/11/08 13:17:33 [INFO] TLS Enabled\n2020/11/08 13:17:33 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:33 [DEBUG] Client Cert File: \n2020/11/08 13:17:33 [DEBUG] Client Key File: \n2020/11/08 13:17:33 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:33 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038e5d0}\n2020/11/08 13:17:33 [DEBUG] Entered runRegister\n2020/11/08 13:17:33 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038e5d0}\n2020/11/08 13:17:33 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038e630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:33 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398f30 DummyKeystore:<nil>}\n2020/11/08 13:17:33 [INFO] TLS Enabled\n2020/11/08 13:17:33 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:33 [DEBUG] Client Cert File: \n2020/11/08 13:17:33 [DEBUG] Client Key File: \n2020/11/08 13:17:33 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:33 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 13:17:33 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:17:33 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 13:17:33 [DEBUG] Register { Name:orderer2.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 13:17:33 [DEBUG] Adding token-based authorization header\n2020/11/08 13:17:33 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer2.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer2.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/08 13:17:33 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:33 [DEBUG] Response body result: map[secret:orderer2.walmart-net-pw]\n2020/11/08 13:17:33 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:33 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:33 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c25d0}\n2020/11/08 13:17:33 [DEBUG] Entered runEnroll\n2020/11/08 13:17:33 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:33 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c25d0}\n2020/11/08 13:17:33 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2630 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:33 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396ec0 DummyKeystore:<nil>}\n2020/11/08 13:17:33 [INFO] TLS Enabled\n2020/11/08 13:17:33 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:33 [DEBUG] Client Cert File: \n2020/11/08 13:17:33 [DEBUG] Client Key File: \n2020/11/08 13:17:33 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:33 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:33 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:33 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:33 [INFO] encoded CSR\n2020/11/08 13:17:33 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQlq4+PCzjh+ssSu9Yf\\nchVzWDRQBw3sAGDfCwlZuZ4ETg0ncr8nuFZ3sv9g7bMVE6FoV9C0YTb1TafDunU+\\nqcF2oF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEA3zrAoJxkpYJ+w14DqtWejIK+AAo7pamP\\nFvHA3zqt39YCIDfBvTr1S0c7EOvbZ9pzDYZqiDwnCkXZrKrOPs8cCwUr\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:33 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:33 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVlBmUGZYT1NoREhhMmZHa2REOGw4ZHhnS0VFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUphdVBqd3M0NGZyTEVydldIM0lWYzFnMFVBY043QUJnM3dzSldibWUKQkU0TkozSy9KN2hXZDdML1lPMnpGUk9oYUZmUXRHRTI5VTJudzdwMVBxbkJkcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVYzeFI5TXkzYS9kUi9iSnhUQXF2RmEwZG5Jc3dId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUNpWmxUdUNoQVgvM2hpdkRZbjRxb2tYCmhkQ2JWSkhRTXJwbGxIT21TOFZyQWlCbkVuR01QM0hRSUk4L3Z4R2VMeTh6bldXazZta1Q0bFFaZk5KUElyaVUKSHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]\n2020/11/08 13:17:33 [DEBUG] newEnrollmentResponse orderer2.walmart-net\n2020/11/08 13:17:33 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/08 13:17:33 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/8e61577d832d442439522ad5c1ef7f0e3f56922faaf04fc559d76cb4209a1aef_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:33 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:33 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203946f0}\n2020/11/08 13:17:33 [DEBUG] Entered runEnroll\n2020/11/08 13:17:33 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:33 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203946f0}\n2020/11/08 13:17:33 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420394750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:33 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039e1b0 DummyKeystore:<nil>}\n2020/11/08 13:17:33 [INFO] TLS Enabled\n2020/11/08 13:17:33 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:33 [DEBUG] Client Cert File: \n2020/11/08 13:17:33 [DEBUG] Client Key File: \n2020/11/08 13:17:33 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:33 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:33 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:33 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:33 [INFO] encoded CSR\n2020/11/08 13:17:33 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPEEdhmYXmreXV4fQKxU\\nacYRnn9lN9yvDUp4F9CLZu074dmknqqH+jI36ePJC9lH/FNS/BzFwXui2zo5dbG9\\ng9agNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgPOEqNy9GtDUht2YBGtVm+3zl\\n7hiceARqr2MynmwH3P4CICS+R0p4jJYP97XbmHSSx/69jt81nwk8SGShNfWvAjRR\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:34 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:34 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVQnkwT1FxTzMrY0xiK01UOEx3Vkt5SnJDc1Nvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThRUjJHWmhlYXQ1ZFhoOUFyRlJweGhHZWYyVTMzSzhOU25nWDBJdG0KN1R2aDJhU2Vxb2Y2TWpmcDQ4a0wyVWY4VTFMOEhNWEJlNkxiT2psMXNiMkQxcU9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWNLMlQrUGVGUkhXc2dMOUtidXVoCklwMWxweFV3SHdZRFZSMGpCQmd3Rm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXphR2RpY1RCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXlMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBTVBoVm00QXI1cWIydS9OOU1hUjdQbi9vbGZrOWZjWS9qT1dmelJ5WnJsOEFpQnhSU25NaG9leApuaVgrU3NzK0h3eHFMUWhtdjBydCs1SmRDKzNCZjlxYjJRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:17:34 [DEBUG] newEnrollmentResponse orderer2.walmart-net\n2020/11/08 13:17:34 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem\n2020/11/08 13:17:34 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer2s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer2 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer2 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:34 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:34 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 13:17:34 [DEBUG] Checking for enrollment\n2020/11/08 13:17:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ba000}\n2020/11/08 13:17:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201ba060 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201af560 DummyKeystore:<nil>}\n2020/11/08 13:17:34 [INFO] TLS Enabled\n2020/11/08 13:17:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:34 [DEBUG] Client Cert File: \n2020/11/08 13:17:34 [DEBUG] Client Key File: \n2020/11/08 13:17:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:34 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ba000}\n2020/11/08 13:17:34 [DEBUG] Entered runRegister\n2020/11/08 13:17:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ba000}\n2020/11/08 13:17:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201ba060 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201af560 DummyKeystore:<nil>}\n2020/11/08 13:17:34 [INFO] TLS Enabled\n2020/11/08 13:17:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:34 [DEBUG] Client Cert File: \n2020/11/08 13:17:34 [DEBUG] Client Key File: \n2020/11/08 13:17:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:34 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 13:17:34 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:17:34 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 13:17:34 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/08 13:17:34 [DEBUG] Adding token-based authorization header\n2020/11/08 13:17:34 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/08 13:17:34 [DEBUG] Received response\nstatusCode=500 (500 Internal Server Error)\nError: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered\n\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/08 13:17:34 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/08 13:17:34 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b66f0}\n2020/11/08 13:17:34 [DEBUG] Entered runEnroll\n2020/11/08 13:17:34 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b66f0}\n2020/11/08 13:17:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b6750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bdf50 DummyKeystore:<nil>}\n2020/11/08 13:17:34 [INFO] TLS Enabled\n2020/11/08 13:17:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:34 [DEBUG] Client Cert File: \n2020/11/08 13:17:34 [DEBUG] Client Key File: \n2020/11/08 13:17:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:34 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:34 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:34 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:34 [INFO] encoded CSR\n2020/11/08 13:17:34 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPbA5qnakz+Iq4Qu1boFIxn3\\n+/7OdKvAdMcitCYkibJfgNv5IW2Jh/YNKeq5hkOtZJ3e2h8u69t+M0ZcFjqetVqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgErbkZtlOuyvZLDazMvjSuwwMCeHH\\n3hJOvDnmFGn88iUCIE5Psle/ATaxImT4WDq4Fjn5WIg8125h9jIek6KT+J4s\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:34 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:34 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyekNDQWxXZ0F3SUJBZ0lVQ2tlL0J2Mml3TDl3SFk2dlNzOHpFRXlFWVQwd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFOXNEbXFkcVRQNGlyaEM3VnVnVWpHZmY3L3M1MHE4QjB4eUswSmlTSnNsK0EKMi9raGJZbUg5ZzBwNnJtR1E2MWtuZDdhSHk3cjIzNHpSbHdXT3A2MVdxT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVR3pwdVlGOUczYVYrUCtqTUswS2kweG5xCkJmc3dId1lEVlIwakJCZ3dGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWgKQVBrbDBXWGRJUnZVN3YzM0tVWEpvQ0tvT25VNzFTRmg1a05pK21pWDhrbHdBaUJJQ0tVUld2dUh0WkhTWXB0TAowcVRuR2E4ZU9VZHVRUnVBNFVwZndSVUE5Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn]]\n2020/11/08 13:17:34 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 13:17:34 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/08 13:17:34 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/08 13:17:34 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:34 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c06f0}\n2020/11/08 13:17:34 [DEBUG] Entered runEnroll\n2020/11/08 13:17:34 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c06f0}\n2020/11/08 13:17:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a0070 DummyKeystore:<nil>}\n2020/11/08 13:17:34 [INFO] TLS Enabled\n2020/11/08 13:17:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:34 [DEBUG] Client Cert File: \n2020/11/08 13:17:34 [DEBUG] Client Key File: \n2020/11/08 13:17:34 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:34 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:34 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:34 [INFO] encoded CSR\n2020/11/08 13:17:34 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBN+fvN79Ka7+8UyNzVWGI/2hhFLUPKerCwtjxnoCmOG/tt9HJXyNb2EJUcMUf+CB\\nAu02oHJibldpyYqc9DfVfsugNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhAKoo\\nKRpsmPcaLdynn4KB9Ihc19cOB8mbiF55Qnigp7iiAiBLxm0ldBlhI+WtKBO4EIWt\\nX3DT2zTM6CPKlQPfLbwqPQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:35 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:35 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6ekNDQW5hZ0F3SUJBZ0lVVTFML0N5OEtqNDQ5YlE5LzgxMGhmOEtaalQwd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMzUrODN2MHBydjd4VEkzTlZZWWovYUdFVXRROHA2c0xDMlBHZWdLWTRiKzIKMzBjbGZJMXZZUWxSd3hSLzRJRUM3VGFnY21KdVYybkppcHowTjlWK3k2T0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVMjVrZUt0NEhYc3F5VVpGOExMMVNneEVWZE0wd0h3WURWUjBqQkJnd0ZvQVUKUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdGWU5hbDErWDBYSVJia3pCUHhCKwp4STF3RzVyRmxVK056UFZQN1A5MmthSUNJRGoxQW9WMmFEbUtjOENYWmx0UlJyb3pWd1dHK2E0L2RoZDU1UkVCCjRTUnQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K]]\n2020/11/08 13:17:35 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 13:17:35 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/08 13:17:35 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/0d9ae0f8ed0d0d3f2933d9a23d015415ebea4d1227284f147186ad8719988671_sk /root/ca-tools/walmart/client1/tls/keystore/4f475c147e0b1c2e6d29ec4947031dfddb4d0c540b6fca226fc819f28d204306_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer2.walmart-net",
        "+ CSR_HOSTS=orderer2.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer2.walmart-net --id.secret orderer2.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:33 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:33 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:33 [DEBUG] Checking for enrollment",
        "2020/11/08 13:17:33 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038e5d0}",
        "2020/11/08 13:17:33 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038e630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:33 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398f30 DummyKeystore:<nil>}",
        "2020/11/08 13:17:33 [INFO] TLS Enabled",
        "2020/11/08 13:17:33 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:33 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:33 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:33 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:33 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038e5d0}",
        "2020/11/08 13:17:33 [DEBUG] Entered runRegister",
        "2020/11/08 13:17:33 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer2.walmart-net Type:peer Secret:orderer2.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42038e5d0}",
        "2020/11/08 13:17:33 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42038e630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:33 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420398f30 DummyKeystore:<nil>}",
        "2020/11/08 13:17:33 [INFO] TLS Enabled",
        "2020/11/08 13:17:33 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:33 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:33 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:33 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:33 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 13:17:33 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:17:33 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 13:17:33 [DEBUG] Register { Name:orderer2.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 13:17:33 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:17:33 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer2.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer2.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 13:17:33 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:33 [DEBUG] Response body result: map[secret:orderer2.walmart-net-pw]",
        "2020/11/08 13:17:33 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:33 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:33 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c25d0}",
        "2020/11/08 13:17:33 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:33 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:33 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c25d0}",
        "2020/11/08 13:17:33 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c2630 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:33 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420396ec0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:33 [INFO] TLS Enabled",
        "2020/11/08 13:17:33 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:33 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:33 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:33 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:33 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer2.walmart-net orderer2.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:33 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:33 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:33 [INFO] encoded CSR",
        "2020/11/08 13:17:33 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer2.walmart-net\",\"orderer2.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjIud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQlq4+PCzjh+ssSu9Yf\\nchVzWDRQBw3sAGDfCwlZuZ4ETg0ncr8nuFZ3sv9g7bMVE6FoV9C0YTb1TafDunU+\\nqcF2oF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjIud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEA3zrAoJxkpYJ+w14DqtWejIK+AAo7pamP\\nFvHA3zqt39YCIDfBvTr1S0c7EOvbZ9pzDYZqiDwnCkXZrKrOPs8cCwUr\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:33 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:33 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVlBmUGZYT1NoREhhMmZHa2REOGw4ZHhnS0VFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUphdVBqd3M0NGZyTEVydldIM0lWYzFnMFVBY043QUJnM3dzSldibWUKQkU0TkozSy9KN2hXZDdML1lPMnpGUk9oYUZmUXRHRTI5VTJudzdwMVBxbkJkcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVYzeFI5TXkzYS9kUi9iSnhUQXF2RmEwZG5Jc3dId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUNpWmxUdUNoQVgvM2hpdkRZbjRxb2tYCmhkQ2JWSkhRTXJwbGxIT21TOFZyQWlCbkVuR01QM0hRSUk4L3Z4R2VMeTh6bldXazZta1Q0bFFaZk5KUElyaVUKSHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]",
        "2020/11/08 13:17:33 [DEBUG] newEnrollmentResponse orderer2.walmart-net",
        "2020/11/08 13:17:33 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/08 13:17:33 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/8e61577d832d442439522ad5c1ef7f0e3f56922faaf04fc559d76cb4209a1aef_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:33 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:33 [DEBUG] Client configuration settings: &{URL:https://orderer2.walmart-net:orderer2.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203946f0}",
        "2020/11/08 13:17:33 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:33 [DEBUG] Enrolling { Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:33 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer2.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203946f0}",
        "2020/11/08 13:17:33 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420394750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:33 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039e1b0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:33 [INFO] TLS Enabled",
        "2020/11/08 13:17:33 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:33 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:33 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:33 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:33 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:33 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:33 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:33 [INFO] encoded CSR",
        "2020/11/08 13:17:33 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTDCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMi53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPEEdhmYXmreXV4fQKxU\\nacYRnn9lN9yvDUp4F9CLZu074dmknqqH+jI36ePJC9lH/FNS/BzFwXui2zo5dbG9\\ng9agNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgPOEqNy9GtDUht2YBGtVm+3zl\\n7hiceARqr2MynmwH3P4CICS+R0p4jJYP97XbmHSSx/69jt81nwk8SGShNfWvAjRR\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:34 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:34 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0VENDQWx1Z0F3SUJBZ0lVQnkwT1FxTzMrY0xiK01UOEx3Vkt5SnJDc1Nvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRThRUjJHWmhlYXQ1ZFhoOUFyRlJweGhHZWYyVTMzSzhOU25nWDBJdG0KN1R2aDJhU2Vxb2Y2TWpmcDQ4a0wyVWY4VTFMOEhNWEJlNkxiT2psMXNiMkQxcU9CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWNLMlQrUGVGUkhXc2dMOUtidXVoCklwMWxweFV3SHdZRFZSMGpCQmd3Rm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXphR2RpY1RCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXlMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKU0FBd1JRSWhBTVBoVm00QXI1cWIydS9OOU1hUjdQbi9vbGZrOWZjWS9qT1dmelJ5WnJsOEFpQnhSU25NaG9leApuaVgrU3NzK0h3eHFMUWhtdjBydCs1SmRDKzNCZjlxYjJRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:17:34 [DEBUG] newEnrollmentResponse orderer2.walmart-net",
        "2020/11/08 13:17:34 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem",
        "2020/11/08 13:17:34 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer2s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer2 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer2 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:34 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:34 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:34 [DEBUG] Checking for enrollment",
        "2020/11/08 13:17:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ba000}",
        "2020/11/08 13:17:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201ba060 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201af560 DummyKeystore:<nil>}",
        "2020/11/08 13:17:34 [INFO] TLS Enabled",
        "2020/11/08 13:17:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:34 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:34 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:34 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ba000}",
        "2020/11/08 13:17:34 [DEBUG] Entered runRegister",
        "2020/11/08 13:17:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201ba000}",
        "2020/11/08 13:17:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201ba060 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4201af560 DummyKeystore:<nil>}",
        "2020/11/08 13:17:34 [INFO] TLS Enabled",
        "2020/11/08 13:17:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:34 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:34 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:34 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 13:17:34 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:17:34 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 13:17:34 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/08 13:17:34 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:17:34 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/08 13:17:34 [DEBUG] Received response",
        "statusCode=500 (500 Internal Server Error)",
        "Error: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered",
        "",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/08 13:17:34 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/08 13:17:34 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b66f0}",
        "2020/11/08 13:17:34 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:34 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200b66f0}",
        "2020/11/08 13:17:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200b6750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bdf50 DummyKeystore:<nil>}",
        "2020/11/08 13:17:34 [INFO] TLS Enabled",
        "2020/11/08 13:17:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:34 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:34 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:34 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:34 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:34 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:34 [INFO] encoded CSR",
        "2020/11/08 13:17:34 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSTCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABPbA5qnakz+Iq4Qu1boFIxn3\\n+/7OdKvAdMcitCYkibJfgNv5IW2Jh/YNKeq5hkOtZJ3e2h8u69t+M0ZcFjqetVqg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDRwAwRAIgErbkZtlOuyvZLDazMvjSuwwMCeHH\\n3hJOvDnmFGn88iUCIE5Psle/ATaxImT4WDq4Fjn5WIg8125h9jIek6KT+J4s\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:34 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:34 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyekNDQWxXZ0F3SUJBZ0lVQ2tlL0J2Mml3TDl3SFk2dlNzOHpFRXlFWVQwd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFOXNEbXFkcVRQNGlyaEM3VnVnVWpHZmY3L3M1MHE4QjB4eUswSmlTSnNsK0EKMi9raGJZbUg5ZzBwNnJtR1E2MWtuZDdhSHk3cjIzNHpSbHdXT3A2MVdxT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVR3pwdVlGOUczYVYrUCtqTUswS2kweG5xCkJmc3dId1lEVlIwakJCZ3dGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWgKQVBrbDBXWGRJUnZVN3YzM0tVWEpvQ0tvT25VNzFTRmg1a05pK21pWDhrbHdBaUJJQ0tVUld2dUh0WkhTWXB0TAowcVRuR2E4ZU9VZHVRUnVBNFVwZndSVUE5Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn]]",
        "2020/11/08 13:17:34 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 13:17:34 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/08 13:17:34 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/08 13:17:34 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:34 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c06f0}",
        "2020/11/08 13:17:34 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:34 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:34 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c06f0}",
        "2020/11/08 13:17:34 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c0750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:34 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203a0070 DummyKeystore:<nil>}",
        "2020/11/08 13:17:34 [INFO] TLS Enabled",
        "2020/11/08 13:17:34 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:34 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:34 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:34 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:34 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:34 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:34 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:34 [INFO] encoded CSR",
        "2020/11/08 13:17:34 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBN+fvN79Ka7+8UyNzVWGI/2hhFLUPKerCwtjxnoCmOG/tt9HJXyNb2EJUcMUf+CB\\nAu02oHJibldpyYqc9DfVfsugNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhAKoo\\nKRpsmPcaLdynn4KB9Ihc19cOB8mbiF55Qnigp7iiAiBLxm0ldBlhI+WtKBO4EIWt\\nX3DT2zTM6CPKlQPfLbwqPQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:35 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:35 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6ekNDQW5hZ0F3SUJBZ0lVVTFML0N5OEtqNDQ5YlE5LzgxMGhmOEtaalQwd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMzUrODN2MHBydjd4VEkzTlZZWWovYUdFVXRROHA2c0xDMlBHZWdLWTRiKzIKMzBjbGZJMXZZUWxSd3hSLzRJRUM3VGFnY21KdVYybkppcHowTjlWK3k2T0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVMjVrZUt0NEhYc3F5VVpGOExMMVNneEVWZE0wd0h3WURWUjBqQkJnd0ZvQVUKUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdGWU5hbDErWDBYSVJia3pCUHhCKwp4STF3RzVyRmxVK056UFZQN1A5MmthSUNJRGoxQW9WMmFEbUtjOENYWmx0UlJyb3pWd1dHK2E0L2RoZDU1UkVCCjRTUnQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K]]",
        "2020/11/08 13:17:35 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 13:17:35 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/08 13:17:35 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/0d9ae0f8ed0d0d3f2933d9a23d015415ebea4d1227284f147186ad8719988671_sk /root/ca-tools/walmart/client1/tls/keystore/4f475c147e0b1c2e6d29ec4947031dfddb4d0c540b6fca226fc819f28d204306_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer2.walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer2.walmart-net with csr hosts orderer2.walmart-net,orderer2.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer2.walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841455.158455-1420-110926205507852 `" && echo ansible-tmp-1604841455.158455-1420-110926205507852="` echo /root/.ansible/tmp/ansible-tmp-1604841455.158455-1420-110926205507852 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpgdzhfh78 TO /root/.ansible/tmp/ansible-tmp-1604841455.158455-1420-110926205507852/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841455.158455-1420-110926205507852/ /root/.ansible/tmp/ansible-tmp-1604841455.158455-1420-110926205507852/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841455.158455-1420-110926205507852/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841455.158455-1420-110926205507852/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.816322",
    "end": "2020-11-08 13:17:36.110963",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:35.294641",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841456.1849365-1460-90522739893040 `" && echo ansible-tmp-1604841456.1849365-1460-90522739893040="` echo /root/.ansible/tmp/ansible-tmp-1604841456.1849365-1460-90522739893040 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp9ap4l_zg TO /root/.ansible/tmp/ansible-tmp-1604841456.1849365-1460-90522739893040/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841456.1849365-1460-90522739893040/ /root/.ansible/tmp/ansible-tmp-1604841456.1849365-1460-90522739893040/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841456.1849365-1460-90522739893040/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841456.1849365-1460-90522739893040/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.164912",
    "end": "2020-11-08 13:17:36.480454",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:36.315542",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841456.5457358-1512-19215096864503 `" && echo ansible-tmp-1604841456.5457358-1512-19215096864503="` echo /root/.ansible/tmp/ansible-tmp-1604841456.5457358-1512-19215096864503 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpe53g7dqd TO /root/.ansible/tmp/ansible-tmp-1604841456.5457358-1512-19215096864503/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841456.5457358-1512-19215096864503/ /root/.ansible/tmp/ansible-tmp-1604841456.5457358-1512-19215096864503/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841456.5457358-1512-19215096864503/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841456.5457358-1512-19215096864503/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer2-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5VENDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9UQXdXaGNOTWpNd09EQXpNRGd5Ck9UQXdXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TWk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRQCkVnSmR2S1BGc0RoNno2MitGKzB4Nk8wa3JlNXJmTE5Kb0ppSVNBamprU0dCQ2N6MWhOR1FuWHZvbU5iMnJacC8KcCtzMDBIWXI3bllHQmhDVHNsTXFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVU40a1J1cDBMNXlVNVNab1dMbVc3NkFpK0d4OHdDZ1lJS29aSXpqMEVBd0lEClNBQXdSUUloQUlQR1FpRWFEWkJJYnhxT0pBdWVNMTNqNkpENktlY1A0dXVSWEczTm1YVU9BaUI5WU5RR1pZOWQKSWp3bWZVdENrR3drNytCalNsSmVBWTlzalBWM2ZuZmJwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUY5SERaSWExVE5TZkY3bmVRYVdFTzkyOVNnMVBKUXl4YTUvVmJXTzV0ZGNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFenhJQ1hieWp4YkE0ZXMrdHZoZnRNZWp0SkszdWEzeXpTYUNZaUVnSTQ1RWhnUW5NOVlUUgprSjE3NkpqVzlxMmFmNmZyTk5CMksrNTJCZ1lRazdKVEtnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:00Z",
                "name": "orderer2-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408765",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer2-walmart-net-ambassador-certs",
                "uid": "3a84af21-a525-4755-8465-cda893746ea9"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841457.1649735-1540-200549082664472 `" && echo ansible-tmp-1604841457.1649735-1540-200549082664472="` echo /root/.ansible/tmp/ansible-tmp-1604841457.1649735-1540-200549082664472 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpnmwnmcd7 TO /root/.ansible/tmp/ansible-tmp-1604841457.1649735-1540-200549082664472/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841457.1649735-1540-200549082664472/ /root/.ansible/tmp/ansible-tmp-1604841457.1649735-1540-200549082664472/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841457.1649735-1540-200549082664472/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841457.1649735-1540-200549082664472/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
    "delta": "0:00:00.089299",
    "end": "2020-11-08 13:17:37.387092",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:37.297793",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841457.5449784-1582-33050026840625 `" && echo ansible-tmp-1604841457.5449784-1582-33050026840625="` echo /root/.ansible/tmp/ansible-tmp-1604841457.5449784-1582-33050026840625 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwbbg4fn_ TO /root/.ansible/tmp/ansible-tmp-1604841457.5449784-1582-33050026840625/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841457.5449784-1582-33050026840625/ /root/.ansible/tmp/ansible-tmp-1604841457.5449784-1582-33050026840625/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841457.5449784-1582-33050026840625/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841457.5449784-1582-33050026840625/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
    "delta": "0:00:00.046264",
    "end": "2020-11-08 13:17:37.721538",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:37.675274",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer2-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer2"
    ]
}

TASK [create/crypto/orderer : Check if orderer msp already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841457.7858882-1620-96198872652 `" && echo ansible-tmp-1604841457.7858882-1620-96198872652="` echo /root/.ansible/tmp/ansible-tmp-1604841457.7858882-1620-96198872652 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpq9db17j9 TO /root/.ansible/tmp/ansible-tmp-1604841457.7858882-1620-96198872652/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841457.7858882-1620-96198872652/ /root/.ansible/tmp/ansible-tmp-1604841457.7858882-1620-96198872652/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841457.7858882-1620-96198872652/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841457.7858882-1620-96198872652/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
    "delta": "0:00:00.055089",
    "end": "2020-11-08 13:17:37.971098",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:37.916009",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:14
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Check if orderer tls already created] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841458.0656834-1657-55004242672721 `" && echo ansible-tmp-1604841458.0656834-1657-55004242672721="` echo /root/.ansible/tmp/ansible-tmp-1604841458.0656834-1657-55004242672721 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpst9l9ery TO /root/.ansible/tmp/ansible-tmp-1604841458.0656834-1657-55004242672721/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841458.0656834-1657-55004242672721/ /root/.ansible/tmp/ansible-tmp-1604841458.0656834-1657-55004242672721/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841458.0656834-1657-55004242672721/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841458.0656834-1657-55004242672721/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
    "delta": "0:00:00.057554",
    "end": "2020-11-08 13:17:38.253640",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:38.196086",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create directory ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:37
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Get Orderer tls crt] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:45
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create directory path on CA Tools] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:57
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841458.3799622-1695-201015986154995 `" && echo ansible-tmp-1604841458.3799622-1695-201015986154995="` echo /root/.ansible/tmp/ansible-tmp-1604841458.3799622-1695-201015986154995 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpltqk7x3c TO /root/.ansible/tmp/ansible-tmp-1604841458.3799622-1695-201015986154995/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841458.3799622-1695-201015986154995/ /root/.ansible/tmp/ansible-tmp-1604841458.3799622-1695-201015986154995/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841458.3799622-1695-201015986154995/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841458.3799622-1695-201015986154995/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
    "delta": "0:00:01.274377",
    "end": "2020-11-08 13:17:39.783568",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/ordererOrganizations/walmart-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/walmart\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:38.509191",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:69
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841459.8479922-1741-211066650336928 `" && echo ansible-tmp-1604841459.8479922-1741-211066650336928="` echo /root/.ansible/tmp/ansible-tmp-1604841459.8479922-1741-211066650336928 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpddzfc1to TO /root/.ansible/tmp/ansible-tmp-1604841459.8479922-1741-211066650336928/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841459.8479922-1741-211066650336928/ /root/.ansible/tmp/ansible-tmp-1604841459.8479922-1741-211066650336928/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841459.8479922-1741-211066650336928/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841459.8479922-1741-211066650336928/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Changing the permission of msp files] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:84
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841460.051584-1767-181588113098871 `" && echo ansible-tmp-1604841460.051584-1767-181588113098871="` echo /root/.ansible/tmp/ansible-tmp-1604841460.051584-1767-181588113098871 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp7wsyqmp9 TO /root/.ansible/tmp/ansible-tmp-1604841460.051584-1767-181588113098871/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841460.051584-1767-181588113098871/ /root/.ansible/tmp/ansible-tmp-1604841460.051584-1767-181588113098871/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841460.051584-1767-181588113098871/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841460.051584-1767-181588113098871/ > /dev/null 2>&1 && sleep 0'
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
changed: [localhost] => (item=generate-crypto-walmart-orderer3.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-walmart-orderer3.sh"
        }
    },
    "files": "generate-crypto-walmart-orderer3.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-walmart-orderer3.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-walmart-orderer3.sh",
    "size": 2595,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841460.2227647-1767-42917544406361 `" && echo ansible-tmp-1604841460.2227647-1767-42917544406361="` echo /root/.ansible/tmp/ansible-tmp-1604841460.2227647-1767-42917544406361 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphr5ni3i6 TO /root/.ansible/tmp/ansible-tmp-1604841460.2227647-1767-42917544406361/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841460.2227647-1767-42917544406361/ /root/.ansible/tmp/ansible-tmp-1604841460.2227647-1767-42917544406361/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841460.2227647-1767-42917544406361/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841460.2227647-1767-42917544406361/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/orderer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:99
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841460.430794-1817-51044931520132 `" && echo ansible-tmp-1604841460.430794-1817-51044931520132="` echo /root/.ansible/tmp/ansible-tmp-1604841460.430794-1817-51044931520132 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdm23pyep TO /root/.ansible/tmp/ansible-tmp-1604841460.430794-1817-51044931520132/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841460.430794-1817-51044931520132/ /root/.ansible/tmp/ansible-tmp-1604841460.430794-1817-51044931520132/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841460.430794-1817-51044931520132/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841460.430794-1817-51044931520132/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
    "delta": "0:00:03.761016",
    "end": "2020-11-08 13:17:44.321220",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-walmart-orderer3.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh walmart-net/${CA_TOOL_CLI}:/root/ca-tools/walmart/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem walmart-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/walmart-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:40.560204",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Generate crypto material for organization orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:112
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841464.390552-1867-249379490561054 `" && echo ansible-tmp-1604841464.390552-1867-249379490561054="` echo /root/.ansible/tmp/ansible-tmp-1604841464.390552-1867-249379490561054 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp64oxpbo_ TO /root/.ansible/tmp/ansible-tmp-1604841464.390552-1867-249379490561054/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841464.390552-1867-249379490561054/ /root/.ansible/tmp/ansible-tmp-1604841464.390552-1867-249379490561054/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841464.390552-1867-249379490561054/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841464.390552-1867-249379490561054/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:02.377396",
    "end": "2020-11-08 13:17:46.897241",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n walmart-net ${CA_TOOL_CLI} -- /root/ca-tools/walmart/./generate-user-crypto.sh orderer3 walmart-net walmart 1 walmart \"O=Orderer,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:44.519845",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=walmart\n+ SUBJECT=C=UK,ST=London,L=London,O=walmart\n+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ CA_ADMIN_USER=walmart-admin\n+ CA_ADMIN_PASS=walmart-adminpw\n+ ORG_ADMIN_USER=Admin@walmart-net\n+ ORG_ADMIN_PASS=Admin@walmart-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ PEER=orderer3.walmart-net\n+ CSR_HOSTS=orderer3.walmart-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:45 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:45 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 13:17:45 [DEBUG] Checking for enrollment\n2020/11/08 13:17:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420190390}\n2020/11/08 13:17:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201903f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420194d80 DummyKeystore:<nil>}\n2020/11/08 13:17:45 [INFO] TLS Enabled\n2020/11/08 13:17:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:45 [DEBUG] Client Cert File: \n2020/11/08 13:17:45 [DEBUG] Client Key File: \n2020/11/08 13:17:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:45 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420190390}\n2020/11/08 13:17:45 [DEBUG] Entered runRegister\n2020/11/08 13:17:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420190390}\n2020/11/08 13:17:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201903f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420194d80 DummyKeystore:<nil>}\n2020/11/08 13:17:45 [INFO] TLS Enabled\n2020/11/08 13:17:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:45 [DEBUG] Client Cert File: \n2020/11/08 13:17:45 [DEBUG] Client Key File: \n2020/11/08 13:17:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:45 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 13:17:45 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:17:45 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 13:17:45 [DEBUG] Register { Name:orderer3.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 13:17:45 [DEBUG] Adding token-based authorization header\n2020/11/08 13:17:45 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"orderer3.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer3.walmart-net-pw\",\"affiliation\":\"\"}\n2020/11/08 13:17:45 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:45 [DEBUG] Response body result: map[secret:orderer3.walmart-net-pw]\n2020/11/08 13:17:45 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:45 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:45 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be630}\n2020/11/08 13:17:45 [DEBUG] Entered runEnroll\n2020/11/08 13:17:45 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be630}\n2020/11/08 13:17:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420191390 DummyKeystore:<nil>}\n2020/11/08 13:17:45 [INFO] TLS Enabled\n2020/11/08 13:17:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:45 [DEBUG] Client Cert File: \n2020/11/08 13:17:45 [DEBUG] Client Key File: \n2020/11/08 13:17:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:45 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:45 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:45 [INFO] encoded CSR\n2020/11/08 13:17:45 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASlUXBkVrMFrZExyrkO\\nN+5PjkCmYvEYucEe1zwCArutpR2JL97i/ajFgaEFnCBcje2xbL8Y5ZFcagHzmfPH\\n5kiKoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEAoKIblCr1xzzGfiATKcs758sqLs2nwfGM\\na79qYiMgW5YCIG86cbT7zn4yZ+9E+9CTNEmu73aF9zfOaN4CINpJmjxq\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:45 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:45 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVjQ2NUVycnpmR2lzRWJaMUJRR0dhakIyT3Y0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRXBWRndaRmF6QmEyUk1jcTVEamZ1VDQ1QXBtTHhHTG5CSHRjOEFnSzcKcmFVZGlTL2U0djJveFlHaEJad2dYSTN0c1d5L0dPV1JYR29CODVuengrWklpcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWt5WWV6TDVwcmU4b1lXYUJYb00wd09OMytFOHdId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUc1T3NXNGMyUlFJUDNQVzRvTmV5M2dtCmxHRWRUaEZMa0hWelJXd0x4dkIwQWlCU3kvWXlEY0p3ZVU4YnR2QnFJa1EyaTRpQktFREdGUE53cHdwQUVLVmYKdVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]\n2020/11/08 13:17:45 [DEBUG] newEnrollmentResponse orderer3.walmart-net\n2020/11/08 13:17:45 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem\n2020/11/08 13:17:45 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\n+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/96b4b271dfde4dadd506b31b1138ca9917a3b45d32adaba4b45035e245c21140_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key\n+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt\n+ rm -rf /root/ca-tools/walmart/cas/orderers/tls\n+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:45 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:45 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c780}\n2020/11/08 13:17:45 [DEBUG] Entered runEnroll\n2020/11/08 13:17:45 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c780}\n2020/11/08 13:17:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c7e0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019c1b0 DummyKeystore:<nil>}\n2020/11/08 13:17:45 [INFO] TLS Enabled\n2020/11/08 13:17:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:45 [DEBUG] Client Cert File: \n2020/11/08 13:17:45 [DEBUG] Client Key File: \n2020/11/08 13:17:45 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:45 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:45 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:45 [INFO] encoded CSR\n2020/11/08 13:17:45 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABFoGNChVN13cRlufS80d\\n2cWeLsNog+jE3jqj5NKOqItAwNgHqD8ARh+G2NXOn8hkNOQ4XQK/oRe+8/Jqm//U\\nJeygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhAL2yF4FozQZQdwaJpwKNnaCO\\n7+nYXUEDj06RpBToBebgAiBeU2b9og5kPK/Lr9l6tisCwzEQ76GIH+9XTw9g93cQ\\nOQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:45 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:45 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0RENDQWx1Z0F3SUJBZ0lVYWxsL25sa3hCcG1lZzNhTzMrQzlKSzlTVzVRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRVdnWTBLRlUzWGR4R1c1OUx6UjNaeFo0dXcyaUQ2TVRlT3FQazBvNm8KaTBEQTJBZW9Qd0JHSDRiWTFjNmZ5R1EwNURoZEFyK2hGNzd6OG1xYi85UWw3S09CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVW5mMzcrNEZBMmVNTEtDMFFWWHRzCnRUeDdCS2t3SHdZRFZSMGpCQmd3Rm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXphR2RpY1RCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXpMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKUndBd1JBSWdPVmJsSGNHMzMzc1FUOVFSZkdpckZxR1M5Q1g0blNWMjVaajVoYXZEK0pRQ0lIYWEvSlUydUNsbwpMdkNKU2NSM1FKMlRWb0F1MDlRMVhFbTBmMDhkQWNjWgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:17:45 [DEBUG] newEnrollmentResponse orderer3.walmart-net\n2020/11/08 13:17:45 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem\n2020/11/08 13:17:45 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=walmart-net\n+ ORG_NAME=walmart\n+ TYPE_FOLDER=orderer3s\n+ NO_OF_USERS=1\n+ AFFILIATION=walmart\n+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB\n+ CA=ca.walmart-net:7054\n+ '[' orderer3 '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net\n+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart\n+ ORG_HOME=/root/ca-tools/walmart\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@walmart-net\n+ ORG_USERPASS=User1@walmart-net-pw\n+ '[' orderer3 = peer ']'\n+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:46 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart\n2020/11/08 13:17:46 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml\n2020/11/08 13:17:46 [DEBUG] Checking for enrollment\n2020/11/08 13:17:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205ee4e0}\n2020/11/08 13:17:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205ee540 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420247e20 DummyKeystore:<nil>}\n2020/11/08 13:17:46 [INFO] TLS Enabled\n2020/11/08 13:17:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:46 [DEBUG] Client Cert File: \n2020/11/08 13:17:46 [DEBUG] Client Key File: \n2020/11/08 13:17:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:46 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205ee4e0}\n2020/11/08 13:17:46 [DEBUG] Entered runRegister\n2020/11/08 13:17:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205ee4e0}\n2020/11/08 13:17:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205ee540 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420247e20 DummyKeystore:<nil>}\n2020/11/08 13:17:46 [INFO] TLS Enabled\n2020/11/08 13:17:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:46 [DEBUG] Client Cert File: \n2020/11/08 13:17:46 [DEBUG] Client Key File: \n2020/11/08 13:17:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:46 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem\n2020/11/08 13:17:46 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:17:46 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig\n2020/11/08 13:17:46 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/08 13:17:46 [DEBUG] Adding token-based authorization header\n2020/11/08 13:17:46 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/register\n{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/08 13:17:46 [DEBUG] Received response\nstatusCode=500 (500 Internal Server Error)\nError: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered\n\n+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1\n2020/11/08 13:17:46 [DEBUG] Home directory: /root/ca-tools/walmart/client1\n2020/11/08 13:17:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4360}\n2020/11/08 13:17:46 [DEBUG] Entered runEnroll\n2020/11/08 13:17:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4360}\n2020/11/08 13:17:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c43c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420481690 DummyKeystore:<nil>}\n2020/11/08 13:17:46 [INFO] TLS Enabled\n2020/11/08 13:17:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:46 [DEBUG] Client Cert File: \n2020/11/08 13:17:46 [DEBUG] Client Key File: \n2020/11/08 13:17:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:46 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:46 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:46 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:46 [INFO] encoded CSR\n2020/11/08 13:17:46 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJgT3qPaUkyAZVmaPxltv68w\\nqTlWYtQZsH9OH6OOvp6hwBhzKDzf20XC6A8pRg5f3n/zVIAgRo/9S8+HQVY+GbOg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhAKtQ+dd2Hy6KeMzcwW491BEJ0Cjl\\nf+sonWhzMbFuik3uAiBZ5Y4TK6IWhHeXPaKZVxtep7U6HfGUcK31c9ObHD8WTg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:46 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:46 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVT2V1Q1BJeGM2V3AyK1AwUDNBOHhSS2YyWFo4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbUJQZW85cFNUSUJsV1pvL0dXMi9yekNwT1ZaaTFCbXdmMDRmbzQ2K25xSEEKR0hNb1BOL2JSY0xvRHlsR0RsL2VmL05VZ0NCR2ovMUx6NGRCVmo0WnM2T0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVTFBMSER3VFFES1NRa2F1b1RqN2x4bDJBCmpBMHdId1lEVlIwakJCZ3dGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKVTBNY01rY3M1YkZLUHo4NG9JbHNtc05jeGtmMFBRaWRhZVR4cWtzYTBMQUNJSE5GRHpaa2U5a3drczJIRVZqWQo4L2VTRUkyQnBEcEgwWDNTN2U1VnVyeEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K]]\n2020/11/08 13:17:46 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 13:17:46 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem\n2020/11/08 13:17:46 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem\n+ mkdir /root/ca-tools/walmart/client1/msp/admincerts\nmkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists\n+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem\n2020/11/08 13:17:46 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba6c0}\n2020/11/08 13:17:46 [DEBUG] Entered runEnroll\n2020/11/08 13:17:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba6c0}\n2020/11/08 13:17:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c1ee0 DummyKeystore:<nil>}\n2020/11/08 13:17:46 [INFO] TLS Enabled\n2020/11/08 13:17:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]\n2020/11/08 13:17:46 [DEBUG] Client Cert File: \n2020/11/08 13:17:46 [DEBUG] Client Key File: \n2020/11/08 13:17:46 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:46 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:46 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:46 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:46 [INFO] encoded CSR\n2020/11/08 13:17:46 [DEBUG] Sending request\nPOST https://ca.walmart-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBINat2wIu/TRV8w5KdhriWcrk8eibR3RmI8Tow/hyLn7+MvZCOSdqpxax6n2bGXB\\nxPou/J2FIwZRwuklQ+7gcUygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhANdY\\n/HE5DF51m3JSMhgP0Utj+ZbLFVrkZfAqGIe5AO76AiB3I1ik/86JchmaWgSSJknz\\nujLk8S/UYmhBaMEIJOrBLg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:46 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:46 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVQ3RHc1VkbW42bGRsRWlpaFFkVVVVTDNzREFrd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFZzFxM2JBaTc5TkZYekRrcDJHdUpaeXVUeDZKdEhkR1lqeE9qRCtISXVmdjQKeTlrSTVKMnFuRnJIcWZac1pjSEUraTc4bllVakJsSEM2U1ZEN3VCeFRLT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVM0dGMi9NRzcydzBBQUFITFVyNkZVUzk0ZmtVd0h3WURWUjBqQkJnd0ZvQVUKUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTUZTTkxrSGNlVTNmQ3dLenBQSwpPZEE4M2pZbUdqNldKTDJCN0FuUjFTVW1BaUJUQUUrQlAyMFZyMlhPQk5jZVVFSUZCVnNmeERoWXc4dXI0cnVsClR5SUk2QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:17:46 [DEBUG] newEnrollmentResponse User1@walmart-net\n2020/11/08 13:17:46 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem\n2020/11/08 13:17:46 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem\n+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls\n+ cp /root/ca-tools/walmart/client1/tls/keystore/0d9ae0f8ed0d0d3f2933d9a23d015415ebea4d1227284f147186ad8719988671_sk /root/ca-tools/walmart/client1/tls/keystore/47087c4624d7693c28c6ad7bd3c7fe8dd94aa58c92b98a1f41c0fafef9b47f0f_sk /root/ca-tools/walmart/client1/tls/keystore/4f475c147e0b1c2e6d29ec4947031dfddb4d0c540b6fca226fc819f28d204306_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key\ncp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory\n+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt\n+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"walmart-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=walmart",
        "+ SUBJECT=C=UK,ST=London,L=London,O=walmart",
        "+ SUBJECT_PEER=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ CA_ADMIN_USER=walmart-admin",
        "+ CA_ADMIN_PASS=walmart-adminpw",
        "+ ORG_ADMIN_USER=Admin@walmart-net",
        "+ ORG_ADMIN_PASS=Admin@walmart-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ PEER=orderer3.walmart-net",
        "+ CSR_HOSTS=orderer3.walmart-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name orderer3.walmart-net --id.secret orderer3.walmart-net-pw --id.type peer --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:45 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:45 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:45 [DEBUG] Checking for enrollment",
        "2020/11/08 13:17:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420190390}",
        "2020/11/08 13:17:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201903f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420194d80 DummyKeystore:<nil>}",
        "2020/11/08 13:17:45 [INFO] TLS Enabled",
        "2020/11/08 13:17:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:45 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:45 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:45 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420190390}",
        "2020/11/08 13:17:45 [DEBUG] Entered runRegister",
        "2020/11/08 13:17:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:orderer3.walmart-net Type:peer Secret:orderer3.walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420190390}",
        "2020/11/08 13:17:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201903f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420194d80 DummyKeystore:<nil>}",
        "2020/11/08 13:17:45 [INFO] TLS Enabled",
        "2020/11/08 13:17:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:45 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:45 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:45 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 13:17:45 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:17:45 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 13:17:45 [DEBUG] Register { Name:orderer3.walmart-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 13:17:45 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:17:45 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"orderer3.walmart-net\",\"type\":\"peer\",\"secret\":\"orderer3.walmart-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 13:17:45 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:45 [DEBUG] Response body result: map[secret:orderer3.walmart-net-pw]",
        "2020/11/08 13:17:45 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/cas/orderers/tls --csr.hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:45 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:45 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be630}",
        "2020/11/08 13:17:45 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:45 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/cas/orderers/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200be630}",
        "2020/11/08 13:17:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200be690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420191390 DummyKeystore:<nil>}",
        "2020/11/08 13:17:45 [INFO] TLS Enabled",
        "2020/11/08 13:17:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:45 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:45 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[orderer3.walmart-net orderer3.walmart-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:45 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:45 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:45 [INFO] encoded CSR",
        "2020/11/08 13:17:45 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"orderer3.walmart-net\",\"orderer3.walmart-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBdjCCARwCAQAwWzELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHT3JkZXJlcjEdMBsGA1UEAxMUb3JkZXJlcjMud2Fs\\nbWFydC1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASlUXBkVrMFrZExyrkO\\nN+5PjkCmYvEYucEe1zwCArutpR2JL97i/ajFgaEFnCBcje2xbL8Y5ZFcagHzmfPH\\n5kiKoF8wXQYJKoZIhvcNAQkOMVAwTjBMBgNVHREERTBDghRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldIIrb3JkZXJlcjMud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYu\\naW5mbzAKBggqhkjOPQQDAgNIADBFAiEAoKIblCr1xzzGfiATKcs758sqLs2nwfGM\\na79qYiMgW5YCIG86cbT7zn4yZ+9E+9CTNEmu73aF9zfOaN4CINpJmjxq\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:45 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:45 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVjQ2NUVycnpmR2lzRWJaMUJRR0dhakIyT3Y0d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRXBWRndaRmF6QmEyUk1jcTVEamZ1VDQ1QXBtTHhHTG5CSHRjOEFnSzcKcmFVZGlTL2U0djJveFlHaEJad2dYSTN0c1d5L0dPV1JYR29CODVuengrWklpcU9DQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWt5WWV6TDVwcmU4b1lXYUJYb00wd09OMytFOHdId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUc1T3NXNGMyUlFJUDNQVzRvTmV5M2dtCmxHRWRUaEZMa0hWelJXd0x4dkIwQWlCU3kvWXlEY0p3ZVU4YnR2QnFJa1EyaTRpQktFREdGUE53cHdwQUVLVmYKdVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net]]",
        "2020/11/08 13:17:45 [DEBUG] newEnrollmentResponse orderer3.walmart-net",
        "2020/11/08 13:17:45 [INFO] Stored client certificate at /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem",
        "2020/11/08 13:17:45 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/keystore/96b4b271dfde4dadd506b31b1138ca9917a3b45d32adaba4b45035e245c21140_sk /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt",
        "+ cp /root/ca-tools/walmart/cas/orderers/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/walmart/cas/orderers/tls",
        "+ fabric-ca-client enroll -d -u https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 -M /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --csr.names O=Orderer,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:45 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:45 [DEBUG] Client configuration settings: &{URL:https://orderer3.walmart-net:orderer3.walmart-net-pw@ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c780}",
        "2020/11/08 13:17:45 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:45 [DEBUG] Enrolling { Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:45 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:orderer3.walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42039c780}",
        "2020/11/08 13:17:45 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42039c7e0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:45 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019c1b0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:45 [INFO] TLS Enabled",
        "2020/11/08 13:17:45 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:45 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:45 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:45 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:45 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:45 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:45 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:45 [INFO] encoded CSR",
        "2020/11/08 13:17:45 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBTTCB9AIBADBbMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMR0wGwYDVQQDExRvcmRlcmVyMy53YWxt\\nYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABFoGNChVN13cRlufS80d\\n2cWeLsNog+jE3jqj5NKOqItAwNgHqD8ARh+G2NXOn8hkNOQ4XQK/oRe+8/Jqm//U\\nJeygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4\\nODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhAL2yF4FozQZQdwaJpwKNnaCO\\n7+nYXUEDj06RpBToBebgAiBeU2b9og5kPK/Lr9l6tisCwzEQ76GIH+9XTw9g93cQ\\nOQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:45 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:45 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0RENDQWx1Z0F3SUJBZ0lVYWxsL25sa3hCcG1lZzNhTzMrQzlKSzlTVzVRd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRVdnWTBLRlUzWGR4R1c1OUx6UjNaeFo0dXcyaUQ2TVRlT3FQazBvNm8KaTBEQTJBZW9Qd0JHSDRiWTFjNmZ5R1EwNURoZEFyK2hGNzd6OG1xYi85UWw3S09CN2pDQjZ6QU9CZ05WSFE4QgpBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVW5mMzcrNEZBMmVNTEtDMFFWWHRzCnRUeDdCS2t3SHdZRFZSMGpCQmd3Rm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1TXdKQVlEVlIwUkJCMHcKRzRJWlkyRXRkRzl2YkhNdE5qbGtOemc0TldZNE5pMXphR2RpY1RCbEJnZ3FBd1FGQmdjSUFRUlpleUpoZEhSeQpjeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5ClpYSXpMbmRoYkcxaGNuUXRibVYwSWl3aWFHWXVWSGx3WlNJNkluQmxaWElpZlgwd0NnWUlLb1pJemowRUF3SUQKUndBd1JBSWdPVmJsSGNHMzMzc1FUOVFSZkdpckZxR1M5Q1g0blNWMjVaajVoYXZEK0pRQ0lIYWEvSlUydUNsbwpMdkNKU2NSM1FKMlRWb0F1MDlRMVhFbTBmMDhkQWNjWgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:17:45 [DEBUG] newEnrollmentResponse orderer3.walmart-net",
        "2020/11/08 13:17:45 [INFO] Stored client certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem",
        "2020/11/08 13:17:45 [INFO] Stored root CA certificate at /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cp /crypto-config/ordererOrganizations/walmart-net/msp/admincerts/Admin@walmart-net-cert.pem /crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=walmart-net",
        "+ ORG_NAME=walmart",
        "+ TYPE_FOLDER=orderer3s",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=walmart",
        "+ SUBJECT=O=Orderer,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.walmart-net:7054",
        "+ '[' orderer3 '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/ordererOrganizations/walmart-net",
        "+ ROOT_TLS_CERT=/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-walmart",
        "+ ORG_HOME=/root/ca-tools/walmart",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@walmart-net",
        "+ ORG_USERPASS=User1@walmart-net-pw",
        "+ '[' orderer3 = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@walmart-net --id.secret User1@walmart-net-pw --id.type user --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:46 [DEBUG] Home directory: /root/ca-tools/cas/ca-walmart",
        "2020/11/08 13:17:46 [INFO] Configuration file location: /root/ca-tools/cas/ca-walmart/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:46 [DEBUG] Checking for enrollment",
        "2020/11/08 13:17:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205ee4e0}",
        "2020/11/08 13:17:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205ee540 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420247e20 DummyKeystore:<nil>}",
        "2020/11/08 13:17:46 [INFO] TLS Enabled",
        "2020/11/08 13:17:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:46 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:46 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:46 [DEBUG] Client configuration settings: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205ee4e0}",
        "2020/11/08 13:17:46 [DEBUG] Entered runRegister",
        "2020/11/08 13:17:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/cas/ca-walmart/msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:walmart-admin Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@walmart-net Type:user Secret:User1@walmart-net-pw MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205ee4e0}",
        "2020/11/08 13:17:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205ee540 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420247e20 DummyKeystore:<nil>}",
        "2020/11/08 13:17:46 [INFO] TLS Enabled",
        "2020/11/08 13:17:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:46 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:46 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:46 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-walmart/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-walmart/msp/signcerts/cert.pem",
        "2020/11/08 13:17:46 [DEBUG] No credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: open /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:17:46 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-walmart/msp/user/SignerConfig",
        "2020/11/08 13:17:46 [DEBUG] Register { Name:User1@walmart-net Type:user Secret:**** MaxEnrollments:0 Affiliation: Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/08 13:17:46 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:17:46 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/register",
        "{\"id\":\"User1@walmart-net\",\"type\":\"user\",\"secret\":\"User1@walmart-net-pw\",\"affiliation\":\"\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/08 13:17:46 [DEBUG] Received response",
        "statusCode=500 (500 Internal Server Error)",
        "Error: Response from server: Error Code: 0 - Registration of 'User1@walmart-net' failed: Identity 'User1@walmart-net' is already registered",
        "",
        "+ fabric-ca-client enroll -d -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 --csr.names O=Orderer,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem --home /root/ca-tools/walmart/client1",
        "2020/11/08 13:17:46 [DEBUG] Home directory: /root/ca-tools/walmart/client1",
        "2020/11/08 13:17:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4360}",
        "2020/11/08 13:17:46 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@walmart-net [{   Orderer  } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c4360}",
        "2020/11/08 13:17:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c43c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420481690 DummyKeystore:<nil>}",
        "2020/11/08 13:17:46 [INFO] TLS Enabled",
        "2020/11/08 13:17:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:46 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:46 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:46 [DEBUG] GenCSR &{CN:User1@walmart-net Names:[{C: ST: L: O:Orderer OU: SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:46 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:46 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:46 [INFO] encoded CSR",
        "2020/11/08 13:17:46 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBSjCB8QIBADBYMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdPcmRlcmVyMRowGAYDVQQDDBFVc2VyMUB3YWxtYXJ0\\nLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJgT3qPaUkyAZVmaPxltv68w\\nqTlWYtQZsH9OH6OOvp6hwBhzKDzf20XC6A8pRg5f3n/zVIAgRo/9S8+HQVY+GbOg\\nNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTY5ZDc4ODVm\\nODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhAKtQ+dd2Hy6KeMzcwW491BEJ0Cjl\\nf+sonWhzMbFuik3uAiBZ5Y4TK6IWhHeXPaKZVxtep7U6HfGUcK31c9ObHD8WTg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:46 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:46 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVT2V1Q1BJeGM2V3AyK1AwUDNBOHhSS2YyWFo4d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbUJQZW85cFNUSUJsV1pvL0dXMi9yekNwT1ZaaTFCbXdmMDRmbzQ2K25xSEEKR0hNb1BOL2JSY0xvRHlsR0RsL2VmL05VZ0NCR2ovMUx6NGRCVmo0WnM2T0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVTFBMSER3VFFES1NRa2F1b1RqN2x4bDJBCmpBMHdId1lEVlIwakJCZ3dGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoCmJHMWhjblF0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKVTBNY01rY3M1YkZLUHo4NG9JbHNtc05jeGtmMFBRaWRhZVR4cWtzYTBMQUNJSE5GRHpaa2U5a3drczJIRVZqWQo4L2VTRUkyQnBEcEgwWDNTN2U1VnVyeEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K]]",
        "2020/11/08 13:17:46 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 13:17:46 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/msp/signcerts/cert.pem",
        "2020/11/08 13:17:46 [INFO] Stored root CA certificate at /root/ca-tools/walmart/client1/msp/cacerts/ca-walmart-net-7054.pem",
        "+ mkdir /root/ca-tools/walmart/client1/msp/admincerts",
        "mkdir: cannot create directory '/root/ca-tools/walmart/client1/msp/admincerts': File exists",
        "+ cp /root/ca-tools/walmart/client1/msp/signcerts/cert.pem /root/ca-tools/walmart/client1/msp/admincerts/User1@walmart-net-cert.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ cp -R /root/ca-tools/walmart/client1/msp /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 -M /root/ca-tools/walmart/client1/tls --tls.certfiles /crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem",
        "2020/11/08 13:17:46 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:46 [DEBUG] Client configuration settings: &{URL:https://User1@walmart-net:User1@walmart-net-pw@ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba6c0}",
        "2020/11/08 13:17:46 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:46 [DEBUG] Enrolling { Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:46 [DEBUG] Initializing client with config: &{URL:https://ca.walmart-net:7054 MSPDir:/root/ca-tools/walmart/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@walmart-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@walmart-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-shgbq] <nil> <nil> } Type:x509  } CSR:{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200ba6c0}",
        "2020/11/08 13:17:46 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200ba720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:46 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200c1ee0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:46 [INFO] TLS Enabled",
        "2020/11/08 13:17:46 [DEBUG] CA Files: [/crypto-config/ordererOrganizations/walmart-net/ca/ca.walmart-net-cert.pem]",
        "2020/11/08 13:17:46 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:46 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:46 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:46 [DEBUG] GenCSR &{CN:Admin@walmart-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-shgbq] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:46 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:46 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:46 [INFO] encoded CSR",
        "2020/11/08 13:17:46 [DEBUG] Sending request",
        "POST https://ca.walmart-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-shgbq\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUB3YWxtYXJ0LW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBINat2wIu/TRV8w5KdhriWcrk8eibR3RmI8Tow/hyLn7+MvZCOSdqpxax6n2bGXB\\nxPou/J2FIwZRwuklQ+7gcUygNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtc2hnYnEwCgYIKoZIzj0EAwIDSAAwRQIhANdY\\n/HE5DF51m3JSMhgP0Utj+ZbLFVrkZfAqGIe5AO76AiB3I1ik/86JchmaWgSSJknz\\nujLk8S/UYmhBaMEIJOrBLg==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:46 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:46 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQW5hZ0F3SUJBZ0lVQ3RHc1VkbW42bGRsRWlpaFFkVVVVTDNzREFrd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVgpCQXNUQkhWelpYSXhHakFZQmdOVkJBTU1FVlZ6WlhJeFFIZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFZzFxM2JBaTc5TkZYekRrcDJHdUpaeXVUeDZKdEhkR1lqeE9qRCtISXVmdjQKeTlrSTVKMnFuRnJIcWZac1pjSEUraTc4bllVakJsSEM2U1ZEN3VCeFRLT0NBUXN3Z2dFSE1BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVM0dGMi9NRzcydzBBQUFITFVyNkZVUzk0ZmtVd0h3WURWUjBqQkJnd0ZvQVUKUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROamxrTnpnNApOV1k0TmkxemFHZGljVEJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2CmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWxWelpYSXhRSGRoYkcxaGNuUXRibVYwSWl3aWFHWXUKVkhsd1pTSTZJblZ6WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTUZTTkxrSGNlVTNmQ3dLenBQSwpPZEE4M2pZbUdqNldKTDJCN0FuUjFTVW1BaUJUQUUrQlAyMFZyMlhPQk5jZVVFSUZCVnNmeERoWXc4dXI0cnVsClR5SUk2QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.walmart-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekNDQVo2Z0F3SUJBZ0lVTUlGRXlHbzczSzYyQkdCSVo4Y1pYQXUyMDZjd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE1qQmFGdzB5TXpBNE1qa3hNekE0TWpCYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1ZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUkwybUFibzdHWlB4eDdxK05UVHZkM2JVZ2F6SnZKaHlyWmxhRU1JeG9rNE5TazYvVVRHSUp0cDc4UjRZSmgKQVVZaC9ONWhuWWh2TityZDdQTGk4T3ZrbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13Q2dZSUtvWkl6ajBFCkF3SURSd0F3UkFJZ1dXUFI1VUxDeGhocjQrVFcza1VLTk4wZTNjdmZTUGh6aEIzM0dVb1RUL1FDSUVtODV2VXMKNkFuVU9EU1p5VDhIK3FuOGF4QVVRMnE1clJTVWRQN1NFWHV2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEqUEWFC96fKhHstjtdBYvKsYhvz5Zb2OVPwL2YQVazNEiA0nG7xC540guFjsn/70Wqwzaj+2H3PJwdH09EjFbFxTRpECiC+wWxqpHZI8y6vPaH0o9dPFxcErQb0gvJnO5zJug1arBIg3r4E+cIxaNFec4efxBuvOjCAvQTOIk6+mxMPoJFVNQkiRAogDNXLvJ3W3m+otorFlwZRacjIj49DIMqZh0FpiXu+d40SIJ7q5+W2AdiltzOV4AUovLjUkkN+2OU1M/RGomAF1dGJIkQKIG2HMJCj6cBnZFyD87Q/WjnyfBPlO9z9PTMhe3TDI1jREiB6uriugb4xqm6Omw6UAhmDn/bBSCUQcphAnoI+eoO0SCJECiDr/EkMXj8krWSvNQsbi4olHFEONp+ZqblvQrrrW/llrhIgGycN9SqqxYn0dvH2cd1ARDJXl26pU3fVgBAbJ0pZqSYiRAogDTeqE6YG0i/7zz/DDFE5mSv9oX+uHg8OibBaxryFg8oSIJ2x7Qt5CP/m5yCadzNcWb+ybN/qu7MDFb4qxP5wEvX0KogBCiAlt1LjGNRzyYWhtNArTmc344ppbFjLlKNFhxTv5mKyDRIg29gTJoRojHmbV5tvJTzGahdBUP7JScGuRAFOuLvEzvwaIAKMUTlU/Ci6bUEIryfzfaB1R4ngvf0vLdRsIvfhahLVIiCH9PzQb/eH5PmpF2iYPyF96DLVidKXxNuOf95ujGRJIDJECiApSc+mM2Xf2nMchAm2SQyjCAwKQ1NjaJymvhIinhgY8xIg4NtnzYi/4OCZp4P/a8mmb+ZVEfuvCihkpPO56LEcw5I6RAogBc66Mz6/BaVM9OdRfqq/EveSGLSEZLuTnW7LFr3WyZMSIJcz5OB7oxQItR5W2k+3bZH104mRzwmJ0vl3lMScMZ5OQiAiAL4i9AxeLEC/GwxHq9DuwyC1yrfG3J+K6RcZwF6sQ0ogwHrOf/LqTi5DmnlUB17eb5Eio3RY6qdRHEnVbG3qUalSIHijTxyk6m9dTGpi3eyEg3A4JfOO0i9mYrZqwo3kjwXn IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVUZlZiOW9zMDFSS3puMWc0T01jazliTW5RbThyYkJpNgpkeGxUanhlWDNMS284cy9ROGNRbGh2VWd4cE8yL20rbEEzY2tmQUFvZVpRdS9BZWxRcyt0RnAxMXFzazFKcGtOCjhTbWZjY243eGdzV0xlVVBYdWZ1VjZ2eUVQNVEzMnB3Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:17:46 [DEBUG] newEnrollmentResponse User1@walmart-net",
        "2020/11/08 13:17:46 [INFO] Stored client certificate at /root/ca-tools/walmart/client1/tls/signcerts/cert.pem",
        "2020/11/08 13:17:46 [INFO] Stored TLS root CA certificate at /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem",
        "+ mkdir -p /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls",
        "+ cp /root/ca-tools/walmart/client1/tls/keystore/0d9ae0f8ed0d0d3f2933d9a23d015415ebea4d1227284f147186ad8719988671_sk /root/ca-tools/walmart/client1/tls/keystore/47087c4624d7693c28c6ad7bd3c7fe8dd94aa58c92b98a1f41c0fafef9b47f0f_sk /root/ca-tools/walmart/client1/tls/keystore/4f475c147e0b1c2e6d29ec4947031dfddb4d0c540b6fca226fc819f28d204306_sk /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key",
        "cp: target '/crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.key' is not a directory",
        "+ cp /root/ca-tools/walmart/client1/tls/signcerts/cert.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/client.crt",
        "+ cp /root/ca-tools/walmart/client1/tls/tlscacerts/tls-ca-walmart-net-7054.pem /crypto-config/ordererOrganizations/walmart-net/users/User1@walmart-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info\nPassword: orderer3.walmart-net-pw",
    "stdout_lines": [
        "Registering and enrolling orderer3.walmart-net with csr hosts orderer3.walmart-net,orderer3.walmart-net.suneel.pvt.wmtbaf.info",
        "Password: orderer3.walmart-net-pw"
    ]
}

TASK [create/crypto/orderer : Copy the crypto config folder from the ca tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:124
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841466.9803789-1912-16682088683618 `" && echo ansible-tmp-1604841466.9803789-1912-16682088683618="` echo /root/.ansible/tmp/ansible-tmp-1604841466.9803789-1912-16682088683618 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8xysqh9g TO /root/.ansible/tmp/ansible-tmp-1604841466.9803789-1912-16682088683618/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841466.9803789-1912-16682088683618/ /root/.ansible/tmp/ansible-tmp-1604841466.9803789-1912-16682088683618/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841466.9803789-1912-16682088683618/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841466.9803789-1912-16682088683618/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.768227",
    "end": "2020-11-08 13:17:47.883796",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n walmart-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp walmart-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:47.115569",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/orderer : Copy the crypto material for orderer] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841467.9543557-1952-270934973786320 `" && echo ansible-tmp-1604841467.9543557-1952-270934973786320="` echo /root/.ansible/tmp/ansible-tmp-1604841467.9543557-1952-270934973786320 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpkix2ug3m TO /root/.ansible/tmp/ansible-tmp-1604841467.9543557-1952-270934973786320/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841467.9543557-1952-270934973786320/ /root/.ansible/tmp/ansible-tmp-1604841467.9543557-1952-270934973786320/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841467.9543557-1952-270934973786320/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841467.9543557-1952-270934973786320/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
    "delta": "0:00:00.132328",
    "end": "2020-11-08 13:17:48.218833",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp/tlscacerts/ca-walmart-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:48.086505",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/msp"
    ]
}

TASK [create/crypto/orderer : Check Ambassador cred exists] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:147
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841468.284756-2004-220639007708541 `" && echo ansible-tmp-1604841468.284756-2004-220639007708541="` echo /root/.ansible/tmp/ansible-tmp-1604841468.284756-2004-220639007708541 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpyiy722ex TO /root/.ansible/tmp/ansible-tmp-1604841468.284756-2004-220639007708541/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841468.284756-2004-220639007708541/ /root/.ansible/tmp/ansible-tmp-1604841468.284756-2004-220639007708541/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841468.284756-2004-220639007708541/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841468.284756-2004-220639007708541/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "orderer3-walmart-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "data": {
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5akNDQVp1Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQldNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEcKQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5WlhJeApFekFSQmdOVkJBTU1DbU5oTG5kaGJHMWhjblF3SGhjTk1qQXhNVEEyTURneU9URXhXaGNOTWpNd09EQXpNRGd5Ck9URXhXakJ1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFIREJJMU1TNDFNQ3d0TUM0eE15eE0KYjI1a2IyNHhDekFKQmdOVkJBWVRBa2RDTVRBd0xnWURWUVFERENkdmNtUmxjbVZ5TXk1dmNtUmxjbVZ5TG5OMQpibVZsYkM1d2RuUXVkMjEwWW1GbUxtbHVabTh3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFCCnlFK21McFhYUE9CZ2NFK3lKelRJZ3M2SGdGOHdwVWhIZDZveExYSjBIaC85NC9VWCtzTVY5TlpqclAvVktQL0MKVWdodytHMzRSL0hUbmFqalVnZ21vMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVXFINFJwbFZ3aENqNHE3cXROSmVPN1Z5SWRtb3dDZ1lJS29aSXpqMEVBd0lEClNRQXdSZ0loQU51TVYveDBvZ3lKekd3bXFhMDZIZWswY0NZckxvaytCUkRtaDZ3OGFDZEFBaUVBcGJ3Qi90QjcKQ2pBcDZ6emZPRmU3c25CUFE5WUl1ZmZiTnhzRTJrQ3Rzenc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4RENDQVphZ0F3SUJBZ0lVTXpoc3dlUS9ZeEdUQWxxZFAxaXZrTVl4ODcwd0NnWUlLb1pJemowRUF3SXcKVmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRFZRUUREQXBqWVM1M1lXeHRZWEowTUI0WERUSXdNVEV3Ck5qQTRNVGt4TmxvWERUSXpNRGd5TnpBNE1Ua3hObG93VmpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ00KQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUk13RVFZRApWUVFEREFwallTNTNZV3h0WVhKME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhvSXQ4ZVorCjlYR0NDN1c3TGxHVStpVVE1dm5hcXptT3MxdEp3Nmp2TGJuNGQ5S05OejR1bnJYNS81YjNxNFlrTHhKWU96aE0KWGM3dzdycG1xS1dFc3FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQWFZdwpIUVlEVlIwT0JCWUVGSjRpVG5QeHZNcG1TS0lxZDdmZmhubUM4TThBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRGd3UGZRWU1QQ2IyYml3ZmtPVDVWZFZ1RVJIdklnYnRsa3R6VlZGQk45dGdJZ05sNE9wMlRHSE9ZMHF0aEQKdnRDQzFDbzBoRGx2SkxlcmFMcGJWMXRrR1RnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                "tls.key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUMzSks3ZzJKRVhxaGZLR3YyL2hheWlJRi9ndDNSazVBL0IySzNNdGNHOFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQWNoUHBpNlYxenpnWUhCUHNpYzB5SUxPaDRCZk1LVklSM2VxTVMxeWRCNGYvZVAxRi9yRApGZlRXWTZ6LzFTai93bElJY1BodCtFZngwNTJvNDFJSUpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
            },
            "kind": "Secret",
            "metadata": {
                "creationTimestamp": "2020-11-06T08:29:11Z",
                "name": "orderer3-walmart-net-ambassador-certs",
                "namespace": "default",
                "resourceVersion": "2408791",
                "selfLink": "/api/v1/namespaces/default/secrets/orderer3-walmart-net-ambassador-certs",
                "uid": "9c28f8f6-56fe-49c2-9cf9-f892bc7312b3"
            },
            "type": "kubernetes.io/tls"
        }
    ]
}

TASK [create/crypto/orderer : Check if orderer ambassador secrets already created] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:157
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841468.8984907-2032-261977452113709 `" && echo ansible-tmp-1604841468.8984907-2032-261977452113709="` echo /root/.ansible/tmp/ansible-tmp-1604841468.8984907-2032-261977452113709 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpipsciinj TO /root/.ansible/tmp/ansible-tmp-1604841468.8984907-2032-261977452113709/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841468.8984907-2032-261977452113709/ /root/.ansible/tmp/ansible-tmp-1604841468.8984907-2032-261977452113709/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841468.8984907-2032-261977452113709/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841468.8984907-2032-261977452113709/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
    "delta": "0:00:00.088614",
    "end": "2020-11-08 13:17:49.117576",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:49.028962",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get Orderer ambassador info] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:167
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Generate the orderer certificate] ****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:179
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Create the Ambassador credentials] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:191
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/orderer : Copy the crypto material to Vault] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/orderer.yaml:200
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841469.281827-2073-230671790501209 `" && echo ansible-tmp-1604841469.281827-2073-230671790501209="` echo /root/.ansible/tmp/ansible-tmp-1604841469.281827-2073-230671790501209 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpezo4uws4 TO /root/.ansible/tmp/ansible-tmp-1604841469.281827-2073-230671790501209/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841469.281827-2073-230671790501209/ /root/.ansible/tmp/ansible-tmp-1604841469.281827-2073-230671790501209/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841469.281827-2073-230671790501209/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841469.281827-2073-230671790501209/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
    "delta": "0:00:00.051466",
    "end": "2020-11-08 13:17:49.464367",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3 certificate=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:49.412901",
    "stderr": "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory\ncat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory",
    "stderr_lines": [
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net-certchain.pem: No such file or directory",
        "cat: ./build/crypto-config/ordererOrganizations/walmart-net/orderer3-walmart-net.key: No such file or directory"
    ],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/ambassador/orderer3"
    ]
}

TASK [create/crypto/orderer : Check if admin msp already created] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:31
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841469.5266595-2110-181850834084443 `" && echo ansible-tmp-1604841469.5266595-2110-181850834084443="` echo /root/.ansible/tmp/ansible-tmp-1604841469.5266595-2110-181850834084443 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpq5czufz9 TO /root/.ansible/tmp/ansible-tmp-1604841469.5266595-2110-181850834084443/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841469.5266595-2110-181850834084443/ /root/.ansible/tmp/ansible-tmp-1604841469.5266595-2110-181850834084443/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841469.5266595-2110-181850834084443/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841469.5266595-2110-181850834084443/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
    "delta": "0:00:00.054141",
    "end": "2020-11-08 13:17:49.713483",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/ordererOrganizations/walmart-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:49.659342",
    "stderr": "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/orderer : Copy organization level certificates for orgs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/orderer/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841469.7810538-2144-24235075840796 `" && echo ansible-tmp-1604841469.7810538-2144-24235075840796="` echo /root/.ansible/tmp/ansible-tmp-1604841469.7810538-2144-24235075840796 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5njft0vs TO /root/.ansible/tmp/ansible-tmp-1604841469.7810538-2144-24235075840796/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841469.7810538-2144-24235075840796/ /root/.ansible/tmp/ansible-tmp-1604841469.7810538-2144-24235075840796/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841469.7810538-2144-24235075840796/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841469.7810538-2144-24235075840796/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.095255",
    "end": "2020-11-08 13:17:50.007121",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations/walmart-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/client.key)\"\nvault write secret/crypto/ordererOrganizations/walmart-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/admincerts/Admin@walmart-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/cacerts/ca-walmart-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/ordererOrganizations/walmart-net/users/Admin@walmart-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:49.911866",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls\nSuccess! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/tls",
        "Success! Data written to: secret/crypto/ordererOrganizations/walmart-net/users/admin/msp"
    ]
}

TASK [include_role : create/crypto/peer] ***************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:114
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Waiting for CA-tool in carrier-net] **************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:6
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:5
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca-tools in carrier-net] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:36
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841470.3722365-2205-127209485959897 `" && echo ansible-tmp-1604841470.3722365-2205-127209485959897="` echo /root/.ansible/tmp/ansible-tmp-1604841470.3722365-2205-127209485959897 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqu7eajd4 TO /root/.ansible/tmp/ansible-tmp-1604841470.3722365-2205-127209485959897/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841470.3722365-2205-127209485959897/ /root/.ansible/tmp/ansible-tmp-1604841470.3722365-2205-127209485959897/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841470.3722365-2205-127209485959897/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841470.3722365-2205-127209485959897/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "attempts": 1,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [
                "status.phase=Running"
            ],
            "host": null,
            "kind": "Pod",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [
                "name = ca-tools"
            ],
            "name": null,
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2020-11-08T13:11:56Z",
                "generateName": "ca-tools-69d7885f86-",
                "labels": {
                    "name": "ca-tools",
                    "pod-template-hash": "69d7885f86"
                },
                "name": "ca-tools-69d7885f86-vwlwd",
                "namespace": "carrier-net",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "ca-tools-69d7885f86",
                        "uid": "2716696e-c952-4919-9df6-717d89c28eb8"
                    }
                ],
                "resourceVersion": "2909159",
                "selfLink": "/api/v1/namespaces/carrier-net/pods/ca-tools-69d7885f86-vwlwd",
                "uid": "1bb9bce6-d897-41d6-a204-60ed50ce2b92"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "/bin/bash"
                        ],
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ca-tools",
                        "resources": {},
                        "stdin": true,
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "tty": true,
                        "volumeMounts": [
                            {
                                "mountPath": "/root/ca-tools",
                                "name": "ca-tools-pv"
                            },
                            {
                                "mountPath": "/crypto-config",
                                "name": "ca-tools-crypto-pv"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-lwgs9",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "aks-fabricpool-41135923-vmss000002",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "ca-tools-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-pvc"
                        }
                    },
                    {
                        "name": "ca-tools-crypto-pv",
                        "persistentVolumeClaim": {
                            "claimName": "ca-tools-crypto-pvc"
                        }
                    },
                    {
                        "name": "default-token-lwgs9",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-lwgs9"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:12:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:12:50Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:12:50Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-11-08T13:12:15Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://902c63536884aeb3beb04e55dedd0ba23033d9a23521fa435e8b713d03f2de16",
                        "image": "hyperledger/fabric-ca-tools:1.2.0",
                        "imageID": "docker-pullable://hyperledger/fabric-ca-tools@sha256:c7106e423feea73e3c9e10a65b1d9b291f5b196fcb4eb8e353a353fa92111be4",
                        "lastState": {},
                        "name": "ca-tools",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-11-08T13:12:50Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.1.0.66",
                "phase": "Running",
                "podIP": "10.1.0.88",
                "podIPs": [
                    {
                        "ip": "10.1.0.88"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2020-11-08T13:12:15Z"
            }
        }
    ]
}

TASK [create/crypto/peer : Ensure ca directory exists] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:21
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841470.987086-2233-50296217879700 `" && echo ansible-tmp-1604841470.987086-2233-50296217879700="` echo /root/.ansible/tmp/ansible-tmp-1604841470.987086-2233-50296217879700 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphn7iqzwj TO /root/.ansible/tmp/ansible-tmp-1604841470.987086-2233-50296217879700/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841470.987086-2233-50296217879700/ /root/.ansible/tmp/ansible-tmp-1604841470.987086-2233-50296217879700/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841470.987086-2233-50296217879700/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841470.987086-2233-50296217879700/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/ca",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Check if ca certs already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:28
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841471.1945171-2259-58157797046322 `" && echo ansible-tmp-1604841471.1945171-2259-58157797046322="` echo /root/.ansible/tmp/ansible-tmp-1604841471.1945171-2259-58157797046322 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpi5u_0wn9 TO /root/.ansible/tmp/ansible-tmp-1604841471.1945171-2259-58157797046322/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841471.1945171-2259-58157797046322/ /root/.ansible/tmp/ansible-tmp-1604841471.1945171-2259-58157797046322/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841471.1945171-2259-58157797046322/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841471.1945171-2259-58157797046322/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.057207",
    "end": "2020-11-08 13:17:51.382924",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.carrier-net-cert.pem secret/crypto/peerOrganizations/carrier-net/ca > ca.carrier-net-cert.pem\nmv ca.carrier-net-cert.pem ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:51.325717",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if ca key already created] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:38
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841471.447022-2295-217641766424708 `" && echo ansible-tmp-1604841471.447022-2295-217641766424708="` echo /root/.ansible/tmp/ansible-tmp-1604841471.447022-2295-217641766424708 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5jtb840a TO /root/.ansible/tmp/ansible-tmp-1604841471.447022-2295-217641766424708/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841471.447022-2295-217641766424708/ /root/.ansible/tmp/ansible-tmp-1604841471.447022-2295-217641766424708/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841471.447022-2295-217641766424708/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841471.447022-2295-217641766424708/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:00.053258",
    "end": "2020-11-08 13:17:51.634852",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=carrier-net-CA.key secret/crypto/peerOrganizations/carrier-net/ca > carrier-net-CA.key\nmv carrier-net-CA.key ./build/crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:51.581594",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peercheck.yaml for each peer] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:47
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841471.7658005-2334-84480602993218 `" && echo ansible-tmp-1604841471.7658005-2334-84480602993218="` echo /root/.ansible/tmp/ansible-tmp-1604841471.7658005-2334-84480602993218 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp4257q2x2 TO /root/.ansible/tmp/ansible-tmp-1604841471.7658005-2334-84480602993218/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841471.7658005-2334-84480602993218/ /root/.ansible/tmp/ansible-tmp-1604841471.7658005-2334-84480602993218/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841471.7658005-2334-84480602993218/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841471.7658005-2334-84480602993218/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
    "delta": "0:00:00.051665",
    "end": "2020-11-08 13:17:51.949006",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:51.897341",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if peer msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841472.0413-2371-186702206545871 `" && echo ansible-tmp-1604841472.0413-2371-186702206545871="` echo /root/.ansible/tmp/ansible-tmp-1604841472.0413-2371-186702206545871 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpj_bgsjdh TO /root/.ansible/tmp/ansible-tmp-1604841472.0413-2371-186702206545871/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841472.0413-2371-186702206545871/ /root/.ansible/tmp/ansible-tmp-1604841472.0413-2371-186702206545871/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841472.0413-2371-186702206545871/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841472.0413-2371-186702206545871/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
    "delta": "0:00:00.052035",
    "end": "2020-11-08 13:17:52.225653",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:17:52.173618",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get MSP info] ************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peercheck.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Call common.yaml for each peer] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:53
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml for localhost

TASK [create/crypto/peer : Create directory path on CA Tools] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:7
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841472.3785346-2410-19454226113734 `" && echo ansible-tmp-1604841472.3785346-2410-19454226113734="` echo /root/.ansible/tmp/ansible-tmp-1604841472.3785346-2410-19454226113734 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpacmz3w87 TO /root/.ansible/tmp/ansible-tmp-1604841472.3785346-2410-19454226113734/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841472.3785346-2410-19454226113734/ /root/.ansible/tmp/ansible-tmp-1604841472.3785346-2410-19454226113734/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841472.3785346-2410-19454226113734/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841472.3785346-2410-19454226113734/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
    "delta": "0:00:01.324174",
    "end": "2020-11-08 13:17:53.850315",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get pods -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p crypto-config/peerOrganizations/carrier-net/ca\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net  ${CA_TOOL_CLI} -- mkdir -p /root/ca-tools/carrier\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:52.526141",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Copy generate-usercrypto.sh to destination directory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841473.9153597-2455-51802134508007 `" && echo ansible-tmp-1604841473.9153597-2455-51802134508007="` echo /root/.ansible/tmp/ansible-tmp-1604841473.9153597-2455-51802134508007 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpec5u7smd TO /root/.ansible/tmp/ansible-tmp-1604841473.9153597-2455-51802134508007/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841473.9153597-2455-51802134508007/ /root/.ansible/tmp/ansible-tmp-1604841473.9153597-2455-51802134508007/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841473.9153597-2455-51802134508007/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841473.9153597-2455-51802134508007/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "checksum": "4b9b4b4451f012c62f931359e2ee86c7c7fb9bcd",
    "dest": "./build/generate-user-crypto.sh",
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": null,
            "attributes": null,
            "backup": false,
            "checksum": null,
            "content": null,
            "dest": "./build/generate-user-crypto.sh",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b506c424be9426c6256041bffdf240de",
    "mode": "0755",
    "owner": "root",
    "size": 2703,
    "src": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Changing the permission of msp files] ***************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841474.1227438-2481-105387393476134 `" && echo ansible-tmp-1604841474.1227438-2481-105387393476134="` echo /root/.ansible/tmp/ansible-tmp-1604841474.1227438-2481-105387393476134 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpteu2v2tn TO /root/.ansible/tmp/ansible-tmp-1604841474.1227438-2481-105387393476134/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841474.1227438-2481-105387393476134/ /root/.ansible/tmp/ansible-tmp-1604841474.1227438-2481-105387393476134/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841474.1227438-2481-105387393476134/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841474.1227438-2481-105387393476134/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-crypto-carrier.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-crypto-carrier.sh"
        },
        "before": {
            "mode": "0644",
            "path": "./build/generate-crypto-carrier.sh"
        }
    },
    "files": "generate-crypto-carrier.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-crypto-carrier.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-crypto-carrier.sh",
    "size": 5182,
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841474.295008-2481-275801942228869 `" && echo ansible-tmp-1604841474.295008-2481-275801942228869="` echo /root/.ansible/tmp/ansible-tmp-1604841474.295008-2481-275801942228869 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbj8ju1_1 TO /root/.ansible/tmp/ansible-tmp-1604841474.295008-2481-275801942228869/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841474.295008-2481-275801942228869/ /root/.ansible/tmp/ansible-tmp-1604841474.295008-2481-275801942228869/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841474.295008-2481-275801942228869/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841474.295008-2481-275801942228869/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item=generate-user-crypto.sh) => {
    "ansible_loop_var": "files",
    "changed": true,
    "diff": {
        "after": {
            "mode": "0775",
            "path": "./build/generate-user-crypto.sh"
        },
        "before": {
            "mode": "0755",
            "path": "./build/generate-user-crypto.sh"
        }
    },
    "files": "generate-user-crypto.sh",
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0775",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/generate-user-crypto.sh",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "file",
            "unsafe_writes": false
        }
    },
    "mode": "0775",
    "owner": "root",
    "path": "./build/generate-user-crypto.sh",
    "size": 2703,
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Copy the generate_crypto.sh file into the CA Tools] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:43
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841474.5000222-2532-157531994537761 `" && echo ansible-tmp-1604841474.5000222-2532-157531994537761="` echo /root/.ansible/tmp/ansible-tmp-1604841474.5000222-2532-157531994537761 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmprp1091f1 TO /root/.ansible/tmp/ansible-tmp-1604841474.5000222-2532-157531994537761/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841474.5000222-2532-157531994537761/ /root/.ansible/tmp/ansible-tmp-1604841474.5000222-2532-157531994537761/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841474.5000222-2532-157531994537761/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841474.5000222-2532-157531994537761/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
    "delta": "0:00:03.907724",
    "end": "2020-11-08 13:17:58.536916",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-crypto-carrier.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp ./build/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/ca/\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:54.629192",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Generate crypto material for organization peers] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841478.603937-2582-200356746018158 `" && echo ansible-tmp-1604841478.603937-2582-200356746018158="` echo /root/.ansible/tmp/ansible-tmp-1604841478.603937-2582-200356746018158 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpg6v0tl0z TO /root/.ansible/tmp/ansible-tmp-1604841478.603937-2582-200356746018158/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841478.603937-2582-200356746018158/ /root/.ansible/tmp/ansible-tmp-1604841478.603937-2582-200356746018158/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841478.603937-2582-200356746018158/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841478.603937-2582-200356746018158/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
    "delta": "0:00:03.600993",
    "end": "2020-11-08 13:18:02.335500",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-crypto.sh\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier 1 carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:17:58.734507",
    "stderr": "+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier-net.suneel.pvt.wmtbaf.info\")\n+ ORG_NAME=carrier\n+ AFFILIATION=carrier\n+ SUBJECT=C=GB,ST=London,L=London,O=carrier\n+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ CA_ADMIN_USER=carrier-admin\n+ CA_ADMIN_PASS=carrier-adminpw\n+ ORG_ADMIN_USER=Admin@carrier-net\n+ ORG_ADMIN_PASS=Admin@carrier-net-pw\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ NO_OF_PEERS=2\n+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:59 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 13:17:59 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 13:17:59 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201947e0}\n2020/11/08 13:17:59 [DEBUG] Entered runEnroll\n2020/11/08 13:17:59 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201947e0}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420194840 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019fe40 DummyKeystore:<nil>}\n2020/11/08 13:17:59 [INFO] TLS Enabled\n2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:17:59 [DEBUG] Client Cert File: \n2020/11/08 13:17:59 [DEBUG] Client Key File: \n2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:59 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:59 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:59 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:59 [INFO] encoded CSR\n2020/11/08 13:17:59 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAENB01\\nc1NNSF3cAR0GdldsYqEeN0Jbl9jfyR1GKoFuLIN64qrzXhaQNTmNKsFdtm2lYGr4\\nh6+aMHRFjFNDxXy7GKA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni12d2x3ZDAKBggqhkjOPQQDAgNHADBEAiBDYm9ZzGg6\\nZXPukYTT8kvYBATvC3oZNl0l1C0g63F6igIgKGRKuG4boQLF5giwsA2TZ0oQJGF3\\nIx1jjx6ryj8JePs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:17:59 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:59 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTRENDQWUrZ0F3SUJBZ0lVYk5BNEZBRDZYUGF4Q3R2YmNaajNxQmxWREtvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OWTJGeWNtbGxjaTFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCRFFkTlhOVFRVaGQzQUVkQm5aWGJHS2hIamRDVzVmWTM4a2RSaXFCYml5RGV1S3EKODE0V2tEVTVqU3JCWGJadHBXQnErSWV2bWpCMFJZeFRROFY4dXhpamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSkNndnBsYlhWN2g4SGZUbTNnRFhwVythL252Ck1COEdBMVVkSXdRWU1CYUFGR2ZkbVUxTXB0RGZvdWhUNG45NWptMDY2QzNNTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0ZG5kc2QyUXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdOcnZSc0pzKwprOFJBblMvLzQ4WXhHZkhzcTVXclU2dHN1Z1FYVzJhRDJad0NJSGxhNCtFUmhHdEkrY24vK0tCV2phcFF4V0FNClBpbDhNTHI3SklZM1I5TUYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:17:59 [DEBUG] newEnrollmentResponse carrier-admin\n2020/11/08 13:17:59 [INFO] Stored client certificate at /root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 13:17:59 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-carrier/msp/cacerts/ca-carrier-net-7054.pem\n+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp\n2020/11/08 13:17:59 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:17:59 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/08 13:17:59 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/08 13:17:59 [DEBUG] Entered runGetCACert\n2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205e40a0 DummyKeystore:<nil>}\n2020/11/08 13:17:59 [INFO] TLS Enabled\n2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:17:59 [DEBUG] Client Cert File: \n2020/11/08 13:17:59 [DEBUG] Client Key File: \n2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:59 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/cainfo\n{}\n2020/11/08 13:17:59 [DEBUG] Received response\nstatusCode=200 (200 OK)\n2020/11/08 13:17:59 [DEBUG] Response body result: map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5 CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]\n2020/11/08 13:17:59 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts\n+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 13:17:59 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 13:17:59 [INFO] TLS Enabled\n2020/11/08 13:17:59 [INFO] TLS Enabled\n+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 13:17:59 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 13:17:59 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 13:17:59 [DEBUG] Checking for enrollment\n2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205de630}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205de690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b57c0 DummyKeystore:<nil>}\n2020/11/08 13:17:59 [INFO] TLS Enabled\n2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:17:59 [DEBUG] Client Cert File: \n2020/11/08 13:17:59 [DEBUG] Client Key File: \n2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:59 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205de630}\n2020/11/08 13:17:59 [DEBUG] Entered runRegister\n2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205de630}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205de690 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b57c0 DummyKeystore:<nil>}\n2020/11/08 13:17:59 [INFO] TLS Enabled\n2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:17:59 [DEBUG] Client Cert File: \n2020/11/08 13:17:59 [DEBUG] Client Key File: \n2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:59 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 13:17:59 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:17:59 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/08 13:17:59 [DEBUG] Register { Name:Admin@carrier-net Type:client Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{abac.init true true} {hf.Registrar.Roles client false} {hf.Registrar.Attributes * false} {hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true}] CAName:  }\n2020/11/08 13:17:59 [DEBUG] Adding token-based authorization header\n2020/11/08 13:17:59 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"Admin@carrier-net\",\"type\":\"client\",\"secret\":\"Admin@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true},{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"},{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true}]}\n2020/11/08 13:17:59 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:17:59 [DEBUG] Response body result: map[secret:Admin@carrier-net-pw]\n2020/11/08 13:17:59 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 13:17:59 [DEBUG] Home directory: /root/ca-tools/carrier/admin\n2020/11/08 13:17:59 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml\n2020/11/08 13:17:59 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201906c0}\n2020/11/08 13:17:59 [DEBUG] Entered runEnroll\n2020/11/08 13:17:59 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }\n2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201906c0}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420190720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197660 DummyKeystore:<nil>}\n2020/11/08 13:17:59 [INFO] TLS Enabled\n2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:17:59 [DEBUG] Client Cert File: \n2020/11/08 13:17:59 [DEBUG] Client Key File: \n2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:17:59 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:17:59 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:17:59 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:17:59 [INFO] encoded CSR\n2020/11/08 13:17:59 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARVZIbW4onqcDrzzcFFA6V0EgHHWImhRxHB8rHrzCr02qabDaYoMiQp1SC1WHY/\\nr8csXByOAKTEeAvTiYLd1HjgoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0gAMEUCIQCm\\nBVzJrAq6ntvIKso+ASU1Od0kKEuMww77NcLvQ6fyDAIgTxUhjYNjTN6gZK6MUD7+\\n3UE6/Z2EFB2agN5uhxoetfk=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:18:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4RENDQXBhZ0F3SUJBZ0lVT2NwZDQwNTIwOW1wRjFGblc5WUU3Y3FzenN3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFVldTRzF1S0o2bkE2ODgzQlJRT2wKZEJJQngxaUpvVWNSd2ZLeDY4d3E5TnFtbXcybUtESWtLZFVndFZoMlA2L0hMRndjamdDa3hIZ0wwNG1DM2RSNAo0S09DQVJrd2dnRVZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCUkV2dHJ2YUZncFNvUVR6OHY4MHNET3pSNXNJekFmQmdOVkhTTUVHREFXZ0JSbjNabE5US2JRMzZMb1UrSi8KZVk1dE91Z3R6REFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxYWjNiSGRrTUlHTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEvaWVyTmNQa2JaeGFRUFFKdkJyVWZ3WmtsVjVsNTVvNlBxUzJPZmJJCjZxY0NJSGp5MUE3dzl5VFYvWUhSVDFxLy9VeitCSW1KeFUxVDZGSm4rNEl6TE9ESgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf]]\n2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse Admin@carrier-net\n2020/11/08 13:18:00 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/msp/signcerts/cert.pem\n2020/11/08 13:18:00 [INFO] Stored root CA certificate at /root/ca-tools/carrier/admin/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts\n+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem\n+ mkdir /root/ca-tools/carrier/admin/msp/admincerts\n+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 13:18:00 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:18:00 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml\n2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42005e6f0}\n2020/11/08 13:18:00 [DEBUG] Entered runEnroll\n2020/11/08 13:18:00 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }\n2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42005e6f0}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42005e750 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203d36f0 DummyKeystore:<nil>}\n2020/11/08 13:18:00 [INFO] TLS Enabled\n2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:00 [DEBUG] Client Cert File: \n2020/11/08 13:18:00 [DEBUG] Client Key File: \n2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:00 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:18:00 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:18:00 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:18:00 [INFO] encoded CSR\n2020/11/08 13:18:00 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQVfEwoAF3yRj2hN9FVY2PKGemA2tYGZJG2y+hu6BnqCqtM+nTEqe2DaH3q6yTQ\\nnIaO3X+mFegjjBrNzrnspffJoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0gAMEUCIQDC\\nMgNg+mw5+bdgGoMe3VKVkIBkQCzCnEfTukx1LyB/QAIgOZAdeXO4xx+O0znXiE/7\\nMifvKvzGnFKB1q9UbTZdGTI=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:18:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREakNDQXJXZ0F3SUJBZ0lVSUgxMkU1UGpuUloyMURNOE1Tcko3ZzdYdElNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRlh4TUtBQmQ4a1k5b1RmUlZXTmoKeWhucGdOcldCbVNSdHN2b2J1Z1o2Z3FyVFBwMHhLbnRnMmg5NnVzazBKeUdqdDEvcGhYb0k0d2F6YzY1N0tYMwp5YU9DQVRnd2dnRTBNQTRHQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVZ0Z6QTVWVlhSS0tiVGtvbTEyS1YKY1JpZDRrQXdId1lEVlIwakJCZ3dGb0FVWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d0pBWURWUjBSQkIwdwpHNElaWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxMmQyeDNaRENCamdZSUtnTUVCUVlIQ0FFRWdZRjdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENKaFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SW1OaGNuSnBaWElpTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKQlpHMXBia0JqWVhKeQphV1Z5TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbGJuUWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCmR5M3BlcFhFM1JJd1JvZ1drZDRZQS9qR212MEhCZ0tjSWZnZlFMMHpFbXNDSURGUzdiUE1JZnNGRGRwNGRuSWEKN0tqWDdTM2crNGJZSkkyaVRVWW02SHJmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse Admin@carrier-net\n2020/11/08 13:18:00 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/tls/signcerts/cert.pem\n2020/11/08 13:18:00 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls\n+ cp /root/ca-tools/carrier/admin/tls/keystore/e1e61d222caef70f3501248067d3fa583c21eba3fb10fe56f214eab16b9cf831_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key\n+ cp /root/ca-tools/carrier/admin/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt\n+ cp /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt\n+ COUNTER=0\n+ '[' 0 -lt 2 ']'\n+ PEER=peer0.carrier-net\n+ CSR_HOSTS=peer0.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 13:18:00 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 13:18:00 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 13:18:00 [DEBUG] Checking for enrollment\n2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420396510}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420396570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b410 DummyKeystore:<nil>}\n2020/11/08 13:18:00 [INFO] TLS Enabled\n2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:00 [DEBUG] Client Cert File: \n2020/11/08 13:18:00 [DEBUG] Client Key File: \n2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420396510}\n2020/11/08 13:18:00 [DEBUG] Entered runRegister\n2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420396510}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420396570 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b410 DummyKeystore:<nil>}\n2020/11/08 13:18:00 [INFO] TLS Enabled\n2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:00 [DEBUG] Client Cert File: \n2020/11/08 13:18:00 [DEBUG] Client Key File: \n2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:00 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 13:18:00 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:18:00 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/08 13:18:00 [DEBUG] Register { Name:peer0.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 13:18:00 [DEBUG] Adding token-based authorization header\n2020/11/08 13:18:00 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"peer0.carrier-net\",\"type\":\"peer\",\"secret\":\"peer0.carrier-net-pw\",\"affiliation\":\"\"}\n2020/11/08 13:18:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:00 [DEBUG] Response body result: map[secret:peer0.carrier-net-pw]\n2020/11/08 13:18:00 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 13:18:00 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0690}\n2020/11/08 13:18:00 [DEBUG] Entered runEnroll\n2020/11/08 13:18:00 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0690}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a06f0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bdcb0 DummyKeystore:<nil>}\n2020/11/08 13:18:00 [INFO] TLS Enabled\n2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:00 [DEBUG] Client Cert File: \n2020/11/08 13:18:00 [DEBUG] Client Key File: \n2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:00 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:18:00 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:18:00 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:18:00 [INFO] encoded CSR\n2020/11/08 13:18:00 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIByjCCAXACAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASjc/Wt5doKURbLyz9G5Ud+08NxuLO93l/zq1DjGsn4NgzWX3LLYcA+ES5h8xae\\nabBpBKmeMLSB+0NBBX0Vv6jMoIGjMIGgBgkqhkiG9w0BCQ4xgZIwgY8wgYwGA1Ud\\nEQSBhDCBgYIRcGVlcjAuY2Fycmllci1uZXSCI3BlZXIwLmNhcnJpZXItbmV0LnN2\\nYy5jbHVzdGVyLmxvY2FsghFwZWVyMC5jYXJyaWVyLm5ldII0cGVlcjAuY2Fycmll\\nci1uZXQuY2Fycmllci1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjO\\nPQQDAgNIADBFAiEA1rAEG2vzjTYqU31QM5O+5qw/b4QBMvWxrLs2IGmFaX8CIFM+\\nadjqNiT1k2cTB5IwkgB3x0JdfnHwQqvLJHwh70oS\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:18:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQXQrZ0F3SUJBZ0lVZG9UR3RvQzBmd3VQdkUxeHhreUwwKzhzM0VNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbzNQMXJlWGFDbEVXeThzL1J1VkhmdFBEY2JpenZkNWY4NnRRNHhySitEWU0KMWw5eXkySEFQaEV1WWZNV25tbXdhUVNwbmpDMGdmdERRUVY5RmIrb3pLT0NBWFF3Z2dGd01BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVbnJZRlJIUXkxUm9xby82NGdzUEZMOWovOEVZd0h3WURWUjBqQkJnd0ZvQVUKWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d2dZd0dBMVVkRVFTQmhEQ0JnWUlSY0dWbGNqQXVZMkZ5Y21sbApjaTF1WlhTQ0kzQmxaWEl3TG1OaGNuSnBaWEl0Ym1WMExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2doRndaV1Z5Ck1DNWpZWEp5YVdWeUxtNWxkSUkwY0dWbGNqQXVZMkZ5Y21sbGNpMXVaWFF1WTJGeWNtbGxjaTF1WlhRdWMzVnUKWldWc0xuQjJkQzUzYlhSaVlXWXVhVzVtYnpCaUJnZ3FBd1FGQmdjSUFRUldleUpoZEhSeWN5STZleUpvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkluQmxaWEl3TG1OaGNuSnBaWEl0CmJtVjBJaXdpYUdZdVZIbHdaU0k2SW5CbFpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU9DbXR1a3QKblRFcjJ4MElMMFNlYzZYK3N5bmY2OS80L3Vtc0d6T21PMFRNQWlBc25TRE9uUlVKeUI1cHhlSTJCWlM1Q0FLWgpOc1hETllzRFFLdU0va01iaXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse peer0.carrier-net\n2020/11/08 13:18:00 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem\n2020/11/08 13:18:00 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/b8c8f94b349995a962507a3eabf9db98d8db2e59817a73d88f0a136d638201cc_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key\n+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt\n+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 13:18:00 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c6c0}\n2020/11/08 13:18:00 [DEBUG] Entered runEnroll\n2020/11/08 13:18:00 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }\n2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c6c0}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c720 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420182000 DummyKeystore:<nil>}\n2020/11/08 13:18:00 [INFO] TLS Enabled\n2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:00 [DEBUG] Client Cert File: \n2020/11/08 13:18:00 [DEBUG] Client Key File: \n2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:00 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:18:00 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:18:00 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:18:00 [INFO] encoded CSR\n2020/11/08 13:18:00 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQ5yFZYkLyQg+hOu++YcCT7opdAsHTIsssj9nnwlbjReH7y7W93ZhZWmOWckY/F\\nuaq5wrmrk1bgxgthg4evmyEBoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0cAMEQCIFTL\\nwUP7r9LIhjaUNO6CHvSAO3ueQRrWbpZA+W0SKce5AiAJ1kIl4oDi09rjj1qGgENo\\nyTS9K/MkgCSxFP3mieg45w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:18:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVWkpib093ZzRLWHZ2VnBCOWlqRktINUg0dW9rd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFT2NoV1dKQzhrSVBvVHJ2dm1IQWsrNktYUUxCMHlMTExJL1o1OEpXNDBYaCsKOHUxdmQyWVdWcGpsbkpHUHhibXF1Y0s1cTVOVzRNWUxZWU9IcjVzaEFhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbnZYdERnRkhBS05pd1pmVXVjR2twZW9lCmQwNHdId1lEVlIwakJCZ3dGb0FVWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxMmQyeDNaREJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXdMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKZkJyVUtaRklXTDZhbTNXTnoxWmVRVml5WjRKWVludmtDZ25wMUFYM3lzMENJQzZxaGpaR1VNU3dwYldKQXg0cwpVUkx4WmMrTHRTS1NUZ3NaZktuSVJtSFYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse peer0.carrier-net\n2020/11/08 13:18:00 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem\n2020/11/08 13:18:00 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts\n+ let COUNTER=COUNTER+1\n+ '[' 1 -lt 2 ']'\n+ PEER=peer1.carrier-net\n+ CSR_HOSTS=peer1.carrier-net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net\n+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'\n+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\n+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info'\n+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 13:18:00 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 13:18:00 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 13:18:00 [DEBUG] Checking for enrollment\n2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037bcb0}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037bd10 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204f09b0 DummyKeystore:<nil>}\n2020/11/08 13:18:00 [INFO] TLS Enabled\n2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:00 [DEBUG] Client Cert File: \n2020/11/08 13:18:00 [DEBUG] Client Key File: \n2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037bcb0}\n2020/11/08 13:18:00 [DEBUG] Entered runRegister\n2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037bcb0}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037bd10 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204f09b0 DummyKeystore:<nil>}\n2020/11/08 13:18:00 [INFO] TLS Enabled\n2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:00 [DEBUG] Client Cert File: \n2020/11/08 13:18:00 [DEBUG] Client Key File: \n2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:00 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 13:18:00 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:18:00 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/08 13:18:00 [DEBUG] Register { Name:peer1.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }\n2020/11/08 13:18:00 [DEBUG] Adding token-based authorization header\n2020/11/08 13:18:00 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"peer1.carrier-net\",\"type\":\"peer\",\"secret\":\"peer1.carrier-net-pw\",\"affiliation\":\"\"}\n2020/11/08 13:18:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:00 [DEBUG] Response body result: map[secret:peer1.carrier-net-pw]\n2020/11/08 13:18:00 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 13:18:00 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205e0660}\n2020/11/08 13:18:00 [DEBUG] Entered runEnroll\n2020/11/08 13:18:00 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }\n2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205e0660}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205e06c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420285c90 DummyKeystore:<nil>}\n2020/11/08 13:18:00 [INFO] TLS Enabled\n2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:00 [DEBUG] Client Cert File: \n2020/11/08 13:18:00 [DEBUG] Client Key File: \n2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:00 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:18:00 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:18:00 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:18:00 [INFO] encoded CSR\n2020/11/08 13:18:00 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIByjCCAXACAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATXWqqm2tzMkD44A42yg0gw6BzJjMLshL2hZC69vAy87xSRbWbnw75IOamnx6yQ\\npMZX/ugL5qOKnJpICM2fy+MRoIGjMIGgBgkqhkiG9w0BCQ4xgZIwgY8wgYwGA1Ud\\nEQSBhDCBgYIRcGVlcjEuY2Fycmllci1uZXSCI3BlZXIxLmNhcnJpZXItbmV0LnN2\\nYy5jbHVzdGVyLmxvY2FsghFwZWVyMS5jYXJyaWVyLm5ldII0cGVlcjEuY2Fycmll\\nci1uZXQuY2Fycmllci1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjO\\nPQQDAgNIADBFAiEAkum438s4wBnYgmE+a8ojW9xP+w6FwVVt4altQwCo9tgCIDCI\\n/5R67mYMEJ9D2GcTIbRVLWa59o9s98kWvE+/IHi4\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:18:00 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQXQrZ0F3SUJBZ0lVV0pUWHJSRWtueGdETjk4bzN0Y2RPeVQ2blRNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMTFxcXB0cmN6SkErT0FPTnNvTklNT2djeVl6QzdJUzlvV1F1dmJ3TXZPOFUKa1cxbTU4TytTRG1wcDhlc2tLVEdWLzdvQythamlweWFTQWpObjh2akVhT0NBWFF3Z2dGd01BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVejhJaDV2VEpvOGNsdjdGR2xkeW1JZTZpb1g4d0h3WURWUjBqQkJnd0ZvQVUKWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d2dZd0dBMVVkRVFTQmhEQ0JnWUlSY0dWbGNqRXVZMkZ5Y21sbApjaTF1WlhTQ0kzQmxaWEl4TG1OaGNuSnBaWEl0Ym1WMExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2doRndaV1Z5Ck1TNWpZWEp5YVdWeUxtNWxkSUkwY0dWbGNqRXVZMkZ5Y21sbGNpMXVaWFF1WTJGeWNtbGxjaTF1WlhRdWMzVnUKWldWc0xuQjJkQzUzYlhSaVlXWXVhVzVtYnpCaUJnZ3FBd1FGQmdjSUFRUldleUpoZEhSeWN5STZleUpvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkluQmxaWEl4TG1OaGNuSnBaWEl0CmJtVjBJaXdpYUdZdVZIbHdaU0k2SW5CbFpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnUEZwcFRoRksKOXZFdm1yVGRHMzVZNjYyV1RReU40TnIyaDNHeEdSUjhzVUVDSUhJRy8zUEh6OGROeXNPdVlsUVIzd3pGWnJ0SAp4a2IrTFVhYWhKd2drMXdQCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net]]\n2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse peer1.carrier-net\n2020/11/08 13:18:00 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem\n2020/11/08 13:18:00 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\n+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/b3d1f009b11995761a518c0c273c1164c64f2aa6b2cc6959ed5add14d5fcd130_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key\n+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt\n+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt\n+ rm -rf /root/ca-tools/carrier/cas/peers/tls\n+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n2020/11/08 13:18:01 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:18:01 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392660}\n2020/11/08 13:18:01 [DEBUG] Entered runEnroll\n2020/11/08 13:18:01 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }\n2020/11/08 13:18:01 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392660}\n2020/11/08 13:18:01 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203926c0 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:01 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420399f00 DummyKeystore:<nil>}\n2020/11/08 13:18:01 [INFO] TLS Enabled\n2020/11/08 13:18:01 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:01 [DEBUG] Client Cert File: \n2020/11/08 13:18:01 [DEBUG] Client Key File: \n2020/11/08 13:18:01 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:01 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:18:01 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:18:01 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:18:01 [INFO] encoded CSR\n2020/11/08 13:18:01 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQUD/8flTcY2dqMswjjIwOZY+DHhENXXAWyikMGed1XlgvJ2ltKX1ni6hmPJYLG\\nwxwG5/9DJpkR6WI6Qor8KnheoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0gAMEUCIQCX\\nArcc34kuWCZ3nIHmAx/HnJELu+FGOqH0YAqNxtn3GQIgHMqKA23LYuLP2k15ultl\\nDJA+/5SEMHByXxBcytPM5+0=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:18:01 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:01 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVY1NSOWZWTDdDQXdkaDYxeDhIbE0rS0xsSjVvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFRkEvL0g1VTNHTm5hakxNSTR5TURtV1BneDRSRFYxd0Zzb3BEQm5uZFY1WUwKeWRwYlNsOVo0dW9aanlXQ3hzTWNCdWYvUXlhWkVlbGlPa0tLL0NwNFhxT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVb0pYZFJSM25ENC9Bc2taVDk2RDkvbityCkxHUXdId1lEVlIwakJCZ3dGb0FVWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxMmQyeDNaREJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXhMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKUmNEa2VsMVFwb29kNWFxUmlCSXR1MlZFQ3U2Z3lYK0V2dmNpRTFwbjk1UUNJQTZpWEdaS1RiVEVRdE9SamJRUApsQTBIckcrTTBIa2FRM09HQzUwSDdKMGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2020/11/08 13:18:01 [DEBUG] newEnrollmentResponse peer1.carrier-net\n2020/11/08 13:18:01 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem\n2020/11/08 13:18:01 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts\n+ let COUNTER=COUNTER+1\n+ '[' 2 -lt 2 ']'\n+ cd /\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ORG_NAME=carrier\n+ TYPE_FOLDER=peers\n+ NO_OF_USERS=1\n+ AFFILIATION=carrier\n+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ '[' peer '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ USER=0\n+ '[' 0 -lt 1 ']'\n+ let USER=USER+1\n+ ORG_USER=User1@carrier-net\n+ ORG_USERPASS=User1@carrier-net-pw\n+ '[' peer = peer ']'\n+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2020/11/08 13:18:01 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2020/11/08 13:18:01 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2020/11/08 13:18:01 [DEBUG] Checking for enrollment\n2020/11/08 13:18:01 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c45a0}\n2020/11/08 13:18:01 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4600 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:01 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397310 DummyKeystore:<nil>}\n2020/11/08 13:18:01 [INFO] TLS Enabled\n2020/11/08 13:18:01 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:01 [DEBUG] Client Cert File: \n2020/11/08 13:18:01 [DEBUG] Client Key File: \n2020/11/08 13:18:01 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:01 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c45a0}\n2020/11/08 13:18:01 [DEBUG] Entered runRegister\n2020/11/08 13:18:01 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c45a0}\n2020/11/08 13:18:01 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4600 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:01 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397310 DummyKeystore:<nil>}\n2020/11/08 13:18:01 [INFO] TLS Enabled\n2020/11/08 13:18:01 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:01 [DEBUG] Client Cert File: \n2020/11/08 13:18:01 [DEBUG] Client Key File: \n2020/11/08 13:18:01 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:01 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2020/11/08 13:18:01 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2020/11/08 13:18:01 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2020/11/08 13:18:01 [DEBUG] Register { Name:User1@carrier-net Type:user Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{hf.Revoker true false}] CAName:  }\n2020/11/08 13:18:01 [DEBUG] Adding token-based authorization header\n2020/11/08 13:18:01 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/register\n{\"id\":\"User1@carrier-net\",\"type\":\"user\",\"secret\":\"User1@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}\n2020/11/08 13:18:01 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:01 [DEBUG] Response body result: map[secret:User1@carrier-net-pw]\n2020/11/08 13:18:01 [DEBUG] The register request completed successfully\n+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1\n2020/11/08 13:18:01 [DEBUG] Home directory: /root/ca-tools/carrier/client1\n2020/11/08 13:18:01 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml\n2020/11/08 13:18:01 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420414720}\n2020/11/08 13:18:01 [DEBUG] Entered runEnroll\n2020/11/08 13:18:01 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }\n2020/11/08 13:18:01 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420414720}\n2020/11/08 13:18:01 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420414780 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:01 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204282e0 DummyKeystore:<nil>}\n2020/11/08 13:18:01 [INFO] TLS Enabled\n2020/11/08 13:18:01 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:01 [DEBUG] Client Cert File: \n2020/11/08 13:18:01 [DEBUG] Client Key File: \n2020/11/08 13:18:01 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:01 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:18:01 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:18:01 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:18:01 [INFO] encoded CSR\n2020/11/08 13:18:01 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS6UchaugxSMT6TAZ5qGElQGDaSse8YXuCKGCb9x8fBt6CO9UxkdvB497LjhQvM\\nimoy+FHTyXy1RJlXou+qlBzToDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0gAMEUCIQDl\\n8AYYBi04oUjKePedR3ytkvvy5csQT1Jpfla9PUJ/UgIgWmKOBtSPxd9iFV/Xd18i\\n6CaNm3/K1VCZt3f278kAT90=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:18:02 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:02 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN4akNDQW15Z0F3SUJBZ0lVZkZZVDZnS3lmcDBoaWowM2hPNi96ZGpXa0Njd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1IY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTHBSeUZxNkRGSXhQcE1Cbm1vWVNWQVkKTnBLeDd4aGU0SW9ZSnYzSHg4RzNvSTcxVEdSMjhIajNzdU9GQzh5S2FqTDRVZFBKZkxWRW1WZWk3NnFVSE5PagpnZkl3Z2U4d0RnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGTTZ2ClZNY2d3KzJXT0FDVnZSeHZ2TE50amxZdk1COEdBMVVkSXdRWU1CYUFGR2ZkbVUxTXB0RGZvdWhUNG45NWptMDYKNkMzTU1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0ZG5kc2QyUXdhUVlJS2dNRQpCUVlIQ0FFRVhYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1ClJXNXliMnhzYldWdWRFbEVJam9pVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmwKY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUF2RG1PemQzU2luSVl5MG1uV1ZxZ0RpeTc3Q0E1N3BJbApXUFFlUmNFVDBlUUNJSGpXMU55WkpQekJMaG9lODk1aEVCSEZwR05aazBGT3lqMHg0cENtbVFPZwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:18:02 [DEBUG] newEnrollmentResponse User1@carrier-net\n2020/11/08 13:18:02 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/msp/signcerts/cert.pem\n2020/11/08 13:18:02 [INFO] Stored root CA certificate at /root/ca-tools/carrier/client1/msp/cacerts/ca-carrier-net-7054.pem\n+ mkdir /root/ca-tools/carrier/client1/msp/admincerts\n+ cp /root/ca-tools/carrier/client1/msp/signcerts/cert.pem /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n2020/11/08 13:18:02 [DEBUG] Home directory: /root/.fabric-ca-client\n2020/11/08 13:18:02 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204cc4b0}\n2020/11/08 13:18:02 [DEBUG] Entered runEnroll\n2020/11/08 13:18:02 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }\n2020/11/08 13:18:02 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204cc4b0}\n2020/11/08 13:18:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4204cc510 PluginOpts:<nil> Pkcs11Opts:<nil>}\n2020/11/08 13:18:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204d1a60 DummyKeystore:<nil>}\n2020/11/08 13:18:02 [INFO] TLS Enabled\n2020/11/08 13:18:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2020/11/08 13:18:02 [DEBUG] Client Cert File: \n2020/11/08 13:18:02 [DEBUG] Client Key File: \n2020/11/08 13:18:02 [DEBUG] Client TLS certificate and/or key file not provided\n2020/11/08 13:18:02 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2020/11/08 13:18:02 [INFO] generating key: &{A:ecdsa S:256}\n2020/11/08 13:18:02 [DEBUG] generate key from request: algo=ecdsa, size=256\n2020/11/08 13:18:02 [INFO] encoded CSR\n2020/11/08 13:18:02 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBMSwDgSACngTPggg/j/cE4g1eDDQBDB9T0sb0MKgMhtiV1Y0kz4MzTTlv4Lk1vDa\\nHZQlZ1MbPOqrY+DQasSnw5SgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtdndsd2QwCgYIKoZIzj0EAwIDSAAwRQIhAOUf\\njJDZvJ0kqNpWK1P590d9lafJb5bgaYGRoKfrKR0VAiAwu8eLKAS7b0pomV6DhROP\\nxsOiXt800k0oIu8a9m6fBQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2020/11/08 13:18:02 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2020/11/08 13:18:02 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQW8yZ0F3SUJBZ0lVRXhXZnJ6cDNIYk8xK0x6S3lCSERMQS82Vm1Nd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTVN3RGdTQUNuZ1RQZ2dnL2ovY0U0ZzEKZUREUUJEQjlUMHNiME1LZ01odGlWMVkwa3o0TXpUVGx2NExrMXZEYUhaUWxaMU1iUE9xclkrRFFhc1NudzVTagpnZ0VTTUlJQkRqQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRmx6U25sU2NMcmtTR0hHYkxyV3V4b1gKNWdQRU1COEdBMVVkSXdRWU1CYUFGR2ZkbVUxTXB0RGZvdWhUNG45NWptMDY2QzNNTUNRR0ExVWRFUVFkTUJ1QwpHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0ZG5kc2QyUXdhUVlJS2dNRUJRWUhDQUVFWFhzaVlYUjBjbk1pCk9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmxjaUo5ZlRBS0JnZ3Foa2pPUFFRRApBZ05IQURCRUFpQWVZMHd5Rk96UUxEVGlzRVVBbW9DWUtmOXhIc05mMHFpcGk5S0UwM000WVFJZ1h4QTFNVHNtCnBweEl2TjMrZ0NYMlpEdXV0UW8zaUZGemV1Z3p4ZDBuRjNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2020/11/08 13:18:02 [DEBUG] newEnrollmentResponse User1@carrier-net\n2020/11/08 13:18:02 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/tls/signcerts/cert.pem\n2020/11/08 13:18:02 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls\n+ cp /root/ca-tools/carrier/client1/tls/keystore/ebe549fd3fbd4c22ff427f8cb54148576814bec6fe45cf4627f0b59c61fd4a4c_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key\n+ cp /root/ca-tools/carrier/client1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt\n+ cp /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt\n+ '[' 1 -lt 1 ']'\n+ cd /",
    "stderr_lines": [
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ALTERNATIVE_ORG_NAMES=(\"carrier-net.svc.cluster.local\" \"carrier.net\" \"carrier-net.carrier-net.suneel.pvt.wmtbaf.info\")",
        "+ ORG_NAME=carrier",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=C=GB,ST=London,L=London,O=carrier",
        "+ SUBJECT_PEER=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ CA_ADMIN_USER=carrier-admin",
        "+ CA_ADMIN_PASS=carrier-adminpw",
        "+ ORG_ADMIN_USER=Admin@carrier-net",
        "+ ORG_ADMIN_PASS=Admin@carrier-net-pw",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ NO_OF_PEERS=2",
        "+ fabric-ca-client enroll -d -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:59 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:17:59 [INFO] Created a default configuration file at /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:59 [DEBUG] Client configuration settings: &{URL:https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201947e0}",
        "2020/11/08 13:17:59 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:59 [DEBUG] Enrolling { Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:carrier-admin Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{carrier-admin [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201947e0}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420194840 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42019fe40 DummyKeystore:<nil>}",
        "2020/11/08 13:17:59 [INFO] TLS Enabled",
        "2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:17:59 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:59 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:59 [DEBUG] GenCSR &{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:59 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:59 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:59 [INFO] encoded CSR",
        "2020/11/08 13:17:59 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBVzCB/wIBADBmMQswCQYDVQQGEwJHQjEbMBkGA1UEBxMSNTEuNTAvLTAuMTMv\\nTG9uZG9uMRAwDgYDVQQKEwdDYXJyaWVyMRAwDgYDVQQLEwdDYXJyaWVyMRYwFAYD\\nVQQDEw1jYXJyaWVyLWFkbWluMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAENB01\\nc1NNSF3cAR0GdldsYqEeN0Jbl9jfyR1GKoFuLIN64qrzXhaQNTmNKsFdtm2lYGr4\\nh6+aMHRFjFNDxXy7GKA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0RBB0wG4IZY2Et\\ndG9vbHMtNjlkNzg4NWY4Ni12d2x3ZDAKBggqhkjOPQQDAgNHADBEAiBDYm9ZzGg6\\nZXPukYTT8kvYBATvC3oZNl0l1C0g63F6igIgKGRKuG4boQLF5giwsA2TZ0oQJGF3\\nIx1jjx6ryj8JePs=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:17:59 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:59 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTRENDQWUrZ0F3SUJBZ0lVYk5BNEZBRDZYUGF4Q3R2YmNaajNxQmxWREtvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEekFOQmdOVgpCQXNUQm1Oc2FXVnVkREVXTUJRR0ExVUVBeE1OWTJGeWNtbGxjaTFoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHCkNDcUdTTTQ5QXdFSEEwSUFCRFFkTlhOVFRVaGQzQUVkQm5aWGJHS2hIamRDVzVmWTM4a2RSaXFCYml5RGV1S3EKODE0V2tEVTVqU3JCWGJadHBXQnErSWV2bWpCMFJZeFRROFY4dXhpamdZY3dnWVF3RGdZRFZSMFBBUUgvQkFRRApBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSkNndnBsYlhWN2g4SGZUbTNnRFhwVythL252Ck1COEdBMVVkSXdRWU1CYUFGR2ZkbVUxTXB0RGZvdWhUNG45NWptMDY2QzNNTUNRR0ExVWRFUVFkTUJ1Q0dXTmgKTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0ZG5kc2QyUXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdOcnZSc0pzKwprOFJBblMvLzQ4WXhHZkhzcTVXclU2dHN1Z1FYVzJhRDJad0NJSGxhNCtFUmhHdEkrY24vK0tCV2phcFF4V0FNClBpbDhNTHI3SklZM1I5TUYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:17:59 [DEBUG] newEnrollmentResponse carrier-admin",
        "2020/11/08 13:17:59 [INFO] Stored client certificate at /root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 13:17:59 [INFO] Stored root CA certificate at /root/ca-tools/cas/ca-carrier/msp/cacerts/ca-carrier-net-7054.pem",
        "+ fabric-ca-client getcacert -d -u https://ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem -M /crypto-config/peerOrganizations/carrier-net/msp",
        "2020/11/08 13:17:59 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:17:59 [INFO] Configuration file location: /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:59 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/08 13:17:59 [DEBUG] Entered runGetCACert",
        "2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN: Names:[] Hosts:[] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:<nil>}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420189f20 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4205e40a0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:59 [INFO] TLS Enabled",
        "2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:17:59 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:59 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:59 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/cainfo",
        "{}",
        "2020/11/08 13:17:59 [DEBUG] Received response",
        "statusCode=200 (200 OK)",
        "2020/11/08 13:17:59 [DEBUG] Response body result: map[IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:1.4.5 CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==]",
        "2020/11/08 13:17:59 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/msp/tlscacerts",
        "+ fabric-ca-client affiliation add carrier -u https://carrier-admin:carrier-adminpw@ca.carrier-net:7054 --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:17:59 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:59 [INFO] TLS Enabled",
        "2020/11/08 13:17:59 [INFO] TLS Enabled",
        "+ fabric-ca-client register -d --id.name Admin@carrier-net --id.secret Admin@carrier-net-pw --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs 'hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.AffiliationMgr=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert' --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:17:59 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:17:59 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:59 [DEBUG] Checking for enrollment",
        "2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205de630}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205de690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b57c0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:59 [INFO] TLS Enabled",
        "2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:17:59 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:59 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:59 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205de630}",
        "2020/11/08 13:17:59 [DEBUG] Entered runRegister",
        "2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:Admin@carrier-net Type:client Secret:Admin@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:abac.init Value:true ECert:true} {Name:hf.Registrar.Roles Value:client ECert:false} {Name:hf.Registrar.Attributes Value:* ECert:false} {Name:hf.Revoker Value:true ECert:false} {Name:hf.AffiliationMgr Value:true ECert:false} {Name:hf.GenCRL Value:true ECert:false} {Name:admin Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205de630}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205de690 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200b57c0 DummyKeystore:<nil>}",
        "2020/11/08 13:17:59 [INFO] TLS Enabled",
        "2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:17:59 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:59 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:59 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 13:17:59 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:17:59 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/08 13:17:59 [DEBUG] Register { Name:Admin@carrier-net Type:client Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{abac.init true true} {hf.Registrar.Roles client false} {hf.Registrar.Attributes * false} {hf.Revoker true false} {hf.AffiliationMgr true false} {hf.GenCRL true false} {admin true true}] CAName:  }",
        "2020/11/08 13:17:59 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:17:59 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"Admin@carrier-net\",\"type\":\"client\",\"secret\":\"Admin@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"abac.init\",\"value\":\"true\",\"ecert\":true},{\"name\":\"hf.Registrar.Roles\",\"value\":\"client\"},{\"name\":\"hf.Registrar.Attributes\",\"value\":\"*\"},{\"name\":\"hf.Revoker\",\"value\":\"true\"},{\"name\":\"hf.AffiliationMgr\",\"value\":\"true\"},{\"name\":\"hf.GenCRL\",\"value\":\"true\"},{\"name\":\"admin\",\"value\":\"true\",\"ecert\":true}]}",
        "2020/11/08 13:17:59 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:17:59 [DEBUG] Response body result: map[secret:Admin@carrier-net-pw]",
        "2020/11/08 13:17:59 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 --id.affiliation carrier --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/admin --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:17:59 [DEBUG] Home directory: /root/ca-tools/carrier/admin",
        "2020/11/08 13:17:59 [INFO] Created a default configuration file at /root/ca-tools/carrier/admin/fabric-ca-client-config.yaml",
        "2020/11/08 13:17:59 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201906c0}",
        "2020/11/08 13:17:59 [DEBUG] Entered runEnroll",
        "2020/11/08 13:17:59 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:17:59 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation:carrier Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4201906c0}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420190720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:17:59 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420197660 DummyKeystore:<nil>}",
        "2020/11/08 13:17:59 [INFO] TLS Enabled",
        "2020/11/08 13:17:59 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:17:59 [DEBUG] Client Cert File: ",
        "2020/11/08 13:17:59 [DEBUG] Client Key File: ",
        "2020/11/08 13:17:59 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:17:59 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:17:59 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:17:59 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:17:59 [INFO] encoded CSR",
        "2020/11/08 13:17:59 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAARVZIbW4onqcDrzzcFFA6V0EgHHWImhRxHB8rHrzCr02qabDaYoMiQp1SC1WHY/\\nr8csXByOAKTEeAvTiYLd1HjgoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0gAMEUCIQCm\\nBVzJrAq6ntvIKso+ASU1Od0kKEuMww77NcLvQ6fyDAIgTxUhjYNjTN6gZK6MUD7+\\n3UE6/Z2EFB2agN5uhxoetfk=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:18:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4RENDQXBhZ0F3SUJBZ0lVT2NwZDQwNTIwOW1wRjFGblc5WUU3Y3FzenN3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFVldTRzF1S0o2bkE2ODgzQlJRT2wKZEJJQngxaUpvVWNSd2ZLeDY4d3E5TnFtbXcybUtESWtLZFVndFZoMlA2L0hMRndjamdDa3hIZ0wwNG1DM2RSNAo0S09DQVJrd2dnRVZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCUkV2dHJ2YUZncFNvUVR6OHY4MHNET3pSNXNJekFmQmdOVkhTTUVHREFXZ0JSbjNabE5US2JRMzZMb1UrSi8KZVk1dE91Z3R6REFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxYWjNiSGRrTUlHTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEvaWVyTmNQa2JaeGFRUFFKdkJyVWZ3WmtsVjVsNTVvNlBxUzJPZmJJCjZxY0NJSGp5MUE3dzl5VFYvWUhSVDFxLy9VeitCSW1KeFUxVDZGSm4rNEl6TE9ESgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf]]",
        "2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse Admin@carrier-net",
        "2020/11/08 13:18:00 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/msp/signcerts/cert.pem",
        "2020/11/08 13:18:00 [INFO] Stored root CA certificate at /root/ca-tools/carrier/admin/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/msp/admincerts",
        "+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem",
        "+ mkdir /root/ca-tools/carrier/admin/msp/admincerts",
        "+ cp /root/ca-tools/carrier/admin/msp/signcerts/cert.pem /root/ca-tools/carrier/admin/msp/admincerts/Admin@carrier-net-cert.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ cp -R /root/ca-tools/carrier/admin/msp /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/admin/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:18:00 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:18:00 [INFO] Created a default configuration file at /root/.fabric-ca-client/fabric-ca-client-config.yaml",
        "2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://Admin@carrier-net:Admin@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42005e6f0}",
        "2020/11/08 13:18:00 [DEBUG] Entered runEnroll",
        "2020/11/08 13:18:00 [DEBUG] Enrolling { Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/admin/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:Admin@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42005e6f0}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42005e750 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4203d36f0 DummyKeystore:<nil>}",
        "2020/11/08 13:18:00 [INFO] TLS Enabled",
        "2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:00 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:00 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:00 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:18:00 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:18:00 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:18:00 [INFO] encoded CSR",
        "2020/11/08 13:18:00 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRQWRtaW5AY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQVfEwoAF3yRj2hN9FVY2PKGemA2tYGZJG2y+hu6BnqCqtM+nTEqe2DaH3q6yTQ\\nnIaO3X+mFegjjBrNzrnspffJoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0gAMEUCIQDC\\nMgNg+mw5+bdgGoMe3VKVkIBkQCzCnEfTukx1LyB/QAIgOZAdeXO4xx+O0znXiE/7\\nMifvKvzGnFKB1q9UbTZdGTI=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:18:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREakNDQXJXZ0F3SUJBZ0lVSUgxMkU1UGpuUloyMURNOE1Tcko3ZzdYdElNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJBTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRlh4TUtBQmQ4a1k5b1RmUlZXTmoKeWhucGdOcldCbVNSdHN2b2J1Z1o2Z3FyVFBwMHhLbnRnMmg5NnVzazBKeUdqdDEvcGhYb0k0d2F6YzY1N0tYMwp5YU9DQVRnd2dnRTBNQTRHQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVZ0Z6QTVWVlhSS0tiVGtvbTEyS1YKY1JpZDRrQXdId1lEVlIwakJCZ3dGb0FVWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d0pBWURWUjBSQkIwdwpHNElaWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxMmQyeDNaRENCamdZSUtnTUVCUVlIQ0FFRWdZRjdJbUYwCmRISnpJanA3SW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENKaFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnAKYkdsaGRHbHZiaUk2SW1OaGNuSnBaWElpTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKQlpHMXBia0JqWVhKeQphV1Z5TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpqYkdsbGJuUWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCmR5M3BlcFhFM1JJd1JvZ1drZDRZQS9qR212MEhCZ0tjSWZnZlFMMHpFbXNDSURGUzdiUE1JZnNGRGRwNGRuSWEKN0tqWDdTM2crNGJZSkkyaVRVWW02SHJmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse Admin@carrier-net",
        "2020/11/08 13:18:00 [INFO] Stored client certificate at /root/ca-tools/carrier/admin/tls/signcerts/cert.pem",
        "2020/11/08 13:18:00 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/admin/tls/keystore/e1e61d222caef70f3501248067d3fa583c21eba3fb10fe56f214eab16b9cf831_sk /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key",
        "+ cp /root/ca-tools/carrier/admin/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt",
        "+ cp /root/ca-tools/carrier/admin/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt",
        "+ COUNTER=0",
        "+ '[' 0 -lt 2 ']'",
        "+ PEER=peer0.carrier-net",
        "+ CSR_HOSTS=peer0.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer0.carrier-net --id.secret peer0.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:18:00 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:18:00 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 13:18:00 [DEBUG] Checking for enrollment",
        "2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420396510}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420396570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b410 DummyKeystore:<nil>}",
        "2020/11/08 13:18:00 [INFO] TLS Enabled",
        "2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:00 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:00 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420396510}",
        "2020/11/08 13:18:00 [DEBUG] Entered runRegister",
        "2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer0.carrier-net Type:peer Secret:peer0.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420396510}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420396570 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42039b410 DummyKeystore:<nil>}",
        "2020/11/08 13:18:00 [INFO] TLS Enabled",
        "2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:00 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:00 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:00 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 13:18:00 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:18:00 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/08 13:18:00 [DEBUG] Register { Name:peer0.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 13:18:00 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:18:00 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"peer0.carrier-net\",\"type\":\"peer\",\"secret\":\"peer0.carrier-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 13:18:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:00 [DEBUG] Response body result: map[secret:peer0.carrier-net-pw]",
        "2020/11/08 13:18:00 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:18:00 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0690}",
        "2020/11/08 13:18:00 [DEBUG] Entered runEnroll",
        "2020/11/08 13:18:00 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4203a0690}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203a06f0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200bdcb0 DummyKeystore:<nil>}",
        "2020/11/08 13:18:00 [INFO] TLS Enabled",
        "2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:00 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:00 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:00 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer0.carrier-net peer0.carrier-net.svc.cluster.local peer0.carrier.net peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:18:00 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:18:00 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:18:00 [INFO] encoded CSR",
        "2020/11/08 13:18:00 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer0.carrier-net\",\"peer0.carrier-net.svc.cluster.local\",\"peer0.carrier.net\",\"peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIByjCCAXACAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAASjc/Wt5doKURbLyz9G5Ud+08NxuLO93l/zq1DjGsn4NgzWX3LLYcA+ES5h8xae\\nabBpBKmeMLSB+0NBBX0Vv6jMoIGjMIGgBgkqhkiG9w0BCQ4xgZIwgY8wgYwGA1Ud\\nEQSBhDCBgYIRcGVlcjAuY2Fycmllci1uZXSCI3BlZXIwLmNhcnJpZXItbmV0LnN2\\nYy5jbHVzdGVyLmxvY2FsghFwZWVyMC5jYXJyaWVyLm5ldII0cGVlcjAuY2Fycmll\\nci1uZXQuY2Fycmllci1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjO\\nPQQDAgNIADBFAiEA1rAEG2vzjTYqU31QM5O+5qw/b4QBMvWxrLs2IGmFaX8CIFM+\\nadjqNiT1k2cTB5IwkgB3x0JdfnHwQqvLJHwh70oS\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:18:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQXQrZ0F3SUJBZ0lVZG9UR3RvQzBmd3VQdkUxeHhreUwwKzhzM0VNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFbzNQMXJlWGFDbEVXeThzL1J1VkhmdFBEY2JpenZkNWY4NnRRNHhySitEWU0KMWw5eXkySEFQaEV1WWZNV25tbXdhUVNwbmpDMGdmdERRUVY5RmIrb3pLT0NBWFF3Z2dGd01BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVbnJZRlJIUXkxUm9xby82NGdzUEZMOWovOEVZd0h3WURWUjBqQkJnd0ZvQVUKWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d2dZd0dBMVVkRVFTQmhEQ0JnWUlSY0dWbGNqQXVZMkZ5Y21sbApjaTF1WlhTQ0kzQmxaWEl3TG1OaGNuSnBaWEl0Ym1WMExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2doRndaV1Z5Ck1DNWpZWEp5YVdWeUxtNWxkSUkwY0dWbGNqQXVZMkZ5Y21sbGNpMXVaWFF1WTJGeWNtbGxjaTF1WlhRdWMzVnUKWldWc0xuQjJkQzUzYlhSaVlXWXVhVzVtYnpCaUJnZ3FBd1FGQmdjSUFRUldleUpoZEhSeWN5STZleUpvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkluQmxaWEl3TG1OaGNuSnBaWEl0CmJtVjBJaXdpYUdZdVZIbHdaU0k2SW5CbFpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU9DbXR1a3QKblRFcjJ4MElMMFNlYzZYK3N5bmY2OS80L3Vtc0d6T21PMFRNQWlBc25TRE9uUlVKeUI1cHhlSTJCWlM1Q0FLWgpOc1hETllzRFFLdU0va01iaXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse peer0.carrier-net",
        "2020/11/08 13:18:00 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem",
        "2020/11/08 13:18:00 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/b8c8f94b349995a962507a3eabf9db98d8db2e59817a73d88f0a136d638201cc_sk /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:18:00 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://peer0.carrier-net:peer0.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c6c0}",
        "2020/11/08 13:18:00 [DEBUG] Entered runEnroll",
        "2020/11/08 13:18:00 [DEBUG] Enrolling { Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer0.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037c6c0}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037c720 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420182000 DummyKeystore:<nil>}",
        "2020/11/08 13:18:00 [INFO] TLS Enabled",
        "2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:00 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:00 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:00 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:18:00 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:18:00 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:18:00 [INFO] encoded CSR",
        "2020/11/08 13:18:00 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjAuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQ5yFZYkLyQg+hOu++YcCT7opdAsHTIsssj9nnwlbjReH7y7W93ZhZWmOWckY/F\\nuaq5wrmrk1bgxgthg4evmyEBoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0cAMEQCIFTL\\nwUP7r9LIhjaUNO6CHvSAO3ueQRrWbpZA+W0SKce5AiAJ1kIl4oDi09rjj1qGgENo\\nyTS9K/MkgCSxFP3mieg45w==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:18:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVWkpib093ZzRLWHZ2VnBCOWlqRktINUg0dW9rd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJd0xtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFT2NoV1dKQzhrSVBvVHJ2dm1IQWsrNktYUUxCMHlMTExJL1o1OEpXNDBYaCsKOHUxdmQyWVdWcGpsbkpHUHhibXF1Y0s1cTVOVzRNWUxZWU9IcjVzaEFhT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbnZYdERnRkhBS05pd1pmVXVjR2twZW9lCmQwNHdId1lEVlIwakJCZ3dGb0FVWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxMmQyeDNaREJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXdMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKZkJyVUtaRklXTDZhbTNXTnoxWmVRVml5WjRKWVludmtDZ25wMUFYM3lzMENJQzZxaGpaR1VNU3dwYldKQXg0cwpVUkx4WmMrTHRTS1NUZ3NaZktuSVJtSFYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse peer0.carrier-net",
        "2020/11/08 13:18:00 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem",
        "2020/11/08 13:18:00 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 1 -lt 2 ']'",
        "+ PEER=peer1.carrier-net",
        "+ CSR_HOSTS=peer1.carrier-net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net",
        "+ for i in '\"${ALTERNATIVE_ORG_NAMES[@]}\"'",
        "+ CSR_HOSTS=peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "+ echo 'Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info'",
        "+ fabric-ca-client register -d --id.name peer1.carrier-net --id.secret peer1.carrier-net-pw --id.type peer --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:18:00 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:18:00 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 13:18:00 [DEBUG] Checking for enrollment",
        "2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037bcb0}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037bd10 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204f09b0 DummyKeystore:<nil>}",
        "2020/11/08 13:18:00 [INFO] TLS Enabled",
        "2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:00 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:00 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037bcb0}",
        "2020/11/08 13:18:00 [DEBUG] Entered runRegister",
        "2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:peer1.carrier-net Type:peer Secret:peer1.carrier-net-pw MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42037bcb0}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42037bd10 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204f09b0 DummyKeystore:<nil>}",
        "2020/11/08 13:18:00 [INFO] TLS Enabled",
        "2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:00 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:00 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:00 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 13:18:00 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:18:00 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/08 13:18:00 [DEBUG] Register { Name:peer1.carrier-net Type:peer Secret:**** MaxEnrollments:0 Affiliation: Attributes:[] CAName:  }",
        "2020/11/08 13:18:00 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:18:00 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"peer1.carrier-net\",\"type\":\"peer\",\"secret\":\"peer1.carrier-net-pw\",\"affiliation\":\"\"}",
        "2020/11/08 13:18:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:00 [DEBUG] Response body result: map[secret:peer1.carrier-net-pw]",
        "2020/11/08 13:18:00 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/cas/peers/tls --csr.hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:18:00 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:18:00 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205e0660}",
        "2020/11/08 13:18:00 [DEBUG] Entered runEnroll",
        "2020/11/08 13:18:00 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:18:00 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/cas/peers/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4205e0660}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4205e06c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:00 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420285c90 DummyKeystore:<nil>}",
        "2020/11/08 13:18:00 [INFO] TLS Enabled",
        "2020/11/08 13:18:00 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:00 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:00 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:00 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:00 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[peer1.carrier-net peer1.carrier-net.svc.cluster.local peer1.carrier.net peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:18:00 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:18:00 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:18:00 [INFO] encoded CSR",
        "2020/11/08 13:18:00 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"peer1.carrier-net\",\"peer1.carrier-net.svc.cluster.local\",\"peer1.carrier.net\",\"peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIByjCCAXACAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAATXWqqm2tzMkD44A42yg0gw6BzJjMLshL2hZC69vAy87xSRbWbnw75IOamnx6yQ\\npMZX/ugL5qOKnJpICM2fy+MRoIGjMIGgBgkqhkiG9w0BCQ4xgZIwgY8wgYwGA1Ud\\nEQSBhDCBgYIRcGVlcjEuY2Fycmllci1uZXSCI3BlZXIxLmNhcnJpZXItbmV0LnN2\\nYy5jbHVzdGVyLmxvY2FsghFwZWVyMS5jYXJyaWVyLm5ldII0cGVlcjEuY2Fycmll\\nci1uZXQuY2Fycmllci1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzAKBggqhkjO\\nPQQDAgNIADBFAiEAkum438s4wBnYgmE+a8ojW9xP+w6FwVVt4altQwCo9tgCIDCI\\n/5R67mYMEJ9D2GcTIbRVLWa59o9s98kWvE+/IHi4\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:18:00 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:00 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQXQrZ0F3SUJBZ0lVV0pUWHJSRWtueGdETjk4bzN0Y2RPeVQ2blRNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFMTFxcXB0cmN6SkErT0FPTnNvTklNT2djeVl6QzdJUzlvV1F1dmJ3TXZPOFUKa1cxbTU4TytTRG1wcDhlc2tLVEdWLzdvQythamlweWFTQWpObjh2akVhT0NBWFF3Z2dGd01BNEdBMVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVejhJaDV2VEpvOGNsdjdGR2xkeW1JZTZpb1g4d0h3WURWUjBqQkJnd0ZvQVUKWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d2dZd0dBMVVkRVFTQmhEQ0JnWUlSY0dWbGNqRXVZMkZ5Y21sbApjaTF1WlhTQ0kzQmxaWEl4TG1OaGNuSnBaWEl0Ym1WMExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2doRndaV1Z5Ck1TNWpZWEp5YVdWeUxtNWxkSUkwY0dWbGNqRXVZMkZ5Y21sbGNpMXVaWFF1WTJGeWNtbGxjaTF1WlhRdWMzVnUKWldWc0xuQjJkQzUzYlhSaVlXWXVhVzVtYnpCaUJnZ3FBd1FGQmdjSUFRUldleUpoZEhSeWN5STZleUpvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNkluQmxaWEl4TG1OaGNuSnBaWEl0CmJtVjBJaXdpYUdZdVZIbHdaU0k2SW5CbFpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnUEZwcFRoRksKOXZFdm1yVGRHMzVZNjYyV1RReU40TnIyaDNHeEdSUjhzVUVDSUhJRy8zUEh6OGROeXNPdVlsUVIzd3pGWnJ0SAp4a2IrTFVhYWhKd2drMXdQCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K ServerInfo:map[CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version: CAName:ca.carrier-net]]",
        "2020/11/08 13:18:00 [DEBUG] newEnrollmentResponse peer1.carrier-net",
        "2020/11/08 13:18:00 [INFO] Stored client certificate at /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem",
        "2020/11/08 13:18:00 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/keystore/b3d1f009b11995761a518c0c273c1164c64f2aa6b2cc6959ed5add14d5fcd130_sk /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt",
        "+ cp /root/ca-tools/carrier/cas/peers/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt",
        "+ rm -rf /root/ca-tools/carrier/cas/peers/tls",
        "+ fabric-ca-client enroll -d -u https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 -M /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "2020/11/08 13:18:01 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:18:01 [DEBUG] Client configuration settings: &{URL:https://peer1.carrier-net:peer1.carrier-net-pw@ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392660}",
        "2020/11/08 13:18:01 [DEBUG] Entered runEnroll",
        "2020/11/08 13:18:01 [DEBUG] Enrolling { Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:18:01 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:peer1.carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{Admin@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420392660}",
        "2020/11/08 13:18:01 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4203926c0 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:01 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420399f00 DummyKeystore:<nil>}",
        "2020/11/08 13:18:01 [INFO] TLS Enabled",
        "2020/11/08 13:18:01 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:01 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:01 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:01 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:01 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:18:01 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:18:01 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:18:01 [INFO] encoded CSR",
        "2020/11/08 13:18:01 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAxMRcGVlcjEuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAQUD/8flTcY2dqMswjjIwOZY+DHhENXXAWyikMGed1XlgvJ2ltKX1ni6hmPJYLG\\nwxwG5/9DJpkR6WI6Qor8KnheoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0gAMEUCIQCX\\nArcc34kuWCZ3nIHmAx/HnJELu+FGOqH0YAqNxtn3GQIgHMqKA23LYuLP2k15ultl\\nDJA+/5SEMHByXxBcytPM5+0=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:18:01 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:01 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyakNDQWxXZ0F3SUJBZ0lVY1NSOWZWTDdDQXdkaDYxeDhIbE0rS0xsSjVvd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1HY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhHakFZQmdOVkJBTVRFWEJsWlhJeExtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFRY0RRZ0FFRkEvL0g1VTNHTm5hakxNSTR5TURtV1BneDRSRFYxd0Zzb3BEQm5uZFY1WUwKeWRwYlNsOVo0dW9aanlXQ3hzTWNCdWYvUXlhWkVlbGlPa0tLL0NwNFhxT0I2ekNCNkRBT0JnTlZIUThCQWY4RQpCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVb0pYZFJSM25ENC9Bc2taVDk2RDkvbityCkxHUXdId1lEVlIwakJCZ3dGb0FVWjkyWlRVeW0wTitpNkZQaWYzbU9iVHJvTGN3d0pBWURWUjBSQkIwd0c0SVoKWTJFdGRHOXZiSE10Tmpsa056ZzROV1k0TmkxMmQyeDNaREJpQmdncUF3UUZCZ2NJQVFSV2V5SmhkSFJ5Y3lJNgpleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW5CbFpYSXhMbU5oCmNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbkJsWlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWcKUmNEa2VsMVFwb29kNWFxUmlCSXR1MlZFQ3U2Z3lYK0V2dmNpRTFwbjk1UUNJQTZpWEdaS1RiVEVRdE9SamJRUApsQTBIckcrTTBIa2FRM09HQzUwSDdKMGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[Version: CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]",
        "2020/11/08 13:18:01 [DEBUG] newEnrollmentResponse peer1.carrier-net",
        "2020/11/08 13:18:01 [INFO] Stored client certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem",
        "2020/11/08 13:18:01 [INFO] Stored root CA certificate at /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ cp /crypto-config/peerOrganizations/carrier-net/msp/admincerts/Admin@carrier-net-cert.pem /crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts",
        "+ let COUNTER=COUNTER+1",
        "+ '[' 2 -lt 2 ']'",
        "+ cd /",
        "+ CURRENT_DIR=/",
        "+ FULLY_QUALIFIED_ORG_NAME=carrier-net",
        "+ ORG_NAME=carrier",
        "+ TYPE_FOLDER=peers",
        "+ NO_OF_USERS=1",
        "+ AFFILIATION=carrier",
        "+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "+ CA=ca.carrier-net:7054",
        "+ '[' peer '!=' peer ']'",
        "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net",
        "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier",
        "+ ORG_HOME=/root/ca-tools/carrier",
        "+ USER=0",
        "+ '[' 0 -lt 1 ']'",
        "+ let USER=USER+1",
        "+ ORG_USER=User1@carrier-net",
        "+ ORG_USERPASS=User1@carrier-net-pw",
        "+ '[' peer = peer ']'",
        "+ fabric-ca-client register -d --id.name User1@carrier-net --id.secret User1@carrier-net-pw --id.type user --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --id.affiliation carrier --id.attrs hf.Revoker=true --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:18:01 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier",
        "2020/11/08 13:18:01 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml",
        "2020/11/08 13:18:01 [DEBUG] Checking for enrollment",
        "2020/11/08 13:18:01 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c45a0}",
        "2020/11/08 13:18:01 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4600 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:01 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397310 DummyKeystore:<nil>}",
        "2020/11/08 13:18:01 [INFO] TLS Enabled",
        "2020/11/08 13:18:01 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:01 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:01 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:01 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:01 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c45a0}",
        "2020/11/08 13:18:01 [DEBUG] Entered runRegister",
        "2020/11/08 13:18:01 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name:User1@carrier-net Type:user Secret:User1@carrier-net-pw MaxEnrollments:0 Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:false}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200c45a0}",
        "2020/11/08 13:18:01 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4200c4600 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:01 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420397310 DummyKeystore:<nil>}",
        "2020/11/08 13:18:01 [INFO] TLS Enabled",
        "2020/11/08 13:18:01 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:01 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:01 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:01 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:01 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem",
        "2020/11/08 13:18:01 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory",
        "2020/11/08 13:18:01 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig",
        "2020/11/08 13:18:01 [DEBUG] Register { Name:User1@carrier-net Type:user Secret:**** MaxEnrollments:0 Affiliation:carrier Attributes:[{hf.Revoker true false}] CAName:  }",
        "2020/11/08 13:18:01 [DEBUG] Adding token-based authorization header",
        "2020/11/08 13:18:01 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/register",
        "{\"id\":\"User1@carrier-net\",\"type\":\"user\",\"secret\":\"User1@carrier-net-pw\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\"}]}",
        "2020/11/08 13:18:01 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:01 [DEBUG] Response body result: map[secret:User1@carrier-net-pw]",
        "2020/11/08 13:18:01 [DEBUG] The register request completed successfully",
        "+ fabric-ca-client enroll -d -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/client1",
        "2020/11/08 13:18:01 [DEBUG] Home directory: /root/ca-tools/carrier/client1",
        "2020/11/08 13:18:01 [INFO] Created a default configuration file at /root/ca-tools/carrier/client1/fabric-ca-client-config.yaml",
        "2020/11/08 13:18:01 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420414720}",
        "2020/11/08 13:18:01 [DEBUG] Entered runEnroll",
        "2020/11/08 13:18:01 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:18:01 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{User1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420414720}",
        "2020/11/08 13:18:01 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420414780 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:01 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204282e0 DummyKeystore:<nil>}",
        "2020/11/08 13:18:01 [INFO] TLS Enabled",
        "2020/11/08 13:18:01 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:01 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:01 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:01 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:01 [DEBUG] GenCSR &{CN:User1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:18:01 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:18:01 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:18:01 [INFO] encoded CSR",
        "2020/11/08 13:18:01 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRVXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS6UchaugxSMT6TAZ5qGElQGDaSse8YXuCKGCb9x8fBt6CO9UxkdvB497LjhQvM\\nimoy+FHTyXy1RJlXou+qlBzToDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy02OWQ3ODg1Zjg2LXZ3bHdkMAoGCCqGSM49BAMCA0gAMEUCIQDl\\n8AYYBi04oUjKePedR3ytkvvy5csQT1Jpfla9PUJ/UgIgWmKOBtSPxd9iFV/Xd18i\\n6CaNm3/K1VCZt3f278kAT90=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:18:02 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:02 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN4akNDQW15Z0F3SUJBZ0lVZkZZVDZnS3lmcDBoaWowM2hPNi96ZGpXa0Njd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1IY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTHBSeUZxNkRGSXhQcE1Cbm1vWVNWQVkKTnBLeDd4aGU0SW9ZSnYzSHg4RzNvSTcxVEdSMjhIajNzdU9GQzh5S2FqTDRVZFBKZkxWRW1WZWk3NnFVSE5PagpnZkl3Z2U4d0RnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGTTZ2ClZNY2d3KzJXT0FDVnZSeHZ2TE50amxZdk1COEdBMVVkSXdRWU1CYUFGR2ZkbVUxTXB0RGZvdWhUNG45NWptMDYKNkMzTU1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0ZG5kc2QyUXdhUVlJS2dNRQpCUVlIQ0FFRVhYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1ClJXNXliMnhzYldWdWRFbEVJam9pVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmwKY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUF2RG1PemQzU2luSVl5MG1uV1ZxZ0RpeTc3Q0E1N3BJbApXUFFlUmNFVDBlUUNJSGpXMU55WkpQekJMaG9lODk1aEVCSEZwR05aazBGT3lqMHg0cENtbVFPZwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:18:02 [DEBUG] newEnrollmentResponse User1@carrier-net",
        "2020/11/08 13:18:02 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/msp/signcerts/cert.pem",
        "2020/11/08 13:18:02 [INFO] Stored root CA certificate at /root/ca-tools/carrier/client1/msp/cacerts/ca-carrier-net-7054.pem",
        "+ mkdir /root/ca-tools/carrier/client1/msp/admincerts",
        "+ cp /root/ca-tools/carrier/client1/msp/signcerts/cert.pem /root/ca-tools/carrier/client1/msp/admincerts/User1@carrier-net-cert.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ cp -R /root/ca-tools/carrier/client1/msp /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net",
        "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/client1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem",
        "2020/11/08 13:18:02 [DEBUG] Home directory: /root/.fabric-ca-client",
        "2020/11/08 13:18:02 [DEBUG] Client configuration settings: &{URL:https://User1@carrier-net:User1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204cc4b0}",
        "2020/11/08 13:18:02 [DEBUG] Entered runEnroll",
        "2020/11/08 13:18:02 [DEBUG] Enrolling { Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  }",
        "2020/11/08 13:18:02 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/client1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:User1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-69d7885f86-vwlwd] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204cc4b0}",
        "2020/11/08 13:18:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4204cc510 PluginOpts:<nil> Pkcs11Opts:<nil>}",
        "2020/11/08 13:18:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204d1a60 DummyKeystore:<nil>}",
        "2020/11/08 13:18:02 [INFO] TLS Enabled",
        "2020/11/08 13:18:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]",
        "2020/11/08 13:18:02 [DEBUG] Client Cert File: ",
        "2020/11/08 13:18:02 [DEBUG] Client Key File: ",
        "2020/11/08 13:18:02 [DEBUG] Client TLS certificate and/or key file not provided",
        "2020/11/08 13:18:02 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-69d7885f86-vwlwd] KeyRequest:<nil> CA:<nil> SerialNumber:}",
        "2020/11/08 13:18:02 [INFO] generating key: &{A:ecdsa S:256}",
        "2020/11/08 13:18:02 [DEBUG] generate key from request: algo=ecdsa, size=256",
        "2020/11/08 13:18:02 [INFO] encoded CSR",
        "2020/11/08 13:18:02 [DEBUG] Sending request",
        "POST https://ca.carrier-net:7054/enroll",
        "{\"hosts\":[\"ca-tools-69d7885f86-vwlwd\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBFVc2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBMSwDgSACngTPggg/j/cE4g1eDDQBDB9T0sb0MKgMhtiV1Y0kz4MzTTlv4Lk1vDa\\nHZQlZ1MbPOqrY+DQasSnw5SgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTY5ZDc4ODVmODYtdndsd2QwCgYIKoZIzj0EAwIDSAAwRQIhAOUf\\njJDZvJ0kqNpWK1P590d9lafJb5bgaYGRoKfrKR0VAiAwu8eLKAS7b0pomV6DhROP\\nxsOiXt800k0oIu8a9m6fBQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}",
        "2020/11/08 13:18:02 [DEBUG] Received response",
        "statusCode=201 (201 Created)",
        "2020/11/08 13:18:02 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQW8yZ0F3SUJBZ0lVRXhXZnJ6cDNIYk8xK0x6S3lCSERMQS82Vm1Nd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRlZjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTVN3RGdTQUNuZ1RQZ2dnL2ovY0U0ZzEKZUREUUJEQjlUMHNiME1LZ01odGlWMVkwa3o0TXpUVGx2NExrMXZEYUhaUWxaMU1iUE9xclkrRFFhc1NudzVTagpnZ0VTTUlJQkRqQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRmx6U25sU2NMcmtTR0hHYkxyV3V4b1gKNWdQRU1COEdBMVVkSXdRWU1CYUFGR2ZkbVUxTXB0RGZvdWhUNG45NWptMDY2QzNNTUNRR0ExVWRFUVFkTUJ1QwpHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0ZG5kc2QyUXdhUVlJS2dNRUJRWUhDQUVFWFhzaVlYUjBjbk1pCk9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKVlhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaWRYTmxjaUo5ZlRBS0JnZ3Foa2pPUFFRRApBZ05IQURCRUFpQWVZMHd5Rk96UUxEVGlzRVVBbW9DWUtmOXhIc05mMHFpcGk5S0UwM000WVFJZ1h4QTFNVHNtCnBweEl2TjMrZ0NYMlpEdXV0UW8zaUZGemV1Z3p4ZDBuRjNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTyt1N09ZdHRjT1JOMVY3VGV0TVJqVFFOdE9Bd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpBNE16TmFGdzB5TXpBNE1qa3hNekE0TXpOYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUXBoNFd5aTdXSll6YkprNWRMRnExek82VzhINy9iSWQ4UVdBbEt3STZLT2orTkZwcUFRL2FsV1VPYUhoTkIKeU9zeXllRmJQOUFOdUxBTUN3c1o5UUhxbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVaOTJaVFV5bTBOK2k2RlBpZjNtT2JUcm9MY3d3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJZ0hUTlg1MHNYQ2lsNFYxR0VvOVBpa0hkZzVhQWNDcmVCQVJ0NE5RdXpGZWNDSVFEVzhlU3UKWmpwS3F0TTlkZlZ2U3lxajEvVkUvamRzcWxjUTZ1Nmp2QWRqU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIJIo7I7g+RVYnv1M8WJ5MaOVEaJDc9ODuVP9hzEeeV7LEiDiMk1lp4k6W+/iQU9nW2rYH+TrYEPc2rAkqlyQLcnX8hpECiBDUonS4GMMXD2LKMJJ3r+yLsrfd5mbBqsF7SwUcZPpShIgQ50huqvho21Gh+6qcDdFIMd3CHsTAP9JBtd1s912lbIiRAoge6absJHsSln8ZXsRCvJHHsuDZBhvD7hxglnZSuN/31cSIOzYGKDW7BbgRnT8JriQjL+WCM8DvtX5qBBTdtXji+BHIkQKIMVhjTgSK3HWI4HYCG4v3KLu2znGSYoPhKal4NUVzldmEiC3uQV7f6tt3sbNL0UU6Eqbo36uGOaa7/yc0nm+k5tv7SJECiDEDfpTVNt0U1ITpYoTdlaMfCEwwBzPyNhSmfVWMLi9xxIgAqwRF3UapLn26YEMZm4+Q2oxMNOjiluMco090tX57AMiRAogZASJwz/R9aaxZn+4oIXhF7pa0PBY2/cyHxmMdr/eq34SIMlTnua0j/7y4SKOMv1ixQ1LMdEdT4JDHsIMbnkGjt1KKogBCiDtN5s1U5xHsjT47FdAWtojc/Hv+EM2cRIKHKYuTRVpmxIgF0+m6tGBiFwjhIdBSdwbsUQgboCqmmIpYyS2bCP/rr0aILhz/I4ULeFoU27BGKf03yel+5F9uziWwL/ELpwrE114IiAWzlQ9lwP6KNRI2YwEptpDxmKLlNunKo5TM918eKRZBzJECiCuoN/U0X0kvNUUrnoQpahCJryXN65ASTfnpS0qWeT+ahIgHaeYAFyYnnT76CRYMTL+xLaZUNELXZiXmoGYtcB66aw6RAogFm53A+szO3ohvYxAiD5YhKBe73bcr9OmYa5OVe6DJdkSILfvZMqUDP4dRu7fthNsNjlDdGLcSTvzLImhuUXyGwVhQiCAkx3sQWK+NEGIBEkIm7evH9nByWnhgrkLJ002Umg9eUogDrA62uHtXUin9tu2R6uJioLOmgYqN0MfFjqYfhgsJylSIII+rX/76OfCs1a7NSWt8RIJPMhjk/KqgSqnTsTipguf IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVTdDE0bHRMZ25QVk1rNlBaK2VkNjFpaFA4Y1NXeGxGQwpHNWdRNmIyRlh3bjBZYnQ4S2V3QXM0U0d3NUYwUkFrZm1iMVFSWHFSSFpKZ0xiaCtHK3R0a00zVld6NUFkM1VtCmJzQUo5R0NFSEQwcVBQTFgzYTVXb0lDWkV2dVZYVFBrCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]",
        "2020/11/08 13:18:02 [DEBUG] newEnrollmentResponse User1@carrier-net",
        "2020/11/08 13:18:02 [INFO] Stored client certificate at /root/ca-tools/carrier/client1/tls/signcerts/cert.pem",
        "2020/11/08 13:18:02 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem",
        "+ mkdir -p /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls",
        "+ cp /root/ca-tools/carrier/client1/tls/keystore/ebe549fd3fbd4c22ff427f8cb54148576814bec6fe45cf4627f0b59c61fd4a4c_sk /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key",
        "+ cp /root/ca-tools/carrier/client1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt",
        "+ cp /root/ca-tools/carrier/client1/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt",
        "+ '[' 1 -lt 1 ']'",
        "+ cd /"
    ],
    "stdout": "Successfully added affiliation: carrier\nPassword: Admin@carrier-net-pw\nRegistering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\nPassword: peer0.carrier-net-pw\nRegistering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\nPassword: peer1.carrier-net-pw\nPassword: User1@carrier-net-pw",
    "stdout_lines": [
        "Successfully added affiliation: carrier",
        "Password: Admin@carrier-net-pw",
        "Registering and enrolling peer0.carrier-net with csr hosts peer0.carrier-net,peer0.carrier-net.svc.cluster.local,peer0.carrier.net,peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "Password: peer0.carrier-net-pw",
        "Registering and enrolling peer1.carrier-net with csr hosts peer1.carrier-net,peer1.carrier-net.svc.cluster.local,peer1.carrier.net,peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "Password: peer1.carrier-net-pw",
        "Password: User1@carrier-net-pw"
    ]
}

TASK [create/crypto/peer : Copy the crypto config folder from the ca tools] ****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/common.yaml:65
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841482.4235766-2628-95462406807554 `" && echo ansible-tmp-1604841482.4235766-2628-95462406807554="` echo /root/.ansible/tmp/ansible-tmp-1604841482.4235766-2628-95462406807554 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5k0c7246 TO /root/.ansible/tmp/ansible-tmp-1604841482.4235766-2628-95462406807554/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841482.4235766-2628-95462406807554/ /root/.ansible/tmp/ansible-tmp-1604841482.4235766-2628-95462406807554/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841482.4235766-2628-95462406807554/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841482.4235766-2628-95462406807554/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
    "delta": "0:00:00.755682",
    "end": "2020-11-08 13:18:03.309809",
    "invocation": {
        "module_args": {
            "_raw_params": "export CA_TOOL_CLI=$(KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:02.554127",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Call peer.yaml for each peer] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:58
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
included: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml for localhost => (item={'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}})

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841483.4825451-2670-65567471397365 `" && echo ansible-tmp-1604841483.4825451-2670-65567471397365="` echo /root/.ansible/tmp/ansible-tmp-1604841483.4825451-2670-65567471397365 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5f4js48n TO /root/.ansible/tmp/ansible-tmp-1604841483.4825451-2670-65567471397365/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841483.4825451-2670-65567471397365/ /root/.ansible/tmp/ansible-tmp-1604841483.4825451-2670-65567471397365/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841483.4825451-2670-65567471397365/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841483.4825451-2670-65567471397365/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.101258",
    "end": "2020-11-08 13:18:03.714260",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:03.613002",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841483.7810824-2722-2765920047153 `" && echo ansible-tmp-1604841483.7810824-2722-2765920047153="` echo /root/.ansible/tmp/ansible-tmp-1604841483.7810824-2722-2765920047153 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpo9769ko_ TO /root/.ansible/tmp/ansible-tmp-1604841483.7810824-2722-2765920047153/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841483.7810824-2722-2765920047153/ /root/.ansible/tmp/ansible-tmp-1604841483.7810824-2722-2765920047153/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841483.7810824-2722-2765920047153/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841483.7810824-2722-2765920047153/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841484.424434-2750-160230039840221 `" && echo ansible-tmp-1604841484.424434-2750-160230039840221="` echo /root/.ansible/tmp/ansible-tmp-1604841484.424434-2750-160230039840221 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpmdhry8gk TO /root/.ansible/tmp/ansible-tmp-1604841484.424434-2750-160230039840221/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841484.424434-2750-160230039840221/ /root/.ansible/tmp/ansible-tmp-1604841484.424434-2750-160230039840221/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841484.424434-2750-160230039840221/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841484.424434-2750-160230039840221/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer0-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841485.0378299-2778-204832636222649 `" && echo ansible-tmp-1604841485.0378299-2778-204832636222649="` echo /root/.ansible/tmp/ansible-tmp-1604841485.0378299-2778-204832636222649 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpza8qmvf_ TO /root/.ansible/tmp/ansible-tmp-1604841485.0378299-2778-204832636222649/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841485.0378299-2778-204832636222649/ /root/.ansible/tmp/ansible-tmp-1604841485.0378299-2778-204832636222649/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841485.0378299-2778-204832636222649/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841485.0378299-2778-204832636222649/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.053403",
    "end": "2020-11-08 13:18:05.222212",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:18:05.168809",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/ambassador"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841485.3212593-2814-216585968178173 `" && echo ansible-tmp-1604841485.3212593-2814-216585968178173="` echo /root/.ansible/tmp/ansible-tmp-1604841485.3212593-2814-216585968178173 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp1r8ecgsf TO /root/.ansible/tmp/ansible-tmp-1604841485.3212593-2814-216585968178173/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841485.3212593-2814-216585968178173/ /root/.ansible/tmp/ansible-tmp-1604841485.3212593-2814-216585968178173/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841485.3212593-2814-216585968178173/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841485.3212593-2814-216585968178173/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841485.510387-2840-3200046921350 `" && echo ansible-tmp-1604841485.510387-2840-3200046921350="` echo /root/.ansible/tmp/ansible-tmp-1604841485.510387-2840-3200046921350 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpz1hhfmph TO /root/.ansible/tmp/ansible-tmp-1604841485.510387-2840-3200046921350/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841485.510387-2840-3200046921350/ /root/.ansible/tmp/ansible-tmp-1604841485.510387-2840-3200046921350/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841485.510387-2840-3200046921350/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841485.510387-2840-3200046921350/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier-net.suneel.pvt.wmtbaf.info\nEOF\n",
    "delta": "0:00:00.002431",
    "end": "2020-11-08 13:18:05.642929",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\ncat <<EOF >openssl.conf\n[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\nsubjectAltName = DNS:*.carrier-net.suneel.pvt.wmtbaf.info\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:05.640498",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841485.7009356-2868-210541340145064 `" && echo ansible-tmp-1604841485.7009356-2868-210541340145064="` echo /root/.ansible/tmp/ansible-tmp-1604841485.7009356-2868-210541340145064 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpkut956n4 TO /root/.ansible/tmp/ansible-tmp-1604841485.7009356-2868-210541340145064/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841485.7009356-2868-210541340145064/ /root/.ansible/tmp/ansible-tmp-1604841485.7009356-2868-210541340145064/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841485.7009356-2868-210541340145064/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841485.7009356-2868-210541340145064/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841485.8980496-2894-179073738851172 `" && echo ansible-tmp-1604841485.8980496-2894-179073738851172="` echo /root/.ansible/tmp/ansible-tmp-1604841485.8980496-2894-179073738851172 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpkqs0yran TO /root/.ansible/tmp/ansible-tmp-1604841485.8980496-2894-179073738851172/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841485.8980496-2894-179073738851172/ /root/.ansible/tmp/ansible-tmp-1604841485.8980496-2894-179073738851172/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841485.8980496-2894-179073738851172/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841485.8980496-2894-179073738851172/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
    "delta": "0:00:00.012660",
    "end": "2020-11-08 13:18:06.041972",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"./build/crypto-config/peerOrganizations/carrier-net\"\nopenssl ecparam -name prime256v1 -genkey -noout -out peer0-carrier-net.key\nopenssl req -config ./openssl.conf -new -nodes -key peer0-carrier-net.key -days 1000 -out peer0-carrier-net.csr -extensions v3_req -subj \"/O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB/CN=peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\"\nopenssl x509 -extfile ./openssl.conf -req -days 1000 -in peer0-carrier-net.csr -CA ./ca/ca.carrier-net-cert.pem -CAkey ./ca/carrier-net-CA.key -out peer0-carrier-net.pem -set_serial 01 -extensions v3_req\ncat peer0-carrier-net.pem > peer0-carrier-net-certchain.pem\ncat ./ca/ca.carrier-net-cert.pem >> peer0-carrier-net-certchain.pem\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:06.029312",
    "stderr": "Ignoring -days; not generating a certificate\nSignature ok\nsubject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\nGetting CA Private Key",
    "stderr_lines": [
        "Ignoring -days; not generating a certificate",
        "Signature ok",
        "subject=O = Carrier, OU = Carrier, L = \"51.50,-0.13,London\", C = GB, CN = peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info",
        "Getting CA Private Key"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841486.1057925-2926-51851141558059 `" && echo ansible-tmp-1604841486.1057925-2926-51851141558059="` echo /root/.ansible/tmp/ansible-tmp-1604841486.1057925-2926-51851141558059 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpl9b8ttc6 TO /root/.ansible/tmp/ansible-tmp-1604841486.1057925-2926-51851141558059/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841486.1057925-2926-51851141558059/ /root/.ansible/tmp/ansible-tmp-1604841486.1057925-2926-51851141558059/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841486.1057925-2926-51851141558059/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841486.1057925-2926-51851141558059/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
    "delta": "0:00:00.119679",
    "end": "2020-11-08 13:18:06.358220",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:06.238541",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841486.4247475-2959-208005143774473 `" && echo ansible-tmp-1604841486.4247475-2959-208005143774473="` echo /root/.ansible/tmp/ansible-tmp-1604841486.4247475-2959-208005143774473 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmptf4i5vo1 TO /root/.ansible/tmp/ansible-tmp-1604841486.4247475-2959-208005143774473/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841486.4247475-2959-208005143774473/ /root/.ansible/tmp/ansible-tmp-1604841486.4247475-2959-208005143774473/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841486.4247475-2959-208005143774473/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841486.4247475-2959-208005143774473/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
    "delta": "0:00:00.113909",
    "end": "2020-11-08 13:18:06.669301",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml kubectl create secret tls peer0-carrier-net-ambassador-certs --cert=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem --key=./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key -n carrier-net\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:06.555392",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/peer0-carrier-net-ambassador-certs created",
    "stdout_lines": [
        "secret/peer0-carrier-net-ambassador-certs created"
    ]
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841486.7397296-2991-241722567375402 `" && echo ansible-tmp-1604841486.7397296-2991-241722567375402="` echo /root/.ansible/tmp/ansible-tmp-1604841486.7397296-2991-241722567375402 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp9je3_ji7 TO /root/.ansible/tmp/ansible-tmp-1604841486.7397296-2991-241722567375402/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841486.7397296-2991-241722567375402/ /root/.ansible/tmp/ansible-tmp-1604841486.7397296-2991-241722567375402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841486.7397296-2991-241722567375402/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841486.7397296-2991-241722567375402/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
    "delta": "0:00:00.047398",
    "end": "2020-11-08 13:18:06.917021",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/ambassador clientcert=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.pem\")\" certificate=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net-certchain.pem\")\" key=\"$(cat \"./build/crypto-config/peerOrganizations/carrier-net/peer0-carrier-net.key\")\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:06.869623",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/ambassador"
    ]
}

TASK [create/crypto/peer : Copy the crypto material for orgs] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841486.9870474-3030-116712191869648 `" && echo ansible-tmp-1604841486.9870474-3030-116712191869648="` echo /root/.ansible/tmp/ansible-tmp-1604841486.9870474-3030-116712191869648 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpmy3gb4q4 TO /root/.ansible/tmp/ansible-tmp-1604841486.9870474-3030-116712191869648/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841486.9870474-3030-116712191869648/ /root/.ansible/tmp/ansible-tmp-1604841486.9870474-3030-116712191869648/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841486.9870474-3030-116712191869648/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841486.9870474-3030-116712191869648/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
    "delta": "0:00:00.094072",
    "end": "2020-11-08 13:18:07.210977",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/ca.crt)\" server.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.crt)\" server.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls/server.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp/tlscacerts/ca-carrier-net-7054.pem)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:07.116905",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net/msp"
    ]
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841487.278934-3082-125652687404009 `" && echo ansible-tmp-1604841487.278934-3082-125652687404009="` echo /root/.ansible/tmp/ansible-tmp-1604841487.278934-3082-125652687404009 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6w1bjzca TO /root/.ansible/tmp/ansible-tmp-1604841487.278934-3082-125652687404009/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841487.278934-3082-125652687404009/ /root/.ansible/tmp/ansible-tmp-1604841487.278934-3082-125652687404009/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841487.278934-3082-125652687404009/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841487.278934-3082-125652687404009/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "default",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check Ambassador cred exists] ***********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:22
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841487.9014752-3110-45298569267371 `" && echo ansible-tmp-1604841487.9014752-3110-45298569267371="` echo /root/.ansible/tmp/ansible-tmp-1604841487.9014752-3110-45298569267371 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to community.kubernetes.k8s_info
Using module file /usr/local/lib/python3.6/dist-packages/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmppfdt49nz TO /root/.ansible/tmp/ansible-tmp-1604841487.9014752-3110-45298569267371/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841487.9014752-3110-45298569267371/ /root/.ansible/tmp/ansible-tmp-1604841487.9014752-3110-45298569267371/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841487.9014752-3110-45298569267371/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841487.9014752-3110-45298569267371/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "fabric-aks-dev1",
            "field_selectors": [],
            "host": null,
            "kind": "Secret",
            "kubeconfig": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "label_selectors": [],
            "name": "peer1-carrier-net-ambassador-certs",
            "namespace": "carrier-net",
            "password": null,
            "persist_config": null,
            "proxy": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": []
}

TASK [create/crypto/peer : Check if peer ambassador secrets certs created] *****
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841488.5185728-3138-27656142366111 `" && echo ansible-tmp-1604841488.5185728-3138-27656142366111="` echo /root/.ansible/tmp/ansible-tmp-1604841488.5185728-3138-27656142366111 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbt553kso TO /root/.ansible/tmp/ansible-tmp-1604841488.5185728-3138-27656142366111/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841488.5185728-3138-27656142366111/ /root/.ansible/tmp/ansible-tmp-1604841488.5185728-3138-27656142366111/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841488.5185728-3138-27656142366111/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841488.5185728-3138-27656142366111/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
    "delta": "0:00:00.060030",
    "end": "2020-11-08 13:18:08.708437",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -format=yaml secret/crypto/peerOrganizations/carrier-net/ambassador\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:08.648407",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "data:\n  certificate: |-\n    -----BEGIN CERTIFICATE-----\n    MIICSTCCAfCgAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwODEzMTgwNloXDTIzMDgw\n    NTEzMTgwNlowgY0xEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx\n    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxPTA7BgNV\n    BAMMNHBlZXIwLmNhcnJpZXItbmV0LmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210\n    YmFmLmluZm8wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASlqB3QhaXcMbl1s3ea\n    FK+ql91kg9SgczXeVeIrFgvBE41MrYC5ZJp9TqKltHdmoJlGtlcw5nJDlKz7QQ+u\n    OU3Io3MwcTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4E\n    FgQU7dN2dIFgXpFz+szH1QyFBmtck8UwLwYDVR0RBCgwJoIkKi5jYXJyaWVyLW5l\n    dC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0cAMEQCID2jNRtV\n    KfhrId1uWY2UYW0B6xCGl921zJoow9UouHKjAiBftyjK6hQG5e+KAoMm6SyW8+/6\n    3KMxb3hlxfEmJBxfGQ==\n    -----END CERTIFICATE-----\n    -----BEGIN CERTIFICATE-----\n    MIIB+DCCAZ6gAwIBAgIUO+u7OYttcORN1V7TetMRjTQNtOAwCgYIKoZIzj0EAwIw\n    WjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\n    MRAwDgYDVQQKDAdDYXJyaWVyMRcwFQYDVQQDDA5jYS5jYXJyaWVyLW5ldDAeFw0y\n    MDExMDgxMzA4MzNaFw0yMzA4MjkxMzA4MzNaMFoxCzAJBgNVBAYTAkdCMQ8wDQYD\n    VQQIDAZMb25kb24xDzANBgNVBAcMBkxvbmRvbjEQMA4GA1UECgwHQ2FycmllcjEX\n    MBUGA1UEAwwOY2EuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\n    AAQph4Wyi7WJYzbJk5dLFq1zO6W8H7/bId8QWAlKwI6KOj+NFpqAQ/alWUOaHhNB\n    yOsyyeFbP9ANuLAMCwsZ9QHqo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\n    /wQEAwIBpjAdBgNVHQ4EFgQUZ92ZTUym0N+i6FPif3mObTroLcwwCgYIKoZIzj0E\n    AwIDSAAwRQIgHTNX50sXCil4V1GEo9PikHdg5aAcCreBARt4NQuzFecCIQDW8eSu\n    ZjpKqtM9dfVvSyqj1/VE/jdsqlcQ6u6jvAdjSw==\n    -----END CERTIFICATE-----\n  clientcert: |-\n    -----BEGIN CERTIFICATE-----\n    MIICSTCCAfCgAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G\n    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx\n    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwODEzMTgwNloXDTIzMDgw\n    NTEzMTgwNlowgY0xEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx\n    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxPTA7BgNV\n    BAMMNHBlZXIwLmNhcnJpZXItbmV0LmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210\n    YmFmLmluZm8wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASlqB3QhaXcMbl1s3ea\n    FK+ql91kg9SgczXeVeIrFgvBE41MrYC5ZJp9TqKltHdmoJlGtlcw5nJDlKz7QQ+u\n    OU3Io3MwcTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4E\n    FgQU7dN2dIFgXpFz+szH1QyFBmtck8UwLwYDVR0RBCgwJoIkKi5jYXJyaWVyLW5l\n    dC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0cAMEQCID2jNRtV\n    KfhrId1uWY2UYW0B6xCGl921zJoow9UouHKjAiBftyjK6hQG5e+KAoMm6SyW8+/6\n    3KMxb3hlxfEmJBxfGQ==\n    -----END CERTIFICATE-----\n  key: |-\n    -----BEGIN EC PRIVATE KEY-----\n    MHcCAQEEIPxcpxkYB/+XpkWPV/ST3y4rogaRjgauDevQxUSVPMCPoAoGCCqGSM49\n    AwEHoUQDQgAEpagd0IWl3DG5dbN3mhSvqpfdZIPUoHM13lXiKxYLwRONTK2AuWSa\n    fU6ipbR3ZqCZRrZXMOZyQ5Ss+0EPrjlNyA==\n    -----END EC PRIVATE KEY-----\nlease_duration: 2764800\nlease_id: \"\"\nrenewable: false\nrequest_id: 58285e0b-938b-5f8d-d9a1-70c8b0378483\nwarnings: null",
    "stdout_lines": [
        "data:",
        "  certificate: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICSTCCAfCgAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwODEzMTgwNloXDTIzMDgw",
        "    NTEzMTgwNlowgY0xEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx",
        "    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxPTA7BgNV",
        "    BAMMNHBlZXIwLmNhcnJpZXItbmV0LmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210",
        "    YmFmLmluZm8wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASlqB3QhaXcMbl1s3ea",
        "    FK+ql91kg9SgczXeVeIrFgvBE41MrYC5ZJp9TqKltHdmoJlGtlcw5nJDlKz7QQ+u",
        "    OU3Io3MwcTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4E",
        "    FgQU7dN2dIFgXpFz+szH1QyFBmtck8UwLwYDVR0RBCgwJoIkKi5jYXJyaWVyLW5l",
        "    dC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0cAMEQCID2jNRtV",
        "    KfhrId1uWY2UYW0B6xCGl921zJoow9UouHKjAiBftyjK6hQG5e+KAoMm6SyW8+/6",
        "    3KMxb3hlxfEmJBxfGQ==",
        "    -----END CERTIFICATE-----",
        "    -----BEGIN CERTIFICATE-----",
        "    MIIB+DCCAZ6gAwIBAgIUO+u7OYttcORN1V7TetMRjTQNtOAwCgYIKoZIzj0EAwIw",
        "    WjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u",
        "    MRAwDgYDVQQKDAdDYXJyaWVyMRcwFQYDVQQDDA5jYS5jYXJyaWVyLW5ldDAeFw0y",
        "    MDExMDgxMzA4MzNaFw0yMzA4MjkxMzA4MzNaMFoxCzAJBgNVBAYTAkdCMQ8wDQYD",
        "    VQQIDAZMb25kb24xDzANBgNVBAcMBkxvbmRvbjEQMA4GA1UECgwHQ2FycmllcjEX",
        "    MBUGA1UEAwwOY2EuY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC",
        "    AAQph4Wyi7WJYzbJk5dLFq1zO6W8H7/bId8QWAlKwI6KOj+NFpqAQ/alWUOaHhNB",
        "    yOsyyeFbP9ANuLAMCwsZ9QHqo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB",
        "    /wQEAwIBpjAdBgNVHQ4EFgQUZ92ZTUym0N+i6FPif3mObTroLcwwCgYIKoZIzj0E",
        "    AwIDSAAwRQIgHTNX50sXCil4V1GEo9PikHdg5aAcCreBARt4NQuzFecCIQDW8eSu",
        "    ZjpKqtM9dfVvSyqj1/VE/jdsqlcQ6u6jvAdjSw==",
        "    -----END CERTIFICATE-----",
        "  clientcert: |-",
        "    -----BEGIN CERTIFICATE-----",
        "    MIICSTCCAfCgAwIBAgIBATAKBggqhkjOPQQDAjBaMQswCQYDVQQGEwJHQjEPMA0G",
        "    A1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB0NhcnJpZXIx",
        "    FzAVBgNVBAMMDmNhLmNhcnJpZXItbmV0MB4XDTIwMTEwODEzMTgwNloXDTIzMDgw",
        "    NTEzMTgwNlowgY0xEDAOBgNVBAoMB0NhcnJpZXIxEDAOBgNVBAsMB0NhcnJpZXIx",
        "    GzAZBgNVBAcMEjUxLjUwLC0wLjEzLExvbmRvbjELMAkGA1UEBhMCR0IxPTA7BgNV",
        "    BAMMNHBlZXIwLmNhcnJpZXItbmV0LmNhcnJpZXItbmV0LnN1bmVlbC5wdnQud210",
        "    YmFmLmluZm8wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASlqB3QhaXcMbl1s3ea",
        "    FK+ql91kg9SgczXeVeIrFgvBE41MrYC5ZJp9TqKltHdmoJlGtlcw5nJDlKz7QQ+u",
        "    OU3Io3MwcTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBpjAdBgNVHQ4E",
        "    FgQU7dN2dIFgXpFz+szH1QyFBmtck8UwLwYDVR0RBCgwJoIkKi5jYXJyaWVyLW5l",
        "    dC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvMAoGCCqGSM49BAMCA0cAMEQCID2jNRtV",
        "    KfhrId1uWY2UYW0B6xCGl921zJoow9UouHKjAiBftyjK6hQG5e+KAoMm6SyW8+/6",
        "    3KMxb3hlxfEmJBxfGQ==",
        "    -----END CERTIFICATE-----",
        "  key: |-",
        "    -----BEGIN EC PRIVATE KEY-----",
        "    MHcCAQEEIPxcpxkYB/+XpkWPV/ST3y4rogaRjgauDevQxUSVPMCPoAoGCCqGSM49",
        "    AwEHoUQDQgAEpagd0IWl3DG5dbN3mhSvqpfdZIPUoHM13lXiKxYLwRONTK2AuWSa",
        "    fU6ipbR3ZqCZRrZXMOZyQ5Ss+0EPrjlNyA==",
        "    -----END EC PRIVATE KEY-----",
        "lease_duration: 2764800",
        "lease_id: \"\"",
        "renewable: false",
        "request_id: 58285e0b-938b-5f8d-d9a1-70c8b0378483",
        "warnings: null"
    ]
}

TASK [Get peer ambassador info] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:2
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:13
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Ensure ambassador secrets directory exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:19
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841488.9414396-3182-100850663456666 `" && echo ansible-tmp-1604841488.9414396-3182-100850663456666="` echo /root/.ansible/tmp/ansible-tmp-1604841488.9414396-3182-100850663456666 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmptbcnzglg TO /root/.ansible/tmp/ansible-tmp-1604841488.9414396-3182-100850663456666/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841488.9414396-3182-100850663456666/ /root/.ansible/tmp/ansible-tmp-1604841488.9414396-3182-100850663456666/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841488.9414396-3182-100850663456666/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841488.9414396-3182-100850663456666/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save keys] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:26
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304 `" && echo ansible-tmp-1604841489.2066965-3208-100460918154304="` echo /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_vy4cued TO /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/ /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp9udugcxs TO /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/ /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6r1zegox TO /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/ /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "453c5bfa11ec2a2db1c8fd0249e34ae1360c41c6",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp9udugcxs",
            "attributes": null,
            "backup": false,
            "checksum": "453c5bfa11ec2a2db1c8fd0249e34ae1360c41c6",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ba9663713254ceedbaf09ecb57ab2e9c",
    "mode": "0644",
    "owner": "root",
    "size": 226,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841489.2066965-3208-100460918154304/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto : Save certs] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/setup/get_ambassador_crypto/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918 `" && echo ansible-tmp-1604841489.5703013-3248-193114758539918="` echo /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpvm2d3dbg TO /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/ /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqg3mwzfm TO /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/ /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpb2hjla2t TO /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/ /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "b2e4956cd7f1b35e9c1d72a44bf00f7364162f79",
    "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpqg3mwzfm",
            "attributes": null,
            "backup": false,
            "checksum": "b2e4956cd7f1b35e9c1d72a44bf00f7364162f79",
            "content": null,
            "dest": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net-certchain.pem",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "e69b80e2d8e241cdb2e8daf0272ad303",
    "mode": "0644",
    "owner": "root",
    "size": 1599,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841489.5703013-3248-193114758539918/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if the openssl file is created or not] ********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:55
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841489.9023428-3288-217682279869103 `" && echo ansible-tmp-1604841489.9023428-3288-217682279869103="` echo /root/.ansible/tmp/ansible-tmp-1604841489.9023428-3288-217682279869103 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzzn0linx TO /root/.ansible/tmp/ansible-tmp-1604841489.9023428-3288-217682279869103/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841489.9023428-3288-217682279869103/ /root/.ansible/tmp/ansible-tmp-1604841489.9023428-3288-217682279869103/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841489.9023428-3288-217682279869103/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841489.9023428-3288-217682279869103/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf"
        }
    },
    "stat": {
        "atime": 1604841486.0326493,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "5a3b51b52dc25ab2296b7d21712d71a6cbf3a94e",
        "ctime": 1604841485.6406434,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3903,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841485.6406434,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/openssl.conf",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 269,
        "uid": 0,
        "version": "249240742",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate openssl conf file] *************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:61
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the key exist or not] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:83
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841490.1318524-3318-55936719379799 `" && echo ansible-tmp-1604841490.1318524-3318-55936719379799="` echo /root/.ansible/tmp/ansible-tmp-1604841490.1318524-3318-55936719379799 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfwzc19ex TO /root/.ansible/tmp/ansible-tmp-1604841490.1318524-3318-55936719379799/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841490.1318524-3318-55936719379799/ /root/.ansible/tmp/ansible-tmp-1604841490.1318524-3318-55936719379799/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841490.1318524-3318-55936719379799/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841490.1318524-3318-55936719379799/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key"
        }
    },
    "stat": {
        "atime": 1604841489.4847019,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "453c5bfa11ec2a2db1c8fd0249e34ae1360c41c6",
        "ctime": 1604841489.4847019,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3929,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841489.3486998,
        "nlink": 1,
        "path": "./build/crypto-config/peerOrganizations/carrier-net/peer1-carrier-net.key",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 226,
        "uid": 0,
        "version": "3946588313",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Generate the peer certificate] **********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:89
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:100
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Create the Ambassador credentials] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:107
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy the crypto material to Vault] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/peer.yaml:115
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Check if the MSP config.yaml exist or not] **********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841490.464649-3354-161216929174615 `" && echo ansible-tmp-1604841490.464649-3354-161216929174615="` echo /root/.ansible/tmp/ansible-tmp-1604841490.464649-3354-161216929174615 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpvl3jnr2n TO /root/.ansible/tmp/ansible-tmp-1604841490.464649-3354-161216929174615/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841490.464649-3354-161216929174615/ /root/.ansible/tmp/ansible-tmp-1604841490.464649-3354-161216929174615/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841490.464649-3354-161216929174615/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841490.464649-3354-161216929174615/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp/config.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/crypto/peer : Create the msp directory if it does not exist] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841490.6498768-3380-91722957238941 `" && echo ansible-tmp-1604841490.6498768-3380-91722957238941="` echo /root/.ansible/tmp/ansible-tmp-1604841490.6498768-3380-91722957238941 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplr6c4vk9 TO /root/.ansible/tmp/ansible-tmp-1604841490.6498768-3380-91722957238941/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841490.6498768-3380-91722957238941/ /root/.ansible/tmp/ansible-tmp-1604841490.6498768-3380-91722957238941/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841490.6498768-3380-91722957238941/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841490.6498768-3380-91722957238941/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        },
        "before": {
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/crypto-config/peerOrganizations/carrier-net/msp",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Create the MSP config.yaml file for orgs] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:79
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841490.8472786-3406-163150541742047 `" && echo ansible-tmp-1604841490.8472786-3406-163150541742047="` echo /root/.ansible/tmp/ansible-tmp-1604841490.8472786-3406-163150541742047 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp2ug5i32c TO /root/.ansible/tmp/ansible-tmp-1604841490.8472786-3406-163150541742047/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841490.8472786-3406-163150541742047/ /root/.ansible/tmp/ansible-tmp-1604841490.8472786-3406-163150541742047/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841490.8472786-3406-163150541742047/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841490.8472786-3406-163150541742047/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
    "delta": "0:00:00.002293",
    "end": "2020-11-08 13:18:10.980577",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build/crypto-config/peerOrganizations/carrier-net/msp\ncat <<EOF > config.yaml\nNodeOUs:\n  Enable: true\n  ClientOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca-carrier-net-7054.pem\n    OrganizationalUnitIdentifier: peer\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:10.978284",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/crypto/peer : Check that orderer-certificate file exists] *********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:96
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841491.0406177-3434-186126760243364 `" && echo ansible-tmp-1604841491.0406177-3434-186126760243364="` echo /root/.ansible/tmp/ansible-tmp-1604841491.0406177-3434-186126760243364 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp2zj5suvd TO /root/.ansible/tmp/ansible-tmp-1604841491.0406177-3434-186126760243364/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841491.0406177-3434-186126760243364/ /root/.ansible/tmp/ansible-tmp-1604841491.0406177-3434-186126760243364/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841491.0406177-3434-186126760243364/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841491.0406177-3434-186126760243364/ > /dev/null 2>&1 && sleep 0'
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604776823.3655164,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "61c1ca6485a99ff2b2643212fffaebd4cfb74702",
        "ctime": 1604776821.6174898,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3831,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604776821.4854877,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 745,
        "uid": 0,
        "version": "4090621521",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841491.224759-3434-24585646633412 `" && echo ansible-tmp-1604841491.224759-3434-24585646633412="` echo /root/.ansible/tmp/ansible-tmp-1604841491.224759-3434-24585646633412 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpphwivefk TO /root/.ansible/tmp/ansible-tmp-1604841491.224759-3434-24585646633412/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841491.224759-3434-24585646633412/ /root/.ansible/tmp/ansible-tmp-1604841491.224759-3434-24585646633412/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841491.224759-3434-24585646633412/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841491.224759-3434-24585646633412/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604776823.413517,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "61c1ca6485a99ff2b2643212fffaebd4cfb74702",
        "ctime": 1604776821.9454947,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3792,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604776821.8094926,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 745,
        "uid": 0,
        "version": "1065347510",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841491.406104-3434-169786921656745 `" && echo ansible-tmp-1604841491.406104-3434-169786921656745="` echo /root/.ansible/tmp/ansible-tmp-1604841491.406104-3434-169786921656745 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplsjjy0c4 TO /root/.ansible/tmp/ansible-tmp-1604841491.406104-3434-169786921656745/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841491.406104-3434-169786921656745/ /root/.ansible/tmp/ansible-tmp-1604841491.406104-3434-169786921656745/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841491.406104-3434-169786921656745/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841491.406104-3434-169786921656745/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt"
        }
    },
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "stat": {
        "atime": 1604776823.4575179,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "61c1ca6485a99ff2b2643212fffaebd4cfb74702",
        "ctime": 1604776822.2774997,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3738,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604776822.1414976,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 745,
        "uid": 0,
        "version": "3711702108",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [create/crypto/peer : Ensure orderer tls cert directory exists] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:108
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841491.6134849-3514-230787949319927 `" && echo ansible-tmp-1604841491.6134849-3514-230787949319927="` echo /root/.ansible/tmp/ansible-tmp-1604841491.6134849-3514-230787949319927 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmptbl_8_nu TO /root/.ansible/tmp/ansible-tmp-1604841491.6134849-3514-230787949319927/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841491.6134849-3514-230787949319927/ /root/.ansible/tmp/ansible-tmp-1604841491.6134849-3514-230787949319927/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841491.6134849-3514-230787949319927/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841491.6134849-3514-230787949319927/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841491.7877667-3514-87423844586622 `" && echo ansible-tmp-1604841491.7877667-3514-87423844586622="` echo /root/.ansible/tmp/ansible-tmp-1604841491.7877667-3514-87423844586622 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbsvex6ig TO /root/.ansible/tmp/ansible-tmp-1604841491.7877667-3514-87423844586622/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841491.7877667-3514-87423844586622/ /root/.ansible/tmp/ansible-tmp-1604841491.7877667-3514-87423844586622/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841491.7877667-3514-87423844586622/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841491.7877667-3514-87423844586622/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841491.9568927-3514-134781136005730 `" && echo ansible-tmp-1604841491.9568927-3514-134781136005730="` echo /root/.ansible/tmp/ansible-tmp-1604841491.9568927-3514-134781136005730 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpqo6eziet TO /root/.ansible/tmp/ansible-tmp-1604841491.9568927-3514-134781136005730/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841491.9568927-3514-134781136005730/ /root/.ansible/tmp/ansible-tmp-1604841491.9568927-3514-134781136005730/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841491.9568927-3514-134781136005730/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841491.9568927-3514-134781136005730/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "diff": {
        "after": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        },
        "before": {
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "path": "./build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/crypto/peer : Copy tls ca.crt from auto-generated path to given path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:120
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544 `" && echo ansible-tmp-1604841492.1576986-3588-140907821931544="` echo /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbgd5y6gj TO /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/ /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/ /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_50o0ua4 TO /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/ /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/ > /dev/null 2>&1 && sleep 0'
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2cc711fbb45a2386d28cfc46e70693d2",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 741,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841492.1576986-3588-140907821931544/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127 `" && echo ansible-tmp-1604841492.4996698-3588-151174746639127="` echo /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpiltoyfml TO /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/ /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/ /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpumu31qfa TO /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/ /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2cc711fbb45a2386d28cfc46e70693d2",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 741,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841492.4996698-3588-151174746639127/source",
    "state": "file",
    "uid": 0
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255 `" && echo ansible-tmp-1604841492.823142-3588-258272531103255="` echo /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfjbmotnw TO /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/ /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/ca.crt TO /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/ /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpy7mgl5x6 TO /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/ /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": true,
    "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "ca.crt",
            "attributes": null,
            "backup": false,
            "checksum": "c9405e52850edb0a6753ccb2daece1bbcedeab23",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2cc711fbb45a2386d28cfc46e70693d2",
    "mode": "0644",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "owner": "root",
    "size": 741,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841492.823142-3588-258272531103255/source",
    "state": "file",
    "uid": 0
}

TASK [create/crypto/peer : Check if Orderer certs exist in Vault] **************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:134
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841493.1810915-3710-152304280325000 `" && echo ansible-tmp-1604841493.1810915-3710-152304280325000="` echo /root/.ansible/tmp/ansible-tmp-1604841493.1810915-3710-152304280325000 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpm6aq49ct TO /root/.ansible/tmp/ansible-tmp-1604841493.1810915-3710-152304280325000/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841493.1810915-3710-152304280325000/ /root/.ansible/tmp/ansible-tmp-1604841493.1810915-3710-152304280325000/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841493.1810915-3710-152304280325000/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841493.1810915-3710-152304280325000/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.053008",
    "end": "2020-11-08 13:18:13.366580",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-08 13:18:13.313572",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841493.4105685-3710-83810085846674 `" && echo ansible-tmp-1604841493.4105685-3710-83810085846674="` echo /root/.ansible/tmp/ansible-tmp-1604841493.4105685-3710-83810085846674 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpz9j6vtn5 TO /root/.ansible/tmp/ansible-tmp-1604841493.4105685-3710-83810085846674/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841493.4105685-3710-83810085846674/ /root/.ansible/tmp/ansible-tmp-1604841493.4105685-3710-83810085846674/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841493.4105685-3710-83810085846674/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841493.4105685-3710-83810085846674/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.050762",
    "end": "2020-11-08 13:18:13.590401",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-08 13:18:13.539639",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841493.6339707-3710-28456179756743 `" && echo ansible-tmp-1604841493.6339707-3710-28456179756743="` echo /root/.ansible/tmp/ansible-tmp-1604841493.6339707-3710-28456179756743 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpmtw096kf TO /root/.ansible/tmp/ansible-tmp-1604841493.6339707-3710-28456179756743/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841493.6339707-3710-28456179756743/ /root/.ansible/tmp/ansible-tmp-1604841493.6339707-3710-28456179756743/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841493.6339707-3710-28456179756743/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841493.6339707-3710-28456179756743/ > /dev/null 2>&1 && sleep 0'
failed: [localhost] (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'}) => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "cmd": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
    "delta": "0:00:00.094521",
    "end": "2020-11-08 13:18:13.858135",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=ca.crt secret/crypto/peerOrganizations/carrier-net/orderer/tls\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "rc": 2,
    "start": "2020-11-08 13:18:13.763614",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Save Orderer certs if not in Vault] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:149
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'walmart', 'uri': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt",
        "name": "orderer1",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer2', 'org_name': 'walmart', 'uri': 'orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt",
        "name": "orderer2",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer3', 'org_name': 'walmart', 'uri': 'orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443', 'certificate': '/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt'})  => {
    "ansible_loop_var": "orderer",
    "changed": false,
    "orderer": {
        "certificate": "/Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt",
        "name": "orderer3",
        "orderer": null,
        "org_name": "walmart",
        "type": "orderer",
        "uri": "orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443"
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/crypto/peer : Copy organization level certificates for orderers] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:158
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841494.0034332-3814-176717892365774 `" && echo ansible-tmp-1604841494.0034332-3814-176717892365774="` echo /root/.ansible/tmp/ansible-tmp-1604841494.0034332-3814-176717892365774 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpav6hrb2g TO /root/.ansible/tmp/ansible-tmp-1604841494.0034332-3814-176717892365774/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841494.0034332-3814-176717892365774/ /root/.ansible/tmp/ansible-tmp-1604841494.0034332-3814-176717892365774/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841494.0034332-3814-176717892365774/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841494.0034332-3814-176717892365774/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt)\" \n",
    "delta": "0:00:00.138671",
    "end": "2020-11-08 13:18:14.272782",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer1.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer2.crt)\" \nvault write secret/crypto/peerOrganizations/carrier-net/orderer/tls ca.crt=\"$(cat /Users/s0s0dit/project/blockchain-automation-framework/build/orderer3.crt)\" \n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:14.134111",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/orderer/tls"
    ]
}

TASK [create/crypto/peer : Check if admin msp already created] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:173
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841494.3382893-3868-237891892159434 `" && echo ansible-tmp-1604841494.3382893-3868-237891892159434="` echo /root/.ansible/tmp/ansible-tmp-1604841494.3382893-3868-237891892159434 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8bmujhl3 TO /root/.ansible/tmp/ansible-tmp-1604841494.3382893-3868-237891892159434/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841494.3382893-3868-237891892159434/ /root/.ansible/tmp/ansible-tmp-1604841494.3382893-3868-237891892159434/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841494.3382893-3868-237891892159434/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841494.3382893-3868-237891892159434/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/admin/msp\n",
    "delta": "0:00:00.054980",
    "end": "2020-11-08 13:18:14.525270",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/admin/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:18:14.470290",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/users/admin/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/users/admin/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Copy organization level certificates for orgs] ******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:183
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841494.5925148-3902-108604610288205 `" && echo ansible-tmp-1604841494.5925148-3902-108604610288205="` echo /root/.ansible/tmp/ansible-tmp-1604841494.5925148-3902-108604610288205 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpwylsugk6 TO /root/.ansible/tmp/ansible-tmp-1604841494.5925148-3902-108604610288205/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841494.5925148-3902-108604610288205/ /root/.ansible/tmp/ansible-tmp-1604841494.5925148-3902-108604610288205/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841494.5925148-3902-108604610288205/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841494.5925148-3902-108604610288205/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.092539",
    "end": "2020-11-08 13:18:14.814778",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/users/admin/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/admin/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/admincerts/Admin@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/Admin@carrier-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:14.722239",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/admin/msp"
    ]
}

TASK [create/crypto/peer : Check if user msp already created] ******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:193
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841494.8794086-3955-26866815803651 `" && echo ansible-tmp-1604841494.8794086-3955-26866815803651="` echo /root/.ansible/tmp/ansible-tmp-1604841494.8794086-3955-26866815803651 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp002bmtf0 TO /root/.ansible/tmp/ansible-tmp-1604841494.8794086-3955-26866815803651/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841494.8794086-3955-26866815803651/ /root/.ansible/tmp/ansible-tmp-1604841494.8794086-3955-26866815803651/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841494.8794086-3955-26866815803651/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841494.8794086-3955-26866815803651/ > /dev/null 2>&1 && sleep 0'
fatal: [localhost]: FAILED! => {
    "changed": false,
    "cmd": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/user1/msp\n",
    "delta": "0:00:00.055005",
    "end": "2020-11-08 13:18:15.065212",
    "invocation": {
        "module_args": {
            "_raw_params": "vault kv get -field=admincerts secret/crypto/peerOrganizations/carrier-net/users/user1/msp\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 2,
    "start": "2020-11-08 13:18:15.010207",
    "stderr": "No value found at secret/crypto/peerOrganizations/carrier-net/users/user1/msp",
    "stderr_lines": [
        "No value found at secret/crypto/peerOrganizations/carrier-net/users/user1/msp"
    ],
    "stdout": "",
    "stdout_lines": []
}
...ignoring

TASK [create/crypto/peer : Copy user certificates for orgs] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/crypto/peer/tasks/main.yaml:203
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841495.135052-3990-243742210969604 `" && echo ansible-tmp-1604841495.135052-3990-243742210969604="` echo /root/.ansible/tmp/ansible-tmp-1604841495.135052-3990-243742210969604 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplcskgnae TO /root/.ansible/tmp/ansible-tmp-1604841495.135052-3990-243742210969604/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841495.135052-3990-243742210969604/ /root/.ansible/tmp/ansible-tmp-1604841495.135052-3990-243742210969604/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841495.135052-3990-243742210969604/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841495.135052-3990-243742210969604/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/crypto/peerOrganizations/carrier-net/users/user1/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/user1/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/admincerts/User1@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\"\n",
    "delta": "0:00:00.095521",
    "end": "2020-11-08 13:18:15.363670",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/peerOrganizations/carrier-net/users/user1/tls ca.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\" client.crt=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.crt)\" client.key=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/client.key)\"\nvault write secret/crypto/peerOrganizations/carrier-net/users/user1/msp admincerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/admincerts/User1@carrier-net-cert.pem)\" cacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/cacerts/ca-carrier-net-7054.pem)\" keystore=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/keystore/*_sk)\" signcerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/msp/signcerts/cert.pem)\" tlscacerts=\"$(cat ./build/crypto-config/peerOrganizations/carrier-net/users/User1@carrier-net/tls/ca.crt)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:15.268149",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/tls\nSuccess! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/msp",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/tls",
        "Success! Data written to: secret/crypto/peerOrganizations/carrier-net/users/user1/msp"
    ]
}

TASK [include_role : create/configtx] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:131

TASK [create/configtx : Create build directory if it does not exist] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:12
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841495.5405676-4045-241981281183086 `" && echo ansible-tmp-1604841495.5405676-4045-241981281183086="` echo /root/.ansible/tmp/ansible-tmp-1604841495.5405676-4045-241981281183086 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpgmhh4_50 TO /root/.ansible/tmp/ansible-tmp-1604841495.5405676-4045-241981281183086/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841495.5405676-4045-241981281183086/ /root/.ansible/tmp/ansible-tmp-1604841495.5405676-4045-241981281183086/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841495.5405676-4045-241981281183086/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841495.5405676-4045-241981281183086/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/configtx : Remove old configtx file] ******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841495.7354262-4071-135847256813935 `" && echo ansible-tmp-1604841495.7354262-4071-135847256813935="` echo /root/.ansible/tmp/ansible-tmp-1604841495.7354262-4071-135847256813935 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpn657wv3b TO /root/.ansible/tmp/ansible-tmp-1604841495.7354262-4071-135847256813935/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841495.7354262-4071-135847256813935/ /root/.ansible/tmp/ansible-tmp-1604841495.7354262-4071-135847256813935/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841495.7354262-4071-135847256813935/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841495.7354262-4071-135847256813935/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/configtx.yaml",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/configtx.yaml",
    "state": "absent"
}

TASK [create/configtx : create configtx.yaml file] *****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:25
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841495.9229033-4097-184721439004423 `" && echo ansible-tmp-1604841495.9229033-4097-184721439004423="` echo /root/.ansible/tmp/ansible-tmp-1604841495.9229033-4097-184721439004423 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp836kxk58 TO /root/.ansible/tmp/ansible-tmp-1604841495.9229033-4097-184721439004423/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841495.9229033-4097-184721439004423/ /root/.ansible/tmp/ansible-tmp-1604841495.9229033-4097-184721439004423/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841495.9229033-4097-184721439004423/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841495.9229033-4097-184721439004423/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "dest": "./build/configtx.yaml",
    "diff": {
        "after": {
            "atime": 1604841496.0582988,
            "mtime": 1604841496.0582988,
            "path": "./build/configtx.yaml",
            "state": "touch"
        },
        "before": {
            "atime": 1604841496.0568018,
            "mtime": 1604841496.0568018,
            "path": "./build/configtx.yaml",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/configtx.yaml",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "touch",
            "unsafe_writes": false
        }
    },
    "mode": "0644",
    "owner": "root",
    "size": 0,
    "state": "file",
    "uid": 0
}

TASK [create/configtx : Adding init patch to configtx.yaml] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:32
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841496.2064037-4123-33792386340864 `" && echo ansible-tmp-1604841496.2064037-4123-33792386340864="` echo /root/.ansible/tmp/ansible-tmp-1604841496.2064037-4123-33792386340864 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpikqg2fiz TO /root/.ansible/tmp/ansible-tmp-1604841496.2064037-4123-33792386340864/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841496.2064037-4123-33792386340864/ /root/.ansible/tmp/ansible-tmp-1604841496.2064037-4123-33792386340864/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841496.2064037-4123-33792386340864/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841496.2064037-4123-33792386340864/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "---\nCapabilities:\n  Global: &ChannelCapabilities\n    V1_4_3: true\n  Orderer: &OrdererCapabilities\n    V1_4_2: true\n  Application: &ApplicationCapabilities\n    V1_4_2: true\n\nApplication: &ApplicationDefaults\n  Organizations:\n  Policies: &ApplicationDefaultPolicies\n    LifecycleEndorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Endorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Readers:\n        Type: ImplicitMeta\n        Rule: \"ANY Readers\"\n    Writers:\n        Type: ImplicitMeta\n        Rule: \"ANY Writers\"\n    Admins:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ApplicationCapabilities\n\nChannel: &ChannelDefaults\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ChannelCapabilities\n\nOrganizations:\n\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Adding organization patch to configtx.yaml] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:44
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841496.5800116-4149-94046953693030 `" && echo ansible-tmp-1604841496.5800116-4149-94046953693030="` echo /root/.ansible/tmp/ansible-tmp-1604841496.5800116-4149-94046953693030 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp5keoiq_n TO /root/.ansible/tmp/ansible-tmp-1604841496.5800116-4149-94046953693030/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841496.5800116-4149-94046953693030/ /root/.ansible/tmp/ansible-tmp-1604841496.5800116-4149-94046953693030/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841496.5800116-4149-94046953693030/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841496.5800116-4149-94046953693030/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "  - &walmartOrg\n    Name: walmartMSP\n    ID: walmartMSP\n    MSPDir: ./crypto-config/ordererOrganizations/walmart-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('walmartMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n    \n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841496.8367434-4149-109091532911564 `" && echo ansible-tmp-1604841496.8367434-4149-109091532911564="` echo /root/.ansible/tmp/ansible-tmp-1604841496.8367434-4149-109091532911564 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpo8og5zk4 TO /root/.ansible/tmp/ansible-tmp-1604841496.8367434-4149-109091532911564/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841496.8367434-4149-109091532911564/ /root/.ansible/tmp/ansible-tmp-1604841496.8367434-4149-109091532911564/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841496.8367434-4149-109091532911564/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841496.8367434-4149-109091532911564/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "  - &carrierOrg\n    Name: carrierMSP\n    ID: carrierMSP\n    MSPDir: ./crypto-config/peerOrganizations/carrier-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('carrierMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n          \n    AnchorPeers:\n      # AnchorPeers defines the location of peers which can be used\n      # for cross org gossip communication.  Note, this value is only\n      # encoded in the genesis block in the Application section context\n      - Host: peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}

TASK [create/configtx : Adding orderer patch to configtx.yaml] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:58
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841497.1512861-4199-54807223036636 `" && echo ansible-tmp-1604841497.1512861-4199-54807223036636="` echo /root/.ansible/tmp/ansible-tmp-1604841497.1512861-4199-54807223036636 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbybsd_25 TO /root/.ansible/tmp/ansible-tmp-1604841497.1512861-4199-54807223036636/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841497.1512861-4199-54807223036636/ /root/.ansible/tmp/ansible-tmp-1604841497.1512861-4199-54807223036636/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841497.1512861-4199-54807223036636/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841497.1512861-4199-54807223036636/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "Orderer: &OrdererDefaults\n  OrdererType: etcdraft\n  Addresses:\n    - orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443\n\n  BatchTimeout: 2s\n  BatchSize:\n    MaxMessageCount: 10\n    AbsoluteMaxBytes: 98 MB\n    PreferredMaxBytes: 1024 KB\n  EtcdRaft:\n    Consenters:\n      - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n      - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n      - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n  Organizations:\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n    BlockValidation:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n  Capabilities:\n    <<: *OrdererCapabilities\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Adding profile patch to configtx.yaml] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:73
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841497.4174883-4225-84745697910067 `" && echo ansible-tmp-1604841497.4174883-4225-84745697910067="` echo /root/.ansible/tmp/ansible-tmp-1604841497.4174883-4225-84745697910067 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/blockinfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp34qknl_5 TO /root/.ansible/tmp/ansible-tmp-1604841497.4174883-4225-84745697910067/AnsiballZ_blockinfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841497.4174883-4225-84745697910067/ /root/.ansible/tmp/ansible-tmp-1604841497.4174883-4225-84745697910067/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841497.4174883-4225-84745697910067/AnsiballZ_blockinfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841497.4174883-4225-84745697910067/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "item",
    "changed": true,
    "diff": [
        {
            "after": "",
            "after_header": "./build/configtx.yaml (content)",
            "before": "",
            "before_header": "./build/configtx.yaml (content)"
        },
        {
            "after_header": "./build/configtx.yaml (file attributes)",
            "before_header": "./build/configtx.yaml (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": false,
            "block": "Profiles:\n  OrdererGenesis:\n    <<: *ChannelDefaults\n    Orderer:\n      <<: *OrdererDefaults\n      OrdererType: etcdraft\n      EtcdRaft:\n        Consenters:\n        - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n      Organizations:\n        - *walmartOrg\n    Consortiums:\n      SupplyChainConsortium:\n        Organizations:\n          - *carrierOrg\n  AllChannel:\n    <<: *ChannelDefaults\n    Consortium: SupplyChainConsortium\n    Application:\n      <<: *ApplicationDefaults\n      Organizations:\n        - *carrierOrg\n",
            "create": false,
            "dest": "./build/configtx.yaml",
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "marker": "#",
            "marker_begin": "BEGIN",
            "marker_end": "END",
            "mode": null,
            "owner": null,
            "path": "./build/configtx.yaml",
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "msg": "Block inserted"
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/configtx : Display configtx file contents] ************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:87
ok: [localhost] => {
    "msg": "The configtx file is: #\n---\nCapabilities:\n  Global: &ChannelCapabilities\n    V1_4_3: true\n  Orderer: &OrdererCapabilities\n    V1_4_2: true\n  Application: &ApplicationCapabilities\n    V1_4_2: true\n\nApplication: &ApplicationDefaults\n  Organizations:\n  Policies: &ApplicationDefaultPolicies\n    LifecycleEndorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Endorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Readers:\n        Type: ImplicitMeta\n        Rule: \"ANY Readers\"\n    Writers:\n        Type: ImplicitMeta\n        Rule: \"ANY Writers\"\n    Admins:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ApplicationCapabilities\n\nChannel: &ChannelDefaults\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ChannelCapabilities\n\nOrganizations:\n\n#\n  - &walmartOrg\n    Name: walmartMSP\n    ID: walmartMSP\n    MSPDir: ./crypto-config/ordererOrganizations/walmart-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('walmartMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('walmartMSP.member')\"\n    \n#\n  - &carrierOrg\n    Name: carrierMSP\n    ID: carrierMSP\n    MSPDir: ./crypto-config/peerOrganizations/carrier-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('carrierMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n          \n    AnchorPeers:\n      # AnchorPeers defines the location of peers which can be used\n      # for cross org gossip communication.  Note, this value is only\n      # encoded in the genesis block in the Application section context\n      - Host: peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n#\nOrderer: &OrdererDefaults\n  OrdererType: etcdraft\n  Addresses:\n    - orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer2.walmart-net.suneel.pvt.wmtbaf.info:8443\n    - orderer3.walmart-net.suneel.pvt.wmtbaf.info:8443\n\n  BatchTimeout: 2s\n  BatchSize:\n    MaxMessageCount: 10\n    AbsoluteMaxBytes: 98 MB\n    PreferredMaxBytes: 1024 KB\n  EtcdRaft:\n    Consenters:\n      - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n      - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n      - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n        Port: 8443\n        ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n  Organizations:\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n    BlockValidation:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n  Capabilities:\n    <<: *OrdererCapabilities\n#\nProfiles:\n  OrdererGenesis:\n    <<: *ChannelDefaults\n    Orderer:\n      <<: *OrdererDefaults\n      OrdererType: etcdraft\n      EtcdRaft:\n        Consenters:\n        - Host: orderer1.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net/tls/server.crt\n        - Host: orderer2.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net/tls/server.crt\n        - Host: orderer3.walmart-net.suneel.pvt.wmtbaf.info\n          Port: 8443\n          ClientTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net/tls/server.crt\n      Organizations:\n        - *walmartOrg\n    Consortiums:\n      SupplyChainConsortium:\n        Organizations:\n          - *carrierOrg\n  AllChannel:\n    <<: *ChannelDefaults\n    Consortium: SupplyChainConsortium\n    Application:\n      <<: *ApplicationDefaults\n      Organizations:\n        - *carrierOrg\n#"
}

TASK [Create channel artifacts] ************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:137

TASK [create/channel_artifacts : Create build directory if it does not exist] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:5
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841497.873747-4255-29944420217750 `" && echo ansible-tmp-1604841497.873747-4255-29944420217750="` echo /root/.ansible/tmp/ansible-tmp-1604841497.873747-4255-29944420217750 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpm4mwgrmi TO /root/.ansible/tmp/ansible-tmp-1604841497.873747-4255-29944420217750/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841497.873747-4255-29944420217750/ /root/.ansible/tmp/ansible-tmp-1604841497.873747-4255-29944420217750/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841497.873747-4255-29944420217750/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841497.873747-4255-29944420217750/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "./build"
        },
        "before": {
            "path": "./build"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : check configtxgen] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841498.0637393-4281-114954797954676 `" && echo ansible-tmp-1604841498.0637393-4281-114954797954676="` echo /root/.ansible/tmp/ansible-tmp-1604841498.0637393-4281-114954797954676 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpsev7nxei TO /root/.ansible/tmp/ansible-tmp-1604841498.0637393-4281-114954797954676/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841498.0637393-4281-114954797954676/ /root/.ansible/tmp/ansible-tmp-1604841498.0637393-4281-114954797954676/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841498.0637393-4281-114954797954676/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841498.0637393-4281-114954797954676/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/configtxgen"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [create/channel_artifacts : register temporary directory] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841498.2464285-4307-264690523310304 `" && echo ansible-tmp-1604841498.2464285-4307-264690523310304="` echo /root/.ansible/tmp/ansible-tmp-1604841498.2464285-4307-264690523310304 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp9x8ynb9d TO /root/.ansible/tmp/ansible-tmp-1604841498.2464285-4307-264690523310304/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841498.2464285-4307-264690523310304/ /root/.ansible/tmp/ansible-tmp-1604841498.2464285-4307-264690523310304/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841498.2464285-4307-264690523310304/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841498.2464285-4307-264690523310304/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.cgsf1ra6",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : Getting the configtxgen binary tar] ***********
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841498.436556-4333-221541396093441 `" && echo ansible-tmp-1604841498.436556-4333-221541396093441="` echo /root/.ansible/tmp/ansible-tmp-1604841498.436556-4333-221541396093441 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/get_url.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_x2gd7ov TO /root/.ansible/tmp/ansible-tmp-1604841498.436556-4333-221541396093441/AnsiballZ_get_url.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841498.436556-4333-221541396093441/ /root/.ansible/tmp/ansible-tmp-1604841498.436556-4333-221541396093441/AnsiballZ_get_url.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841498.436556-4333-221541396093441/AnsiballZ_get_url.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841498.436556-4333-221541396093441/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum_dest": null,
    "checksum_src": "8098245d9d10578e78c0ac66e21edfa9957126e4",
    "dest": "/tmp/ansible.cgsf1ra6/hyperledger-fabric-linux-amd64-2.0.0.tar.gz",
    "elapsed": 1,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "attributes": null,
            "backup": null,
            "checksum": "",
            "client_cert": null,
            "client_key": null,
            "dest": "/tmp/ansible.cgsf1ra6",
            "force": false,
            "force_basic_auth": false,
            "group": null,
            "headers": null,
            "http_agent": "ansible-httpget",
            "mode": null,
            "owner": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "sha256sum": "",
            "timeout": 10,
            "tmp_dest": null,
            "unsafe_writes": false,
            "url": "https://github.com/hyperledger/fabric/releases/download/v2.0.0/hyperledger-fabric-linux-amd64-2.0.0.tar.gz",
            "url_password": null,
            "url_username": null,
            "use_proxy": true,
            "validate_certs": true
        }
    },
    "md5sum": "d113b7b9949345855f93314eebcf8fbb",
    "mode": "0644",
    "msg": "OK (76285381 bytes)",
    "owner": "root",
    "size": 76285381,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841498.436556-4333-221541396093441/tmpxufdbm4s",
    "state": "file",
    "status_code": 200,
    "uid": 0,
    "url": "https://github.com/hyperledger/fabric/releases/download/v2.0.0/hyperledger-fabric-linux-amd64-2.0.0.tar.gz"
}

TASK [create/channel_artifacts : Unziping the downloaded file] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:33
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204 `" && echo ansible-tmp-1604841500.9976501-4361-274573824703204="` echo /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp1rv5a2ts TO /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/ /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /tmp/ansible.cgsf1ra6/hyperledger-fabric-linux-amd64-2.0.0.tar.gz TO /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/ /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/unarchive.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpu80q3qyn TO /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/AnsiballZ_unarchive.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/ /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/AnsiballZ_unarchive.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/AnsiballZ_unarchive.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "dest": "/tmp/ansible.cgsf1ra6",
    "extract_results": {
        "cmd": [
            "/bin/tar",
            "--extract",
            "-C",
            "/tmp/ansible.cgsf1ra6",
            "-z",
            "-f",
            "/root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/source"
        ],
        "err": "",
        "out": "",
        "rc": 0
    },
    "gid": 0,
    "group": "root",
    "handler": "TgzArchive",
    "invocation": {
        "module_args": {
            "attributes": null,
            "creates": null,
            "dest": "/tmp/ansible.cgsf1ra6",
            "exclude": [],
            "extra_opts": [],
            "group": null,
            "keep_newer": false,
            "list_files": false,
            "mode": null,
            "owner": null,
            "remote_src": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/source",
            "unsafe_writes": false,
            "validate_certs": true
        }
    },
    "mode": "0700",
    "owner": "root",
    "size": 4096,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841500.9976501-4361-274573824703204/source",
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : Moving the configtxgen from the extracted folder and place in it path] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:41
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734 `" && echo ansible-tmp-1604841505.854523-4423-37321757407734="` echo /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplogd6yho TO /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/ /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /tmp/ansible.cgsf1ra6/bin/configtxgen TO /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/ /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpvl5k66c3 TO /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/ /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "2ccdd369503d991130e0d25c0f0ba566098e4ef2",
    "dest": "./build/configtxgen",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "configtxgen",
            "attributes": null,
            "backup": false,
            "checksum": "2ccdd369503d991130e0d25c0f0ba566098e4ef2",
            "content": null,
            "dest": "./build/configtxgen",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": 493,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "2732cea94015343c7cdf919984fdb206",
    "mode": "0755",
    "owner": "root",
    "size": 20999008,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841505.854523-4423-37321757407734/source",
    "state": "file",
    "uid": 0
}

TASK [create/channel_artifacts : Creating channel-artifacts folder] ************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:50
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841506.537186-4463-170887132503366 `" && echo ansible-tmp-1604841506.537186-4463-170887132503366="` echo /root/.ansible/tmp/ansible-tmp-1604841506.537186-4463-170887132503366 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp63czerx2 TO /root/.ansible/tmp/ansible-tmp-1604841506.537186-4463-170887132503366/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841506.537186-4463-170887132503366/ /root/.ansible/tmp/ansible-tmp-1604841506.537186-4463-170887132503366/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841506.537186-4463-170887132503366/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841506.537186-4463-170887132503366/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build/channel-artifacts",
            "state": "directory"
        },
        "before": {
            "path": "./build/channel-artifacts",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build/channel-artifacts",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [create/channel_artifacts : remove old channel block] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:56
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841506.732301-4489-55653522936990 `" && echo ansible-tmp-1604841506.732301-4489-55653522936990="` echo /root/.ansible/tmp/ansible-tmp-1604841506.732301-4489-55653522936990 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpz_oc88f8 TO /root/.ansible/tmp/ansible-tmp-1604841506.732301-4489-55653522936990/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841506.732301-4489-55653522936990/ /root/.ansible/tmp/ansible-tmp-1604841506.732301-4489-55653522936990/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841506.732301-4489-55653522936990/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841506.732301-4489-55653522936990/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts/allchannel.tx",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/channel-artifacts/allchannel.tx",
    "state": "absent"
}

TASK [create/channel_artifacts : Creating channels] ****************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:64
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841506.9246135-4515-5548530517411 `" && echo ansible-tmp-1604841506.9246135-4515-5548530517411="` echo /root/.ansible/tmp/ansible-tmp-1604841506.9246135-4515-5548530517411 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpb4z8vc6b TO /root/.ansible/tmp/ansible-tmp-1604841506.9246135-4515-5548530517411/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841506.9246135-4515-5548530517411/ /root/.ansible/tmp/ansible-tmp-1604841506.9246135-4515-5548530517411/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841506.9246135-4515-5548530517411/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841506.9246135-4515-5548530517411/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputCreateChannelTx ./channel-artifacts/allchannel.tx -channelID allchannel\ncat ./channel-artifacts/allchannel.tx | base64 > ./channel-artifacts/allchannel.tx.base64\n",
    "delta": "0:00:00.049650",
    "end": "2020-11-08 13:18:27.103521",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile AllChannel -outputCreateChannelTx ./channel-artifacts/allchannel.tx -channelID allchannel\ncat ./channel-artifacts/allchannel.tx | base64 > ./channel-artifacts/allchannel.tx.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:27.053871",
    "stderr": "\u001b[34m2020-11-08 13:18:27.081 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-08 13:18:27.100 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-08 13:18:27.100 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003\u001b[0m Generating new channel configtx\n\u001b[34m2020-11-08 13:18:27.101 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004\u001b[0m Writing new channel tx",
    "stderr_lines": [
        "\u001b[34m2020-11-08 13:18:27.081 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-08 13:18:27.100 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-08 13:18:27.100 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003\u001b[0m Generating new channel configtx",
        "\u001b[34m2020-11-08 13:18:27.101 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004\u001b[0m Writing new channel tx"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/channel_artifacts : Creating Anchor artifacts] ********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:75
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841507.169166-4550-169013957815789 `" && echo ansible-tmp-1604841507.169166-4550-169013957815789="` echo /root/.ansible/tmp/ansible-tmp-1604841507.169166-4550-169013957815789 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphc5s_n9z TO /root/.ansible/tmp/ansible-tmp-1604841507.169166-4550-169013957815789/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841507.169166-4550-169013957815789/ /root/.ansible/tmp/ansible-tmp-1604841507.169166-4550-169013957815789/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841507.169166-4550-169013957815789/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841507.169166-4550-169013957815789/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443'}, {'peer': None, 'name': 'peer1', 'gossipAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443'}], 'ordererAddress': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443'}) => {
    "ansible_loop_var": "participant",
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputAnchorPeersUpdate ./channel-artifacts/allchannelcarrierMSPAnchor.tx -channelID allchannel -asOrg carrierMSP -configPath ./\ncat ./channel-artifacts/allchannelcarrierMSPAnchor.tx | base64 > ./channel-artifacts/allchannelcarrierMSPAnchor.tx.base64\n",
    "delta": "0:00:00.050405",
    "end": "2020-11-08 13:18:27.353705",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile AllChannel -outputAnchorPeersUpdate ./channel-artifacts/allchannelcarrierMSPAnchor.tx -channelID allchannel -asOrg carrierMSP -configPath ./\ncat ./channel-artifacts/allchannelcarrierMSPAnchor.tx | base64 > ./channel-artifacts/allchannelcarrierMSPAnchor.tx.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "participant": {
        "name": "carrier",
        "ordererAddress": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443",
        "org_status": "new",
        "organization": null,
        "peers": [
            {
                "gossipAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer0",
                "peer": null,
                "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443"
            },
            {
                "gossipAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer1",
                "peer": null,
                "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443"
            }
        ],
        "type": "creator"
    },
    "rc": 0,
    "start": "2020-11-08 13:18:27.303300",
    "stderr": "\u001b[34m2020-11-08 13:18:27.331 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-08 13:18:27.350 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-08 13:18:27.350 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update\n\u001b[34m2020-11-08 13:18:27.351 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update",
    "stderr_lines": [
        "\u001b[34m2020-11-08 13:18:27.331 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-08 13:18:27.350 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-08 13:18:27.350 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update",
        "\u001b[34m2020-11-08 13:18:27.351 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/channel_artifacts : Creating JSON configuration for new organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:88
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443'}, {'peer': None, 'name': 'peer1', 'gossipAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443'}], 'ordererAddress': 'orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443'})  => {
    "ansible_loop_var": "participant",
    "changed": false,
    "participant": {
        "name": "carrier",
        "ordererAddress": "orderer1.walmart-net.suneel.pvt.wmtbaf.info:8443",
        "org_status": "new",
        "organization": null,
        "peers": [
            {
                "gossipAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer0",
                "peer": null,
                "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443"
            },
            {
                "gossipAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                "name": "peer1",
                "peer": null,
                "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443"
            }
        ],
        "type": "creator"
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create genesis block] ****************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:146

TASK [create/genesis : Remove old genesis block] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841507.5861447-4589-136345198913450 `" && echo ansible-tmp-1604841507.5861447-4589-136345198913450="` echo /root/.ansible/tmp/ansible-tmp-1604841507.5861447-4589-136345198913450 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpoxn0k76k TO /root/.ansible/tmp/ansible-tmp-1604841507.5861447-4589-136345198913450/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841507.5861447-4589-136345198913450/ /root/.ansible/tmp/ansible-tmp-1604841507.5861447-4589-136345198913450/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841507.5861447-4589-136345198913450/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841507.5861447-4589-136345198913450/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build/channel-artifacts/genesis.block",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build/channel-artifacts/genesis.block",
    "state": "absent"
}

TASK [create/genesis : Create genesis block] ***********************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841507.782277-4615-3082709302285 `" && echo ansible-tmp-1604841507.782277-4615-3082709302285="` echo /root/.ansible/tmp/ansible-tmp-1604841507.782277-4615-3082709302285 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp70o3xn48 TO /root/.ansible/tmp/ansible-tmp-1604841507.782277-4615-3082709302285/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841507.782277-4615-3082709302285/ /root/.ansible/tmp/ansible-tmp-1604841507.782277-4615-3082709302285/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841507.782277-4615-3082709302285/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841507.782277-4615-3082709302285/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd ./build\n./configtxgen -profile OrdererGenesis -channelID syschannel -outputBlock ./channel-artifacts/genesis.block\ncat ./channel-artifacts/genesis.block | base64 > ./channel-artifacts/genesis.block.base64\n",
    "delta": "0:00:00.051418",
    "end": "2020-11-08 13:18:27.966499",
    "invocation": {
        "module_args": {
            "_raw_params": "cd ./build\n./configtxgen -profile OrdererGenesis -channelID syschannel -outputBlock ./channel-artifacts/genesis.block\ncat ./channel-artifacts/genesis.block | base64 > ./channel-artifacts/genesis.block.base64\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:27.915081",
    "stderr": "\u001b[34m2020-11-08 13:18:27.943 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2020-11-08 13:18:27.963 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002\u001b[0m orderer type: etcdraft\n\u001b[34m2020-11-08 13:18:27.963 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003\u001b[0m Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 \n\u001b[34m2020-11-08 13:18:27.963 UTC [common.tools.configtxgen.localconfig] Load -> INFO 004\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2020-11-08 13:18:27.964 UTC [common.tools.configtxgen] doOutputBlock -> INFO 005\u001b[0m Generating genesis block\n\u001b[34m2020-11-08 13:18:27.964 UTC [common.tools.configtxgen] doOutputBlock -> INFO 006\u001b[0m Writing genesis block",
    "stderr_lines": [
        "\u001b[34m2020-11-08 13:18:27.943 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration",
        "\u001b[34m2020-11-08 13:18:27.963 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002\u001b[0m orderer type: etcdraft",
        "\u001b[34m2020-11-08 13:18:27.963 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003\u001b[0m Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 ",
        "\u001b[34m2020-11-08 13:18:27.963 UTC [common.tools.configtxgen.localconfig] Load -> INFO 004\u001b[0m Loaded configuration: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/build/configtx.yaml",
        "\u001b[34m2020-11-08 13:18:27.964 UTC [common.tools.configtxgen] doOutputBlock -> INFO 005\u001b[0m Generating genesis block",
        "\u001b[34m2020-11-08 13:18:27.964 UTC [common.tools.configtxgen] doOutputBlock -> INFO 006\u001b[0m Writing genesis block"
    ],
    "stdout": "",
    "stdout_lines": []
}

TASK [create/genesis : Write genesis block to Vault] ***************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841508.032096-4650-58555223757090 `" && echo ansible-tmp-1604841508.032096-4650-58555223757090="` echo /root/.ansible/tmp/ansible-tmp-1604841508.032096-4650-58555223757090 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpdbl67zu4 TO /root/.ansible/tmp/ansible-tmp-1604841508.032096-4650-58555223757090/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841508.032096-4650-58555223757090/ /root/.ansible/tmp/ansible-tmp-1604841508.032096-4650-58555223757090/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841508.032096-4650-58555223757090/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841508.032096-4650-58555223757090/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {
    "ansible_loop_var": "org",
    "changed": true,
    "cmd": "vault write secret/crypto/ordererOrganizations genesisBlock=\"$(cat ./build/channel-artifacts/genesis.block.base64)\"\n",
    "delta": "0:00:00.080902",
    "end": "2020-11-08 13:18:28.244084",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/crypto/ordererOrganizations genesisBlock=\"$(cat ./build/channel-artifacts/genesis.block.base64)\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "org": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:28.163182",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/crypto/ordererOrganizations",
    "stdout_lines": [
        "Success! Data written to: secret/crypto/ordererOrganizations"
    ]
}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "org",
    "changed": false,
    "org": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : create/orderers] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:155
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'carrier-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'cli': 'enabled', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer1.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}, {'peer': None, 'name': 'peer1', 'type': 'nonanchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer1.carrier-net.suneel.pvt.wmtbaf.info:8443', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'product', 'version': '1', 'maindirectory': './chaincode', 'repository': {'username': 'bafsunsu', 'password': 'bafsunsu2020', 'url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'oreo', 'path': './chaincode'}, 'arguments': '', 'endorsements': ''}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.carrier-net:7054"
        },
        "cli": "enabled",
        "cloud_provider": "azure",
        "country": "GB",
        "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "carrier",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net",
                "type": "ca"
            },
            "peers": [
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer0",
                    "peer": null,
                    "peerAddress": "peer0.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "anchor"
                },
                {
                    "chaincode": {
                        "arguments": "",
                        "endorsements": "",
                        "maindirectory": "./chaincode",
                        "name": "product",
                        "repository": {
                            "branch": "oreo",
                            "password": "bafsunsu2020",
                            "path": "./chaincode",
                            "url": "github.com/bafsunsu/blockchain-automation-framework.git",
                            "username": "bafsunsu"
                        },
                        "version": "1"
                    },
                    "cli": "enabled",
                    "couchdb": {
                        "port": 5984
                    },
                    "events": {
                        "port": 7053
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "grpc": {
                        "port": 7051
                    },
                    "name": "peer1",
                    "peer": null,
                    "peerAddress": "peer1.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "restserver": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "type": "nonanchor"
                }
            ]
        },
        "state": "London",
        "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB",
        "type": "peer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create kafka clusters] ***************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:9
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create orderers] *********************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:25

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841508.6514022-4692-241276799260913 `" && echo ansible-tmp-1604841508.6514022-4692-241276799260913="` echo /root/.ansible/tmp/ansible-tmp-1604841508.6514022-4692-241276799260913 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpnafpuq7f TO /root/.ansible/tmp/ansible-tmp-1604841508.6514022-4692-241276799260913/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841508.6514022-4692-241276799260913/ /root/.ansible/tmp/ansible-tmp-1604841508.6514022-4692-241276799260913/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841508.6514022-4692-241276799260913/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841508.6514022-4692-241276799260913/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841508.8624837-4718-72204340959427 `" && echo ansible-tmp-1604841508.8624837-4718-72204340959427="` echo /root/.ansible/tmp/ansible-tmp-1604841508.8624837-4718-72204340959427 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpehm712m_ TO /root/.ansible/tmp/ansible-tmp-1604841508.8624837-4718-72204340959427/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841508.8624837-4718-72204340959427/ /root/.ansible/tmp/ansible-tmp-1604841508.8624837-4718-72204340959427/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841508.8624837-4718-72204340959427/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841508.8624837-4718-72204340959427/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer1-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803 `" && echo ansible-tmp-1604841509.0642288-4744-238953981540803="` echo /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_kweb1n9 TO /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/ /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpexdk3jjl/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/ /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfvj6kli1 TO /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/ /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "38102d1aaddd2067bad4d14f93f88a22f968b670",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "38102d1aaddd2067bad4d14f93f88a22f968b670",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "69a1ce4a0678c8a1d48de7b494dfd490",
    "mode": "0644",
    "owner": "root",
    "size": 23489,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841509.0642288-4744-238953981540803/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841509.4930212-4786-132948816727952 `" && echo ansible-tmp-1604841509.4930212-4786-132948816727952="` echo /root/.ansible/tmp/ansible-tmp-1604841509.4930212-4786-132948816727952 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpf29z891s TO /root/.ansible/tmp/ansible-tmp-1604841509.4930212-4786-132948816727952/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841509.4930212-4786-132948816727952/ /root/.ansible/tmp/ansible-tmp-1604841509.4930212-4786-132948816727952/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841509.4930212-4786-132948816727952/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841509.4930212-4786-132948816727952/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604841509.3770044,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "38102d1aaddd2067bad4d14f93f88a22f968b670",
        "ctime": 1604841509.3810046,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3948,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841509.2410023,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23489,
        "uid": 0,
        "version": "4270748390",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841509.7423322-4816-172794588321421 `" && echo ansible-tmp-1604841509.7423322-4816-172794588321421="` echo /root/.ansible/tmp/ansible-tmp-1604841509.7423322-4816-172794588321421 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmptmcl2exu TO /root/.ansible/tmp/ansible-tmp-1604841509.7423322-4816-172794588321421/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841509.7423322-4816-172794588321421/ /root/.ansible/tmp/ansible-tmp-1604841509.7423322-4816-172794588321421/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841509.7423322-4816-172794588321421/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841509.7423322-4816-172794588321421/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604840904.1838007,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604841053.3060718,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3429,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604841053.3060718,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1450343826",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer1",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer1",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIDa8vt6Hw4qK8SslcQB6gSd7j6fbD6WcBSTDx9pM4TptEr52Crt2Crh2CngKWggBEAEaBgij\n4J/9BSIKc3lzY2hhbm5lbCpAYjc2NzRlNjU0YzVhYThkN2UzYTdhZDg2Yjk2MTJmODRhZjllMmVk\nY2RjOTdhYzlkYzM2YmM1YzM3OWE4ZDJlMRIaEhhgrusURiKKu1goPf86/APE/eue3r7X9Z4Su3UK\nuHUStXUS+E0KB09yZGVyZXIS7E0SjhYKCndhbG1hcnRNU1AS/xUamxQKA01TUBKTFBKIFBKFFAoK\nd2FsbWFydE1TUBLlBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOXpDQ0FaNmdBd0lC\nQWdJVU1JRkV5R283M0s2MkJHQklaOGNaWEF1MjA2Y3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURneE16QTRNakJhRncweU16QTRNamt4TXpBNE1qQmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJMMm1BYm83R1pQeHg3cStOVFR2ZDNi\nVWdhekp2Smh5clpsYUVNSXhvazROU2s2L1VUR0lKdHA3OFI0WUpoCkFVWWgvTjVobllodk4rcmQ3\nUExpOE92a28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0NnWUlLb1pJemowRQpB\nd0lEUndBd1JBSWdXV1BSNVVMQ3hoaHI0K1RXM2tVS05OMGUzY3ZmU1BoemhCMzNHVW9UVC9RQ0lF\nbTg1dlVzCjZBblVPRFNaeVQ4SCtxbjhheEFVUTJxNXJSU1VkUDdTRVh1dgotLS0tLUVORCBDRVJU\nSUZJQ0FURS0tLS0tCiKWCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDMXpDQ0FuNmdB\nd0lCQWdJVVBRenhzdzNsdkNvWUVEVnpTSEpINllHUnlJMHdDZ1lJS29aSXpqMEVBd0l3CldqRUxN\nQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpH\nOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExX\nNWxkREFlRncweQpNREV4TURneE16RXlNREJhRncweU1URXhNRGd4TXpFM01EQmFNR2t4Q3pBSkJn\nTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0Jn\nTlZCQW9UQjA5eVpHVnlaWEl4RHpBTkJnTlYKQkFzVEJtTnNhV1Z1ZERFYU1CZ0dBMVVFQXd3UlFX\nUnRhVzVBZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FB\nVDNVcFNHOVBxRzRCUmlreTBOOGdmdUxSbGVSeGlXWDZzd09kU0U5dmVBClZZSXZuUXgwRDJXVmY0\nY1FwSTJ0RXA2SXE5QnVZNVdPVEQveTJkNlh6L2FKbzRJQkVUQ0NBUTB3RGdZRFZSMFAKQVFIL0JB\nUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSk4yRm16WTA1ZVhBV1FrZXJ5\nagpvNXB1aVlnT01COEdBMVVkSXdRWU1CYUFGRDd0QW9GYy9IWnVDZ21xdlZFTHlyZ1JFMmVUTUNR\nR0ExVWRFUVFkCk1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzJoblluRXdnWVlHQ0Nv\nREJBVUdCd2dCQkhwN0ltRjAKZEhKeklqcDdJbUZpWVdNdWFXNXBkQ0k2SW5SeWRXVWlMQ0poWkcx\ncGJpSTZJblJ5ZFdVaUxDSm9aaTVCWm1acApiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcx\nbGJuUkpSQ0k2SWtGa2JXbHVRSGRoYkcxaGNuUXRibVYwCklpd2lhR1l1Vkhsd1pTSTZJbU5zYVdW\ndWRDSjlmVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUI5WmlnanV4T1MKWjRWOFhWdnJGeDI2ZS9M\nbWttQnRnUGIvNHBxYzVQUWlXd0lnRlErOFVHSkhHLzdxUUZYSGNnMTBmR1pSUWFSdwo3S2wzdXQv\neWFYbkovRWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrlBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOXpDQ0FaNmdBd0lCQWdJVU1JRkV5R283M0s2\nMkJHQklaOGNaWEF1MjA2Y3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURn\neE16QTRNakJhRncweU16QTRNamt4TXpBNE1qQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0pr\nWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVJMMm1BYm83R1pQeHg3cStOVFR2ZDNiVWdhekp2Smh5clpsYUVN\nSXhvazROU2s2L1VUR0lKdHA3OFI0WUpoCkFVWWgvTjVobllodk4rcmQ3UExpOE92a28wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0NnWUlLb1pJemowRQpBd0lEUndBd1JBSWdXV1BS\nNVVMQ3hoaHI0K1RXM2tVS05OMGUzY3ZmU1BoemhCMzNHVW9UVC9RQ0lFbTg1dlVzCjZBblVPRFNa\neVQ4SCtxbjhheEFVUTJxNXJSU1VkUDdTRVh1dgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoG\nQWRtaW5zIjMKB1JlYWRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgp3YWxtYXJ0TVNQGgZBZG1p\nbnMiMwoHV3JpdGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRNU1AaBkFkbWlucyI0\nCgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgp3YWxtYXJ0TVNQEAEaBkFkbWlucyI3CgtF\nbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRNU1AaBkFkbWlucyoGQWRt\naW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCAgIAxGICAQBoGQWRtaW5zGh4KDEJhdGNoVGltZW91dBIO\nEgQKAjJzGgZBZG1pbnMaHwoTQ2hhbm5lbFJlc3RyaWN0aW9ucxIIGgZBZG1pbnMaJgoMQ2FwYWJp\nbGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGqs1Cg1Db25zZW5zdXNUeXBlEpk1Eo41Cghl\ndGNkcmFmdBKBNQrMEQorb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5m\nbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL2pDQ0FxU2dBd0lCQWdJVVlS\nK1VqUitlTTUxclZkNjhWbWQwNmJrZG9wNHdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJo\nTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn\nWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncw\neQpNREV4TURneE16RXlNREJhRncweU1URXhNRGd4TXpFM01EQmFNR294Q3pBSkJnTlZCQVlUQWtk\nQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5\neVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnlaWEl4TG5k\naGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVLQnAyK3pU\nWEFiWWdBK2ZCcVp4cit6cmlSaTJZZEs4akhQNmxPU2VwCnFDdjEyQWt5R3o4dElWSjRwVTUvQXdm\nM0RtYXVzMHdydDhwRHlPQXpqdzJkRDZPQ0FUWXdnZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURB\nZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJ\nd0FEQWRCZ05WSFE0RUZnUVV6WGZPZ2RhcnRtYS9pT0pVV2UzZ0ZSeVhwOHN3SHdZRFZSMGpCQmd3\nCkZvQVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEps\nY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WMExuTjFibVZs\nYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNp\nYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJs\nY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FH\nU000OUJBTUNBMGdBTUVVQ0lRQ0Q4RTdORnIwUkNpRjhucmlBejY5KwpsN0JpRHVCeE1EZVFyTEIy\nU1RxRXBRSWdXWXpoQisydXJzTm1tS3lHN0YydytyZ0RFeVZ2RWpycFJOYzcwT2E4CmM4az0KLS0t\nLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJ\nQy9qQ0NBcVNnQXdJQkFnSVVZUitValIrZU01MXJWZDY4Vm1kMDZia2RvcDR3Q2dZSUtvWkl6ajBF\nQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVF\nQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUz\nWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekV5TURCYUZ3MHlNVEV4TURneE16RTNNREJh\nTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVr\nYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJeEhUQWJCZ05W\nQkFNVEZHOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemowQ0FRWUlLb1pJ\nemowREFRY0RRZ0FFS0JwMit6VFhBYllnQStmQnFaeHIrenJpUmkyWWRLOGpIUDZsT1NlcApxQ3Yx\nMkFreUd6OHRJVko0cFU1L0F3ZjNEbWF1czB3cnQ4cER5T0F6ancyZEQ2T0NBVFl3Z2dFeU1BNEdB\nMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhB\nd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVelhmT2dkYXJ0bWEvaU9KVVdlM2dG\nUnlYcDhzd0h3WURWUjBqQkJndwpGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd1RBWURW\nUjBSQkVVd1E0SVViM0prWlhKbGNqRXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5WlhJeExuZGhi\nRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJS2dNRUJRWUhD\nQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pvWmk1RmJuSnZi\nR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzUzWVd4dFlYSjBMVzVsZENJc0ltaG1MbFI1CmNHVWlP\naUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNEOEU3TkZyMFJDaUY4bnJpQXo2\nOSsKbDdCaUR1QnhNRGVRckxCMlNUcUVwUUlnV1l6aEIrMnVyc05tbUt5RzdGMncrcmdERXlWdkVq\ncnBSTmM3ME9hOApjOGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCswRCitvcmRlcmVyMi53\nYWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJ\nQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVlBmUGZYT1NoREhhMmZHa2REOGw4ZHhnS0VF\nd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1S\ndmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZ\nRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRF\neE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4\ndE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhC\nbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJ\nCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUphdVBqd3M0NGZyTEVydldIM0lWYzFnMFVBY043QUJn\nM3dzSldibWUKQkU0TkozSy9KN2hXZDdML1lPMnpGUk9oYUZmUXRHRTI5VTJudzdwMVBxbkJkcU9D\nQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNE\nQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVYzeFI5TXkz\nYS9kUi9iSnhUQXF2RmEwZG5Jc3dId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZL\ndUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5\nWkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3\nWlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkK\nTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJ\nbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUNpWmxUdUNo\nQVgvM2hpdkRZbjRxb2tYCmhkQ2JWSkhRTXJwbGxIT21TOFZyQWlCbkVuR01QM0hRSUk4L3Z4R2VM\neTh6bldXazZta1Q0bFFaZk5KUElyaVUKSHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLL\nCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RDQ0FxU2dBd0lCQWdJVVZQZlBmWE9T\naERIYTJmR2tkRDhsOGR4Z0tFRXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4\nTURneE16RXpNREJhRncweU1URXhNRGd4TXpFNE1EQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dH\nUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnla\nWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnlaWEl5TG5kaGJHMWhj\nblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVKYXVQandzNDRmckxF\ncnZXSDNJVmMxZzBVQWNON0FCZzN3c0pXYm1lCkJFNE5KM0svSjdoV2Q3TC9ZTzJ6RlJPaGFGZlF0\nR0UyOVUybnc3cDFQcW5CZHFPQ0FUWXdnZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZI\nU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRC\nZ05WSFE0RUZnUVVWM3hSOU15M2EvZFIvYkp4VEFxdkZhMGRuSXN3SHdZRFZSMGpCQmd3CkZvQVVQ\ndTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pJdWQy\nRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl5TG5kaGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2Ru\nUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFX\nWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1p\nNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJB\nTUNBMGNBTUVRQ0lDaVpsVHVDaEFYLzNoaXZEWW40cW9rWApoZENiVkpIUU1ycGxsSE9tUzhWckFp\nQm5FbkdNUDNIUUlJOC92eEdlTHk4em5XV2s2bWtUNGxRWmZOSlBJcmlVCkh3PT0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29yZGVyZXIzLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210\nYmFmLmluZm8Q+0EaywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJ\nQkFnSVVWNDY1RXJyemZHaXNFYloxQlFHR2FqQjJPdjR3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFr\nR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1\nCk1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVs\nZERBZUZ3MHkKTURFeE1EZ3hNekV6TURCYUZ3MHlNVEV4TURneE16RTRNREJhTUdveEN6QUpCZ05W\nQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05W\nQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5\nWlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FF\ncFZGd1pGYXpCYTJSTWNxNURqZnVUNDVBcG1MeEdMbkJIdGM4QWdLNwpyYVVkaVMvZTR2Mm94WUdo\nQlp3Z1hJM3RzV3kvR09XUlhHb0I4NW56eCtaSWlxT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FF\nQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQK\nQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVa3lZZXpMNXByZThvWVdhQlhvTTB3T04zK0U4d0h3WURW\nUjBqQkJndwpGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd1RBWURWUjBSQkVVd1E0SVVi\nM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBM\nbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBj\nbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlP\naUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlN\nQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJRzVPc1c0YzJSUUlQM1BXNG9OZXkzZ20KbEdFZFRoRkxr\nSFZ6Uld3THh2QjBBaUJTeS9ZeURjSndlVThidHZCcUlrUTJpNGlCS0VER0ZQTndwd3BBRUtWZgp1\nUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0t\nLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVjQ2NUVycnpmR2lzRWJaMUJRR0dhakIyT3Y0d0NnWUlL\nb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBN\nQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUURE\nQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hN\nekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhN\neTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhI\nVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENB\nUVlJS29aSXpqMERBUWNEUWdBRXBWRndaRmF6QmEyUk1jcTVEamZ1VDQ1QXBtTHhHTG5CSHRjOEFn\nSzcKcmFVZGlTL2U0djJveFlHaEJad2dYSTN0c1d5L0dPV1JYR29CODVuengrWklpcU9DQVRZd2dn\nRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3\nWUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWt5WWV6TDVwcmU4b1lX\nYUJYb00wd09OMytFOHdId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1\nTXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpY\nSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtn\nTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1pp\nNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxS\nNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUc1T3NXNGMyUlFJUDNQ\nVzRvTmV5M2dtCmxHRWRUaEZMa0hWelJXd0x4dkIwQWlCU3kvWXlEY0p3ZVU4YnR2QnFJa1EyaTRp\nQktFREdGUE53cHdwQUVLVmYKdVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChISCgU1MDBt\ncxAKGAEgBSiAgIAIGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMi\nKgoPQmxvY2tWYWxpZGF0aW9uEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgdSZWFkZXJzEhcS\nDQgDEgkKB1JlYWRlcnMaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlu\ncyoGQWRtaW5zEvojCgtDb25zb3J0aXVtcxLqIxKfIwoVU3VwcGx5Q2hhaW5Db25zb3J0aXVtEoUj\nEqciCgpjYXJyaWVyTVNQEpgiGrQgCgNNU1ASrCASoSASniAKCmNhcnJpZXJNU1AS6QUtLS0tLUJF\nR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdU\nZXRNUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05W\nQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5\nYVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0\nTXpOYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJ\nREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxj\nakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Fo\na2pPUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktP\naitORnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZI\nUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpU\nVXltME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hD\naWw0VjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZT\neXFqMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIrYI\nLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4RENDQXBhZ0F3SUJBZ0lVT2NwZDQwNTIw\nOW1wRjFGblc5WUU3Y3FzenN3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhE\nekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtE\nQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhN\nRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dR\nWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpY\nSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJB\nTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFR\nY0RRZ0FFVldTRzF1S0o2bkE2ODgzQlJRT2wKZEJJQngxaUpvVWNSd2ZLeDY4d3E5TnFtbXcybUtE\nSWtLZFVndFZoMlA2L0hMRndjamdDa3hIZ0wwNG1DM2RSNAo0S09DQVJrd2dnRVZNQTRHQTFVZER3\nRUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCUkV2dHJ2YUZncFNv\nUVR6OHY4MHNET3pSNXNJekFmQmdOVkhTTUVHREFXZ0JSbjNabE5US2JRMzZMb1UrSi8KZVk1dE91\nZ3R6REFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxYWjNiSGRrTUlH\nTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJ\nc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJ\nc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZ\ndVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEvaWVyTmNQ\na2JaeGFRUFFKdkJyVWZ3WmtsVjVsNTVvNlBxUzJPZmJJCjZxY0NJSGp5MUE3dzl5VFYvWUhSVDFx\nLy9VeitCSW1KeFUxVDZGSm4rNEl6TE9ESgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRT\nSEEyEgZTSEEyNTZK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJ\nQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRNUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFr\nR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1\nCk1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVs\nZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpOYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05W\nQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVR\nTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3\nV1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6\nTzZXOEg3L2JJZDhRV0FsS3dJNktPaitORnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFN\nQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lC\ncGpBZEJnTlZIUTRFRmdRVVo5MlpUVXltME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUK\nQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0VjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJ\nUURXOGVTdQpaanBLcXRNOWRmVnZTeXFqMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5E\nIENFUlRJRklDQVRFLS0tLS0KWu4LCAES9AUK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K\nTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRNUmpUUU50T0F3Q2dZSUtvWkl6\najBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB\nMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZ\nUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpOYUZ3MHlNekE0TWpreE16QTRN\nek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZC\nQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZ\nMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRcGg0V3lp\nN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktPaitORnBxQVEvYWxXVU9hSGhOQgp5\nT3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0Ex\nVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpUVXltME4raTZGUGlmM21PYlRyb0xj\nd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0VjFHRW85UGlrSGRnNWFBY0Ny\nZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZTeXFqMS9WRS9qZHNxbGNRNnU2anZB\nZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEgZjbGllbnQa8gUK6QUtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRN\nUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdW\neU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpO\nYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFa\nTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVY\nCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pP\nUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktPaitO\nRnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1C\nQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpUVXlt\nME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0\nVjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZTeXFq\nMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEgRwZWVy\nGgZBZG1pbnMiMwoHV3JpdGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFk\nbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVyTVNQEAEaBkFkbWlu\ncyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlu\ncyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zKgZB\nZG1pbnMaQAoVQ2hhbm5lbENyZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwv\nT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIE\nEgISABoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYK\nEEhhc2hpbmdBbGdvcml0aG0SEhIICgZTSEEyNTYaBkFkbWlucxotChlCbG9ja0RhdGFIYXNoaW5n\nU3RydWN0dXJlEhASBgj/////DxoGQWRtaW5zGscBChBPcmRlcmVyQWRkcmVzc2VzErIBEpYBCjBv\ncmRlcmVyMS53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMKMG9yZGVyZXIy\nLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwowb3JkZXJlcjMud2FsbWFy\ndC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlu\ncxomCgxDYXBhYmlsaXRpZXMSFhIMCgoKBlYxXzRfMxIAGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0I\nAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMi\nIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMqBkFkbWlucxoOCgQKAgoACgAKAAoA\nCgA=",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer1",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer1.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250 `" && echo ansible-tmp-1604841510.1536212-4854-235341567186250="` echo /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpq5k0k3gl TO /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/ /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpd5yrhahy TO /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/ /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8e9cr65c TO /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/ /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "cde070992eae55e0fa637be7f36af61e039ea7a3",
    "dest": "./build/test/walmart-orderer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpd5yrhahy",
            "attributes": null,
            "backup": false,
            "checksum": "cde070992eae55e0fa637be7f36af61e039ea7a3",
            "content": null,
            "dest": "./build/test/walmart-orderer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "207428fe8979697fd724451ba280d391",
    "mode": "0644",
    "owner": "root",
    "size": 22755,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841510.1536212-4854-235341567186250/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841510.4983244-4894-261880348144273 `" && echo ansible-tmp-1604841510.4983244-4894-261880348144273="` echo /root/.ansible/tmp/ansible-tmp-1604841510.4983244-4894-261880348144273 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpj0lcz3er TO /root/.ansible/tmp/ansible-tmp-1604841510.4983244-4894-261880348144273/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841510.4983244-4894-261880348144273/ /root/.ansible/tmp/ansible-tmp-1604841510.4983244-4894-261880348144273/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841510.4983244-4894-261880348144273/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841510.4983244-4894-261880348144273/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.065532",
    "end": "2020-11-08 13:18:30.704316",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:30.638784",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841510.7745662-4927-64817091838883 `" && echo ansible-tmp-1604841510.7745662-4927-64817091838883="` echo /root/.ansible/tmp/ansible-tmp-1604841510.7745662-4927-64817091838883 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmppvbidpry TO /root/.ansible/tmp/ansible-tmp-1604841510.7745662-4927-64817091838883/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841510.7745662-4927-64817091838883/ /root/.ansible/tmp/ansible-tmp-1604841510.7745662-4927-64817091838883/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841510.7745662-4927-64817091838883/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841510.7745662-4927-64817091838883/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841510.9765933-4953-239935087934335 `" && echo ansible-tmp-1604841510.9765933-4953-239935087934335="` echo /root/.ansible/tmp/ansible-tmp-1604841510.9765933-4953-239935087934335 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpibq78s_x TO /root/.ansible/tmp/ansible-tmp-1604841510.9765933-4953-239935087934335/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841510.9765933-4953-239935087934335/ /root/.ansible/tmp/ansible-tmp-1604841510.9765933-4953-239935087934335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841510.9765933-4953-239935087934335/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841510.9765933-4953-239935087934335/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer2-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083 `" && echo ansible-tmp-1604841511.17885-4979-126025773860083="` echo /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpoozvrufv TO /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/ /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpo86zng2s/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/ /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp69pz3h8m TO /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/ /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "c821ab10525056de40b4c088d6b181da83af630c",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "c821ab10525056de40b4c088d6b181da83af630c",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "aeffd3a41a7a898d462db0526135890c",
    "mode": "0644",
    "owner": "root",
    "size": 23489,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841511.17885-4979-126025773860083/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841511.6089492-5021-265701264120388 `" && echo ansible-tmp-1604841511.6089492-5021-265701264120388="` echo /root/.ansible/tmp/ansible-tmp-1604841511.6089492-5021-265701264120388 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpw23xm6n4 TO /root/.ansible/tmp/ansible-tmp-1604841511.6089492-5021-265701264120388/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841511.6089492-5021-265701264120388/ /root/.ansible/tmp/ansible-tmp-1604841511.6089492-5021-265701264120388/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841511.6089492-5021-265701264120388/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841511.6089492-5021-265701264120388/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604841511.4970367,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "c821ab10525056de40b4c088d6b181da83af630c",
        "ctime": 1604841511.4970367,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3950,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841511.3610346,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23489,
        "uid": 0,
        "version": "2824864181",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841511.861484-5051-122150657703217 `" && echo ansible-tmp-1604841511.861484-5051-122150657703217="` echo /root/.ansible/tmp/ansible-tmp-1604841511.861484-5051-122150657703217 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpeuir9gtd TO /root/.ansible/tmp/ansible-tmp-1604841511.861484-5051-122150657703217/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841511.861484-5051-122150657703217/ /root/.ansible/tmp/ansible-tmp-1604841511.861484-5051-122150657703217/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841511.861484-5051-122150657703217/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841511.861484-5051-122150657703217/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604840904.1838007,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604841510.4290204,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3429,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604841510.4290204,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1450343826",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer2",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer2",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIDa8vt6Hw4qK8SslcQB6gSd7j6fbD6WcBSTDx9pM4TptEr52Crt2Crh2CngKWggBEAEaBgij\n4J/9BSIKc3lzY2hhbm5lbCpAYjc2NzRlNjU0YzVhYThkN2UzYTdhZDg2Yjk2MTJmODRhZjllMmVk\nY2RjOTdhYzlkYzM2YmM1YzM3OWE4ZDJlMRIaEhhgrusURiKKu1goPf86/APE/eue3r7X9Z4Su3UK\nuHUStXUS+E0KB09yZGVyZXIS7E0SjhYKCndhbG1hcnRNU1AS/xUamxQKA01TUBKTFBKIFBKFFAoK\nd2FsbWFydE1TUBLlBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOXpDQ0FaNmdBd0lC\nQWdJVU1JRkV5R283M0s2MkJHQklaOGNaWEF1MjA2Y3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURneE16QTRNakJhRncweU16QTRNamt4TXpBNE1qQmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJMMm1BYm83R1pQeHg3cStOVFR2ZDNi\nVWdhekp2Smh5clpsYUVNSXhvazROU2s2L1VUR0lKdHA3OFI0WUpoCkFVWWgvTjVobllodk4rcmQ3\nUExpOE92a28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0NnWUlLb1pJemowRQpB\nd0lEUndBd1JBSWdXV1BSNVVMQ3hoaHI0K1RXM2tVS05OMGUzY3ZmU1BoemhCMzNHVW9UVC9RQ0lF\nbTg1dlVzCjZBblVPRFNaeVQ4SCtxbjhheEFVUTJxNXJSU1VkUDdTRVh1dgotLS0tLUVORCBDRVJU\nSUZJQ0FURS0tLS0tCiKWCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDMXpDQ0FuNmdB\nd0lCQWdJVVBRenhzdzNsdkNvWUVEVnpTSEpINllHUnlJMHdDZ1lJS29aSXpqMEVBd0l3CldqRUxN\nQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpH\nOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExX\nNWxkREFlRncweQpNREV4TURneE16RXlNREJhRncweU1URXhNRGd4TXpFM01EQmFNR2t4Q3pBSkJn\nTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0Jn\nTlZCQW9UQjA5eVpHVnlaWEl4RHpBTkJnTlYKQkFzVEJtTnNhV1Z1ZERFYU1CZ0dBMVVFQXd3UlFX\nUnRhVzVBZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FB\nVDNVcFNHOVBxRzRCUmlreTBOOGdmdUxSbGVSeGlXWDZzd09kU0U5dmVBClZZSXZuUXgwRDJXVmY0\nY1FwSTJ0RXA2SXE5QnVZNVdPVEQveTJkNlh6L2FKbzRJQkVUQ0NBUTB3RGdZRFZSMFAKQVFIL0JB\nUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSk4yRm16WTA1ZVhBV1FrZXJ5\nagpvNXB1aVlnT01COEdBMVVkSXdRWU1CYUFGRDd0QW9GYy9IWnVDZ21xdlZFTHlyZ1JFMmVUTUNR\nR0ExVWRFUVFkCk1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzJoblluRXdnWVlHQ0Nv\nREJBVUdCd2dCQkhwN0ltRjAKZEhKeklqcDdJbUZpWVdNdWFXNXBkQ0k2SW5SeWRXVWlMQ0poWkcx\ncGJpSTZJblJ5ZFdVaUxDSm9aaTVCWm1acApiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcx\nbGJuUkpSQ0k2SWtGa2JXbHVRSGRoYkcxaGNuUXRibVYwCklpd2lhR1l1Vkhsd1pTSTZJbU5zYVdW\ndWRDSjlmVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUI5WmlnanV4T1MKWjRWOFhWdnJGeDI2ZS9M\nbWttQnRnUGIvNHBxYzVQUWlXd0lnRlErOFVHSkhHLzdxUUZYSGNnMTBmR1pSUWFSdwo3S2wzdXQv\neWFYbkovRWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrlBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOXpDQ0FaNmdBd0lCQWdJVU1JRkV5R283M0s2\nMkJHQklaOGNaWEF1MjA2Y3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURn\neE16QTRNakJhRncweU16QTRNamt4TXpBNE1qQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0pr\nWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVJMMm1BYm83R1pQeHg3cStOVFR2ZDNiVWdhekp2Smh5clpsYUVN\nSXhvazROU2s2L1VUR0lKdHA3OFI0WUpoCkFVWWgvTjVobllodk4rcmQ3UExpOE92a28wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0NnWUlLb1pJemowRQpBd0lEUndBd1JBSWdXV1BS\nNVVMQ3hoaHI0K1RXM2tVS05OMGUzY3ZmU1BoemhCMzNHVW9UVC9RQ0lFbTg1dlVzCjZBblVPRFNa\neVQ4SCtxbjhheEFVUTJxNXJSU1VkUDdTRVh1dgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoG\nQWRtaW5zIjMKB1JlYWRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgp3YWxtYXJ0TVNQGgZBZG1p\nbnMiMwoHV3JpdGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRNU1AaBkFkbWlucyI0\nCgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgp3YWxtYXJ0TVNQEAEaBkFkbWlucyI3CgtF\nbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRNU1AaBkFkbWlucyoGQWRt\naW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCAgIAxGICAQBoGQWRtaW5zGh4KDEJhdGNoVGltZW91dBIO\nEgQKAjJzGgZBZG1pbnMaHwoTQ2hhbm5lbFJlc3RyaWN0aW9ucxIIGgZBZG1pbnMaJgoMQ2FwYWJp\nbGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGqs1Cg1Db25zZW5zdXNUeXBlEpk1Eo41Cghl\ndGNkcmFmdBKBNQrMEQorb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5m\nbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL2pDQ0FxU2dBd0lCQWdJVVlS\nK1VqUitlTTUxclZkNjhWbWQwNmJrZG9wNHdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJo\nTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn\nWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncw\neQpNREV4TURneE16RXlNREJhRncweU1URXhNRGd4TXpFM01EQmFNR294Q3pBSkJnTlZCQVlUQWtk\nQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5\neVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnlaWEl4TG5k\naGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVLQnAyK3pU\nWEFiWWdBK2ZCcVp4cit6cmlSaTJZZEs4akhQNmxPU2VwCnFDdjEyQWt5R3o4dElWSjRwVTUvQXdm\nM0RtYXVzMHdydDhwRHlPQXpqdzJkRDZPQ0FUWXdnZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURB\nZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJ\nd0FEQWRCZ05WSFE0RUZnUVV6WGZPZ2RhcnRtYS9pT0pVV2UzZ0ZSeVhwOHN3SHdZRFZSMGpCQmd3\nCkZvQVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEps\nY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WMExuTjFibVZs\nYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNp\nYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJs\nY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FH\nU000OUJBTUNBMGdBTUVVQ0lRQ0Q4RTdORnIwUkNpRjhucmlBejY5KwpsN0JpRHVCeE1EZVFyTEIy\nU1RxRXBRSWdXWXpoQisydXJzTm1tS3lHN0YydytyZ0RFeVZ2RWpycFJOYzcwT2E4CmM4az0KLS0t\nLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJ\nQy9qQ0NBcVNnQXdJQkFnSVVZUitValIrZU01MXJWZDY4Vm1kMDZia2RvcDR3Q2dZSUtvWkl6ajBF\nQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVF\nQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUz\nWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekV5TURCYUZ3MHlNVEV4TURneE16RTNNREJh\nTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVr\nYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJeEhUQWJCZ05W\nQkFNVEZHOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemowQ0FRWUlLb1pJ\nemowREFRY0RRZ0FFS0JwMit6VFhBYllnQStmQnFaeHIrenJpUmkyWWRLOGpIUDZsT1NlcApxQ3Yx\nMkFreUd6OHRJVko0cFU1L0F3ZjNEbWF1czB3cnQ4cER5T0F6ancyZEQ2T0NBVFl3Z2dFeU1BNEdB\nMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhB\nd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVelhmT2dkYXJ0bWEvaU9KVVdlM2dG\nUnlYcDhzd0h3WURWUjBqQkJndwpGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd1RBWURW\nUjBSQkVVd1E0SVViM0prWlhKbGNqRXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5WlhJeExuZGhi\nRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJS2dNRUJRWUhD\nQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pvWmk1RmJuSnZi\nR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzUzWVd4dFlYSjBMVzVsZENJc0ltaG1MbFI1CmNHVWlP\naUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNEOEU3TkZyMFJDaUY4bnJpQXo2\nOSsKbDdCaUR1QnhNRGVRckxCMlNUcUVwUUlnV1l6aEIrMnVyc05tbUt5RzdGMncrcmdERXlWdkVq\ncnBSTmM3ME9hOApjOGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCswRCitvcmRlcmVyMi53\nYWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJ\nQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVlBmUGZYT1NoREhhMmZHa2REOGw4ZHhnS0VF\nd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1S\ndmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZ\nRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRF\neE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4\ndE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhC\nbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJ\nCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUphdVBqd3M0NGZyTEVydldIM0lWYzFnMFVBY043QUJn\nM3dzSldibWUKQkU0TkozSy9KN2hXZDdML1lPMnpGUk9oYUZmUXRHRTI5VTJudzdwMVBxbkJkcU9D\nQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNE\nQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVYzeFI5TXkz\nYS9kUi9iSnhUQXF2RmEwZG5Jc3dId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZL\ndUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5\nWkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3\nWlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkK\nTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJ\nbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUNpWmxUdUNo\nQVgvM2hpdkRZbjRxb2tYCmhkQ2JWSkhRTXJwbGxIT21TOFZyQWlCbkVuR01QM0hRSUk4L3Z4R2VM\neTh6bldXazZta1Q0bFFaZk5KUElyaVUKSHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLL\nCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RDQ0FxU2dBd0lCQWdJVVZQZlBmWE9T\naERIYTJmR2tkRDhsOGR4Z0tFRXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4\nTURneE16RXpNREJhRncweU1URXhNRGd4TXpFNE1EQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dH\nUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnla\nWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnlaWEl5TG5kaGJHMWhj\nblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVKYXVQandzNDRmckxF\ncnZXSDNJVmMxZzBVQWNON0FCZzN3c0pXYm1lCkJFNE5KM0svSjdoV2Q3TC9ZTzJ6RlJPaGFGZlF0\nR0UyOVUybnc3cDFQcW5CZHFPQ0FUWXdnZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZI\nU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRC\nZ05WSFE0RUZnUVVWM3hSOU15M2EvZFIvYkp4VEFxdkZhMGRuSXN3SHdZRFZSMGpCQmd3CkZvQVVQ\ndTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pJdWQy\nRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl5TG5kaGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2Ru\nUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFX\nWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1p\nNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJB\nTUNBMGNBTUVRQ0lDaVpsVHVDaEFYLzNoaXZEWW40cW9rWApoZENiVkpIUU1ycGxsSE9tUzhWckFp\nQm5FbkdNUDNIUUlJOC92eEdlTHk4em5XV2s2bWtUNGxRWmZOSlBJcmlVCkh3PT0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29yZGVyZXIzLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210\nYmFmLmluZm8Q+0EaywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJ\nQkFnSVVWNDY1RXJyemZHaXNFYloxQlFHR2FqQjJPdjR3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFr\nR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1\nCk1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVs\nZERBZUZ3MHkKTURFeE1EZ3hNekV6TURCYUZ3MHlNVEV4TURneE16RTRNREJhTUdveEN6QUpCZ05W\nQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05W\nQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5\nWlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FF\ncFZGd1pGYXpCYTJSTWNxNURqZnVUNDVBcG1MeEdMbkJIdGM4QWdLNwpyYVVkaVMvZTR2Mm94WUdo\nQlp3Z1hJM3RzV3kvR09XUlhHb0I4NW56eCtaSWlxT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FF\nQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQK\nQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVa3lZZXpMNXByZThvWVdhQlhvTTB3T04zK0U4d0h3WURW\nUjBqQkJndwpGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd1RBWURWUjBSQkVVd1E0SVVi\nM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBM\nbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBj\nbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlP\naUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlN\nQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJRzVPc1c0YzJSUUlQM1BXNG9OZXkzZ20KbEdFZFRoRkxr\nSFZ6Uld3THh2QjBBaUJTeS9ZeURjSndlVThidHZCcUlrUTJpNGlCS0VER0ZQTndwd3BBRUtWZgp1\nUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0t\nLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVjQ2NUVycnpmR2lzRWJaMUJRR0dhakIyT3Y0d0NnWUlL\nb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBN\nQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUURE\nQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hN\nekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhN\neTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhI\nVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENB\nUVlJS29aSXpqMERBUWNEUWdBRXBWRndaRmF6QmEyUk1jcTVEamZ1VDQ1QXBtTHhHTG5CSHRjOEFn\nSzcKcmFVZGlTL2U0djJveFlHaEJad2dYSTN0c1d5L0dPV1JYR29CODVuengrWklpcU9DQVRZd2dn\nRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3\nWUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWt5WWV6TDVwcmU4b1lX\nYUJYb00wd09OMytFOHdId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1\nTXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpY\nSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtn\nTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1pp\nNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxS\nNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUc1T3NXNGMyUlFJUDNQ\nVzRvTmV5M2dtCmxHRWRUaEZMa0hWelJXd0x4dkIwQWlCU3kvWXlEY0p3ZVU4YnR2QnFJa1EyaTRp\nQktFREdGUE53cHdwQUVLVmYKdVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChISCgU1MDBt\ncxAKGAEgBSiAgIAIGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMi\nKgoPQmxvY2tWYWxpZGF0aW9uEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgdSZWFkZXJzEhcS\nDQgDEgkKB1JlYWRlcnMaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlu\ncyoGQWRtaW5zEvojCgtDb25zb3J0aXVtcxLqIxKfIwoVU3VwcGx5Q2hhaW5Db25zb3J0aXVtEoUj\nEqciCgpjYXJyaWVyTVNQEpgiGrQgCgNNU1ASrCASoSASniAKCmNhcnJpZXJNU1AS6QUtLS0tLUJF\nR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdU\nZXRNUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05W\nQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5\nYVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0\nTXpOYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJ\nREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxj\nakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Fo\na2pPUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktP\naitORnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZI\nUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpU\nVXltME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hD\naWw0VjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZT\neXFqMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIrYI\nLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4RENDQXBhZ0F3SUJBZ0lVT2NwZDQwNTIw\nOW1wRjFGblc5WUU3Y3FzenN3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhE\nekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtE\nQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhN\nRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dR\nWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpY\nSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJB\nTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFR\nY0RRZ0FFVldTRzF1S0o2bkE2ODgzQlJRT2wKZEJJQngxaUpvVWNSd2ZLeDY4d3E5TnFtbXcybUtE\nSWtLZFVndFZoMlA2L0hMRndjamdDa3hIZ0wwNG1DM2RSNAo0S09DQVJrd2dnRVZNQTRHQTFVZER3\nRUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCUkV2dHJ2YUZncFNv\nUVR6OHY4MHNET3pSNXNJekFmQmdOVkhTTUVHREFXZ0JSbjNabE5US2JRMzZMb1UrSi8KZVk1dE91\nZ3R6REFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxYWjNiSGRrTUlH\nTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJ\nc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJ\nc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZ\ndVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEvaWVyTmNQ\na2JaeGFRUFFKdkJyVWZ3WmtsVjVsNTVvNlBxUzJPZmJJCjZxY0NJSGp5MUE3dzl5VFYvWUhSVDFx\nLy9VeitCSW1KeFUxVDZGSm4rNEl6TE9ESgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRT\nSEEyEgZTSEEyNTZK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJ\nQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRNUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFr\nR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1\nCk1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVs\nZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpOYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05W\nQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVR\nTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3\nV1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6\nTzZXOEg3L2JJZDhRV0FsS3dJNktPaitORnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFN\nQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lC\ncGpBZEJnTlZIUTRFRmdRVVo5MlpUVXltME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUK\nQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0VjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJ\nUURXOGVTdQpaanBLcXRNOWRmVnZTeXFqMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5E\nIENFUlRJRklDQVRFLS0tLS0KWu4LCAES9AUK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K\nTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRNUmpUUU50T0F3Q2dZSUtvWkl6\najBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB\nMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZ\nUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpOYUZ3MHlNekE0TWpreE16QTRN\nek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZC\nQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZ\nMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRcGg0V3lp\nN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktPaitORnBxQVEvYWxXVU9hSGhOQgp5\nT3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0Ex\nVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpUVXltME4raTZGUGlmM21PYlRyb0xj\nd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0VjFHRW85UGlrSGRnNWFBY0Ny\nZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZTeXFqMS9WRS9qZHNxbGNRNnU2anZB\nZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEgZjbGllbnQa8gUK6QUtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRN\nUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdW\neU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpO\nYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFa\nTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVY\nCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pP\nUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktPaitO\nRnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1C\nQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpUVXlt\nME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0\nVjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZTeXFq\nMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEgRwZWVy\nGgZBZG1pbnMiMwoHV3JpdGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFk\nbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVyTVNQEAEaBkFkbWlu\ncyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlu\ncyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zKgZB\nZG1pbnMaQAoVQ2hhbm5lbENyZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwv\nT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIE\nEgISABoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYK\nEEhhc2hpbmdBbGdvcml0aG0SEhIICgZTSEEyNTYaBkFkbWlucxotChlCbG9ja0RhdGFIYXNoaW5n\nU3RydWN0dXJlEhASBgj/////DxoGQWRtaW5zGscBChBPcmRlcmVyQWRkcmVzc2VzErIBEpYBCjBv\ncmRlcmVyMS53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMKMG9yZGVyZXIy\nLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwowb3JkZXJlcjMud2FsbWFy\ndC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlu\ncxomCgxDYXBhYmlsaXRpZXMSFhIMCgoKBlYxXzRfMxIAGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0I\nAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMi\nIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMqBkFkbWlucxoOCgQKAgoACgAKAAoA\nCgA=",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer2",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer2.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947 `" && echo ansible-tmp-1604841512.2772987-5089-161408240699947="` echo /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpj3c1fts5 TO /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/ /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpruhpl6fh TO /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/ /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphanvily_ TO /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/ /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "eb3576ef9bde541af2ae9335adaf25ec769bff08",
    "dest": "./build/test/walmart-orderer2.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpruhpl6fh",
            "attributes": null,
            "backup": false,
            "checksum": "eb3576ef9bde541af2ae9335adaf25ec769bff08",
            "content": null,
            "dest": "./build/test/walmart-orderer2.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "cdc85d15ef6c7199f20314801d62090b",
    "mode": "0644",
    "owner": "root",
    "size": 22755,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841512.2772987-5089-161408240699947/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841512.617217-5129-31436215319179 `" && echo ansible-tmp-1604841512.617217-5129-31436215319179="` echo /root/.ansible/tmp/ansible-tmp-1604841512.617217-5129-31436215319179 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpoxq9zz2d TO /root/.ansible/tmp/ansible-tmp-1604841512.617217-5129-31436215319179/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841512.617217-5129-31436215319179/ /root/.ansible/tmp/ansible-tmp-1604841512.617217-5129-31436215319179/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841512.617217-5129-31436215319179/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841512.617217-5129-31436215319179/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer2.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.062926",
    "end": "2020-11-08 13:18:32.808835",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer2.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:32.745909",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841512.8775508-5161-202415542563376 `" && echo ansible-tmp-1604841512.8775508-5161-202415542563376="` echo /root/.ansible/tmp/ansible-tmp-1604841512.8775508-5161-202415542563376 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpg0nqltjp TO /root/.ansible/tmp/ansible-tmp-1604841512.8775508-5161-202415542563376/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841512.8775508-5161-202415542563376/ /root/.ansible/tmp/ansible-tmp-1604841512.8775508-5161-202415542563376/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841512.8775508-5161-202415542563376/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841512.8775508-5161-202415542563376/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841513.0763419-5187-198028049569847 `" && echo ansible-tmp-1604841513.0763419-5187-198028049569847="` echo /root/.ansible/tmp/ansible-tmp-1604841513.0763419-5187-198028049569847 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpirh6ehtc TO /root/.ansible/tmp/ansible-tmp-1604841513.0763419-5187-198028049569847/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841513.0763419-5187-198028049569847/ /root/.ansible/tmp/ansible-tmp-1604841513.0763419-5187-198028049569847/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841513.0763419-5187-198028049569847/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841513.0763419-5187-198028049569847/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for orderer3-walmart] *****************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632 `" && echo ansible-tmp-1604841513.2820244-5213-73198704908632="` echo /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp0qktefpl TO /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/ /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpe3aoobjl/orderernode.tpl TO /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/ /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpi2nohpfb TO /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/ /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "f967bf496e58f348ad9c6db0437df8745bdd9cae",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "orderernode.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "f967bf496e58f348ad9c6db0437df8745bdd9cae",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "22cf5e794aeab6552963bd79606df1d6",
    "mode": "0644",
    "owner": "root",
    "size": 23489,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841513.2820244-5213-73198704908632/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841513.7089283-5255-91013695344042 `" && echo ansible-tmp-1604841513.7089283-5255-91013695344042="` echo /root/.ansible/tmp/ansible-tmp-1604841513.7089283-5255-91013695344042 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpvkmzfnko TO /root/.ansible/tmp/ansible-tmp-1604841513.7089283-5255-91013695344042/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841513.7089283-5255-91013695344042/ /root/.ansible/tmp/ansible-tmp-1604841513.7089283-5255-91013695344042/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841513.7089283-5255-91013695344042/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841513.7089283-5255-91013695344042/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
        }
    },
    "stat": {
        "atime": 1604841513.5930686,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 48,
        "charset": "us-ascii",
        "checksum": "f967bf496e58f348ad9c6db0437df8745bdd9cae",
        "ctime": 1604841513.5930686,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3952,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841513.4610665,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 23489,
        "uid": 0,
        "version": "1709062720",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841513.9631937-5285-47288086621619 `" && echo ansible-tmp-1604841513.9631937-5285-47288086621619="` echo /root/.ansible/tmp/ansible-tmp-1604841513.9631937-5285-47288086621619 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpzgr8xyl6 TO /root/.ansible/tmp/ansible-tmp-1604841513.9631937-5285-47288086621619/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841513.9631937-5285-47288086621619/ /root/.ansible/tmp/ansible-tmp-1604841513.9631937-5285-47288086621619/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841513.9631937-5285-47288086621619/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841513.9631937-5285-47288086621619/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604840904.1838007,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604841512.5490527,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3429,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604841512.5490527,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1450343826",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "walmart-orderer3",
            "namespace": "walmart-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/orderernode",
                "ref": "gorilla"
            },
            "releaseName": "walmart-orderer3",
            "values": {
                "consensus": {
                    "name": "raft"
                },
                "genesis": "CiIaIDa8vt6Hw4qK8SslcQB6gSd7j6fbD6WcBSTDx9pM4TptEr52Crt2Crh2CngKWggBEAEaBgij\n4J/9BSIKc3lzY2hhbm5lbCpAYjc2NzRlNjU0YzVhYThkN2UzYTdhZDg2Yjk2MTJmODRhZjllMmVk\nY2RjOTdhYzlkYzM2YmM1YzM3OWE4ZDJlMRIaEhhgrusURiKKu1goPf86/APE/eue3r7X9Z4Su3UK\nuHUStXUS+E0KB09yZGVyZXIS7E0SjhYKCndhbG1hcnRNU1AS/xUamxQKA01TUBKTFBKIFBKFFAoK\nd2FsbWFydE1TUBLlBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOXpDQ0FaNmdBd0lC\nQWdJVU1JRkV5R283M0s2MkJHQklaOGNaWEF1MjA2Y3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH\nQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK\nTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxk\nREFlRncweQpNREV4TURneE16QTRNakJhRncweU16QTRNamt4TXpBNE1qQmFNRm94Q3pBSkJnTlZC\nQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN\nQTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdX\nVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJMMm1BYm83R1pQeHg3cStOVFR2ZDNi\nVWdhekp2Smh5clpsYUVNSXhvazROU2s2L1VUR0lKdHA3OFI0WUpoCkFVWWgvTjVobllodk4rcmQ3\nUExpOE92a28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw\nakFkQmdOVkhRNEVGZ1FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0NnWUlLb1pJemowRQpB\nd0lEUndBd1JBSWdXV1BSNVVMQ3hoaHI0K1RXM2tVS05OMGUzY3ZmU1BoemhCMzNHVW9UVC9RQ0lF\nbTg1dlVzCjZBblVPRFNaeVQ4SCtxbjhheEFVUTJxNXJSU1VkUDdTRVh1dgotLS0tLUVORCBDRVJU\nSUZJQ0FURS0tLS0tCiKWCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDMXpDQ0FuNmdB\nd0lCQWdJVVBRenhzdzNsdkNvWUVEVnpTSEpINllHUnlJMHdDZ1lJS29aSXpqMEVBd0l3CldqRUxN\nQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpH\nOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExX\nNWxkREFlRncweQpNREV4TURneE16RXlNREJhRncweU1URXhNRGd4TXpFM01EQmFNR2t4Q3pBSkJn\nTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0Jn\nTlZCQW9UQjA5eVpHVnlaWEl4RHpBTkJnTlYKQkFzVEJtTnNhV1Z1ZERFYU1CZ0dBMVVFQXd3UlFX\nUnRhVzVBZDJGc2JXRnlkQzF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FB\nVDNVcFNHOVBxRzRCUmlreTBOOGdmdUxSbGVSeGlXWDZzd09kU0U5dmVBClZZSXZuUXgwRDJXVmY0\nY1FwSTJ0RXA2SXE5QnVZNVdPVEQveTJkNlh6L2FKbzRJQkVUQ0NBUTB3RGdZRFZSMFAKQVFIL0JB\nUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSk4yRm16WTA1ZVhBV1FrZXJ5\nagpvNXB1aVlnT01COEdBMVVkSXdRWU1CYUFGRDd0QW9GYy9IWnVDZ21xdlZFTHlyZ1JFMmVUTUNR\nR0ExVWRFUVFkCk1CdUNHV05oTFhSdmIyeHpMVFk1WkRjNE9EVm1PRFl0YzJoblluRXdnWVlHQ0Nv\nREJBVUdCd2dCQkhwN0ltRjAKZEhKeklqcDdJbUZpWVdNdWFXNXBkQ0k2SW5SeWRXVWlMQ0poWkcx\ncGJpSTZJblJ5ZFdVaUxDSm9aaTVCWm1acApiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcx\nbGJuUkpSQ0k2SWtGa2JXbHVRSGRoYkcxaGNuUXRibVYwCklpd2lhR1l1Vkhsd1pTSTZJbU5zYVdW\ndWRDSjlmVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUI5WmlnanV4T1MKWjRWOFhWdnJGeDI2ZS9M\nbWttQnRnUGIvNHBxYzVQUWlXd0lnRlErOFVHSkhHLzdxUUZYSGNnMTBmR1pSUWFSdwo3S2wzdXQv\neWFYbkovRWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrlBS0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOXpDQ0FaNmdBd0lCQWdJVU1JRkV5R283M0s2\nMkJHQklaOGNaWEF1MjA2Y3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB\nTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk\nUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4TURn\neE16QTRNakJhRncweU16QTRNamt4TXpBNE1qQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE\nClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0pr\nWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWQyRnNiV0Z5ZEMxdVpYUXdXVEFUQmdjcWhrak9QUUlC\nQmdncWhrak9QUU1CQndOQwpBQVJMMm1BYm83R1pQeHg3cStOVFR2ZDNiVWdhekp2Smh5clpsYUVN\nSXhvazROU2s2L1VUR0lKdHA3OFI0WUpoCkFVWWgvTjVobllodk4rcmQ3UExpOE92a28wSXdRREFQ\nQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV\nUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd0NnWUlLb1pJemowRQpBd0lEUndBd1JBSWdXV1BS\nNVVMQ3hoaHI0K1RXM2tVS05OMGUzY3ZmU1BoemhCMzNHVW9UVC9RQ0lFbTg1dlVzCjZBblVPRFNa\neVQ4SCtxbjhheEFVUTJxNXJSU1VkUDdTRVh1dgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoG\nQWRtaW5zIjMKB1JlYWRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgp3YWxtYXJ0TVNQGgZBZG1p\nbnMiMwoHV3JpdGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRNU1AaBkFkbWlucyI0\nCgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgp3YWxtYXJ0TVNQEAEaBkFkbWlucyI3CgtF\nbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCndhbG1hcnRNU1AaBkFkbWlucyoGQWRt\naW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCAgIAxGICAQBoGQWRtaW5zGh4KDEJhdGNoVGltZW91dBIO\nEgQKAjJzGgZBZG1pbnMaHwoTQ2hhbm5lbFJlc3RyaWN0aW9ucxIIGgZBZG1pbnMaJgoMQ2FwYWJp\nbGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGqs1Cg1Db25zZW5zdXNUeXBlEpk1Eo41Cghl\ndGNkcmFmdBKBNQrMEQorb3JkZXJlcjEud2FsbWFydC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5m\nbxD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL2pDQ0FxU2dBd0lCQWdJVVlS\nK1VqUitlTTUxclZkNjhWbWQwNmJrZG9wNHdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJo\nTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn\nWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncw\neQpNREV4TURneE16RXlNREJhRncweU1URXhNRGd4TXpFM01EQmFNR294Q3pBSkJnTlZCQVlUQWtk\nQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5\neVpHVnlaWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnlaWEl4TG5k\naGJHMWhjblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVLQnAyK3pU\nWEFiWWdBK2ZCcVp4cit6cmlSaTJZZEs4akhQNmxPU2VwCnFDdjEyQWt5R3o4dElWSjRwVTUvQXdm\nM0RtYXVzMHdydDhwRHlPQXpqdzJkRDZPQ0FUWXdnZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURB\nZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJ\nd0FEQWRCZ05WSFE0RUZnUVV6WGZPZ2RhcnRtYS9pT0pVV2UzZ0ZSeVhwOHN3SHdZRFZSMGpCQmd3\nCkZvQVVQdTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEps\nY2pFdWQyRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl4TG5kaGJHMWhjblF0Ym1WMExuTjFibVZs\nYkM1d2RuUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNp\nYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJs\nY21WeU1TNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FH\nU000OUJBTUNBMGdBTUVVQ0lRQ0Q4RTdORnIwUkNpRjhucmlBejY5KwpsN0JpRHVCeE1EZVFyTEIy\nU1RxRXBRSWdXWXpoQisydXJzTm1tS3lHN0YydytyZ0RFeVZ2RWpycFJOYzcwT2E4CmM4az0KLS0t\nLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJ\nQy9qQ0NBcVNnQXdJQkFnSVVZUitValIrZU01MXJWZDY4Vm1kMDZia2RvcDR3Q2dZSUtvWkl6ajBF\nQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVF\nQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUz\nWVd4dFlYSjBMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekV5TURCYUZ3MHlNVEV4TURneE16RTNNREJh\nTUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVr\nYjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJeEhUQWJCZ05W\nQkFNVEZHOXlaR1Z5WlhJeExuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemowQ0FRWUlLb1pJ\nemowREFRY0RRZ0FFS0JwMit6VFhBYllnQStmQnFaeHIrenJpUmkyWWRLOGpIUDZsT1NlcApxQ3Yx\nMkFreUd6OHRJVko0cFU1L0F3ZjNEbWF1czB3cnQ4cER5T0F6ancyZEQ2T0NBVFl3Z2dFeU1BNEdB\nMVVkCkR3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhB\nd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVelhmT2dkYXJ0bWEvaU9KVVdlM2dG\nUnlYcDhzd0h3WURWUjBqQkJndwpGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd1RBWURW\nUjBSQkVVd1E0SVViM0prWlhKbGNqRXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5WlhJeExuZGhi\nRzFoY25RdGJtVjBMbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJS2dNRUJRWUhD\nQUVFV1hzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pvWmk1RmJuSnZi\nR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzUzWVd4dFlYSjBMVzVsZENJc0ltaG1MbFI1CmNHVWlP\naUp3WldWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNEOEU3TkZyMFJDaUY4bnJpQXo2\nOSsKbDdCaUR1QnhNRGVRckxCMlNUcUVwUUlnV1l6aEIrMnVyc05tbUt5RzdGMncrcmdERXlWdkVq\ncnBSTmM3ME9hOApjOGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCswRCitvcmRlcmVyMi53\nYWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJ\nQ0FURS0tLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVlBmUGZYT1NoREhhMmZHa2REOGw4ZHhnS0VF\nd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1S\ndmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZ\nRFZRUUREQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRF\neE1EZ3hNekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4\ndE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhC\nbFpYSXhIVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJ\nCnpqMENBUVlJS29aSXpqMERBUWNEUWdBRUphdVBqd3M0NGZyTEVydldIM0lWYzFnMFVBY043QUJn\nM3dzSldibWUKQkU0TkozSy9KN2hXZDdML1lPMnpGUk9oYUZmUXRHRTI5VTJudzdwMVBxbkJkcU9D\nQVRZd2dnRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNE\nQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVYzeFI5TXkz\nYS9kUi9iSnhUQXF2RmEwZG5Jc3dId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZL\ndUJFVFo1TXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjakl1ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5\nWkdWeVpYSXlMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3\nWlFZSUtnTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkK\nTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TWk1M1lXeHRZWEowTFc1bGRDSXNJ\nbWhtTGxSNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUNpWmxUdUNo\nQVgvM2hpdkRZbjRxb2tYCmhkQ2JWSkhRTXJwbGxIT21TOFZyQWlCbkVuR01QM0hRSUk4L3Z4R2VM\neTh6bldXazZta1Q0bFFaZk5KUElyaVUKSHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLL\nCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL1RDQ0FxU2dBd0lCQWdJVVZQZlBmWE9T\naERIYTJmR2tkRDhsOGR4Z0tFRXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNTNZV3h0WVhKMExXNWxkREFlRncweQpNREV4\nTURneE16RXpNREJhRncweU1URXhNRGd4TXpFNE1EQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dH\nUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnla\nWEl4RFRBTEJnTlYKQkFzVEJIQmxaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnlaWEl5TG5kaGJHMWhj\nblF0Ym1WME1Ga3dFd1lIS29aSQp6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVKYXVQandzNDRmckxF\ncnZXSDNJVmMxZzBVQWNON0FCZzN3c0pXYm1lCkJFNE5KM0svSjdoV2Q3TC9ZTzJ6RlJPaGFGZlF0\nR0UyOVUybnc3cDFQcW5CZHFPQ0FUWXdnZ0V5TUE0R0ExVWQKRHdFQi93UUVBd0lEcURBZEJnTlZI\nU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRC\nZ05WSFE0RUZnUVVWM3hSOU15M2EvZFIvYkp4VEFxdkZhMGRuSXN3SHdZRFZSMGpCQmd3CkZvQVVQ\ndTBDZ1Z6OGRtNEtDYXE5VVF2S3VCRVRaNU13VEFZRFZSMFJCRVV3UTRJVWIzSmtaWEpsY2pJdWQy\nRnMKYldGeWRDMXVaWFNDSzI5eVpHVnlaWEl5TG5kaGJHMWhjblF0Ym1WMExuTjFibVZsYkM1d2Ru\nUXVkMjEwWW1GbQpMbWx1Wm04d1pRWUlLZ01FQlFZSENBRUVXWHNpWVhSMGNuTWlPbnNpYUdZdVFX\nWm1hV3hwWVhScGIyNGlPaUlpCkxDSm9aaTVGYm5KdmJHeHRaVzUwU1VRaU9pSnZjbVJsY21WeU1p\nNTNZV3h0WVhKMExXNWxkQ0lzSW1obUxsUjUKY0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJB\nTUNBMGNBTUVRQ0lDaVpsVHVDaEFYLzNoaXZEWW40cW9rWApoZENiVkpIUU1ycGxsSE9tUzhWckFp\nQm5FbkdNUDNIUUlJOC92eEdlTHk4em5XV2s2bWtUNGxRWmZOSlBJcmlVCkh3PT0KLS0tLS1FTkQg\nQ0VSVElGSUNBVEUtLS0tLQoKzBEKK29yZGVyZXIzLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210\nYmFmLmluZm8Q+0EaywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQy9UQ0NBcVNnQXdJ\nQkFnSVVWNDY1RXJyemZHaXNFYloxQlFHR2FqQjJPdjR3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFr\nR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1\nCk1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzUzWVd4dFlYSjBMVzVs\nZERBZUZ3MHkKTURFeE1EZ3hNekV6TURCYUZ3MHlNVEV4TURneE16RTRNREJhTUdveEN6QUpCZ05W\nQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05W\nQkFvVEIwOXlaR1Z5WlhJeERUQUxCZ05WCkJBc1RCSEJsWlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5\nWlhJekxuZGhiRzFoY25RdGJtVjBNRmt3RXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FF\ncFZGd1pGYXpCYTJSTWNxNURqZnVUNDVBcG1MeEdMbkJIdGM4QWdLNwpyYVVkaVMvZTR2Mm94WUdo\nQlp3Z1hJM3RzV3kvR09XUlhHb0I4NW56eCtaSWlxT0NBVFl3Z2dFeU1BNEdBMVVkCkR3RUIvd1FF\nQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQK\nQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVa3lZZXpMNXByZThvWVdhQlhvTTB3T04zK0U4d0h3WURW\nUjBqQkJndwpGb0FVUHUwQ2dWejhkbTRLQ2FxOVVRdkt1QkVUWjVNd1RBWURWUjBSQkVVd1E0SVVi\nM0prWlhKbGNqTXVkMkZzCmJXRnlkQzF1WlhTQ0syOXlaR1Z5WlhJekxuZGhiRzFoY25RdGJtVjBM\nbk4xYm1WbGJDNXdkblF1ZDIxMFltRm0KTG1sdVptOHdaUVlJS2dNRUJRWUhDQUVFV1hzaVlYUjBj\nbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpT2lJaQpMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlP\naUp2Y21SbGNtVnlNeTUzWVd4dFlYSjBMVzVsZENJc0ltaG1MbFI1CmNHVWlPaUp3WldWeUluMTlN\nQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJRzVPc1c0YzJSUUlQM1BXNG9OZXkzZ20KbEdFZFRoRkxr\nSFZ6Uld3THh2QjBBaUJTeS9ZeURjSndlVThidHZCcUlrUTJpNGlCS0VER0ZQTndwd3BBRUtWZgp1\nUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0t\nLS0tCk1JSUMvVENDQXFTZ0F3SUJBZ0lVVjQ2NUVycnpmR2lzRWJaMUJRR0dhakIyT3Y0d0NnWUlL\nb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBN\nQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUURE\nQTVqWVM1M1lXeHRZWEowTFc1bGREQWVGdzB5Ck1ERXhNRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hN\nekU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhN\neTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhEVEFMQmdOVgpCQXNUQkhCbFpYSXhI\nVEFiQmdOVkJBTVRGRzl5WkdWeVpYSXpMbmRoYkcxaGNuUXRibVYwTUZrd0V3WUhLb1pJCnpqMENB\nUVlJS29aSXpqMERBUWNEUWdBRXBWRndaRmF6QmEyUk1jcTVEamZ1VDQ1QXBtTHhHTG5CSHRjOEFn\nSzcKcmFVZGlTL2U0djJveFlHaEJad2dYSTN0c1d5L0dPV1JYR29CODVuengrWklpcU9DQVRZd2dn\nRXlNQTRHQTFVZApEd0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3\nWUJCUVVIQXdJd0RBWURWUjBUCkFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWt5WWV6TDVwcmU4b1lX\nYUJYb00wd09OMytFOHdId1lEVlIwakJCZ3cKRm9BVVB1MENnVno4ZG00S0NhcTlVUXZLdUJFVFo1\nTXdUQVlEVlIwUkJFVXdRNElVYjNKa1pYSmxjak11ZDJGcwpiV0Z5ZEMxdVpYU0NLMjl5WkdWeVpY\nSXpMbmRoYkcxaGNuUXRibVYwTG5OMWJtVmxiQzV3ZG5RdWQyMTBZbUZtCkxtbHVabTh3WlFZSUtn\nTUVCUVlIQ0FFRVdYc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1pp\nNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TXk1M1lXeHRZWEowTFc1bGRDSXNJbWhtTGxS\nNQpjR1VpT2lKd1pXVnlJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUc1T3NXNGMyUlFJUDNQ\nVzRvTmV5M2dtCmxHRWRUaEZMa0hWelJXd0x4dkIwQWlCU3kvWXlEY0p3ZVU4YnR2QnFJa1EyaTRp\nQktFREdGUE53cHdwQUVLVmYKdVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChISCgU1MDBt\ncxAKGAEgBSiAgIAIGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMi\nKgoPQmxvY2tWYWxpZGF0aW9uEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgdSZWFkZXJzEhcS\nDQgDEgkKB1JlYWRlcnMaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlu\ncyoGQWRtaW5zEvojCgtDb25zb3J0aXVtcxLqIxKfIwoVU3VwcGx5Q2hhaW5Db25zb3J0aXVtEoUj\nEqciCgpjYXJyaWVyTVNQEpgiGrQgCgNNU1ASrCASoSASniAKCmNhcnJpZXJNU1AS6QUtLS0tLUJF\nR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdU\nZXRNUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05W\nQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5\nYVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0\nTXpOYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJ\nREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxj\nakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Fo\na2pPUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktP\naitORnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZI\nUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpU\nVXltME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hD\naWw0VjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZT\neXFqMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIrYI\nLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4RENDQXBhZ0F3SUJBZ0lVT2NwZDQwNTIw\nOW1wRjFGblc5WUU3Y3FzenN3d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhE\nekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtE\nQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1ERXhN\nRGd4TXpFek1EQmFGdzB5TVRFeE1EZ3hNekU0TURCYU1Ia3hDekFKQmdOVkJBWVRBa2RDTVJzd0dR\nWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpY\nSXhIekFOQmdOVgpCQXNUQm1Oc2FXVnVkREFPQmdOVkJBc1RCMk5oY25KcFpYSXhHakFZQmdOVkJB\nTU1FVUZrYldsdVFHTmhjbkpwClpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFR\nY0RRZ0FFVldTRzF1S0o2bkE2ODgzQlJRT2wKZEJJQngxaUpvVWNSd2ZLeDY4d3E5TnFtbXcybUtE\nSWtLZFVndFZoMlA2L0hMRndjamdDa3hIZ0wwNG1DM2RSNAo0S09DQVJrd2dnRVZNQTRHQTFVZER3\nRUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXCkJCUkV2dHJ2YUZncFNv\nUVR6OHY4MHNET3pSNXNJekFmQmdOVkhTTUVHREFXZ0JSbjNabE5US2JRMzZMb1UrSi8KZVk1dE91\nZ3R6REFrQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kwMk9XUTNPRGcxWmpnMkxYWjNiSGRrTUlH\nTwpCZ2dxQXdRRkJnY0lBUVNCZ1hzaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJ\nc0ltRmtiV2x1Cklqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaVkyRnljbWxsY2lJ\nc0ltaG1Ma1Z1Y205c2JHMWwKYm5SSlJDSTZJa0ZrYldsdVFHTmhjbkpwWlhJdGJtVjBJaXdpYUdZ\ndVZIbHdaU0k2SW1Oc2FXVnVkQ0o5ZlRBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUEvaWVyTmNQ\na2JaeGFRUFFKdkJyVWZ3WmtsVjVsNTVvNlBxUzJPZmJJCjZxY0NJSGp5MUE3dzl5VFYvWUhSVDFx\nLy9VeitCSW1KeFUxVDZGSm4rNEl6TE9ESgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRT\nSEEyEgZTSEEyNTZK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJ\nQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRNUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFr\nR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1\nCk1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVs\nZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpOYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05W\nQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVR\nTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3\nV1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6\nTzZXOEg3L2JJZDhRV0FsS3dJNktPaitORnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFN\nQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lC\ncGpBZEJnTlZIUTRFRmdRVVo5MlpUVXltME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUK\nQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0VjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJ\nUURXOGVTdQpaanBLcXRNOWRmVnZTeXFqMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5E\nIENFUlRJRklDQVRFLS0tLS0KWu4LCAES9AUK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K\nTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRNUmpUUU50T0F3Q2dZSUtvWkl6\najBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB\nMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZ\nUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpOYUZ3MHlNekE0TWpreE16QTRN\nek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZC\nQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZ\nMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRcGg0V3lp\nN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktPaitORnBxQVEvYWxXVU9hSGhOQgp5\nT3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0Ex\nVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpUVXltME4raTZGUGlmM21PYlRyb0xj\nd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0VjFHRW85UGlrSGRnNWFBY0Ny\nZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZTeXFqMS9WRS9qZHNxbGNRNnU2anZB\nZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEgZjbGllbnQa8gUK6QUtLS0tLUJFR0lO\nIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVPK3U3T1l0dGNPUk4xVjdUZXRN\nUmpUUU50T0F3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn\nTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdW\neU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTURFeE1EZ3hNekE0TXpO\nYUZ3MHlNekE0TWpreE16QTRNek5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFa\nTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVY\nCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pP\nUFFNQkJ3TkMKQUFRcGg0V3lpN1dKWXpiSms1ZExGcTF6TzZXOEg3L2JJZDhRV0FsS3dJNktPaitO\nRnBxQVEvYWxXVU9hSGhOQgp5T3N5eWVGYlA5QU51TEFNQ3dzWjlRSHFvMEl3UURBUEJnTlZIUk1C\nQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVVo5MlpUVXlt\nME4raTZGUGlmM21PYlRyb0xjd3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnSFROWDUwc1hDaWw0\nVjFHRW85UGlrSGRnNWFBY0NyZUJBUnQ0TlF1ekZlY0NJUURXOGVTdQpaanBLcXRNOWRmVnZTeXFq\nMS9WRS9qZHNxbGNRNnU2anZBZGpTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEgRwZWVy\nGgZBZG1pbnMiMwoHV3JpdGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFk\nbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVyTVNQEAEaBkFkbWlu\ncyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlu\ncyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zKgZB\nZG1pbnMaQAoVQ2hhbm5lbENyZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwv\nT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIE\nEgISABoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYK\nEEhhc2hpbmdBbGdvcml0aG0SEhIICgZTSEEyNTYaBkFkbWlucxotChlCbG9ja0RhdGFIYXNoaW5n\nU3RydWN0dXJlEhASBgj/////DxoGQWRtaW5zGscBChBPcmRlcmVyQWRkcmVzc2VzErIBEpYBCjBv\ncmRlcmVyMS53YWxtYXJ0LW5ldC5zdW5lZWwucHZ0LndtdGJhZi5pbmZvOjg0NDMKMG9yZGVyZXIy\nLndhbG1hcnQtbmV0LnN1bmVlbC5wdnQud210YmFmLmluZm86ODQ0Mwowb3JkZXJlcjMud2FsbWFy\ndC1uZXQuc3VuZWVsLnB2dC53bXRiYWYuaW5mbzo4NDQzGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlu\ncxomCgxDYXBhYmlsaXRpZXMSFhIMCgoKBlYxXzRfMxIAGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0I\nAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMi\nIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMqBkFkbWlucxoOCgQKAgoACgAKAAoA\nCgA=",
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "orderer": "hyperledger/fabric-orderer:2.0.0"
                    },
                    "namespace": "walmart-net"
                },
                "orderer": {
                    "keepaliveserverinterval": "10s",
                    "localmspid": "walmartMSP",
                    "loglevel": "info",
                    "name": "orderer3",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "grpc": {
                            "clusteripport": 7050
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "storageclassname": "walmartsc",
                    "storagesize": "512Mi"
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "walmart-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretprefix": "secret/crypto/ordererOrganizations/walmart-net/orderers/orderer3.walmart-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652 `" && echo ansible-tmp-1604841514.3818603-5323-134287964346652="` echo /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp1got3ucp TO /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/ /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8ypfoys8 TO /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/ /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpu9cgvlsf TO /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/ /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "18fd91eee68f33cd15c6e86483d9650fcea64712",
    "dest": "./build/test/walmart-orderer3.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmp8ypfoys8",
            "attributes": null,
            "backup": false,
            "checksum": "18fd91eee68f33cd15c6e86483d9650fcea64712",
            "content": null,
            "dest": "./build/test/walmart-orderer3.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "0aee0de44936fbe4ef19783f7ae4e426",
    "mode": "0644",
    "owner": "root",
    "size": 22755,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841514.3818603-5323-134287964346652/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841514.734657-5363-1509863608830 `" && echo ansible-tmp-1604841514.734657-5363-1509863608830="` echo /root/.ansible/tmp/ansible-tmp-1604841514.734657-5363-1509863608830 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpj5i6akk0 TO /root/.ansible/tmp/ansible-tmp-1604841514.734657-5363-1509863608830/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841514.734657-5363-1509863608830/ /root/.ansible/tmp/ansible-tmp-1604841514.734657-5363-1509863608830/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841514.734657-5363-1509863608830/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841514.734657-5363-1509863608830/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/walmart-orderer3.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
    "delta": "0:00:00.067022",
    "end": "2020-11-08 13:18:34.931995",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/walmart-orderer3.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:34.864973",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:43

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841515.0509143-5397-267882796980941 `" && echo ansible-tmp-1604841515.0509143-5397-267882796980941="` echo /root/.ansible/tmp/ansible-tmp-1604841515.0509143-5397-267882796980941 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbmzwyo1a TO /root/.ansible/tmp/ansible-tmp-1604841515.0509143-5397-267882796980941/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841515.0509143-5397-267882796980941/ /root/.ansible/tmp/ansible-tmp-1604841515.0509143-5397-267882796980941/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841515.0509143-5397-267882796980941/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841515.0509143-5397-267882796980941/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841515.3188837-5423-210938872505104 `" && echo ansible-tmp-1604841515.3188837-5423-210938872505104="` echo /root/.ansible/tmp/ansible-tmp-1604841515.3188837-5423-210938872505104 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfu8c_10o TO /root/.ansible/tmp/ansible-tmp-1604841515.3188837-5423-210938872505104/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841515.3188837-5423-210938872505104/ /root/.ansible/tmp/ansible-tmp-1604841515.3188837-5423-210938872505104/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841515.3188837-5423-210938872505104/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841515.3188837-5423-210938872505104/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Orderer files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
    "delta": "0:00:03.372416",
    "end": "2020-11-08 13:18:38.825363",
    "invocation": {
        "module_args": {
            "_raw_params": "cd \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------SHOW CONTENT OF DIR---------------\"\nls -a\necho \"---------------GIT PUSH---------------\"\ngit config user.email s.unil18031992@gmail.com\ngit config user.name bafsunsu\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Orderer files\" || true\ngit --git-dir=/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../..//.git push https://bafsunsu:bafsunsu2020@github.com/bafsunsu/blockchain-automation-framework.git HEAD:gorilla\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:35.452947",
    "stderr": "To https://github.com/bafsunsu/blockchain-automation-framework.git\n   075651dd..3d53bac7  HEAD -> gorilla",
    "stderr_lines": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   075651dd..3d53bac7  HEAD -> gorilla"
    ],
    "stdout": "---------------SHOW CONTENT OF DIR---------------\n.\n..\n.circleci\n.git\n.github\n.gitignore\n.travis.yml\nCODEOWNERS\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\nDockerfile\nLICENSE\nMAINTAINERS.md\nREADME.md\nautomation\nbuild\nconsole.out\ndocs\nexamples\nplatforms\nrelease-notes.md\nreset.sh\nrun.sh\n---------------GIT PUSH---------------\n[gorilla 3d53bac7] [ci skip] Pushing Orderer files\n 4 files changed, 12637 insertions(+)\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml\n create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml",
    "stdout_lines": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 3d53bac7] [ci skip] Pushing Orderer files",
        " 4 files changed, 12637 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Output for gitpush] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:32
ok: [localhost] => {
    "msg": [
        "---------------SHOW CONTENT OF DIR---------------",
        ".",
        "..",
        ".circleci",
        ".git",
        ".github",
        ".gitignore",
        ".travis.yml",
        "CODEOWNERS",
        "CODE_OF_CONDUCT.md",
        "CONTRIBUTING.md",
        "Dockerfile",
        "LICENSE",
        "MAINTAINERS.md",
        "README.md",
        "automation",
        "build",
        "console.out",
        "docs",
        "examples",
        "platforms",
        "release-notes.md",
        "reset.sh",
        "run.sh",
        "---------------GIT PUSH---------------",
        "[gorilla 3d53bac7] [ci skip] Pushing Orderer files",
        " 4 files changed, 12637 insertions(+)",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer1-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer2-walmart.yaml",
        " create mode 100644 platforms/hyperledger-fabric/releases/dev/walmart/orderer/orderer3-walmart.yaml"
    ]
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Error for git_push] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:37
ok: [localhost] => {
    "msg": [
        "To https://github.com/bafsunsu/blockchain-automation-framework.git",
        "   075651dd..3d53bac7  HEAD -> gorilla"
    ]
}

TASK [include_role : create/peers] *********************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/deploy-network.yaml:173
skipping: [localhost] => (item={'organization': None, 'name': 'walmart', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'walmart-net.suneel.pvt.wmtbaf.info', 'org_status': 'new', 'ca_data': {'url': 'ca.walmart-net:7054', 'certificate': 'file/server.crt'}, 'cloud_provider': 'azure', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'South Central US', 'context': 'fabric-aks-dev1', 'config_file': '/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml'}, 'vault': {'url': 'http://vault.suneelbaf.svc.cluster.local:8200', 'root_token': 's.V28i17sRnBQyQV55J3jHp0hu'}, 'gitops': {'git_ssh': 'ssh://git@github.com/bafsunsu/blockchain-automation-framework.git', 'branch': 'gorilla', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_push_url': 'github.com/bafsunsu/blockchain-automation-framework.git', 'username': 'bafsunsu', 'password': 'bafsunsu2020', 'email': 's.unil18031992@gmail.com', 'private_key': '/Users/s0s0dit/project/blockchain-automation-framework/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer3', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "aws": {
            "access_key": "aws_access_key",
            "secret_key": "aws_secret_key"
        },
        "ca_data": {
            "certificate": "file/server.crt",
            "url": "ca.walmart-net:7054"
        },
        "cloud_provider": "azure",
        "country": "UK",
        "external_url_suffix": "walmart-net.suneel.pvt.wmtbaf.info",
        "gitops": {
            "branch": "gorilla",
            "chart_source": "platforms/hyperledger-fabric/charts",
            "email": "s.unil18031992@gmail.com",
            "git_push_url": "github.com/bafsunsu/blockchain-automation-framework.git",
            "git_ssh": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
            "password": "bafsunsu2020",
            "private_key": "/Users/s0s0dit/project/blockchain-automation-framework/build/gitops",
            "release_dir": "platforms/hyperledger-fabric/releases/dev",
            "username": "bafsunsu"
        },
        "k8s": {
            "config_file": "/Users/s0s0dit/project/blockchain-automation-framework/build/kubeconfig.yaml",
            "context": "fabric-aks-dev1",
            "region": "South Central US"
        },
        "location": "London",
        "name": "walmart",
        "org_status": "new",
        "organization": null,
        "services": {
            "ca": {
                "grpc": {
                    "port": 7054
                },
                "name": "ca",
                "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.walmart-net",
                "type": "ca"
            },
            "consensus": {
                "grpc": {
                    "port": 9092
                },
                "name": "raft",
                "replicas": 4,
                "type": "broker"
            },
            "orderers": [
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer1",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer2",
                    "orderer": null,
                    "type": "orderer"
                },
                {
                    "consensus": "raft",
                    "grpc": {
                        "port": 7050
                    },
                    "name": "orderer3",
                    "orderer": null,
                    "type": "orderer"
                }
            ]
        },
        "state": "London",
        "subject": "O=Orderer,L=51.50/-0.13/London,C=GB",
        "type": "orderer",
        "vault": {
            "root_token": "s.V28i17sRnBQyQV55J3jHp0hu",
            "url": "http://vault.suneelbaf.svc.cluster.local:8200"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [create/peers : Write the couchdb credentials to Vault] *******************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841519.1214683-5475-57931377063296 `" && echo ansible-tmp-1604841519.1214683-5475-57931377063296="` echo /root/.ansible/tmp/ansible-tmp-1604841519.1214683-5475-57931377063296 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpi8rw9fqg TO /root/.ansible/tmp/ansible-tmp-1604841519.1214683-5475-57931377063296/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841519.1214683-5475-57931377063296/ /root/.ansible/tmp/ansible-tmp-1604841519.1214683-5475-57931377063296/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'VAULT_ADDR=http://vault.suneelbaf.svc.cluster.local:8200 VAULT_TOKEN=s.V28i17sRnBQyQV55J3jHp0hu /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841519.1214683-5475-57931377063296/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841519.1214683-5475-57931377063296/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "vault write secret/credentials/carrier-net/couchdb/carrier user=\"admin123\"\n",
    "delta": "0:00:00.081887",
    "end": "2020-11-08 13:18:39.333875",
    "invocation": {
        "module_args": {
            "_raw_params": "vault write secret/credentials/carrier-net/couchdb/carrier user=\"admin123\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:39.251988",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Success! Data written to: secret/credentials/carrier-net/couchdb/carrier",
    "stdout_lines": [
        "Success! Data written to: secret/credentials/carrier-net/couchdb/carrier"
    ]
}

TASK [Create Value files for Organization Peers] *******************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:17

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841519.483253-5513-106767536901111 `" && echo ansible-tmp-1604841519.483253-5513-106767536901111="` echo /root/.ansible/tmp/ansible-tmp-1604841519.483253-5513-106767536901111 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp_jrxeopx TO /root/.ansible/tmp/ansible-tmp-1604841519.483253-5513-106767536901111/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841519.483253-5513-106767536901111/ /root/.ansible/tmp/ansible-tmp-1604841519.483253-5513-106767536901111/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841519.483253-5513-106767536901111/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841519.483253-5513-106767536901111/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "state": "directory"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841519.685176-5539-197736823002980 `" && echo ansible-tmp-1604841519.685176-5539-197736823002980="` echo /root/.ansible/tmp/ansible-tmp-1604841519.685176-5539-197736823002980 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp061fmbln TO /root/.ansible/tmp/ansible-tmp-1604841519.685176-5539-197736823002980/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841519.685176-5539-197736823002980/ /root/.ansible/tmp/ansible-tmp-1604841519.685176-5539-197736823002980/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841519.685176-5539-197736823002980/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841519.685176-5539-197736823002980/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for values-peer0] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286 `" && echo ansible-tmp-1604841519.8850038-5565-234761722343286="` echo /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpmyd1iyh8 TO /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/ /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbmp1i0v4/value_peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/ /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpufjht7r1 TO /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/ /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "59ff0f9d1b83b61deb3bc4bc785043cb8bd29787",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "value_peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "59ff0f9d1b83b61deb3bc4bc785043cb8bd29787",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "5924829f1b2287b7ba7e9a7a6bd94c1d",
    "mode": "0644",
    "owner": "root",
    "size": 1838,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841519.8850038-5565-234761722343286/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841520.3042743-5607-269454635009458 `" && echo ansible-tmp-1604841520.3042743-5607-269454635009458="` echo /root/.ansible/tmp/ansible-tmp-1604841520.3042743-5607-269454635009458 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpb1ct3xaw TO /root/.ansible/tmp/ansible-tmp-1604841520.3042743-5607-269454635009458/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841520.3042743-5607-269454635009458/ /root/.ansible/tmp/ansible-tmp-1604841520.3042743-5607-269454635009458/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841520.3042743-5607-269454635009458/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841520.3042743-5607-269454635009458/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
        }
    },
    "stat": {
        "atime": 1604841520.189169,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "59ff0f9d1b83b61deb3bc4bc785043cb8bd29787",
        "ctime": 1604841520.1931689,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3966,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841520.0571668,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1838,
        "uid": 0,
        "version": "2302231304",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841520.5613775-5637-21844661863929 `" && echo ansible-tmp-1604841520.5613775-5637-21844661863929="` echo /root/.ansible/tmp/ansible-tmp-1604841520.5613775-5637-21844661863929 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpd7px2cbn TO /root/.ansible/tmp/ansible-tmp-1604841520.5613775-5637-21844661863929/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841520.5613775-5637-21844661863929/ /root/.ansible/tmp/ansible-tmp-1604841520.5613775-5637-21844661863929/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841520.5613775-5637-21844661863929/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841520.5613775-5637-21844661863929/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604840904.1838007,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604841514.6650848,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3429,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604841514.6650848,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1450343826",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-peer0",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/peernode",
                "ref": "gorilla"
            },
            "releaseName": "carrier-peer0",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "couchdb": "hyperledger/fabric-couchdb:0.4.18",
                        "peer": "hyperledger/fabric-peer:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "peer": {
                    "builder": "hyperledger/fabric-ccenv:2.0.0",
                    "couchdb": {
                        "username": "carrier-user"
                    },
                    "gossipexternalendpoint": "peer0.carrier-net.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "gossippeeraddress": "peer1.carrier-net:7051",
                    "localmspid": "carrierMSP",
                    "loglevel": "info",
                    "name": "peer0",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "couchdb": {
                            "clusteripport": 5984
                        },
                        "events": {
                            "clusteripport": 7053
                        },
                        "grpc": {
                            "clusteripport": 7051
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "couchdb": {
                        "storageclassname": "carriersc",
                        "storagesize": "1Gi"
                    },
                    "peer": {
                        "storageclassname": "carriersc",
                        "storagesize": "512Mi"
                    }
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretambassador": "secret/crypto/peerOrganizations/carrier-net/ambassador",
                    "secretcouchdbpass": "secret/credentials/carrier-net/couchdb/carrier?user",
                    "secretprefix": "secret/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621 `" && echo ansible-tmp-1604841520.9578867-5675-118924269861621="` echo /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6j6qga6g TO /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/ /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmplktdlh30 TO /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/ /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmph9m6307e TO /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/ /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "beec398cec96662804998c820bb73987e97f6818",
    "dest": "./build/test/carrier-peer0.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmplktdlh30",
            "attributes": null,
            "backup": false,
            "checksum": "beec398cec96662804998c820bb73987e97f6818",
            "content": null,
            "dest": "./build/test/carrier-peer0.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "b409925164dd5fb9798ac11633025b96",
    "mode": "0644",
    "owner": "root",
    "size": 1377,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841520.9578867-5675-118924269861621/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841521.3011742-5715-50267344761054 `" && echo ansible-tmp-1604841521.3011742-5715-50267344761054="` echo /root/.ansible/tmp/ansible-tmp-1604841521.3011742-5715-50267344761054 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpk7qm2a0n TO /root/.ansible/tmp/ansible-tmp-1604841521.3011742-5715-50267344761054/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841521.3011742-5715-50267344761054/ /root/.ansible/tmp/ansible-tmp-1604841521.3011742-5715-50267344761054/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841521.3011742-5715-50267344761054/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841521.3011742-5715-50267344761054/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-peer0.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
    "delta": "0:00:00.060892",
    "end": "2020-11-08 13:18:41.495266",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-peer0.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:41.434374",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [helm_component : Ensures /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841521.569437-5747-117605428605227 `" && echo ansible-tmp-1604841521.569437-5747-117605428605227="` echo /root/.ansible/tmp/ansible-tmp-1604841521.569437-5747-117605428605227 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpq90j_gog TO /root/.ansible/tmp/ansible-tmp-1604841521.569437-5747-117605428605227/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841521.569437-5747-117605428605227/ /root/.ansible/tmp/ansible-tmp-1604841521.569437-5747-117605428605227/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841521.569437-5747-117605428605227/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841521.569437-5747-117605428605227/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [helm_component : Check if the value file is already present] *************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841521.7680507-5773-82041022114150 `" && echo ansible-tmp-1604841521.7680507-5773-82041022114150="` echo /root/.ansible/tmp/ansible-tmp-1604841521.7680507-5773-82041022114150 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp935hem7n TO /root/.ansible/tmp/ansible-tmp-1604841521.7680507-5773-82041022114150/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841521.7680507-5773-82041022114150/ /root/.ansible/tmp/ansible-tmp-1604841521.7680507-5773-82041022114150/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841521.7680507-5773-82041022114150/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841521.7680507-5773-82041022114150/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [helm_component : create value file for values-peer1] *********************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:24
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716 `" && echo ansible-tmp-1604841521.9658751-5799-148495931067716="` echo /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmphet_q4ag TO /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/ /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp26gv5my3/value_peer.tpl TO /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/ /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp1xa0iw_1 TO /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/ /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "1097fa0fe767b2acc650175553ac130d207084a5",
    "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "value_peer.tpl",
            "attributes": null,
            "backup": false,
            "checksum": "1097fa0fe767b2acc650175553ac130d207084a5",
            "content": null,
            "dest": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "ea690b179a1c60b6051a9e07c70c567d",
    "mode": "0644",
    "owner": "root",
    "size": 1838,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841521.9658751-5799-148495931067716/source",
    "state": "file",
    "uid": 0
}

TASK [Helm lint] ***************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:34

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:10
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841522.3866057-5841-251503136985431 `" && echo ansible-tmp-1604841522.3866057-5841-251503136985431="` echo /root/.ansible/tmp/ansible-tmp-1604841522.3866057-5841-251503136985431 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpze_62_z1 TO /root/.ansible/tmp/ansible-tmp-1604841522.3866057-5841-251503136985431/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841522.3866057-5841-251503136985431/ /root/.ansible/tmp/ansible-tmp-1604841522.3866057-5841-251503136985431/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841522.3866057-5841-251503136985431/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841522.3866057-5841-251503136985431/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
        }
    },
    "stat": {
        "atime": 1604841522.2692006,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "us-ascii",
        "checksum": "1097fa0fe767b2acc650175553ac130d207084a5",
        "ctime": 1604841522.2732005,
        "dev": 2080,
        "device_type": 0,
        "executable": false,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3969,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "text/plain",
        "mode": "0644",
        "mtime": 1604841522.1371984,
        "nlink": 1,
        "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 1838,
        "uid": 0,
        "version": "4070365785",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": false
    }
}

TASK [Check or create test directory] ******************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841522.647162-5871-16398155594277 `" && echo ansible-tmp-1604841522.647162-5871-16398155594277="` echo /root/.ansible/tmp/ansible-tmp-1604841522.647162-5871-16398155594277 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpgkub4xui TO /root/.ansible/tmp/ansible-tmp-1604841522.647162-5871-16398155594277/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841522.647162-5871-16398155594277/ /root/.ansible/tmp/ansible-tmp-1604841522.647162-5871-16398155594277/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841522.647162-5871-16398155594277/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841522.647162-5871-16398155594277/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build/test"
        }
    },
    "stat": {
        "atime": 1604840904.1838007,
        "attr_flags": "e",
        "attributes": [
            "extents"
        ],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1604841521.2291846,
        "dev": 2080,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 3429,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0755",
        "mtime": 1604841521.2291846,
        "nlink": 2,
        "path": "./build/test",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 4096,
        "uid": 0,
        "version": "1450343826",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:11
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:20
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:25
ok: [localhost] => {
    "ansible_facts": {
        "apiVersion": "flux.weave.works/v1beta1",
        "kind": "HelmRelease",
        "metadata": {
            "annotations": {
                "flux.weave.works/automated": "false"
            },
            "name": "carrier-peer1",
            "namespace": "carrier-net"
        },
        "spec": {
            "chart": {
                "git": "ssh://git@github.com/bafsunsu/blockchain-automation-framework.git",
                "path": "platforms/hyperledger-fabric/charts/peernode",
                "ref": "gorilla"
            },
            "releaseName": "carrier-peer1",
            "values": {
                "metadata": {
                    "images": {
                        "alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0",
                        "couchdb": "hyperledger/fabric-couchdb:0.4.18",
                        "peer": "hyperledger/fabric-peer:2.0.0"
                    },
                    "namespace": "carrier-net"
                },
                "peer": {
                    "builder": "hyperledger/fabric-ccenv:2.0.0",
                    "couchdb": {
                        "username": "carrier-user"
                    },
                    "gossipexternalendpoint": "peer1.carrier-net.carrier-net.suneel.pvt.wmtbaf.info:8443",
                    "gossippeeraddress": "peer0.carrier-net:7051",
                    "localmspid": "carrierMSP",
                    "loglevel": "info",
                    "name": "peer1",
                    "tlsstatus": true
                },
                "proxy": {
                    "external_url_suffix": "carrier-net.suneel.pvt.wmtbaf.info",
                    "provider": "haproxy"
                },
                "service": {
                    "ports": {
                        "couchdb": {
                            "clusteripport": 5984
                        },
                        "events": {
                            "clusteripport": 7053
                        },
                        "grpc": {
                            "clusteripport": 7051
                        }
                    },
                    "servicetype": "ClusterIP"
                },
                "storage": {
                    "couchdb": {
                        "storageclassname": "carriersc",
                        "storagesize": "1Gi"
                    },
                    "peer": {
                        "storageclassname": "carriersc",
                        "storagesize": "512Mi"
                    }
                },
                "vault": {
                    "address": "http://vault.suneelbaf.svc.cluster.local:8200",
                    "authpath": "carrier-net-auth",
                    "imagesecretname": "regcred",
                    "role": "vault-role",
                    "secretambassador": "secret/crypto/peerOrganizations/carrier-net/ambassador",
                    "secretcouchdbpass": "secret/credentials/carrier-net/couchdb/carrier?user",
                    "secretprefix": "secret/crypto/peerOrganizations/carrier-net/peers/peer1.carrier-net",
                    "serviceaccountname": "vault-auth"
                }
            }
        }
    },
    "ansible_included_var_files": [
        "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer1.yaml"
    ],
    "changed": false
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920 `" && echo ansible-tmp-1604841523.0315905-5909-156760364083920="` echo /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpfe2m6ey1 TO /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/ /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpbtgr5o9f TO /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/ /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/source && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp61toiv08 TO /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/ /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "6f23b3c4d21d5e1b17394dc8b98e252be615b7ce",
    "dest": "./build/test/carrier-peer1.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpbtgr5o9f",
            "attributes": null,
            "backup": false,
            "checksum": "6f23b3c4d21d5e1b17394dc8b98e252be615b7ce",
            "content": null,
            "dest": "./build/test/carrier-peer1.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "f38e89060480eee327b404e347d3e3c4",
    "mode": "0644",
    "owner": "root",
    "size": 1377,
    "src": "/root/.ansible/tmp/ansible-tmp-1604841523.0315905-5909-156760364083920/source",
    "state": "file",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841523.3823767-5949-156273814229582 `" && echo ansible-tmp-1604841523.3823767-5949-156273814229582="` echo /root/.ansible/tmp/ansible-tmp-1604841523.3823767-5949-156273814229582 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmpnwiw9d1g TO /root/.ansible/tmp/ansible-tmp-1604841523.3823767-5949-156273814229582/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841523.3823767-5949-156273814229582/ /root/.ansible/tmp/ansible-tmp-1604841523.3823767-5949-156273814229582/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841523.3823767-5949-156273814229582/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841523.3823767-5949-156273814229582/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "helm lint -f \"./build/test/carrier-peer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
    "delta": "0:00:00.060401",
    "end": "2020-11-08 13:18:43.574385",
    "invocation": {
        "module_args": {
            "_raw_params": "helm lint -f \"./build/test/carrier-peer1.yaml\" \"/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2020-11-08 13:18:43.513984",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, no failures",
    "stdout_lines": [
        "==> Linting /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode",
        "[INFO] Chart.yaml: icon is recommended",
        "",
        "1 chart(s) linted, no failures"
    ]
}

TASK [Git Push] ****************************************************************
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:36

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:3
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841523.6892-5983-97061603017460 `" && echo ansible-tmp-1604841523.6892-5983-97061603017460="` echo /root/.ansible/tmp/ansible-tmp-1604841523.6892-5983-97061603017460 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp8y5axo5r TO /root/.ansible/tmp/ansible-tmp-1604841523.6892-5983-97061603017460/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841523.6892-5983-97061603017460/ /root/.ansible/tmp/ansible-tmp-1604841523.6892-5983-97061603017460/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841523.6892-5983-97061603017460/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1604841523.6892-5983-97061603017460/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        },
        "before": {
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../../",
    "size": 4096,
    "state": "directory",
    "uid": 0
}

TASK [/Users/s0s0dit/project/blockchain-automation-framework/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push via shell task] ***
task path: /Users/s0s0dit/project/blockchain-automation-framework/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1604841523.899552-6009-130167624824963 `" && echo ansible-tmp-1604841523.899552-6009-130167624824963="` echo /root/.ansible/tmp/ansible-tmp-1604841523.899552-6009-130167624824963 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-26046afg6dqua/tmp6x_d2tig TO /root/.ansible/tmp/ansible-tmp-1604841523.899552-6009-130167624824963/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1604841523.899552-6009-130167624824963/ /root/.ansible/tmp/ansible-tmp-1604841523.899552-6009-130167624824963/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1604841523.899552-6009-130167624824963/AnsiballZ_command.py && sleep 0'
